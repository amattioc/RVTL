{
  "version": 3,
  "sources": ["index.ts", "node_modules/@marijn/find-cluster-break/src/index.js", "node_modules/@codemirror/state/dist/index.js", "node_modules/style-mod/src/style-mod.js", "node_modules/w3c-keyname/index.js", "node_modules/@codemirror/view/dist/index.js", "node_modules/@lezer/common/dist/index.js", "node_modules/@lezer/highlight/dist/index.js", "node_modules/@codemirror/language/dist/index.js", "node_modules/@codemirror/commands/dist/index.js", "node_modules/crelt/index.js", "node_modules/@codemirror/lint/dist/index.js", "node_modules/@codemirror/search/dist/index.js", "node_modules/@codemirror/autocomplete/dist/index.js", "webpack://antlr4/webpack/bootstrap", "webpack://antlr4/webpack/runtime/define%20property%20getters", "webpack://antlr4/webpack/runtime/hasOwnProperty%20shorthand", "webpack://antlr4/src/antlr4/Token.js", "webpack://antlr4/src/antlr4/utils/equalArrays.js", "webpack://antlr4/src/antlr4/utils/stringHashCode.js", "webpack://antlr4/src/antlr4/misc/HashCode.js", "webpack://antlr4/src/antlr4/utils/standardHashCodeFunction.js", "webpack://antlr4/src/antlr4/utils/standardEqualsFunction.js", "webpack://antlr4/src/antlr4/utils/valueToString.js", "webpack://antlr4/src/antlr4/utils/arrayToString.js", "webpack://antlr4/src/antlr4/misc/HashSet.js", "webpack://antlr4/src/antlr4/atn/SemanticContext.js", "webpack://antlr4/src/antlr4/atn/ATNConfig.js", "webpack://antlr4/src/antlr4/misc/Interval.js", "webpack://antlr4/src/antlr4/misc/IntervalSet.js", "webpack://antlr4/src/antlr4/state/ATNState.js", "webpack://antlr4/src/antlr4/state/RuleStopState.js", "webpack://antlr4/src/antlr4/transition/Transition.js", "webpack://antlr4/src/antlr4/transition/RuleTransition.js", "webpack://antlr4/src/antlr4/transition/SetTransition.js", "webpack://antlr4/src/antlr4/transition/NotSetTransition.js", "webpack://antlr4/src/antlr4/transition/WildcardTransition.js", "webpack://antlr4/src/antlr4/atn/AbstractPredicateTransition.js", "webpack://antlr4/src/antlr4/tree/Tree.js", "webpack://antlr4/src/antlr4/tree/SyntaxTree.js", "webpack://antlr4/src/antlr4/tree/ParseTree.js", "webpack://antlr4/src/antlr4/tree/RuleNode.js", "webpack://antlr4/src/antlr4/tree/TerminalNode.js", "webpack://antlr4/src/antlr4/tree/ErrorNode.js", "webpack://antlr4/src/antlr4/tree/Trees.js", "webpack://antlr4/src/antlr4/utils/escapeWhitespace.js", "webpack://antlr4/src/antlr4/context/RuleContext.js", "webpack://antlr4/src/antlr4/context/PredictionContext.js", "webpack://antlr4/src/antlr4/context/ArrayPredictionContext.js", "webpack://antlr4/src/antlr4/context/SingletonPredictionContext.js", "webpack://antlr4/src/antlr4/context/EmptyPredictionContext.js", "webpack://antlr4/src/antlr4/misc/HashMap.js", "webpack://antlr4/src/antlr4/context/PredictionContextUtils.js", "webpack://antlr4/src/antlr4/misc/BitSet.js", "webpack://antlr4/src/antlr4/atn/LL1Analyzer.js", "webpack://antlr4/src/antlr4/atn/ATN.js", "webpack://antlr4/src/antlr4/state/BasicState.js", "webpack://antlr4/src/antlr4/state/DecisionState.js", "webpack://antlr4/src/antlr4/state/BlockStartState.js", "webpack://antlr4/src/antlr4/state/BlockEndState.js", "webpack://antlr4/src/antlr4/state/LoopEndState.js", "webpack://antlr4/src/antlr4/state/RuleStartState.js", "webpack://antlr4/src/antlr4/state/TokensStartState.js", "webpack://antlr4/src/antlr4/state/PlusLoopbackState.js", "webpack://antlr4/src/antlr4/state/StarLoopbackState.js", "webpack://antlr4/src/antlr4/state/StarLoopEntryState.js", "webpack://antlr4/src/antlr4/state/PlusBlockStartState.js", "webpack://antlr4/src/antlr4/state/StarBlockStartState.js", "webpack://antlr4/src/antlr4/state/BasicBlockStartState.js", "webpack://antlr4/src/antlr4/transition/AtomTransition.js", "webpack://antlr4/src/antlr4/transition/RangeTransition.js", "webpack://antlr4/src/antlr4/transition/ActionTransition.js", "webpack://antlr4/src/antlr4/transition/EpsilonTransition.js", "webpack://antlr4/src/antlr4/atn/Predicate.js", "webpack://antlr4/src/antlr4/transition/PredicateTransition.js", "webpack://antlr4/src/antlr4/atn/PrecedencePredicate.js", "webpack://antlr4/src/antlr4/transition/PrecedencePredicateTransition.js", "webpack://antlr4/src/antlr4/atn/ATNDeserializationOptions.js", "webpack://antlr4/src/antlr4/action/LexerAction.js", "webpack://antlr4/src/antlr4/action/LexerSkipAction.js", "webpack://antlr4/src/antlr4/atn/LexerActionType.js", "webpack://antlr4/src/antlr4/action/LexerChannelAction.js", "webpack://antlr4/src/antlr4/action/LexerCustomAction.js", "webpack://antlr4/src/antlr4/action/LexerMoreAction.js", "webpack://antlr4/src/antlr4/action/LexerTypeAction.js", "webpack://antlr4/src/antlr4/action/LexerPushModeAction.js", "webpack://antlr4/src/antlr4/action/LexerPopModeAction.js", "webpack://antlr4/src/antlr4/action/LexerModeAction.js", "webpack://antlr4/src/antlr4/atn/ATNDeserializer.js", "webpack://antlr4/src/antlr4/atn/ATNType.js", "webpack://antlr4/src/antlr4/error/ErrorListener.js", "webpack://antlr4/src/antlr4/error/ConsoleErrorListener.js", "webpack://antlr4/src/antlr4/error/ProxyErrorListener.js", "webpack://antlr4/src/antlr4/Recognizer.js", "webpack://antlr4/src/antlr4/CommonToken.js", "webpack://antlr4/src/antlr4/CommonTokenFactory.js", "webpack://antlr4/src/antlr4/error/RecognitionException.js", "webpack://antlr4/src/antlr4/error/LexerNoViableAltException.js", "webpack://antlr4/src/antlr4/Lexer.js", "webpack://antlr4/src/antlr4/atn/ATNConfigSet.js", "webpack://antlr4/src/antlr4/dfa/DFAState.js", "webpack://antlr4/src/antlr4/atn/ATNSimulator.js", "webpack://antlr4/src/antlr4/atn/OrderedATNConfigSet.js", "webpack://antlr4/src/antlr4/atn/LexerATNConfig.js", "webpack://antlr4/src/antlr4/action/LexerIndexedCustomAction.js", "webpack://antlr4/src/antlr4/atn/LexerActionExecutor.js", "webpack://antlr4/src/antlr4/atn/LexerATNSimulator.js", "webpack://antlr4/src/antlr4/dfa/PredPrediction.js", "webpack://antlr4/src/antlr4/misc/AltDict.js", "webpack://antlr4/src/antlr4/atn/PredictionMode.js", "webpack://antlr4/src/antlr4/error/NoViableAltException.js", "webpack://antlr4/src/antlr4/utils/DoubleDict.js", "webpack://antlr4/src/antlr4/atn/ParserATNSimulator.js", "webpack://antlr4/src/antlr4/atn/PredictionContextCache.js", "webpack://antlr4/src/antlr4/atn/index.js", "webpack://antlr4/src/antlr4/dfa/DFASerializer.js", "webpack://antlr4/src/antlr4/dfa/LexerDFASerializer.js", "webpack://antlr4/src/antlr4/dfa/DFA.js", "webpack://antlr4/src/antlr4/dfa/index.js", "webpack://antlr4/src/antlr4/context/index.js", "webpack://antlr4/src/antlr4/misc/index.js", "webpack://antlr4/src/antlr4/tree/ParseTreeListener.js", "webpack://antlr4/src/antlr4/tree/ParseTreeVisitor.js", "webpack://antlr4/src/antlr4/tree/ParseTreeWalker.js", "webpack://antlr4/src/antlr4/tree/index.js", "webpack://antlr4/src/antlr4/error/InputMismatchException.js", "webpack://antlr4/src/antlr4/error/FailedPredicateException.js", "webpack://antlr4/src/antlr4/error/DiagnosticErrorListener.js", "webpack://antlr4/src/antlr4/error/ParseCancellationException.js", "webpack://antlr4/src/antlr4/error/ErrorStrategy.js", "webpack://antlr4/src/antlr4/error/DefaultErrorStrategy.js", "webpack://antlr4/src/antlr4/error/BailErrorStrategy.js", "webpack://antlr4/src/antlr4/error/index.js", "webpack://antlr4/src/antlr4/CharStream.js", "webpack://antlr4/src/antlr4/InputStream.js", "webpack://antlr4/src/antlr4/FileStream.js", "webpack://antlr4/src/antlr4/CharStreams.js", "webpack://antlr4/src/antlr4/utils/index.js", "webpack://antlr4/src/antlr4/utils/stringToCharArray.js", "webpack://antlr4/src/antlr4/TokenStream.js", "webpack://antlr4/src/antlr4/BufferedTokenStream.js", "webpack://antlr4/src/antlr4/CommonTokenStream.js", "webpack://antlr4/src/antlr4/TraceListener.js", "webpack://antlr4/src/antlr4/Parser.js", "webpack://antlr4/src/antlr4/tree/TerminalNodeImpl.js", "webpack://antlr4/src/antlr4/tree/ErrorNodeImpl.js", "webpack://antlr4/src/antlr4/context/ParserRuleContext.js", "webpack://antlr4/src/antlr4/TokenStreamRewriter.js", "webpack://antlr4/src/antlr4/index.web.js", "Vtl.ts", "VtlTokens.ts", "node_modules/@uiw/codemirror-themes-all/esm/index.js", "node_modules/@babel/runtime/helpers/esm/extends.js", "node_modules/@uiw/codemirror-themes/esm/index.js", "node_modules/@uiw/codemirror-theme-abcdef/esm/index.js", "node_modules/@uiw/codemirror-theme-abyss/esm/color.js", "node_modules/@uiw/codemirror-theme-abyss/esm/index.js", "node_modules/@uiw/codemirror-theme-androidstudio/esm/index.js", "node_modules/@uiw/codemirror-theme-andromeda/esm/color.js", "node_modules/@uiw/codemirror-theme-andromeda/esm/index.js", "node_modules/@uiw/codemirror-theme-atomone/esm/index.js", "node_modules/@uiw/codemirror-theme-aura/esm/index.js", "node_modules/@uiw/codemirror-theme-basic/esm/dark.js", "node_modules/@uiw/codemirror-theme-basic/esm/light.js", "node_modules/@uiw/codemirror-theme-bbedit/esm/index.js", "node_modules/@uiw/codemirror-theme-bespin/esm/index.js", "node_modules/@uiw/codemirror-theme-console/esm/dark.js", "node_modules/@uiw/codemirror-theme-console/esm/light.js", "node_modules/@uiw/codemirror-theme-copilot/esm/color.js", "node_modules/@uiw/codemirror-theme-copilot/esm/index.js", "node_modules/@uiw/codemirror-theme-darcula/esm/index.js", "node_modules/@uiw/codemirror-theme-dracula/esm/index.js", "node_modules/@uiw/codemirror-theme-duotone/esm/index.js", "node_modules/@uiw/codemirror-theme-eclipse/esm/index.js", "node_modules/@uiw/codemirror-theme-github/esm/index.js", "node_modules/@uiw/codemirror-theme-gruvbox-dark/esm/index.js", "node_modules/@uiw/codemirror-theme-kimbie/esm/color.js", "node_modules/@uiw/codemirror-theme-kimbie/esm/index.js", "node_modules/@uiw/codemirror-theme-material/esm/index.js", "node_modules/@uiw/codemirror-theme-monokai/esm/color.js", "node_modules/@uiw/codemirror-theme-monokai/esm/index.js", "node_modules/@uiw/codemirror-theme-monokai-dimmed/esm/color.js", "node_modules/@uiw/codemirror-theme-monokai-dimmed/esm/index.js", "node_modules/@uiw/codemirror-theme-noctis-lilac/esm/index.js", "node_modules/@uiw/codemirror-theme-nord/esm/index.js", "node_modules/@uiw/codemirror-theme-okaidia/esm/index.js", "node_modules/@uiw/codemirror-theme-quietlight/esm/color.js", "node_modules/@uiw/codemirror-theme-quietlight/esm/index.js", "node_modules/@uiw/codemirror-theme-red/esm/color.js", "node_modules/@uiw/codemirror-theme-red/esm/index.js", "node_modules/@uiw/codemirror-theme-solarized/esm/dark-color.js", "node_modules/@uiw/codemirror-theme-solarized/esm/dark.js", "node_modules/@uiw/codemirror-theme-solarized/esm/light-color.js", "node_modules/@uiw/codemirror-theme-solarized/esm/light.js", "node_modules/@uiw/codemirror-theme-sublime/esm/index.js", "node_modules/@uiw/codemirror-theme-tokyo-night/esm/index.js", "node_modules/@uiw/codemirror-theme-tokyo-night-storm/esm/index.js", "node_modules/@uiw/codemirror-theme-tokyo-night-day/esm/index.js", "node_modules/@uiw/codemirror-theme-tomorrow-night-blue/esm/color.js", "node_modules/@uiw/codemirror-theme-tomorrow-night-blue/esm/index.js", "node_modules/@uiw/codemirror-theme-vscode/esm/light.js", "node_modules/@uiw/codemirror-theme-vscode/esm/dark.js", "node_modules/@uiw/codemirror-theme-white/esm/dark-color.js", "node_modules/@uiw/codemirror-theme-white/esm/dark.js", "node_modules/@uiw/codemirror-theme-white/esm/light-color.js", "node_modules/@uiw/codemirror-theme-white/esm/light.js", "node_modules/@uiw/codemirror-theme-xcode/esm/index.js"],
  "sourcesContent": ["///\r\n/// Copyright \u00A9 2020 Banca D'Italia\r\n///\r\n/// Licensed under the EUPL, Version 1.2 (the \"License\");\r\n/// You may not use this work except in compliance with the\r\n/// License.\r\n/// You may obtain a copy of the License at:\r\n///\r\n/// https://joinup.ec.europa.eu/sites/default/files/custom-page/attachment/2020-03/EUPL-1.2%20EN.txt\r\n///\r\n/// Unless required by applicable law or agreed to in\r\n/// writing, software distributed under the License is\r\n/// distributed on an \"AS IS\" basis,\r\n/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n/// express or implied.\r\n///\r\n/// See the License for the specific language governing\r\n/// permissions and limitations under the License.\r\n///\r\n\r\nimport { Compartment, SelectionRange } from \"@codemirror/state\"\r\nimport { EditorView, keymap, lineNumbers, highlightActiveLineGutter, highlightSpecialChars, drawSelection, dropCursor, crosshairCursor, highlightActiveLine } from \"@codemirror/view\"\r\nimport { defaultKeymap, history, historyKeymap } from \"@codemirror/commands\"\r\nimport { linter, lintKeymap, Diagnostic, Action } from \"@codemirror/lint\"\r\nimport { searchKeymap, search, highlightSelectionMatches } from \"@codemirror/search\"\r\nimport { closeBrackets, autocompletion, closeBracketsKeymap, completionKeymap, CompletionContext } from \"@codemirror/autocomplete\"\r\nimport { syntaxTree, Language, defineLanguageFacet, foldGutter, indentOnInput, bracketMatching, foldKeymap, languageDataProp } from \"@codemirror/language\"\r\nimport { Parser as LezerParser, NodeType, NodeSet, Tree, SyntaxNodeRef, NodeProp } from \"@lezer/common\"\r\nimport { styleTags, tags } from \"@lezer/highlight\"\r\nimport { default as VTLParser, StartContext, ComponentIDContext, ClauseExprContext, VarIDContext, DatasetClauseContext } from \"./Vtl\"\r\nimport { default as VTLLexer } from \"./VtlTokens\"\r\nimport antlr4 from 'antlr4'\r\nimport * as th from '@uiw/codemirror-themes-all'\r\nimport { TokenSource } from \"antlr4/src/antlr4/TokenSource\"\r\n\r\nlet tokenMapper = {\r\n\tcomment: [\"ML_COMMENT\", \"SL_COMMENT\"],\r\n\tname: [\"IDENTIFIER\"],\r\n\tstring: [\"STRING_CONSTANT\"],\r\n\tinteger: [\"INTEGER_CONSTANT\"],\r\n\tfloat: [\"NUMBER_CONSTANT\"],\r\n\tbool: [\"BOOLEAN_CONSTANT\"],\r\n\tangleBracket: [\"LT\", \"GT\"],\r\n\tsquareBracket: [\"QLPAREN\", \"QRPAREN\"],\r\n\tparen: [\"LPAREN\", \"RPAREN\"],\r\n\tbrace: [\"GLPAREN\", \"GRPAREN\"],\r\n\tnull: [\"NULL_CONSTANT\"],\r\n\toperator: [\"MEMBERSHIP\"],\r\n\tarithmeticOperator: [\"PLUS\", \"MINUS\", \"MUL\", \"DIV\"],\r\n\tlogicOperator: [\"AND\", \"OR\", \"XOR\", \"NOT\"],\r\n\tcompareOperator: [\"EQ\", \"LT\", \"MT\", \"ME\", \"NEQ\", \"LE\"],\r\n\tdefinitionOperator: [\"ASSIGN\", \"POINTER\"],\r\n\tdefinitionKeyword: [\"DEFINE\", \"DATAPOINT\", \"HIERARCHICAL\", \"RULESET\", \"AS\", \"IS\"],\r\n\toperatorKeyword: [\"CURRENT_DATE\", \"BETWEEN\", \"IN\", \"NOT_IN\", \"ISNULL\", \"EXISTS_IN\", \"RANK\", \"MIN\", \"MAX\", \"INDEXOF\", \"ABS\", \"LN\", \"LOG\", \"TRUNC\",\r\n\t\t\"ROUND\", \"POWER\", \"MOD\", \"LEN\", \"CONCAT\", \"TRIM\", \"UCASE\", \"LCASE\", \"SUBSTR\", \"SUM\", \"AVG\", \"MEDIAN\", \"COUNT\", \"EXP\", \"CHARSET_MATCH\",\r\n\t\t\"NVL\", \"LTRIM\", \"RTRIM\", \"INSTR\", \"REPLACE\", \"CEIL\", \"FLOOR\", \"SQRT\", \"STDDEV_POP\", \"STDDEV_SAMP\", \"VAR_POP\", \"VAR_SAMP\", \"FIRST_VALUE\",\r\n\t\t\"LAST_VALUE\", \"LAG\", \"LEAD\", \"RATIO_TO_REPORT\", \"FILL_TIME_SERIES\", \"FLOW_TO_STOCK\", \"STOCK_TO_FLOW\", \"TIMESHIFT\", \"INNER_JOIN\",\r\n\t\t\"LEFT_JOIN\", \"CROSS_JOIN\", \"FULL_JOIN\", \"TIME_AGG\", \"CAST\", \"EVAL\", \"PERIOD_INDICATOR\", \"SETDIFF\", \"UNION\", \"SYMDIFF\", \"INTERSECT\"],\r\n\tcontrolKeyword: [\"IF\", \"THEN\", \"ELSE\", \"CALC\", \"DROP\", \"KEEP\", \"CALC\", \"RENAME\", \"AGGREGATE\", \"FILTER\", \"PIVOT\", \"UNPIVOT\", \"SUBSPACE\"],\r\n\ttypeOperator: [\"DIMENSION\", \"MEASURE\", \"ATTRIBUTE\", \"VIRAL\", \"BOOLEAN\", \"DATE\", \"TIME_PERIOD\", \"NUMBER\", \"STRING\", \"TIME\", \"INTEGER\", \"FLOAT\", \"LIST\"],\r\n\tcontrolOperator: [\"COMMA\", \"COLON\", \"ORDER\", \"BY\", \"ASC\", \"DESC\", \"GROUP\", \"EXCEPT\", \"HAVING\", \"OVER\", \"PRECEDING\", \"FOLLOWING\", \"UNBOUNDED\", \"PARTITION\",\r\n\t\t\"ROWS\", \"RANGE\", \"CURRENT\", \"DATAPOINT\"]\r\n}\r\n\r\nlet mapperInverter = function(mapper: Object) {\r\n\tlet inverted = {}\r\n\tObject.getOwnPropertyNames(mapper).forEach(p => mapper[p].forEach((n: string) => {\r\n\t\tif (inverted[n]) {\r\n\t\t\tinverted[n].push(tags[p])\r\n\t\t} else {\r\n\t\t\tinverted[n] = [tags[p]]\r\n\t\t}\r\n\t}))\r\n\treturn inverted\r\n}\r\n\r\n// Props added to nodes containing additional info for the editor renderer\r\nlet ctxProp = new NodeProp<antlr4.tree.ParseTree>({ perNode: true }) // The RuleContext or TerminalNode\r\nlet idsProp = new NodeProp({ perNode: true })\r\nlet dsNameProp = new NodeProp<string>({ perNode: true }) // The dataset name when using # or []\r\nlet expectedProp = new NodeProp({ perNode: true }) // Error: tokens expected but not encountered\r\nlet missingAfterProp = new NodeProp({ perNode: true }) // Error: Missing token after another token\r\nlet offendingTokenProp = new NodeProp({ perNode: true }) // Error: Unexpected token encountered\r\n\r\nlet completer = (src: CompletionContext) => { \r\n\tlet range = src.state.wordAt(src.pos)\r\n\tlet topNode = syntaxTree(src.state)\r\n\tlet from = range && range.from || src.pos, to = range && range.to || src.pos\r\n\tlet node = topNode.resolveInner(to, -1).toTree()\r\n\tlet ctx: antlr4.tree.ParseTree = node.prop(ctxProp)\r\n\tif (ctx instanceof antlr4.tree.TerminalNode) {\r\n\t\tif (ctx.getSymbol().type == VTLLexer.IDENTIFIER) {\r\n\t\t\treturn {\r\n\t\t\t\tfrom: from,\r\n\t\t\t\toptions: [...((topNode.prop(idsProp) as Object)[node.prop(dsNameProp) as string] || [])].map((c: string) => { return { label: c }}),\r\n\t\t\t\tvalidFor: /'[^']+'|[a-zA-Z0-9_]+/\r\n\t\t\t}\r\n\t\t}\r\n\t}}\r\n\r\nlet facet = defineLanguageFacet({\r\n\t\"autocomplete\": completer,\r\n\t\"closeBrackets\": {}\r\n})\r\n\r\nlet EOF = NodeType.define({ id: 0, name: \"ANTLR_EOF\", top: false, error: false, skipped: true })\r\nlet tokensStartIndex = 1\r\nlet tokenSet = (VTLLexer.symbolicNames.slice(1) as string[]).map((n, i) => NodeType.define({ id: i + tokensStartIndex, name: n, top: false, error: false, skipped: false }))\r\nlet rulesStartIndex = 1 + tokenSet.length\r\nlet ruleSet = VTLParser.ruleNames.map((n, i) => NodeType.define({ id: i + rulesStartIndex, name: n, top: !i, error: false, skipped: false, props: !i && [[languageDataProp, facet]] || []}))\r\nlet errorStartIndex = rulesStartIndex + ruleSet.length\r\nlet errorTokens = {\r\n\tVTL_EXTRANEOUS_TOKEN: errorStartIndex + 0, \r\n\tVTL_MISSING_TOKEN: errorStartIndex + 1,\r\n\tVTL_TOKEN_MISMATCH: errorStartIndex + 2\r\n}\r\nlet errorSet = Object.getOwnPropertyNames(errorTokens).map((n: string) => NodeType.define({ id: errorTokens[n], name: n, top: false, error: true, skipped: false }))\r\nlet nodeset = new NodeSet([EOF, ...tokenSet, ...ruleSet, ...errorSet]).extend(styleTags(mapperInverter(tokenMapper)))\r\n\r\nlet addCommentTokens = function(tokens: antlr4.Token[]) {\r\n\tlet children: [number, Tree, boolean][] = []\r\n\tfor (const ignored of tokens) {\r\n\t\tif ([VTLLexer.ML_COMMENT, VTLLexer.SL_COMMENT].includes(ignored.type)) {\r\n\t\t\tchildren = [...children, [ignored.start, new Tree(nodeset.types[ignored.type], [], [], ignored.stop - ignored.start + 1), false]]\r\n\t\t}\r\n\t}\r\n\treturn children\r\n}\r\n\t\t\r\nlet createTree = function(text: string, ctxName: string = 'start') {\r\n\tlet lexer = new VTLLexer(new antlr4.CharStream(text))\r\n\tlexer.removeErrorListeners()\r\n\tlet parser = new VTLParser(new antlr4.CommonTokenStream(lexer))\r\n\tparser.removeErrorListeners()\r\n\t\t\r\n\t// capture variables\r\n\tlet lastToken: antlr4.Token\r\n\tlet ids: { [key: string]: Set<string> } = { }\r\n\t\r\n\tlet treeToArray = function(ctx: antlr4.tree.ParseTree, dsName = \"\"): [number, Tree, boolean] {\r\n\t\tif (ctx instanceof antlr4.tree.RuleNode) {\r\n\t\t\tif (ctx instanceof StartContext && ctx.getSourceInterval() === antlr4.misc.Interval.INVALID_INTERVAL) {\r\n\t\t\t\treturn [0, new Tree(EOF, [], [], text.length), false]\r\n\t\t\t}\r\n\t\t\tlet tokenStream = parser._input as antlr4.CommonTokenStream\r\n\t\t\tlet start: number = ctx.start.start\r\n\t\t\tif (ctx instanceof DatasetClauseContext) {\r\n\t\t\t\tdsName = (ctx.parentCtx as ClauseExprContext).expr().getText()\r\n\t\t\t} else if (ctx instanceof VarIDContext || ctx instanceof ComponentIDContext) {\r\n\t\t\t\tif (!ids[dsName]) {\r\n\t\t\t\t\tids[dsName] = new Set<string>()\r\n\t\t\t\t}\r\n\t\t\t\tids[dsName].add(ctx.getText())\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (ctx.exception) {\r\n\t\t\t\tif (ctx.exception instanceof antlr4.error.InputMismatchException) {\r\n\t\t\t\t\tlet offToken = ctx.exception.offendingToken\r\n\t\t\t\t\tlet expected = ctx.exception.getExpectedTokens()\r\n\t\t\t\t\tlet tokens = Array(expected.intervals.at(-1).stop).keys().filter(i => expected.contains(i)).map(i => VTLLexer.literalNames[i] || VTLLexer.symbolicNames[i]).filter(e => !!e).toArray()\r\n\t\t\t\t\tlet mismatched = new Tree(nodeset.types[errorTokens.VTL_TOKEN_MISMATCH], [], [], offToken.stop - offToken.start + 1, [[expectedProp, tokens]])\r\n\t\t\t\t\tlet children: [number, Tree, boolean][] = ctx.children && ctx.children.map((c: antlr4.tree.ParseTree) => treeToArray(c, dsName)) || []\r\n\t\t\t\t\tif (!children.some(c => c[2])) {\r\n\t\t\t\t\t\tchildren = [...children, [offToken.start, mismatched, true]]\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet tchildren: [number[], Tree[]] = [children.map(r => r[0] - start), children.map(r => r[1])]\r\n\t\t\t\t\treturn [start, new Tree(nodeset.types[ctx.ruleIndex + rulesStartIndex], tchildren[1], tchildren[0], ctx.start.stop - start + 1, [[ctxProp, ctx]]), true]\r\n\t\t\t\t} else if (ctx.exception instanceof antlr4.error.NoViableAltException) {\r\n\t\t\t\t\tlet noviable = new Tree(nodeset.types[errorTokens.VTL_EXTRANEOUS_TOKEN], [], [], 1, [[offendingTokenProp, \"tokens\"]])\r\n\t\t\t\t\tlastToken = ctx.start\r\n\t\t\t\t\treturn [start, noviable, true];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow ctx.exception\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet children: [number, Tree, boolean][] = []\r\n\t\t\t\tif (ctx instanceof StartContext) {\r\n\t\t\t\t\tstart = 0\r\n\t\t\t\t} else if (ctx.start.tokenIndex > 0) {\r\n\t\t\t\t\t// fetch ws - comment tokens before each sub-rule\r\n\t\t\t\t\tlet startIndex = lastToken && lastToken.tokenIndex + 1 || 0\r\n\t\t\t\t\tchildren = [...children, ...addCommentTokens(tokenStream.getTokens(startIndex, ctx.start.tokenIndex))]\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < ctx.children.length; i++) {\r\n\t\t\t\t\tlet lastIndex = lastToken && lastToken.tokenIndex + 1 || 0\r\n\t\t\t\t\tlet child = treeToArray(ctx.children[i], dsName)\r\n\t\t\t\t\tif (i > 0 && lastIndex && ctx.children[i] instanceof antlr4.tree.TerminalNode && !ctx.children[i].isErrorNode) {\r\n\t\t\t\t\t\tchildren = [...children, ...addCommentTokens(tokenStream.getTokens(lastIndex + 1, ctx.children[i].symbol.tokenIndex))]\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchildren = [...children, child].filter(e => e)\r\n\t\t\t\t}\r\n\t\t\t\t// fetch eventual skipped comments at the end of the code\r\n\t\t\t\tif (ctx instanceof StartContext) {\r\n\t\t\t\t\tchildren = [...children, ...addCommentTokens(tokenStream.getTokens(ctx.stop.tokenIndex + 1, parser._input.tokens.length - 1))]\r\n\t\t\t\t}\r\n\t\t\t\tlet tchildren: [number[], Tree[], boolean] = [children.map(r => r[0] - start), children.map(r => r[1]), children.some(r => r[2])]\r\n\t\t\t\tlet props: [NodeProp<any>, any][] = ctx instanceof StartContext && [[idsProp, ids]] || []\r\n\t\t\t\tprops.push([ctxProp, ctx])\r\n\t\t\t\treturn [start, new Tree(nodeset.types[ctx.ruleIndex + rulesStartIndex], tchildren[1], tchildren[0], tchildren[0].at(-1) + tchildren[1].at(-1).length + 1, props), tchildren[2]]\r\n\t\t\t}\r\n\t\t} else if (ctx instanceof antlr4.tree.TerminalNode) {\r\n\t\t\tlet token = ctx.getSymbol()\r\n\t\t\tif (ctx.isErrorNode && ctx.isErrorNode()) {\r\n\t\t\t\tif (token.tokenIndex == -1) { // missing token\r\n\t\t\t\t\tlet missing = token.text.substring(9, token.text.length - 1)\r\n\t\t\t\t\treturn [lastToken && lastToken.start || 0, new Tree(nodeset.types[errorTokens.VTL_MISSING_TOKEN], [], [], lastToken.stop - lastToken.start + 1, [[ctxProp, ctx], [missingAfterProp, lastToken.text], [expectedProp, missing]]), true]\r\n\t\t\t\t}\r\n\t\t\t\tlastToken = token\r\n\t\t\t\treturn [token.start, new Tree(nodeset.types[errorTokens.VTL_EXTRANEOUS_TOKEN], [], [], token.stop - token.start + 1, [[dsNameProp, dsName], [ctxProp, ctx], [offendingTokenProp, token.text]]), true]\r\n\t\t\t} else {\r\n\t\t\t\tlastToken = token\r\n\t\t\t\treturn [token.start, new Tree(nodeset.types[token.type === -1 ? 0 : token.type], [], [], token.stop - token.start + 1, [[dsNameProp, dsName], [ctxProp, ctx]]), false]\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unrecognized node type\")\r\n\t\t}\r\n\t}\r\n\t\r\n\tlet tree = treeToArray(parser[ctxName.charAt(0).toLowerCase() + ctxName.slice(1)].bind(parser)())[1]\r\n\treturn tree\r\n}\r\n\r\nlet VTLLang = new Language(facet, new class extends LezerParser {\r\n\tcreateParse(input) {\r\n\t\tlet doc = input.doc.text.join(\"\\n\")\r\n\t\tlet tree = createTree(doc)\r\n\t\tlet partialParse = {\r\n\t\t\tparsedPos: doc.length,\r\n\t\t\tstoppedAt: null,\r\n\t\t\tstopAt: () => null,\r\n\t\t\tadvance: () => tree\r\n\t\t}\r\n\t\treturn partialParse\r\n\t}\r\n}(), [], \"VTL\")\r\n\r\nlet encode = (str: any) => {\r\n\tlet pre = document.createElement('pre');\r\n    pre.appendChild(document.createTextNode(str.toString()));\r\n    return pre.innerHTML;\r\n}\r\n\r\nlet vtlLinter = linter((view: EditorView) => {\r\n\tlet diagnostics: Diagnostic[] = []\r\n\tsyntaxTree(view.state).cursor().iterate((node: SyntaxNodeRef) => {\r\n\t\tif (node.type.id >= errorStartIndex) {\r\n\t\t\tconst tree = node.tree as Tree\r\n\t\t\tlet msg = ''\r\n\t\t\tlet actions: Action[] = []\r\n\t\t\tswitch (node.name) {\r\n\t\t\t\tcase \"VTL_EXTRANEOUS_TOKEN\": {\r\n\t\t\t\t\tmsg = `Unexpected token: <code>${tree.prop(offendingTokenProp)}</code>`\r\n\t\t\t\t\tactions.push({\r\n\t\t\t\t\t\tname: \"Remove\",\r\n\t\t\t\t\t\tapply: (view, from, to) => { view.dispatch({ changes: { from, to } }) }\r\n\t\t\t\t\t})\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase \"VTL_MISSING_TOKEN\": {\r\n\t\t\t\t\tmsg = `Missing <code>${encode(tree.prop(expectedProp))}</code> after <code>${tree.prop(missingAfterProp)}<code>`\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t\tcase \"VTL_TOKEN_MISMATCH\": {\r\n\t\t\t\t\tmsg = `Expected: <code>${tree.prop(expectedProp)}</code>`\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdiagnostics.push({ from: node.from, to: node.to, severity: \"error\", message: msg, renderMessage: () => {\r\n\t\t\t\tlet el = document.createElement( 'span' );\r\n\t\t\t\tel.innerHTML = msg\r\n\t\t\t\treturn el\r\n\t\t\t}, actions: actions })\r\n\t\t}\r\n\t})\r\n\treturn diagnostics\r\n})\r\n\r\nlet themeCompartment = new Compartment\r\nlet keymapCompartment = new Compartment\r\nlet keyBindings = [\r\n\t        ...closeBracketsKeymap,\r\n\t        ...defaultKeymap,\r\n\t        ...searchKeymap,\r\n\t        ...historyKeymap,\r\n\t        ...foldKeymap,\r\n\t        ...completionKeymap,\r\n\t        ...lintKeymap\r\n\t    ]\r\nexport let view = new EditorView({\r\n\textensions: [\r\n\t    keymapCompartment.of(keymap.of(keyBindings)),\r\n\t    lineNumbers(),\r\n\t    highlightActiveLineGutter(),\r\n\t    highlightSpecialChars(),\r\n\t    history(),\r\n\t    foldGutter(),\r\n\t    drawSelection(),\r\n\t    dropCursor(),\r\n\t    indentOnInput(),\r\n\t    bracketMatching(),\r\n\t    search(),\r\n\t    closeBrackets(),\r\n\t    autocompletion(),\r\n\t    crosshairCursor(),\r\n\t    highlightActiveLine(),\r\n\t    highlightSelectionMatches(),\r\n    \tthemeCompartment.of(th.material),\r\n\t\tVTLLang.extension,\r\n\t\tvtlLinter\r\n\t]\r\n})\r\n\r\nexport let themes = Object.getOwnPropertyNames(th).filter(s => !s.match(\"(^default|Init$)\"))\r\nexport let setTheme = function(themeName: string) {\r\n\tview.dispatch({ effects: themeCompartment.reconfigure(th[themeName]) })\r\n}\r\nexport let addHotKey = (hotKey: string, command: (target: EditorView) => boolean) => {\r\n\tview.dispatch({ \r\n\t\teffects: keymapCompartment.reconfigure(keymap.of([{\r\n\t\t\tkey: hotKey, run: command\r\n\t\t}, ...keymapCompartment.get(view.state).value]))\r\n\t})\r\n}\r\n", "// These are filled with ranges (rangeFrom[i] up to but not including\n// rangeTo[i]) of code points that count as extending characters.\nlet rangeFrom = [], rangeTo = []\n\n;(() => {\n  // Compressed representation of the Grapheme_Cluster_Break=Extend\n  // information from\n  // http://www.unicode.org/Public/16.0.0/ucd/auxiliary/GraphemeBreakProperty.txt.\n  // Each pair of elements represents a range, as an offet from the\n  // previous range and a length. Numbers are in base-36, with the empty\n  // string being a shorthand for 1.\n  let numbers = \"lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o\".split(\",\").map(s => s ? parseInt(s, 36) : 1)\n  for (let i = 0, n = 0; i < numbers.length; i++)\n    (i % 2 ? rangeTo : rangeFrom).push(n = n + numbers[i])\n})()\n\nexport function isExtendingChar(code) {\n  if (code < 768) return false\n  for (let from = 0, to = rangeFrom.length;;) {\n    let mid = (from + to) >> 1\n    if (code < rangeFrom[mid]) to = mid\n    else if (code >= rangeTo[mid]) from = mid + 1\n    else return true\n    if (from == to) return false\n  }\n}\n\nfunction isRegionalIndicator(code) {\n  return code >= 0x1F1E6 && code <= 0x1F1FF\n}\n\nfunction check(code) {\n  for (let i = 0; i < rangeFrom.length; i++) {\n    if (rangeTo[i] > code) return rangeFrom[i] <= code\n  }\n  return false\n}\n\nconst ZWJ = 0x200d\n\nexport function findClusterBreak(str, pos, forward = true, includeExtending = true) {\n  return (forward ? nextClusterBreak : prevClusterBreak)(str, pos, includeExtending)\n}\n\nfunction nextClusterBreak(str, pos, includeExtending) {\n  if (pos == str.length) return pos\n  // If pos is in the middle of a surrogate pair, move to its start\n  if (pos && surrogateLow(str.charCodeAt(pos)) && surrogateHigh(str.charCodeAt(pos - 1))) pos--\n  let prev = codePointAt(str, pos)\n  pos += codePointSize(prev)\n  while (pos < str.length) {\n    let next = codePointAt(str, pos)\n    if (prev == ZWJ || next == ZWJ || includeExtending && isExtendingChar(next)) {\n      pos += codePointSize(next)\n      prev = next\n    } else if (isRegionalIndicator(next)) {\n      let countBefore = 0, i = pos - 2\n      while (i >= 0 && isRegionalIndicator(codePointAt(str, i))) { countBefore++; i -= 2 }\n      if (countBefore % 2 == 0) break\n      else pos += 2\n    } else {\n      break\n    }\n  }\n  return pos\n}\n\nfunction prevClusterBreak(str, pos, includeExtending) {\n  while (pos > 0) {\n    let found = nextClusterBreak(str, pos - 2, includeExtending)\n    if (found < pos) return found\n    pos--\n  }\n  return 0\n}\n\nfunction codePointAt(str, pos) {\n  let code0 = str.charCodeAt(pos)\n  if (!surrogateHigh(code0) || pos + 1 == str.length) return code0\n  let code1 = str.charCodeAt(pos + 1)\n  if (!surrogateLow(code1)) return code0\n  return ((code0 - 0xd800) << 10) + (code1 - 0xdc00) + 0x10000\n}\n\nfunction surrogateLow(ch) { return ch >= 0xDC00 && ch < 0xE000 }\nfunction surrogateHigh(ch) { return ch >= 0xD800 && ch < 0xDC00 }\nfunction codePointSize(code) { return code < 0x10000 ? 1 : 2 }\n", "import { findClusterBreak as findClusterBreak$1 } from '@marijn/find-cluster-break';\n\n/**\nThe data structure for documents. @nonabstract\n*/\nclass Text {\n    /**\n    Get the line description around the given position.\n    */\n    lineAt(pos) {\n        if (pos < 0 || pos > this.length)\n            throw new RangeError(`Invalid position ${pos} in document of length ${this.length}`);\n        return this.lineInner(pos, false, 1, 0);\n    }\n    /**\n    Get the description for the given (1-based) line number.\n    */\n    line(n) {\n        if (n < 1 || n > this.lines)\n            throw new RangeError(`Invalid line number ${n} in ${this.lines}-line document`);\n        return this.lineInner(n, true, 1, 0);\n    }\n    /**\n    Replace a range of the text with the given content.\n    */\n    replace(from, to, text) {\n        [from, to] = clip(this, from, to);\n        let parts = [];\n        this.decompose(0, from, parts, 2 /* Open.To */);\n        if (text.length)\n            text.decompose(0, text.length, parts, 1 /* Open.From */ | 2 /* Open.To */);\n        this.decompose(to, this.length, parts, 1 /* Open.From */);\n        return TextNode.from(parts, this.length - (to - from) + text.length);\n    }\n    /**\n    Append another document to this one.\n    */\n    append(other) {\n        return this.replace(this.length, this.length, other);\n    }\n    /**\n    Retrieve the text between the given points.\n    */\n    slice(from, to = this.length) {\n        [from, to] = clip(this, from, to);\n        let parts = [];\n        this.decompose(from, to, parts, 0);\n        return TextNode.from(parts, to - from);\n    }\n    /**\n    Test whether this text is equal to another instance.\n    */\n    eq(other) {\n        if (other == this)\n            return true;\n        if (other.length != this.length || other.lines != this.lines)\n            return false;\n        let start = this.scanIdentical(other, 1), end = this.length - this.scanIdentical(other, -1);\n        let a = new RawTextCursor(this), b = new RawTextCursor(other);\n        for (let skip = start, pos = start;;) {\n            a.next(skip);\n            b.next(skip);\n            skip = 0;\n            if (a.lineBreak != b.lineBreak || a.done != b.done || a.value != b.value)\n                return false;\n            pos += a.value.length;\n            if (a.done || pos >= end)\n                return true;\n        }\n    }\n    /**\n    Iterate over the text. When `dir` is `-1`, iteration happens\n    from end to start. This will return lines and the breaks between\n    them as separate strings.\n    */\n    iter(dir = 1) { return new RawTextCursor(this, dir); }\n    /**\n    Iterate over a range of the text. When `from` > `to`, the\n    iterator will run in reverse.\n    */\n    iterRange(from, to = this.length) { return new PartialTextCursor(this, from, to); }\n    /**\n    Return a cursor that iterates over the given range of lines,\n    _without_ returning the line breaks between, and yielding empty\n    strings for empty lines.\n    \n    When `from` and `to` are given, they should be 1-based line numbers.\n    */\n    iterLines(from, to) {\n        let inner;\n        if (from == null) {\n            inner = this.iter();\n        }\n        else {\n            if (to == null)\n                to = this.lines + 1;\n            let start = this.line(from).from;\n            inner = this.iterRange(start, Math.max(start, to == this.lines + 1 ? this.length : to <= 1 ? 0 : this.line(to - 1).to));\n        }\n        return new LineCursor(inner);\n    }\n    /**\n    Return the document as a string, using newline characters to\n    separate lines.\n    */\n    toString() { return this.sliceString(0); }\n    /**\n    Convert the document to an array of lines (which can be\n    deserialized again via [`Text.of`](https://codemirror.net/6/docs/ref/#state.Text^of)).\n    */\n    toJSON() {\n        let lines = [];\n        this.flatten(lines);\n        return lines;\n    }\n    /**\n    @internal\n    */\n    constructor() { }\n    /**\n    Create a `Text` instance for the given array of lines.\n    */\n    static of(text) {\n        if (text.length == 0)\n            throw new RangeError(\"A document must have at least one line\");\n        if (text.length == 1 && !text[0])\n            return Text.empty;\n        return text.length <= 32 /* Tree.Branch */ ? new TextLeaf(text) : TextNode.from(TextLeaf.split(text, []));\n    }\n}\n// Leaves store an array of line strings. There are always line breaks\n// between these strings. Leaves are limited in size and have to be\n// contained in TextNode instances for bigger documents.\nclass TextLeaf extends Text {\n    constructor(text, length = textLength(text)) {\n        super();\n        this.text = text;\n        this.length = length;\n    }\n    get lines() { return this.text.length; }\n    get children() { return null; }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let string = this.text[i], end = offset + string.length;\n            if ((isLine ? line : end) >= target)\n                return new Line(offset, end, line, string);\n            offset = end + 1;\n            line++;\n        }\n    }\n    decompose(from, to, target, open) {\n        let text = from <= 0 && to >= this.length ? this\n            : new TextLeaf(sliceText(this.text, from, to), Math.min(to, this.length) - Math.max(0, from));\n        if (open & 1 /* Open.From */) {\n            let prev = target.pop();\n            let joined = appendText(text.text, prev.text.slice(), 0, text.length);\n            if (joined.length <= 32 /* Tree.Branch */) {\n                target.push(new TextLeaf(joined, prev.length + text.length));\n            }\n            else {\n                let mid = joined.length >> 1;\n                target.push(new TextLeaf(joined.slice(0, mid)), new TextLeaf(joined.slice(mid)));\n            }\n        }\n        else {\n            target.push(text);\n        }\n    }\n    replace(from, to, text) {\n        if (!(text instanceof TextLeaf))\n            return super.replace(from, to, text);\n        [from, to] = clip(this, from, to);\n        let lines = appendText(this.text, appendText(text.text, sliceText(this.text, 0, from)), to);\n        let newLen = this.length + text.length - (to - from);\n        if (lines.length <= 32 /* Tree.Branch */)\n            return new TextLeaf(lines, newLen);\n        return TextNode.from(TextLeaf.split(lines, []), newLen);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        [from, to] = clip(this, from, to);\n        let result = \"\";\n        for (let pos = 0, i = 0; pos <= to && i < this.text.length; i++) {\n            let line = this.text[i], end = pos + line.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += line.slice(Math.max(0, from - pos), to - pos);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let line of this.text)\n            target.push(line);\n    }\n    scanIdentical() { return 0; }\n    static split(text, target) {\n        let part = [], len = -1;\n        for (let line of text) {\n            part.push(line);\n            len += line.length + 1;\n            if (part.length == 32 /* Tree.Branch */) {\n                target.push(new TextLeaf(part, len));\n                part = [];\n                len = -1;\n            }\n        }\n        if (len > -1)\n            target.push(new TextLeaf(part, len));\n        return target;\n    }\n}\n// Nodes provide the tree structure of the `Text` type. They store a\n// number of other nodes or leaves, taking care to balance themselves\n// on changes. There are implied line breaks _between_ the children of\n// a node (but not before the first or after the last child).\nclass TextNode extends Text {\n    constructor(children, length) {\n        super();\n        this.children = children;\n        this.length = length;\n        this.lines = 0;\n        for (let child of children)\n            this.lines += child.lines;\n    }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let child = this.children[i], end = offset + child.length, endLine = line + child.lines - 1;\n            if ((isLine ? endLine : end) >= target)\n                return child.lineInner(target, isLine, line, offset);\n            offset = end + 1;\n            line = endLine + 1;\n        }\n    }\n    decompose(from, to, target, open) {\n        for (let i = 0, pos = 0; pos <= to && i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (from <= end && to >= pos) {\n                let childOpen = open & ((pos <= from ? 1 /* Open.From */ : 0) | (end >= to ? 2 /* Open.To */ : 0));\n                if (pos >= from && end <= to && !childOpen)\n                    target.push(child);\n                else\n                    child.decompose(from - pos, to - pos, target, childOpen);\n            }\n            pos = end + 1;\n        }\n    }\n    replace(from, to, text) {\n        [from, to] = clip(this, from, to);\n        if (text.lines < this.lines)\n            for (let i = 0, pos = 0; i < this.children.length; i++) {\n                let child = this.children[i], end = pos + child.length;\n                // Fast path: if the change only affects one child and the\n                // child's size remains in the acceptable range, only update\n                // that child\n                if (from >= pos && to <= end) {\n                    let updated = child.replace(from - pos, to - pos, text);\n                    let totalLines = this.lines - child.lines + updated.lines;\n                    if (updated.lines < (totalLines >> (5 /* Tree.BranchShift */ - 1)) &&\n                        updated.lines > (totalLines >> (5 /* Tree.BranchShift */ + 1))) {\n                        let copy = this.children.slice();\n                        copy[i] = updated;\n                        return new TextNode(copy, this.length - (to - from) + text.length);\n                    }\n                    return super.replace(pos, end, updated);\n                }\n                pos = end + 1;\n            }\n        return super.replace(from, to, text);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        [from, to] = clip(this, from, to);\n        let result = \"\";\n        for (let i = 0, pos = 0; i < this.children.length && pos <= to; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += child.sliceString(from - pos, to - pos, lineSep);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let child of this.children)\n            child.flatten(target);\n    }\n    scanIdentical(other, dir) {\n        if (!(other instanceof TextNode))\n            return 0;\n        let length = 0;\n        let [iA, iB, eA, eB] = dir > 0 ? [0, 0, this.children.length, other.children.length]\n            : [this.children.length - 1, other.children.length - 1, -1, -1];\n        for (;; iA += dir, iB += dir) {\n            if (iA == eA || iB == eB)\n                return length;\n            let chA = this.children[iA], chB = other.children[iB];\n            if (chA != chB)\n                return length + chA.scanIdentical(chB, dir);\n            length += chA.length + 1;\n        }\n    }\n    static from(children, length = children.reduce((l, ch) => l + ch.length + 1, -1)) {\n        let lines = 0;\n        for (let ch of children)\n            lines += ch.lines;\n        if (lines < 32 /* Tree.Branch */) {\n            let flat = [];\n            for (let ch of children)\n                ch.flatten(flat);\n            return new TextLeaf(flat, length);\n        }\n        let chunk = Math.max(32 /* Tree.Branch */, lines >> 5 /* Tree.BranchShift */), maxChunk = chunk << 1, minChunk = chunk >> 1;\n        let chunked = [], currentLines = 0, currentLen = -1, currentChunk = [];\n        function add(child) {\n            let last;\n            if (child.lines > maxChunk && child instanceof TextNode) {\n                for (let node of child.children)\n                    add(node);\n            }\n            else if (child.lines > minChunk && (currentLines > minChunk || !currentLines)) {\n                flush();\n                chunked.push(child);\n            }\n            else if (child instanceof TextLeaf && currentLines &&\n                (last = currentChunk[currentChunk.length - 1]) instanceof TextLeaf &&\n                child.lines + last.lines <= 32 /* Tree.Branch */) {\n                currentLines += child.lines;\n                currentLen += child.length + 1;\n                currentChunk[currentChunk.length - 1] = new TextLeaf(last.text.concat(child.text), last.length + 1 + child.length);\n            }\n            else {\n                if (currentLines + child.lines > chunk)\n                    flush();\n                currentLines += child.lines;\n                currentLen += child.length + 1;\n                currentChunk.push(child);\n            }\n        }\n        function flush() {\n            if (currentLines == 0)\n                return;\n            chunked.push(currentChunk.length == 1 ? currentChunk[0] : TextNode.from(currentChunk, currentLen));\n            currentLen = -1;\n            currentLines = currentChunk.length = 0;\n        }\n        for (let child of children)\n            add(child);\n        flush();\n        return chunked.length == 1 ? chunked[0] : new TextNode(chunked, length);\n    }\n}\nText.empty = /*@__PURE__*/new TextLeaf([\"\"], 0);\nfunction textLength(text) {\n    let length = -1;\n    for (let line of text)\n        length += line.length + 1;\n    return length;\n}\nfunction appendText(text, target, from = 0, to = 1e9) {\n    for (let pos = 0, i = 0, first = true; i < text.length && pos <= to; i++) {\n        let line = text[i], end = pos + line.length;\n        if (end >= from) {\n            if (end > to)\n                line = line.slice(0, to - pos);\n            if (pos < from)\n                line = line.slice(from - pos);\n            if (first) {\n                target[target.length - 1] += line;\n                first = false;\n            }\n            else\n                target.push(line);\n        }\n        pos = end + 1;\n    }\n    return target;\n}\nfunction sliceText(text, from, to) {\n    return appendText(text, [\"\"], from, to);\n}\nclass RawTextCursor {\n    constructor(text, dir = 1) {\n        this.dir = dir;\n        this.done = false;\n        this.lineBreak = false;\n        this.value = \"\";\n        this.nodes = [text];\n        this.offsets = [dir > 0 ? 1 : (text instanceof TextLeaf ? text.text.length : text.children.length) << 1];\n    }\n    nextInner(skip, dir) {\n        this.done = this.lineBreak = false;\n        for (;;) {\n            let last = this.nodes.length - 1;\n            let top = this.nodes[last], offsetValue = this.offsets[last], offset = offsetValue >> 1;\n            let size = top instanceof TextLeaf ? top.text.length : top.children.length;\n            if (offset == (dir > 0 ? size : 0)) {\n                if (last == 0) {\n                    this.done = true;\n                    this.value = \"\";\n                    return this;\n                }\n                if (dir > 0)\n                    this.offsets[last - 1]++;\n                this.nodes.pop();\n                this.offsets.pop();\n            }\n            else if ((offsetValue & 1) == (dir > 0 ? 0 : 1)) {\n                this.offsets[last] += dir;\n                if (skip == 0) {\n                    this.lineBreak = true;\n                    this.value = \"\\n\";\n                    return this;\n                }\n                skip--;\n            }\n            else if (top instanceof TextLeaf) {\n                // Move to the next string\n                let next = top.text[offset + (dir < 0 ? -1 : 0)];\n                this.offsets[last] += dir;\n                if (next.length > Math.max(0, skip)) {\n                    this.value = skip == 0 ? next : dir > 0 ? next.slice(skip) : next.slice(0, next.length - skip);\n                    return this;\n                }\n                skip -= next.length;\n            }\n            else {\n                let next = top.children[offset + (dir < 0 ? -1 : 0)];\n                if (skip > next.length) {\n                    skip -= next.length;\n                    this.offsets[last] += dir;\n                }\n                else {\n                    if (dir < 0)\n                        this.offsets[last]--;\n                    this.nodes.push(next);\n                    this.offsets.push(dir > 0 ? 1 : (next instanceof TextLeaf ? next.text.length : next.children.length) << 1);\n                }\n            }\n        }\n    }\n    next(skip = 0) {\n        if (skip < 0) {\n            this.nextInner(-skip, (-this.dir));\n            skip = this.value.length;\n        }\n        return this.nextInner(skip, this.dir);\n    }\n}\nclass PartialTextCursor {\n    constructor(text, start, end) {\n        this.value = \"\";\n        this.done = false;\n        this.cursor = new RawTextCursor(text, start > end ? -1 : 1);\n        this.pos = start > end ? text.length : 0;\n        this.from = Math.min(start, end);\n        this.to = Math.max(start, end);\n    }\n    nextInner(skip, dir) {\n        if (dir < 0 ? this.pos <= this.from : this.pos >= this.to) {\n            this.value = \"\";\n            this.done = true;\n            return this;\n        }\n        skip += Math.max(0, dir < 0 ? this.pos - this.to : this.from - this.pos);\n        let limit = dir < 0 ? this.pos - this.from : this.to - this.pos;\n        if (skip > limit)\n            skip = limit;\n        limit -= skip;\n        let { value } = this.cursor.next(skip);\n        this.pos += (value.length + skip) * dir;\n        this.value = value.length <= limit ? value : dir < 0 ? value.slice(value.length - limit) : value.slice(0, limit);\n        this.done = !this.value;\n        return this;\n    }\n    next(skip = 0) {\n        if (skip < 0)\n            skip = Math.max(skip, this.from - this.pos);\n        else if (skip > 0)\n            skip = Math.min(skip, this.to - this.pos);\n        return this.nextInner(skip, this.cursor.dir);\n    }\n    get lineBreak() { return this.cursor.lineBreak && this.value != \"\"; }\n}\nclass LineCursor {\n    constructor(inner) {\n        this.inner = inner;\n        this.afterBreak = true;\n        this.value = \"\";\n        this.done = false;\n    }\n    next(skip = 0) {\n        let { done, lineBreak, value } = this.inner.next(skip);\n        if (done && this.afterBreak) {\n            this.value = \"\";\n            this.afterBreak = false;\n        }\n        else if (done) {\n            this.done = true;\n            this.value = \"\";\n        }\n        else if (lineBreak) {\n            if (this.afterBreak) {\n                this.value = \"\";\n            }\n            else {\n                this.afterBreak = true;\n                this.next();\n            }\n        }\n        else {\n            this.value = value;\n            this.afterBreak = false;\n        }\n        return this;\n    }\n    get lineBreak() { return false; }\n}\nif (typeof Symbol != \"undefined\") {\n    Text.prototype[Symbol.iterator] = function () { return this.iter(); };\n    RawTextCursor.prototype[Symbol.iterator] = PartialTextCursor.prototype[Symbol.iterator] =\n        LineCursor.prototype[Symbol.iterator] = function () { return this; };\n}\n/**\nThis type describes a line in the document. It is created\non-demand when lines are [queried](https://codemirror.net/6/docs/ref/#state.Text.lineAt).\n*/\nclass Line {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The position of the start of the line.\n    */\n    from, \n    /**\n    The position at the end of the line (_before_ the line break,\n    or at the end of document for the last line).\n    */\n    to, \n    /**\n    This line's line number (1-based).\n    */\n    number, \n    /**\n    The line's content.\n    */\n    text) {\n        this.from = from;\n        this.to = to;\n        this.number = number;\n        this.text = text;\n    }\n    /**\n    The length of the line (not including any line break after it).\n    */\n    get length() { return this.to - this.from; }\n}\nfunction clip(text, from, to) {\n    from = Math.max(0, Math.min(text.length, from));\n    return [from, Math.max(from, Math.min(text.length, to))];\n}\n\n/**\nReturns a next grapheme cluster break _after_ (not equal to)\n`pos`, if `forward` is true, or before otherwise. Returns `pos`\nitself if no further cluster break is available in the string.\nMoves across surrogate pairs, extending characters (when\n`includeExtending` is true), characters joined with zero-width\njoiners, and flag emoji.\n*/\nfunction findClusterBreak(str, pos, forward = true, includeExtending = true) {\n    return findClusterBreak$1(str, pos, forward, includeExtending);\n}\nfunction surrogateLow(ch) { return ch >= 0xDC00 && ch < 0xE000; }\nfunction surrogateHigh(ch) { return ch >= 0xD800 && ch < 0xDC00; }\n/**\nFind the code point at the given position in a string (like the\n[`codePointAt`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt)\nstring method).\n*/\nfunction codePointAt(str, pos) {\n    let code0 = str.charCodeAt(pos);\n    if (!surrogateHigh(code0) || pos + 1 == str.length)\n        return code0;\n    let code1 = str.charCodeAt(pos + 1);\n    if (!surrogateLow(code1))\n        return code0;\n    return ((code0 - 0xd800) << 10) + (code1 - 0xdc00) + 0x10000;\n}\n/**\nGiven a Unicode codepoint, return the JavaScript string that\nrespresents it (like\n[`String.fromCodePoint`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)).\n*/\nfunction fromCodePoint(code) {\n    if (code <= 0xffff)\n        return String.fromCharCode(code);\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xd800, (code & 1023) + 0xdc00);\n}\n/**\nThe amount of positions a character takes up in a JavaScript string.\n*/\nfunction codePointSize(code) { return code < 0x10000 ? 1 : 2; }\n\nconst DefaultSplit = /\\r\\n?|\\n/;\n/**\nDistinguishes different ways in which positions can be mapped.\n*/\nvar MapMode = /*@__PURE__*/(function (MapMode) {\n    /**\n    Map a position to a valid new position, even when its context\n    was deleted.\n    */\n    MapMode[MapMode[\"Simple\"] = 0] = \"Simple\";\n    /**\n    Return null if deletion happens across the position.\n    */\n    MapMode[MapMode[\"TrackDel\"] = 1] = \"TrackDel\";\n    /**\n    Return null if the character _before_ the position is deleted.\n    */\n    MapMode[MapMode[\"TrackBefore\"] = 2] = \"TrackBefore\";\n    /**\n    Return null if the character _after_ the position is deleted.\n    */\n    MapMode[MapMode[\"TrackAfter\"] = 3] = \"TrackAfter\";\nreturn MapMode})(MapMode || (MapMode = {}));\n/**\nA change description is a variant of [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet)\nthat doesn't store the inserted text. As such, it can't be\napplied, but is cheaper to store and manipulate.\n*/\nclass ChangeDesc {\n    // Sections are encoded as pairs of integers. The first is the\n    // length in the current document, and the second is -1 for\n    // unaffected sections, and the length of the replacement content\n    // otherwise. So an insertion would be (0, n>0), a deletion (n>0,\n    // 0), and a replacement two positive numbers.\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    sections) {\n        this.sections = sections;\n    }\n    /**\n    The length of the document before the change.\n    */\n    get length() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2)\n            result += this.sections[i];\n        return result;\n    }\n    /**\n    The length of the document after the change.\n    */\n    get newLength() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let ins = this.sections[i + 1];\n            result += ins < 0 ? this.sections[i] : ins;\n        }\n        return result;\n    }\n    /**\n    False when there are actual changes in this set.\n    */\n    get empty() { return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0; }\n    /**\n    Iterate over the unchanged parts left by these changes. `posA`\n    provides the position of the range in the old document, `posB`\n    the new position in the changed document.\n    */\n    iterGaps(f) {\n        for (let i = 0, posA = 0, posB = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0) {\n                f(posA, posB, len);\n                posB += len;\n            }\n            else {\n                posB += ins;\n            }\n            posA += len;\n        }\n    }\n    /**\n    Iterate over the ranges changed by these changes. (See\n    [`ChangeSet.iterChanges`](https://codemirror.net/6/docs/ref/#state.ChangeSet.iterChanges) for a\n    variant that also provides you with the inserted text.)\n    `fromA`/`toA` provides the extent of the change in the starting\n    document, `fromB`/`toB` the extent of the replacement in the\n    changed document.\n    \n    When `individual` is true, adjacent changes (which are kept\n    separate for [position mapping](https://codemirror.net/6/docs/ref/#state.ChangeDesc.mapPos)) are\n    reported separately.\n    */\n    iterChangedRanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /**\n    Get a description of the inverted form of these changes.\n    */\n    get invertedDesc() {\n        let sections = [];\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0)\n                sections.push(len, ins);\n            else\n                sections.push(ins, len);\n        }\n        return new ChangeDesc(sections);\n    }\n    /**\n    Compute the combined effect of applying another set of changes\n    after this one. The length of the document after this set should\n    match the length before `other`.\n    */\n    composeDesc(other) { return this.empty ? other : other.empty ? this : composeSets(this, other); }\n    /**\n    Map this description, which should start with the same document\n    as `other`, over another set of changes, so that it can be\n    applied after it. When `before` is true, map as if the changes\n    in `this` happened before the ones in `other`.\n    */\n    mapDesc(other, before = false) { return other.empty ? this : mapSet(this, other, before); }\n    mapPos(pos, assoc = -1, mode = MapMode.Simple) {\n        let posA = 0, posB = 0;\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++], endA = posA + len;\n            if (ins < 0) {\n                if (endA > pos)\n                    return posB + (pos - posA);\n                posB += len;\n            }\n            else {\n                if (mode != MapMode.Simple && endA >= pos &&\n                    (mode == MapMode.TrackDel && posA < pos && endA > pos ||\n                        mode == MapMode.TrackBefore && posA < pos ||\n                        mode == MapMode.TrackAfter && endA > pos))\n                    return null;\n                if (endA > pos || endA == pos && assoc < 0 && !len)\n                    return pos == posA || assoc < 0 ? posB : posB + ins;\n                posB += ins;\n            }\n            posA = endA;\n        }\n        if (pos > posA)\n            throw new RangeError(`Position ${pos} is out of range for changeset of length ${posA}`);\n        return posB;\n    }\n    /**\n    Check whether these changes touch a given range. When one of the\n    changes entirely covers the range, the string `\"cover\"` is\n    returned.\n    */\n    touchesRange(from, to = from) {\n        for (let i = 0, pos = 0; i < this.sections.length && pos <= to;) {\n            let len = this.sections[i++], ins = this.sections[i++], end = pos + len;\n            if (ins >= 0 && pos <= to && end >= from)\n                return pos < from && end > to ? \"cover\" : true;\n            pos = end;\n        }\n        return false;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let result = \"\";\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            result += (result ? \" \" : \"\") + len + (ins >= 0 ? \":\" + ins : \"\");\n        }\n        return result;\n    }\n    /**\n    Serialize this change desc to a JSON-representable value.\n    */\n    toJSON() { return this.sections; }\n    /**\n    Create a change desc from its JSON representation (as produced\n    by [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeDesc.toJSON).\n    */\n    static fromJSON(json) {\n        if (!Array.isArray(json) || json.length % 2 || json.some(a => typeof a != \"number\"))\n            throw new RangeError(\"Invalid JSON representation of ChangeDesc\");\n        return new ChangeDesc(json);\n    }\n    /**\n    @internal\n    */\n    static create(sections) { return new ChangeDesc(sections); }\n}\n/**\nA change set represents a group of modifications to a document. It\nstores the document length, and can only be applied to documents\nwith exactly that length.\n*/\nclass ChangeSet extends ChangeDesc {\n    constructor(sections, \n    /**\n    @internal\n    */\n    inserted) {\n        super(sections);\n        this.inserted = inserted;\n    }\n    /**\n    Apply the changes to a document, returning the modified\n    document.\n    */\n    apply(doc) {\n        if (this.length != doc.length)\n            throw new RangeError(\"Applying change set to a document with the wrong length\");\n        iterChanges(this, (fromA, toA, fromB, _toB, text) => doc = doc.replace(fromB, fromB + (toA - fromA), text), false);\n        return doc;\n    }\n    mapDesc(other, before = false) { return mapSet(this, other, before, true); }\n    /**\n    Given the document as it existed _before_ the changes, return a\n    change set that represents the inverse of this set, which could\n    be used to go from the document created by the changes back to\n    the document as it existed before the changes.\n    */\n    invert(doc) {\n        let sections = this.sections.slice(), inserted = [];\n        for (let i = 0, pos = 0; i < sections.length; i += 2) {\n            let len = sections[i], ins = sections[i + 1];\n            if (ins >= 0) {\n                sections[i] = ins;\n                sections[i + 1] = len;\n                let index = i >> 1;\n                while (inserted.length < index)\n                    inserted.push(Text.empty);\n                inserted.push(len ? doc.slice(pos, pos + len) : Text.empty);\n            }\n            pos += len;\n        }\n        return new ChangeSet(sections, inserted);\n    }\n    /**\n    Combine two subsequent change sets into a single set. `other`\n    must start in the document produced by `this`. If `this` goes\n    `docA` \u2192 `docB` and `other` represents `docB` \u2192 `docC`, the\n    returned value will represent the change `docA` \u2192 `docC`.\n    */\n    compose(other) { return this.empty ? other : other.empty ? this : composeSets(this, other, true); }\n    /**\n    Given another change set starting in the same document, maps this\n    change set over the other, producing a new change set that can be\n    applied to the document produced by applying `other`. When\n    `before` is `true`, order changes as if `this` comes before\n    `other`, otherwise (the default) treat `other` as coming first.\n    \n    Given two changes `A` and `B`, `A.compose(B.map(A))` and\n    `B.compose(A.map(B, true))` will produce the same document. This\n    provides a basic form of [operational\n    transformation](https://en.wikipedia.org/wiki/Operational_transformation),\n    and can be used for collaborative editing.\n    */\n    map(other, before = false) { return other.empty ? this : mapSet(this, other, before, true); }\n    /**\n    Iterate over the changed ranges in the document, calling `f` for\n    each, with the range in the original document (`fromA`-`toA`)\n    and the range that replaces it in the new document\n    (`fromB`-`toB`).\n    \n    When `individual` is true, adjacent changes are reported\n    separately.\n    */\n    iterChanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /**\n    Get a [change description](https://codemirror.net/6/docs/ref/#state.ChangeDesc) for this change\n    set.\n    */\n    get desc() { return ChangeDesc.create(this.sections); }\n    /**\n    @internal\n    */\n    filter(ranges) {\n        let resultSections = [], resultInserted = [], filteredSections = [];\n        let iter = new SectionIter(this);\n        done: for (let i = 0, pos = 0;;) {\n            let next = i == ranges.length ? 1e9 : ranges[i++];\n            while (pos < next || pos == next && iter.len == 0) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, next - pos);\n                addSection(filteredSections, len, -1);\n                let ins = iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0;\n                addSection(resultSections, len, ins);\n                if (ins > 0)\n                    addInsert(resultInserted, resultSections, iter.text);\n                iter.forward(len);\n                pos += len;\n            }\n            let end = ranges[i++];\n            while (pos < end) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, end - pos);\n                addSection(resultSections, len, -1);\n                addSection(filteredSections, len, iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0);\n                iter.forward(len);\n                pos += len;\n            }\n        }\n        return { changes: new ChangeSet(resultSections, resultInserted),\n            filtered: ChangeDesc.create(filteredSections) };\n    }\n    /**\n    Serialize this change set to a JSON-representable value.\n    */\n    toJSON() {\n        let parts = [];\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let len = this.sections[i], ins = this.sections[i + 1];\n            if (ins < 0)\n                parts.push(len);\n            else if (ins == 0)\n                parts.push([len]);\n            else\n                parts.push([len].concat(this.inserted[i >> 1].toJSON()));\n        }\n        return parts;\n    }\n    /**\n    Create a change set for the given changes, for a document of the\n    given length, using `lineSep` as line separator.\n    */\n    static of(changes, length, lineSep) {\n        let sections = [], inserted = [], pos = 0;\n        let total = null;\n        function flush(force = false) {\n            if (!force && !sections.length)\n                return;\n            if (pos < length)\n                addSection(sections, length - pos, -1);\n            let set = new ChangeSet(sections, inserted);\n            total = total ? total.compose(set.map(total)) : set;\n            sections = [];\n            inserted = [];\n            pos = 0;\n        }\n        function process(spec) {\n            if (Array.isArray(spec)) {\n                for (let sub of spec)\n                    process(sub);\n            }\n            else if (spec instanceof ChangeSet) {\n                if (spec.length != length)\n                    throw new RangeError(`Mismatched change set length (got ${spec.length}, expected ${length})`);\n                flush();\n                total = total ? total.compose(spec.map(total)) : spec;\n            }\n            else {\n                let { from, to = from, insert } = spec;\n                if (from > to || from < 0 || to > length)\n                    throw new RangeError(`Invalid change range ${from} to ${to} (in doc of length ${length})`);\n                let insText = !insert ? Text.empty : typeof insert == \"string\" ? Text.of(insert.split(lineSep || DefaultSplit)) : insert;\n                let insLen = insText.length;\n                if (from == to && insLen == 0)\n                    return;\n                if (from < pos)\n                    flush();\n                if (from > pos)\n                    addSection(sections, from - pos, -1);\n                addSection(sections, to - from, insLen);\n                addInsert(inserted, sections, insText);\n                pos = to;\n            }\n        }\n        process(changes);\n        flush(!total);\n        return total;\n    }\n    /**\n    Create an empty changeset of the given length.\n    */\n    static empty(length) {\n        return new ChangeSet(length ? [length, -1] : [], []);\n    }\n    /**\n    Create a changeset from its JSON representation (as produced by\n    [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeSet.toJSON).\n    */\n    static fromJSON(json) {\n        if (!Array.isArray(json))\n            throw new RangeError(\"Invalid JSON representation of ChangeSet\");\n        let sections = [], inserted = [];\n        for (let i = 0; i < json.length; i++) {\n            let part = json[i];\n            if (typeof part == \"number\") {\n                sections.push(part, -1);\n            }\n            else if (!Array.isArray(part) || typeof part[0] != \"number\" || part.some((e, i) => i && typeof e != \"string\")) {\n                throw new RangeError(\"Invalid JSON representation of ChangeSet\");\n            }\n            else if (part.length == 1) {\n                sections.push(part[0], 0);\n            }\n            else {\n                while (inserted.length < i)\n                    inserted.push(Text.empty);\n                inserted[i] = Text.of(part.slice(1));\n                sections.push(part[0], inserted[i].length);\n            }\n        }\n        return new ChangeSet(sections, inserted);\n    }\n    /**\n    @internal\n    */\n    static createSet(sections, inserted) {\n        return new ChangeSet(sections, inserted);\n    }\n}\nfunction addSection(sections, len, ins, forceJoin = false) {\n    if (len == 0 && ins <= 0)\n        return;\n    let last = sections.length - 2;\n    if (last >= 0 && ins <= 0 && ins == sections[last + 1])\n        sections[last] += len;\n    else if (last >= 0 && len == 0 && sections[last] == 0)\n        sections[last + 1] += ins;\n    else if (forceJoin) {\n        sections[last] += len;\n        sections[last + 1] += ins;\n    }\n    else\n        sections.push(len, ins);\n}\nfunction addInsert(values, sections, value) {\n    if (value.length == 0)\n        return;\n    let index = (sections.length - 2) >> 1;\n    if (index < values.length) {\n        values[values.length - 1] = values[values.length - 1].append(value);\n    }\n    else {\n        while (values.length < index)\n            values.push(Text.empty);\n        values.push(value);\n    }\n}\nfunction iterChanges(desc, f, individual) {\n    let inserted = desc.inserted;\n    for (let posA = 0, posB = 0, i = 0; i < desc.sections.length;) {\n        let len = desc.sections[i++], ins = desc.sections[i++];\n        if (ins < 0) {\n            posA += len;\n            posB += len;\n        }\n        else {\n            let endA = posA, endB = posB, text = Text.empty;\n            for (;;) {\n                endA += len;\n                endB += ins;\n                if (ins && inserted)\n                    text = text.append(inserted[(i - 2) >> 1]);\n                if (individual || i == desc.sections.length || desc.sections[i + 1] < 0)\n                    break;\n                len = desc.sections[i++];\n                ins = desc.sections[i++];\n            }\n            f(posA, endA, posB, endB, text);\n            posA = endA;\n            posB = endB;\n        }\n    }\n}\nfunction mapSet(setA, setB, before, mkSet = false) {\n    // Produce a copy of setA that applies to the document after setB\n    // has been applied (assuming both start at the same document).\n    let sections = [], insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    // Iterate over both sets in parallel. inserted tracks, for changes\n    // in A that have to be processed piece-by-piece, whether their\n    // content has been inserted already, and refers to the section\n    // index.\n    for (let inserted = -1;;) {\n        if (a.done && b.len || b.done && a.len) {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n        else if (a.ins == -1 && b.ins == -1) {\n            // Move across ranges skipped by both sets.\n            let len = Math.min(a.len, b.len);\n            addSection(sections, len, -1);\n            a.forward(len);\n            b.forward(len);\n        }\n        else if (b.ins >= 0 && (a.ins < 0 || inserted == a.i || a.off == 0 && (b.len < a.len || b.len == a.len && !before))) {\n            // If there's a change in B that comes before the next change in\n            // A (ordered by start pos, then len, then before flag), skip\n            // that (and process any changes in A it covers).\n            let len = b.len;\n            addSection(sections, b.ins, -1);\n            while (len) {\n                let piece = Math.min(a.len, len);\n                if (a.ins >= 0 && inserted < a.i && a.len <= piece) {\n                    addSection(sections, 0, a.ins);\n                    if (insert)\n                        addInsert(insert, sections, a.text);\n                    inserted = a.i;\n                }\n                a.forward(piece);\n                len -= piece;\n            }\n            b.next();\n        }\n        else if (a.ins >= 0) {\n            // Process the part of a change in A up to the start of the next\n            // non-deletion change in B (if overlapping).\n            let len = 0, left = a.len;\n            while (left) {\n                if (b.ins == -1) {\n                    let piece = Math.min(left, b.len);\n                    len += piece;\n                    left -= piece;\n                    b.forward(piece);\n                }\n                else if (b.ins == 0 && b.len < left) {\n                    left -= b.len;\n                    b.next();\n                }\n                else {\n                    break;\n                }\n            }\n            addSection(sections, len, inserted < a.i ? a.ins : 0);\n            if (insert && inserted < a.i)\n                addInsert(insert, sections, a.text);\n            inserted = a.i;\n            a.forward(a.len - left);\n        }\n        else if (a.done && b.done) {\n            return insert ? ChangeSet.createSet(sections, insert) : ChangeDesc.create(sections);\n        }\n        else {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n    }\n}\nfunction composeSets(setA, setB, mkSet = false) {\n    let sections = [];\n    let insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    for (let open = false;;) {\n        if (a.done && b.done) {\n            return insert ? ChangeSet.createSet(sections, insert) : ChangeDesc.create(sections);\n        }\n        else if (a.ins == 0) { // Deletion in A\n            addSection(sections, a.len, 0, open);\n            a.next();\n        }\n        else if (b.len == 0 && !b.done) { // Insertion in B\n            addSection(sections, 0, b.ins, open);\n            if (insert)\n                addInsert(insert, sections, b.text);\n            b.next();\n        }\n        else if (a.done || b.done) {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n        else {\n            let len = Math.min(a.len2, b.len), sectionLen = sections.length;\n            if (a.ins == -1) {\n                let insB = b.ins == -1 ? -1 : b.off ? 0 : b.ins;\n                addSection(sections, len, insB, open);\n                if (insert && insB)\n                    addInsert(insert, sections, b.text);\n            }\n            else if (b.ins == -1) {\n                addSection(sections, a.off ? 0 : a.len, len, open);\n                if (insert)\n                    addInsert(insert, sections, a.textBit(len));\n            }\n            else {\n                addSection(sections, a.off ? 0 : a.len, b.off ? 0 : b.ins, open);\n                if (insert && !b.off)\n                    addInsert(insert, sections, b.text);\n            }\n            open = (a.ins > len || b.ins >= 0 && b.len > len) && (open || sections.length > sectionLen);\n            a.forward2(len);\n            b.forward(len);\n        }\n    }\n}\nclass SectionIter {\n    constructor(set) {\n        this.set = set;\n        this.i = 0;\n        this.next();\n    }\n    next() {\n        let { sections } = this.set;\n        if (this.i < sections.length) {\n            this.len = sections[this.i++];\n            this.ins = sections[this.i++];\n        }\n        else {\n            this.len = 0;\n            this.ins = -2;\n        }\n        this.off = 0;\n    }\n    get done() { return this.ins == -2; }\n    get len2() { return this.ins < 0 ? this.len : this.ins; }\n    get text() {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length ? Text.empty : inserted[index];\n    }\n    textBit(len) {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length && !len ? Text.empty\n            : inserted[index].slice(this.off, len == null ? undefined : this.off + len);\n    }\n    forward(len) {\n        if (len == this.len)\n            this.next();\n        else {\n            this.len -= len;\n            this.off += len;\n        }\n    }\n    forward2(len) {\n        if (this.ins == -1)\n            this.forward(len);\n        else if (len == this.ins)\n            this.next();\n        else {\n            this.ins -= len;\n            this.off += len;\n        }\n    }\n}\n\n/**\nA single selection range. When\n[`allowMultipleSelections`](https://codemirror.net/6/docs/ref/#state.EditorState^allowMultipleSelections)\nis enabled, a [selection](https://codemirror.net/6/docs/ref/#state.EditorSelection) may hold\nmultiple ranges. By default, selections hold exactly one range.\n*/\nclass SelectionRange {\n    constructor(\n    /**\n    The lower boundary of the range.\n    */\n    from, \n    /**\n    The upper boundary of the range.\n    */\n    to, flags) {\n        this.from = from;\n        this.to = to;\n        this.flags = flags;\n    }\n    /**\n    The anchor of the range\u2014the side that doesn't move when you\n    extend it.\n    */\n    get anchor() { return this.flags & 32 /* RangeFlag.Inverted */ ? this.to : this.from; }\n    /**\n    The head of the range, which is moved when the range is\n    [extended](https://codemirror.net/6/docs/ref/#state.SelectionRange.extend).\n    */\n    get head() { return this.flags & 32 /* RangeFlag.Inverted */ ? this.from : this.to; }\n    /**\n    True when `anchor` and `head` are at the same position.\n    */\n    get empty() { return this.from == this.to; }\n    /**\n    If this is a cursor that is explicitly associated with the\n    character on one of its sides, this returns the side. -1 means\n    the character before its position, 1 the character after, and 0\n    means no association.\n    */\n    get assoc() { return this.flags & 8 /* RangeFlag.AssocBefore */ ? -1 : this.flags & 16 /* RangeFlag.AssocAfter */ ? 1 : 0; }\n    /**\n    The bidirectional text level associated with this cursor, if\n    any.\n    */\n    get bidiLevel() {\n        let level = this.flags & 7 /* RangeFlag.BidiLevelMask */;\n        return level == 7 ? null : level;\n    }\n    /**\n    The goal column (stored vertical offset) associated with a\n    cursor. This is used to preserve the vertical position when\n    [moving](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) across\n    lines of different length.\n    */\n    get goalColumn() {\n        let value = this.flags >> 6 /* RangeFlag.GoalColumnOffset */;\n        return value == 16777215 /* RangeFlag.NoGoalColumn */ ? undefined : value;\n    }\n    /**\n    Map this range through a change, producing a valid range in the\n    updated document.\n    */\n    map(change, assoc = -1) {\n        let from, to;\n        if (this.empty) {\n            from = to = change.mapPos(this.from, assoc);\n        }\n        else {\n            from = change.mapPos(this.from, 1);\n            to = change.mapPos(this.to, -1);\n        }\n        return from == this.from && to == this.to ? this : new SelectionRange(from, to, this.flags);\n    }\n    /**\n    Extend this range to cover at least `from` to `to`.\n    */\n    extend(from, to = from) {\n        if (from <= this.anchor && to >= this.anchor)\n            return EditorSelection.range(from, to);\n        let head = Math.abs(from - this.anchor) > Math.abs(to - this.anchor) ? from : to;\n        return EditorSelection.range(this.anchor, head);\n    }\n    /**\n    Compare this range to another range.\n    */\n    eq(other, includeAssoc = false) {\n        return this.anchor == other.anchor && this.head == other.head &&\n            (!includeAssoc || !this.empty || this.assoc == other.assoc);\n    }\n    /**\n    Return a JSON-serializable object representing the range.\n    */\n    toJSON() { return { anchor: this.anchor, head: this.head }; }\n    /**\n    Convert a JSON representation of a range to a `SelectionRange`\n    instance.\n    */\n    static fromJSON(json) {\n        if (!json || typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid JSON representation for SelectionRange\");\n        return EditorSelection.range(json.anchor, json.head);\n    }\n    /**\n    @internal\n    */\n    static create(from, to, flags) {\n        return new SelectionRange(from, to, flags);\n    }\n}\n/**\nAn editor selection holds one or more selection ranges.\n*/\nclass EditorSelection {\n    constructor(\n    /**\n    The ranges in the selection, sorted by position. Ranges cannot\n    overlap (but they may touch, if they aren't empty).\n    */\n    ranges, \n    /**\n    The index of the _main_ range in the selection (which is\n    usually the range that was added last).\n    */\n    mainIndex) {\n        this.ranges = ranges;\n        this.mainIndex = mainIndex;\n    }\n    /**\n    Map a selection through a change. Used to adjust the selection\n    position for changes.\n    */\n    map(change, assoc = -1) {\n        if (change.empty)\n            return this;\n        return EditorSelection.create(this.ranges.map(r => r.map(change, assoc)), this.mainIndex);\n    }\n    /**\n    Compare this selection to another selection. By default, ranges\n    are compared only by position. When `includeAssoc` is true,\n    cursor ranges must also have the same\n    [`assoc`](https://codemirror.net/6/docs/ref/#state.SelectionRange.assoc) value.\n    */\n    eq(other, includeAssoc = false) {\n        if (this.ranges.length != other.ranges.length ||\n            this.mainIndex != other.mainIndex)\n            return false;\n        for (let i = 0; i < this.ranges.length; i++)\n            if (!this.ranges[i].eq(other.ranges[i], includeAssoc))\n                return false;\n        return true;\n    }\n    /**\n    Get the primary selection range. Usually, you should make sure\n    your code applies to _all_ ranges, by using methods like\n    [`changeByRange`](https://codemirror.net/6/docs/ref/#state.EditorState.changeByRange).\n    */\n    get main() { return this.ranges[this.mainIndex]; }\n    /**\n    Make sure the selection only has one range. Returns a selection\n    holding only the main range from this selection.\n    */\n    asSingle() {\n        return this.ranges.length == 1 ? this : new EditorSelection([this.main], 0);\n    }\n    /**\n    Extend this selection with an extra range.\n    */\n    addRange(range, main = true) {\n        return EditorSelection.create([range].concat(this.ranges), main ? 0 : this.mainIndex + 1);\n    }\n    /**\n    Replace a given range with another range, and then normalize the\n    selection to merge and sort ranges if necessary.\n    */\n    replaceRange(range, which = this.mainIndex) {\n        let ranges = this.ranges.slice();\n        ranges[which] = range;\n        return EditorSelection.create(ranges, this.mainIndex);\n    }\n    /**\n    Convert this selection to an object that can be serialized to\n    JSON.\n    */\n    toJSON() {\n        return { ranges: this.ranges.map(r => r.toJSON()), main: this.mainIndex };\n    }\n    /**\n    Create a selection from a JSON representation.\n    */\n    static fromJSON(json) {\n        if (!json || !Array.isArray(json.ranges) || typeof json.main != \"number\" || json.main >= json.ranges.length)\n            throw new RangeError(\"Invalid JSON representation for EditorSelection\");\n        return new EditorSelection(json.ranges.map((r) => SelectionRange.fromJSON(r)), json.main);\n    }\n    /**\n    Create a selection holding a single range.\n    */\n    static single(anchor, head = anchor) {\n        return new EditorSelection([EditorSelection.range(anchor, head)], 0);\n    }\n    /**\n    Sort and merge the given set of ranges, creating a valid\n    selection.\n    */\n    static create(ranges, mainIndex = 0) {\n        if (ranges.length == 0)\n            throw new RangeError(\"A selection needs at least one range\");\n        for (let pos = 0, i = 0; i < ranges.length; i++) {\n            let range = ranges[i];\n            if (range.empty ? range.from <= pos : range.from < pos)\n                return EditorSelection.normalized(ranges.slice(), mainIndex);\n            pos = range.to;\n        }\n        return new EditorSelection(ranges, mainIndex);\n    }\n    /**\n    Create a cursor selection range at the given position. You can\n    safely ignore the optional arguments in most situations.\n    */\n    static cursor(pos, assoc = 0, bidiLevel, goalColumn) {\n        return SelectionRange.create(pos, pos, (assoc == 0 ? 0 : assoc < 0 ? 8 /* RangeFlag.AssocBefore */ : 16 /* RangeFlag.AssocAfter */) |\n            (bidiLevel == null ? 7 : Math.min(6, bidiLevel)) |\n            ((goalColumn !== null && goalColumn !== void 0 ? goalColumn : 16777215 /* RangeFlag.NoGoalColumn */) << 6 /* RangeFlag.GoalColumnOffset */));\n    }\n    /**\n    Create a selection range.\n    */\n    static range(anchor, head, goalColumn, bidiLevel) {\n        let flags = ((goalColumn !== null && goalColumn !== void 0 ? goalColumn : 16777215 /* RangeFlag.NoGoalColumn */) << 6 /* RangeFlag.GoalColumnOffset */) |\n            (bidiLevel == null ? 7 : Math.min(6, bidiLevel));\n        return head < anchor ? SelectionRange.create(head, anchor, 32 /* RangeFlag.Inverted */ | 16 /* RangeFlag.AssocAfter */ | flags)\n            : SelectionRange.create(anchor, head, (head > anchor ? 8 /* RangeFlag.AssocBefore */ : 0) | flags);\n    }\n    /**\n    @internal\n    */\n    static normalized(ranges, mainIndex = 0) {\n        let main = ranges[mainIndex];\n        ranges.sort((a, b) => a.from - b.from);\n        mainIndex = ranges.indexOf(main);\n        for (let i = 1; i < ranges.length; i++) {\n            let range = ranges[i], prev = ranges[i - 1];\n            if (range.empty ? range.from <= prev.to : range.from < prev.to) {\n                let from = prev.from, to = Math.max(range.to, prev.to);\n                if (i <= mainIndex)\n                    mainIndex--;\n                ranges.splice(--i, 2, range.anchor > range.head ? EditorSelection.range(to, from) : EditorSelection.range(from, to));\n            }\n        }\n        return new EditorSelection(ranges, mainIndex);\n    }\n}\nfunction checkSelection(selection, docLength) {\n    for (let range of selection.ranges)\n        if (range.to > docLength)\n            throw new RangeError(\"Selection points outside of document\");\n}\n\nlet nextID = 0;\n/**\nA facet is a labeled value that is associated with an editor\nstate. It takes inputs from any number of extensions, and combines\nthose into a single output value.\n\nExamples of uses of facets are the [tab\nsize](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize), [editor\nattributes](https://codemirror.net/6/docs/ref/#view.EditorView^editorAttributes), and [update\nlisteners](https://codemirror.net/6/docs/ref/#view.EditorView^updateListener).\n\nNote that `Facet` instances can be used anywhere where\n[`FacetReader`](https://codemirror.net/6/docs/ref/#state.FacetReader) is expected.\n*/\nclass Facet {\n    constructor(\n    /**\n    @internal\n    */\n    combine, \n    /**\n    @internal\n    */\n    compareInput, \n    /**\n    @internal\n    */\n    compare, isStatic, enables) {\n        this.combine = combine;\n        this.compareInput = compareInput;\n        this.compare = compare;\n        this.isStatic = isStatic;\n        /**\n        @internal\n        */\n        this.id = nextID++;\n        this.default = combine([]);\n        this.extensions = typeof enables == \"function\" ? enables(this) : enables;\n    }\n    /**\n    Returns a facet reader for this facet, which can be used to\n    [read](https://codemirror.net/6/docs/ref/#state.EditorState.facet) it but not to define values for it.\n    */\n    get reader() { return this; }\n    /**\n    Define a new facet.\n    */\n    static define(config = {}) {\n        return new Facet(config.combine || ((a) => a), config.compareInput || ((a, b) => a === b), config.compare || (!config.combine ? sameArray : (a, b) => a === b), !!config.static, config.enables);\n    }\n    /**\n    Returns an extension that adds the given value to this facet.\n    */\n    of(value) {\n        return new FacetProvider([], this, 0 /* Provider.Static */, value);\n    }\n    /**\n    Create an extension that computes a value for the facet from a\n    state. You must take care to declare the parts of the state that\n    this value depends on, since your function is only called again\n    for a new state when one of those parts changed.\n    \n    In cases where your value depends only on a single field, you'll\n    want to use the [`from`](https://codemirror.net/6/docs/ref/#state.Facet.from) method instead.\n    */\n    compute(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 1 /* Provider.Single */, get);\n    }\n    /**\n    Create an extension that computes zero or more values for this\n    facet from a state.\n    */\n    computeN(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 2 /* Provider.Multi */, get);\n    }\n    from(field, get) {\n        if (!get)\n            get = x => x;\n        return this.compute([field], state => get(state.field(field)));\n    }\n}\nfunction sameArray(a, b) {\n    return a == b || a.length == b.length && a.every((e, i) => e === b[i]);\n}\nclass FacetProvider {\n    constructor(dependencies, facet, type, value) {\n        this.dependencies = dependencies;\n        this.facet = facet;\n        this.type = type;\n        this.value = value;\n        this.id = nextID++;\n    }\n    dynamicSlot(addresses) {\n        var _a;\n        let getter = this.value;\n        let compare = this.facet.compareInput;\n        let id = this.id, idx = addresses[id] >> 1, multi = this.type == 2 /* Provider.Multi */;\n        let depDoc = false, depSel = false, depAddrs = [];\n        for (let dep of this.dependencies) {\n            if (dep == \"doc\")\n                depDoc = true;\n            else if (dep == \"selection\")\n                depSel = true;\n            else if ((((_a = addresses[dep.id]) !== null && _a !== void 0 ? _a : 1) & 1) == 0)\n                depAddrs.push(addresses[dep.id]);\n        }\n        return {\n            create(state) {\n                state.values[idx] = getter(state);\n                return 1 /* SlotStatus.Changed */;\n            },\n            update(state, tr) {\n                if ((depDoc && tr.docChanged) || (depSel && (tr.docChanged || tr.selection)) || ensureAll(state, depAddrs)) {\n                    let newVal = getter(state);\n                    if (multi ? !compareArray(newVal, state.values[idx], compare) : !compare(newVal, state.values[idx])) {\n                        state.values[idx] = newVal;\n                        return 1 /* SlotStatus.Changed */;\n                    }\n                }\n                return 0;\n            },\n            reconfigure: (state, oldState) => {\n                let newVal, oldAddr = oldState.config.address[id];\n                if (oldAddr != null) {\n                    let oldVal = getAddr(oldState, oldAddr);\n                    if (this.dependencies.every(dep => {\n                        return dep instanceof Facet ? oldState.facet(dep) === state.facet(dep) :\n                            dep instanceof StateField ? oldState.field(dep, false) == state.field(dep, false) : true;\n                    }) || (multi ? compareArray(newVal = getter(state), oldVal, compare) : compare(newVal = getter(state), oldVal))) {\n                        state.values[idx] = oldVal;\n                        return 0;\n                    }\n                }\n                else {\n                    newVal = getter(state);\n                }\n                state.values[idx] = newVal;\n                return 1 /* SlotStatus.Changed */;\n            }\n        };\n    }\n}\nfunction compareArray(a, b, compare) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!compare(a[i], b[i]))\n            return false;\n    return true;\n}\nfunction ensureAll(state, addrs) {\n    let changed = false;\n    for (let addr of addrs)\n        if (ensureAddr(state, addr) & 1 /* SlotStatus.Changed */)\n            changed = true;\n    return changed;\n}\nfunction dynamicFacetSlot(addresses, facet, providers) {\n    let providerAddrs = providers.map(p => addresses[p.id]);\n    let providerTypes = providers.map(p => p.type);\n    let dynamic = providerAddrs.filter(p => !(p & 1));\n    let idx = addresses[facet.id] >> 1;\n    function get(state) {\n        let values = [];\n        for (let i = 0; i < providerAddrs.length; i++) {\n            let value = getAddr(state, providerAddrs[i]);\n            if (providerTypes[i] == 2 /* Provider.Multi */)\n                for (let val of value)\n                    values.push(val);\n            else\n                values.push(value);\n        }\n        return facet.combine(values);\n    }\n    return {\n        create(state) {\n            for (let addr of providerAddrs)\n                ensureAddr(state, addr);\n            state.values[idx] = get(state);\n            return 1 /* SlotStatus.Changed */;\n        },\n        update(state, tr) {\n            if (!ensureAll(state, dynamic))\n                return 0;\n            let value = get(state);\n            if (facet.compare(value, state.values[idx]))\n                return 0;\n            state.values[idx] = value;\n            return 1 /* SlotStatus.Changed */;\n        },\n        reconfigure(state, oldState) {\n            let depChanged = ensureAll(state, providerAddrs);\n            let oldProviders = oldState.config.facets[facet.id], oldValue = oldState.facet(facet);\n            if (oldProviders && !depChanged && sameArray(providers, oldProviders)) {\n                state.values[idx] = oldValue;\n                return 0;\n            }\n            let value = get(state);\n            if (facet.compare(value, oldValue)) {\n                state.values[idx] = oldValue;\n                return 0;\n            }\n            state.values[idx] = value;\n            return 1 /* SlotStatus.Changed */;\n        }\n    };\n}\nconst initField = /*@__PURE__*/Facet.define({ static: true });\n/**\nFields can store additional information in an editor state, and\nkeep it in sync with the rest of the state.\n*/\nclass StateField {\n    constructor(\n    /**\n    @internal\n    */\n    id, createF, updateF, compareF, \n    /**\n    @internal\n    */\n    spec) {\n        this.id = id;\n        this.createF = createF;\n        this.updateF = updateF;\n        this.compareF = compareF;\n        this.spec = spec;\n        /**\n        @internal\n        */\n        this.provides = undefined;\n    }\n    /**\n    Define a state field.\n    */\n    static define(config) {\n        let field = new StateField(nextID++, config.create, config.update, config.compare || ((a, b) => a === b), config);\n        if (config.provide)\n            field.provides = config.provide(field);\n        return field;\n    }\n    create(state) {\n        let init = state.facet(initField).find(i => i.field == this);\n        return ((init === null || init === void 0 ? void 0 : init.create) || this.createF)(state);\n    }\n    /**\n    @internal\n    */\n    slot(addresses) {\n        let idx = addresses[this.id] >> 1;\n        return {\n            create: (state) => {\n                state.values[idx] = this.create(state);\n                return 1 /* SlotStatus.Changed */;\n            },\n            update: (state, tr) => {\n                let oldVal = state.values[idx];\n                let value = this.updateF(oldVal, tr);\n                if (this.compareF(oldVal, value))\n                    return 0;\n                state.values[idx] = value;\n                return 1 /* SlotStatus.Changed */;\n            },\n            reconfigure: (state, oldState) => {\n                let init = state.facet(initField), oldInit = oldState.facet(initField), reInit;\n                if ((reInit = init.find(i => i.field == this)) && reInit != oldInit.find(i => i.field == this)) {\n                    state.values[idx] = reInit.create(state);\n                    return 1 /* SlotStatus.Changed */;\n                }\n                if (oldState.config.address[this.id] != null) {\n                    state.values[idx] = oldState.field(this);\n                    return 0;\n                }\n                state.values[idx] = this.create(state);\n                return 1 /* SlotStatus.Changed */;\n            }\n        };\n    }\n    /**\n    Returns an extension that enables this field and overrides the\n    way it is initialized. Can be useful when you need to provide a\n    non-default starting value for the field.\n    */\n    init(create) {\n        return [this, initField.of({ field: this, create })];\n    }\n    /**\n    State field instances can be used as\n    [`Extension`](https://codemirror.net/6/docs/ref/#state.Extension) values to enable the field in a\n    given state.\n    */\n    get extension() { return this; }\n}\nconst Prec_ = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };\nfunction prec(value) {\n    return (ext) => new PrecExtension(ext, value);\n}\n/**\nBy default extensions are registered in the order they are found\nin the flattened form of nested array that was provided.\nIndividual extension values can be assigned a precedence to\noverride this. Extensions that do not have a precedence set get\nthe precedence of the nearest parent with a precedence, or\n[`default`](https://codemirror.net/6/docs/ref/#state.Prec.default) if there is no such parent. The\nfinal ordering of extensions is determined by first sorting by\nprecedence and then by order within each precedence.\n*/\nconst Prec = {\n    /**\n    The highest precedence level, for extensions that should end up\n    near the start of the precedence ordering.\n    */\n    highest: /*@__PURE__*/prec(Prec_.highest),\n    /**\n    A higher-than-default precedence, for extensions that should\n    come before those with default precedence.\n    */\n    high: /*@__PURE__*/prec(Prec_.high),\n    /**\n    The default precedence, which is also used for extensions\n    without an explicit precedence.\n    */\n    default: /*@__PURE__*/prec(Prec_.default),\n    /**\n    A lower-than-default precedence.\n    */\n    low: /*@__PURE__*/prec(Prec_.low),\n    /**\n    The lowest precedence level. Meant for things that should end up\n    near the end of the extension order.\n    */\n    lowest: /*@__PURE__*/prec(Prec_.lowest)\n};\nclass PrecExtension {\n    constructor(inner, prec) {\n        this.inner = inner;\n        this.prec = prec;\n    }\n}\n/**\nExtension compartments can be used to make a configuration\ndynamic. By [wrapping](https://codemirror.net/6/docs/ref/#state.Compartment.of) part of your\nconfiguration in a compartment, you can later\n[replace](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure) that part through a\ntransaction.\n*/\nclass Compartment {\n    /**\n    Create an instance of this compartment to add to your [state\n    configuration](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions).\n    */\n    of(ext) { return new CompartmentInstance(this, ext); }\n    /**\n    Create an [effect](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) that\n    reconfigures this compartment.\n    */\n    reconfigure(content) {\n        return Compartment.reconfigure.of({ compartment: this, extension: content });\n    }\n    /**\n    Get the current content of the compartment in the state, or\n    `undefined` if it isn't present.\n    */\n    get(state) {\n        return state.config.compartments.get(this);\n    }\n}\nclass CompartmentInstance {\n    constructor(compartment, inner) {\n        this.compartment = compartment;\n        this.inner = inner;\n    }\n}\nclass Configuration {\n    constructor(base, compartments, dynamicSlots, address, staticValues, facets) {\n        this.base = base;\n        this.compartments = compartments;\n        this.dynamicSlots = dynamicSlots;\n        this.address = address;\n        this.staticValues = staticValues;\n        this.facets = facets;\n        this.statusTemplate = [];\n        while (this.statusTemplate.length < dynamicSlots.length)\n            this.statusTemplate.push(0 /* SlotStatus.Unresolved */);\n    }\n    staticFacet(facet) {\n        let addr = this.address[facet.id];\n        return addr == null ? facet.default : this.staticValues[addr >> 1];\n    }\n    static resolve(base, compartments, oldState) {\n        let fields = [];\n        let facets = Object.create(null);\n        let newCompartments = new Map();\n        for (let ext of flatten(base, compartments, newCompartments)) {\n            if (ext instanceof StateField)\n                fields.push(ext);\n            else\n                (facets[ext.facet.id] || (facets[ext.facet.id] = [])).push(ext);\n        }\n        let address = Object.create(null);\n        let staticValues = [];\n        let dynamicSlots = [];\n        for (let field of fields) {\n            address[field.id] = dynamicSlots.length << 1;\n            dynamicSlots.push(a => field.slot(a));\n        }\n        let oldFacets = oldState === null || oldState === void 0 ? void 0 : oldState.config.facets;\n        for (let id in facets) {\n            let providers = facets[id], facet = providers[0].facet;\n            let oldProviders = oldFacets && oldFacets[id] || [];\n            if (providers.every(p => p.type == 0 /* Provider.Static */)) {\n                address[facet.id] = (staticValues.length << 1) | 1;\n                if (sameArray(oldProviders, providers)) {\n                    staticValues.push(oldState.facet(facet));\n                }\n                else {\n                    let value = facet.combine(providers.map(p => p.value));\n                    staticValues.push(oldState && facet.compare(value, oldState.facet(facet)) ? oldState.facet(facet) : value);\n                }\n            }\n            else {\n                for (let p of providers) {\n                    if (p.type == 0 /* Provider.Static */) {\n                        address[p.id] = (staticValues.length << 1) | 1;\n                        staticValues.push(p.value);\n                    }\n                    else {\n                        address[p.id] = dynamicSlots.length << 1;\n                        dynamicSlots.push(a => p.dynamicSlot(a));\n                    }\n                }\n                address[facet.id] = dynamicSlots.length << 1;\n                dynamicSlots.push(a => dynamicFacetSlot(a, facet, providers));\n            }\n        }\n        let dynamic = dynamicSlots.map(f => f(address));\n        return new Configuration(base, newCompartments, dynamic, address, staticValues, facets);\n    }\n}\nfunction flatten(extension, compartments, newCompartments) {\n    let result = [[], [], [], [], []];\n    let seen = new Map();\n    function inner(ext, prec) {\n        let known = seen.get(ext);\n        if (known != null) {\n            if (known <= prec)\n                return;\n            let found = result[known].indexOf(ext);\n            if (found > -1)\n                result[known].splice(found, 1);\n            if (ext instanceof CompartmentInstance)\n                newCompartments.delete(ext.compartment);\n        }\n        seen.set(ext, prec);\n        if (Array.isArray(ext)) {\n            for (let e of ext)\n                inner(e, prec);\n        }\n        else if (ext instanceof CompartmentInstance) {\n            if (newCompartments.has(ext.compartment))\n                throw new RangeError(`Duplicate use of compartment in extensions`);\n            let content = compartments.get(ext.compartment) || ext.inner;\n            newCompartments.set(ext.compartment, content);\n            inner(content, prec);\n        }\n        else if (ext instanceof PrecExtension) {\n            inner(ext.inner, ext.prec);\n        }\n        else if (ext instanceof StateField) {\n            result[prec].push(ext);\n            if (ext.provides)\n                inner(ext.provides, prec);\n        }\n        else if (ext instanceof FacetProvider) {\n            result[prec].push(ext);\n            if (ext.facet.extensions)\n                inner(ext.facet.extensions, Prec_.default);\n        }\n        else {\n            let content = ext.extension;\n            if (!content)\n                throw new Error(`Unrecognized extension value in extension set (${ext}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);\n            inner(content, prec);\n        }\n    }\n    inner(extension, Prec_.default);\n    return result.reduce((a, b) => a.concat(b));\n}\nfunction ensureAddr(state, addr) {\n    if (addr & 1)\n        return 2 /* SlotStatus.Computed */;\n    let idx = addr >> 1;\n    let status = state.status[idx];\n    if (status == 4 /* SlotStatus.Computing */)\n        throw new Error(\"Cyclic dependency between fields and/or facets\");\n    if (status & 2 /* SlotStatus.Computed */)\n        return status;\n    state.status[idx] = 4 /* SlotStatus.Computing */;\n    let changed = state.computeSlot(state, state.config.dynamicSlots[idx]);\n    return state.status[idx] = 2 /* SlotStatus.Computed */ | changed;\n}\nfunction getAddr(state, addr) {\n    return addr & 1 ? state.config.staticValues[addr >> 1] : state.values[addr >> 1];\n}\n\nconst languageData = /*@__PURE__*/Facet.define();\nconst allowMultipleSelections = /*@__PURE__*/Facet.define({\n    combine: values => values.some(v => v),\n    static: true\n});\nconst lineSeparator = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : undefined,\n    static: true\n});\nconst changeFilter = /*@__PURE__*/Facet.define();\nconst transactionFilter = /*@__PURE__*/Facet.define();\nconst transactionExtender = /*@__PURE__*/Facet.define();\nconst readOnly = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : false\n});\n\n/**\nAnnotations are tagged values that are used to add metadata to\ntransactions in an extensible way. They should be used to model\nthings that effect the entire transaction (such as its [time\nstamp](https://codemirror.net/6/docs/ref/#state.Transaction^time) or information about its\n[origin](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent)). For effects that happen\n_alongside_ the other changes made by the transaction, [state\neffects](https://codemirror.net/6/docs/ref/#state.StateEffect) are more appropriate.\n*/\nclass Annotation {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The annotation type.\n    */\n    type, \n    /**\n    The value of this annotation.\n    */\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /**\n    Define a new type of annotation.\n    */\n    static define() { return new AnnotationType(); }\n}\n/**\nMarker that identifies a type of [annotation](https://codemirror.net/6/docs/ref/#state.Annotation).\n*/\nclass AnnotationType {\n    /**\n    Create an instance of this annotation.\n    */\n    of(value) { return new Annotation(this, value); }\n}\n/**\nRepresentation of a type of state effect. Defined with\n[`StateEffect.define`](https://codemirror.net/6/docs/ref/#state.StateEffect^define).\n*/\nclass StateEffectType {\n    /**\n    @internal\n    */\n    constructor(\n    // The `any` types in these function types are there to work\n    // around TypeScript issue #37631, where the type guard on\n    // `StateEffect.is` mysteriously stops working when these properly\n    // have type `Value`.\n    /**\n    @internal\n    */\n    map) {\n        this.map = map;\n    }\n    /**\n    Create a [state effect](https://codemirror.net/6/docs/ref/#state.StateEffect) instance of this\n    type.\n    */\n    of(value) { return new StateEffect(this, value); }\n}\n/**\nState effects can be used to represent additional effects\nassociated with a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction.effects). They\nare often useful to model changes to custom [state\nfields](https://codemirror.net/6/docs/ref/#state.StateField), when those changes aren't implicit in\ndocument or selection changes.\n*/\nclass StateEffect {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    type, \n    /**\n    The value of this effect.\n    */\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /**\n    Map this effect through a position mapping. Will return\n    `undefined` when that ends up deleting the effect.\n    */\n    map(mapping) {\n        let mapped = this.type.map(this.value, mapping);\n        return mapped === undefined ? undefined : mapped == this.value ? this : new StateEffect(this.type, mapped);\n    }\n    /**\n    Tells you whether this effect object is of a given\n    [type](https://codemirror.net/6/docs/ref/#state.StateEffectType).\n    */\n    is(type) { return this.type == type; }\n    /**\n    Define a new effect type. The type parameter indicates the type\n    of values that his effect holds. It should be a type that\n    doesn't include `undefined`, since that is used in\n    [mapping](https://codemirror.net/6/docs/ref/#state.StateEffect.map) to indicate that an effect is\n    removed.\n    */\n    static define(spec = {}) {\n        return new StateEffectType(spec.map || (v => v));\n    }\n    /**\n    Map an array of effects through a change set.\n    */\n    static mapEffects(effects, mapping) {\n        if (!effects.length)\n            return effects;\n        let result = [];\n        for (let effect of effects) {\n            let mapped = effect.map(mapping);\n            if (mapped)\n                result.push(mapped);\n        }\n        return result;\n    }\n}\n/**\nThis effect can be used to reconfigure the root extensions of\nthe editor. Doing this will discard any extensions\n[appended](https://codemirror.net/6/docs/ref/#state.StateEffect^appendConfig), but does not reset\nthe content of [reconfigured](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure)\ncompartments.\n*/\nStateEffect.reconfigure = /*@__PURE__*/StateEffect.define();\n/**\nAppend extensions to the top-level configuration of the editor.\n*/\nStateEffect.appendConfig = /*@__PURE__*/StateEffect.define();\n/**\nChanges to the editor state are grouped into transactions.\nTypically, a user action creates a single transaction, which may\ncontain any number of document changes, may change the selection,\nor have other effects. Create a transaction by calling\n[`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update), or immediately\ndispatch one by calling\n[`EditorView.dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch).\n*/\nclass Transaction {\n    constructor(\n    /**\n    The state from which the transaction starts.\n    */\n    startState, \n    /**\n    The document changes made by this transaction.\n    */\n    changes, \n    /**\n    The selection set by this transaction, or undefined if it\n    doesn't explicitly set a selection.\n    */\n    selection, \n    /**\n    The effects added to the transaction.\n    */\n    effects, \n    /**\n    @internal\n    */\n    annotations, \n    /**\n    Whether the selection should be scrolled into view after this\n    transaction is dispatched.\n    */\n    scrollIntoView) {\n        this.startState = startState;\n        this.changes = changes;\n        this.selection = selection;\n        this.effects = effects;\n        this.annotations = annotations;\n        this.scrollIntoView = scrollIntoView;\n        /**\n        @internal\n        */\n        this._doc = null;\n        /**\n        @internal\n        */\n        this._state = null;\n        if (selection)\n            checkSelection(selection, changes.newLength);\n        if (!annotations.some((a) => a.type == Transaction.time))\n            this.annotations = annotations.concat(Transaction.time.of(Date.now()));\n    }\n    /**\n    @internal\n    */\n    static create(startState, changes, selection, effects, annotations, scrollIntoView) {\n        return new Transaction(startState, changes, selection, effects, annotations, scrollIntoView);\n    }\n    /**\n    The new document produced by the transaction. Contrary to\n    [`.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state)`.doc`, accessing this won't\n    force the entire new state to be computed right away, so it is\n    recommended that [transaction\n    filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) use this getter\n    when they need to look at the new document.\n    */\n    get newDoc() {\n        return this._doc || (this._doc = this.changes.apply(this.startState.doc));\n    }\n    /**\n    The new selection produced by the transaction. If\n    [`this.selection`](https://codemirror.net/6/docs/ref/#state.Transaction.selection) is undefined,\n    this will [map](https://codemirror.net/6/docs/ref/#state.EditorSelection.map) the start state's\n    current selection through the changes made by the transaction.\n    */\n    get newSelection() {\n        return this.selection || this.startState.selection.map(this.changes);\n    }\n    /**\n    The new state created by the transaction. Computed on demand\n    (but retained for subsequent access), so it is recommended not to\n    access it in [transaction\n    filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) when possible.\n    */\n    get state() {\n        if (!this._state)\n            this.startState.applyTransaction(this);\n        return this._state;\n    }\n    /**\n    Get the value of the given annotation type, if any.\n    */\n    annotation(type) {\n        for (let ann of this.annotations)\n            if (ann.type == type)\n                return ann.value;\n        return undefined;\n    }\n    /**\n    Indicates whether the transaction changed the document.\n    */\n    get docChanged() { return !this.changes.empty; }\n    /**\n    Indicates whether this transaction reconfigures the state\n    (through a [configuration compartment](https://codemirror.net/6/docs/ref/#state.Compartment) or\n    with a top-level configuration\n    [effect](https://codemirror.net/6/docs/ref/#state.StateEffect^reconfigure).\n    */\n    get reconfigured() { return this.startState.config != this.state.config; }\n    /**\n    Returns true if the transaction has a [user\n    event](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent) annotation that is equal to\n    or more specific than `event`. For example, if the transaction\n    has `\"select.pointer\"` as user event, `\"select\"` and\n    `\"select.pointer\"` will match it.\n    */\n    isUserEvent(event) {\n        let e = this.annotation(Transaction.userEvent);\n        return !!(e && (e == event || e.length > event.length && e.slice(0, event.length) == event && e[event.length] == \".\"));\n    }\n}\n/**\nAnnotation used to store transaction timestamps. Automatically\nadded to every transaction, holding `Date.now()`.\n*/\nTransaction.time = /*@__PURE__*/Annotation.define();\n/**\nAnnotation used to associate a transaction with a user interface\nevent. Holds a string identifying the event, using a\ndot-separated format to support attaching more specific\ninformation. The events used by the core libraries are:\n\n - `\"input\"` when content is entered\n   - `\"input.type\"` for typed input\n     - `\"input.type.compose\"` for composition\n   - `\"input.paste\"` for pasted input\n   - `\"input.drop\"` when adding content with drag-and-drop\n   - `\"input.complete\"` when autocompleting\n - `\"delete\"` when the user deletes content\n   - `\"delete.selection\"` when deleting the selection\n   - `\"delete.forward\"` when deleting forward from the selection\n   - `\"delete.backward\"` when deleting backward from the selection\n   - `\"delete.cut\"` when cutting to the clipboard\n - `\"move\"` when content is moved\n   - `\"move.drop\"` when content is moved within the editor through drag-and-drop\n - `\"select\"` when explicitly changing the selection\n   - `\"select.pointer\"` when selecting with a mouse or other pointing device\n - `\"undo\"` and `\"redo\"` for history actions\n\nUse [`isUserEvent`](https://codemirror.net/6/docs/ref/#state.Transaction.isUserEvent) to check\nwhether the annotation matches a given event.\n*/\nTransaction.userEvent = /*@__PURE__*/Annotation.define();\n/**\nAnnotation indicating whether a transaction should be added to\nthe undo history or not.\n*/\nTransaction.addToHistory = /*@__PURE__*/Annotation.define();\n/**\nAnnotation indicating (when present and true) that a transaction\nrepresents a change made by some other actor, not the user. This\nis used, for example, to tag other people's changes in\ncollaborative editing.\n*/\nTransaction.remote = /*@__PURE__*/Annotation.define();\nfunction joinRanges(a, b) {\n    let result = [];\n    for (let iA = 0, iB = 0;;) {\n        let from, to;\n        if (iA < a.length && (iB == b.length || b[iB] >= a[iA])) {\n            from = a[iA++];\n            to = a[iA++];\n        }\n        else if (iB < b.length) {\n            from = b[iB++];\n            to = b[iB++];\n        }\n        else\n            return result;\n        if (!result.length || result[result.length - 1] < from)\n            result.push(from, to);\n        else if (result[result.length - 1] < to)\n            result[result.length - 1] = to;\n    }\n}\nfunction mergeTransaction(a, b, sequential) {\n    var _a;\n    let mapForA, mapForB, changes;\n    if (sequential) {\n        mapForA = b.changes;\n        mapForB = ChangeSet.empty(b.changes.length);\n        changes = a.changes.compose(b.changes);\n    }\n    else {\n        mapForA = b.changes.map(a.changes);\n        mapForB = a.changes.mapDesc(b.changes, true);\n        changes = a.changes.compose(mapForA);\n    }\n    return {\n        changes,\n        selection: b.selection ? b.selection.map(mapForB) : (_a = a.selection) === null || _a === void 0 ? void 0 : _a.map(mapForA),\n        effects: StateEffect.mapEffects(a.effects, mapForA).concat(StateEffect.mapEffects(b.effects, mapForB)),\n        annotations: a.annotations.length ? a.annotations.concat(b.annotations) : b.annotations,\n        scrollIntoView: a.scrollIntoView || b.scrollIntoView\n    };\n}\nfunction resolveTransactionInner(state, spec, docSize) {\n    let sel = spec.selection, annotations = asArray(spec.annotations);\n    if (spec.userEvent)\n        annotations = annotations.concat(Transaction.userEvent.of(spec.userEvent));\n    return {\n        changes: spec.changes instanceof ChangeSet ? spec.changes\n            : ChangeSet.of(spec.changes || [], docSize, state.facet(lineSeparator)),\n        selection: sel && (sel instanceof EditorSelection ? sel : EditorSelection.single(sel.anchor, sel.head)),\n        effects: asArray(spec.effects),\n        annotations,\n        scrollIntoView: !!spec.scrollIntoView\n    };\n}\nfunction resolveTransaction(state, specs, filter) {\n    let s = resolveTransactionInner(state, specs.length ? specs[0] : {}, state.doc.length);\n    if (specs.length && specs[0].filter === false)\n        filter = false;\n    for (let i = 1; i < specs.length; i++) {\n        if (specs[i].filter === false)\n            filter = false;\n        let seq = !!specs[i].sequential;\n        s = mergeTransaction(s, resolveTransactionInner(state, specs[i], seq ? s.changes.newLength : state.doc.length), seq);\n    }\n    let tr = Transaction.create(state, s.changes, s.selection, s.effects, s.annotations, s.scrollIntoView);\n    return extendTransaction(filter ? filterTransaction(tr) : tr);\n}\n// Finish a transaction by applying filters if necessary.\nfunction filterTransaction(tr) {\n    let state = tr.startState;\n    // Change filters\n    let result = true;\n    for (let filter of state.facet(changeFilter)) {\n        let value = filter(tr);\n        if (value === false) {\n            result = false;\n            break;\n        }\n        if (Array.isArray(value))\n            result = result === true ? value : joinRanges(result, value);\n    }\n    if (result !== true) {\n        let changes, back;\n        if (result === false) {\n            back = tr.changes.invertedDesc;\n            changes = ChangeSet.empty(state.doc.length);\n        }\n        else {\n            let filtered = tr.changes.filter(result);\n            changes = filtered.changes;\n            back = filtered.filtered.mapDesc(filtered.changes).invertedDesc;\n        }\n        tr = Transaction.create(state, changes, tr.selection && tr.selection.map(back), StateEffect.mapEffects(tr.effects, back), tr.annotations, tr.scrollIntoView);\n    }\n    // Transaction filters\n    let filters = state.facet(transactionFilter);\n    for (let i = filters.length - 1; i >= 0; i--) {\n        let filtered = filters[i](tr);\n        if (filtered instanceof Transaction)\n            tr = filtered;\n        else if (Array.isArray(filtered) && filtered.length == 1 && filtered[0] instanceof Transaction)\n            tr = filtered[0];\n        else\n            tr = resolveTransaction(state, asArray(filtered), false);\n    }\n    return tr;\n}\nfunction extendTransaction(tr) {\n    let state = tr.startState, extenders = state.facet(transactionExtender), spec = tr;\n    for (let i = extenders.length - 1; i >= 0; i--) {\n        let extension = extenders[i](tr);\n        if (extension && Object.keys(extension).length)\n            spec = mergeTransaction(spec, resolveTransactionInner(state, extension, tr.changes.newLength), true);\n    }\n    return spec == tr ? tr : Transaction.create(state, tr.changes, tr.selection, spec.effects, spec.annotations, spec.scrollIntoView);\n}\nconst none = [];\nfunction asArray(value) {\n    return value == null ? none : Array.isArray(value) ? value : [value];\n}\n\n/**\nThe categories produced by a [character\ncategorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer). These are used\ndo things like selecting by word.\n*/\nvar CharCategory = /*@__PURE__*/(function (CharCategory) {\n    /**\n    Word characters.\n    */\n    CharCategory[CharCategory[\"Word\"] = 0] = \"Word\";\n    /**\n    Whitespace.\n    */\n    CharCategory[CharCategory[\"Space\"] = 1] = \"Space\";\n    /**\n    Anything else.\n    */\n    CharCategory[CharCategory[\"Other\"] = 2] = \"Other\";\nreturn CharCategory})(CharCategory || (CharCategory = {}));\nconst nonASCIISingleCaseWordChar = /[\\u00df\\u0587\\u0590-\\u05f4\\u0600-\\u06ff\\u3040-\\u309f\\u30a0-\\u30ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\uac00-\\ud7af]/;\nlet wordChar;\ntry {\n    wordChar = /*@__PURE__*/new RegExp(\"[\\\\p{Alphabetic}\\\\p{Number}_]\", \"u\");\n}\ncatch (_) { }\nfunction hasWordChar(str) {\n    if (wordChar)\n        return wordChar.test(str);\n    for (let i = 0; i < str.length; i++) {\n        let ch = str[i];\n        if (/\\w/.test(ch) || ch > \"\\x80\" && (ch.toUpperCase() != ch.toLowerCase() || nonASCIISingleCaseWordChar.test(ch)))\n            return true;\n    }\n    return false;\n}\nfunction makeCategorizer(wordChars) {\n    return (char) => {\n        if (!/\\S/.test(char))\n            return CharCategory.Space;\n        if (hasWordChar(char))\n            return CharCategory.Word;\n        for (let i = 0; i < wordChars.length; i++)\n            if (char.indexOf(wordChars[i]) > -1)\n                return CharCategory.Word;\n        return CharCategory.Other;\n    };\n}\n\n/**\nThe editor state class is a persistent (immutable) data structure.\nTo update a state, you [create](https://codemirror.net/6/docs/ref/#state.EditorState.update) a\n[transaction](https://codemirror.net/6/docs/ref/#state.Transaction), which produces a _new_ state\ninstance, without modifying the original object.\n\nAs such, _never_ mutate properties of a state directly. That'll\njust break things.\n*/\nclass EditorState {\n    constructor(\n    /**\n    @internal\n    */\n    config, \n    /**\n    The current document.\n    */\n    doc, \n    /**\n    The current selection.\n    */\n    selection, \n    /**\n    @internal\n    */\n    values, computeSlot, tr) {\n        this.config = config;\n        this.doc = doc;\n        this.selection = selection;\n        this.values = values;\n        this.status = config.statusTemplate.slice();\n        this.computeSlot = computeSlot;\n        // Fill in the computed state immediately, so that further queries\n        // for it made during the update return this state\n        if (tr)\n            tr._state = this;\n        for (let i = 0; i < this.config.dynamicSlots.length; i++)\n            ensureAddr(this, i << 1);\n        this.computeSlot = null;\n    }\n    field(field, require = true) {\n        let addr = this.config.address[field.id];\n        if (addr == null) {\n            if (require)\n                throw new RangeError(\"Field is not present in this state\");\n            return undefined;\n        }\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /**\n    Create a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction) that updates this\n    state. Any number of [transaction specs](https://codemirror.net/6/docs/ref/#state.TransactionSpec)\n    can be passed. Unless\n    [`sequential`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.sequential) is set, the\n    [changes](https://codemirror.net/6/docs/ref/#state.TransactionSpec.changes) (if any) of each spec\n    are assumed to start in the _current_ document (not the document\n    produced by previous specs), and its\n    [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) and\n    [effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) are assumed to refer\n    to the document created by its _own_ changes. The resulting\n    transaction contains the combined effect of all the different\n    specs. For [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection), later\n    specs take precedence over earlier ones.\n    */\n    update(...specs) {\n        return resolveTransaction(this, specs, true);\n    }\n    /**\n    @internal\n    */\n    applyTransaction(tr) {\n        let conf = this.config, { base, compartments } = conf;\n        for (let effect of tr.effects) {\n            if (effect.is(Compartment.reconfigure)) {\n                if (conf) {\n                    compartments = new Map;\n                    conf.compartments.forEach((val, key) => compartments.set(key, val));\n                    conf = null;\n                }\n                compartments.set(effect.value.compartment, effect.value.extension);\n            }\n            else if (effect.is(StateEffect.reconfigure)) {\n                conf = null;\n                base = effect.value;\n            }\n            else if (effect.is(StateEffect.appendConfig)) {\n                conf = null;\n                base = asArray(base).concat(effect.value);\n            }\n        }\n        let startValues;\n        if (!conf) {\n            conf = Configuration.resolve(base, compartments, this);\n            let intermediateState = new EditorState(conf, this.doc, this.selection, conf.dynamicSlots.map(() => null), (state, slot) => slot.reconfigure(state, this), null);\n            startValues = intermediateState.values;\n        }\n        else {\n            startValues = tr.startState.values.slice();\n        }\n        let selection = tr.startState.facet(allowMultipleSelections) ? tr.newSelection : tr.newSelection.asSingle();\n        new EditorState(conf, tr.newDoc, selection, startValues, (state, slot) => slot.update(state, tr), tr);\n    }\n    /**\n    Create a [transaction spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec) that\n    replaces every selection range with the given content.\n    */\n    replaceSelection(text) {\n        if (typeof text == \"string\")\n            text = this.toText(text);\n        return this.changeByRange(range => ({ changes: { from: range.from, to: range.to, insert: text },\n            range: EditorSelection.cursor(range.from + text.length) }));\n    }\n    /**\n    Create a set of changes and a new selection by running the given\n    function for each range in the active selection. The function\n    can return an optional set of changes (in the coordinate space\n    of the start document), plus an updated range (in the coordinate\n    space of the document produced by the call's own changes). This\n    method will merge all the changes and ranges into a single\n    changeset and selection, and return it as a [transaction\n    spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec), which can be passed to\n    [`update`](https://codemirror.net/6/docs/ref/#state.EditorState.update).\n    */\n    changeByRange(f) {\n        let sel = this.selection;\n        let result1 = f(sel.ranges[0]);\n        let changes = this.changes(result1.changes), ranges = [result1.range];\n        let effects = asArray(result1.effects);\n        for (let i = 1; i < sel.ranges.length; i++) {\n            let result = f(sel.ranges[i]);\n            let newChanges = this.changes(result.changes), newMapped = newChanges.map(changes);\n            for (let j = 0; j < i; j++)\n                ranges[j] = ranges[j].map(newMapped);\n            let mapBy = changes.mapDesc(newChanges, true);\n            ranges.push(result.range.map(mapBy));\n            changes = changes.compose(newMapped);\n            effects = StateEffect.mapEffects(effects, newMapped).concat(StateEffect.mapEffects(asArray(result.effects), mapBy));\n        }\n        return {\n            changes,\n            selection: EditorSelection.create(ranges, sel.mainIndex),\n            effects\n        };\n    }\n    /**\n    Create a [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet) from the given change\n    description, taking the state's document length and line\n    separator into account.\n    */\n    changes(spec = []) {\n        if (spec instanceof ChangeSet)\n            return spec;\n        return ChangeSet.of(spec, this.doc.length, this.facet(EditorState.lineSeparator));\n    }\n    /**\n    Using the state's [line\n    separator](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator), create a\n    [`Text`](https://codemirror.net/6/docs/ref/#state.Text) instance from the given string.\n    */\n    toText(string) {\n        return Text.of(string.split(this.facet(EditorState.lineSeparator) || DefaultSplit));\n    }\n    /**\n    Return the given range of the document as a string.\n    */\n    sliceDoc(from = 0, to = this.doc.length) {\n        return this.doc.sliceString(from, to, this.lineBreak);\n    }\n    /**\n    Get the value of a state [facet](https://codemirror.net/6/docs/ref/#state.Facet).\n    */\n    facet(facet) {\n        let addr = this.config.address[facet.id];\n        if (addr == null)\n            return facet.default;\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /**\n    Convert this state to a JSON-serializable object. When custom\n    fields should be serialized, you can pass them in as an object\n    mapping property names (in the resulting object, which should\n    not use `doc` or `selection`) to fields.\n    */\n    toJSON(fields) {\n        let result = {\n            doc: this.sliceDoc(),\n            selection: this.selection.toJSON()\n        };\n        if (fields)\n            for (let prop in fields) {\n                let value = fields[prop];\n                if (value instanceof StateField && this.config.address[value.id] != null)\n                    result[prop] = value.spec.toJSON(this.field(fields[prop]), this);\n            }\n        return result;\n    }\n    /**\n    Deserialize a state from its JSON representation. When custom\n    fields should be deserialized, pass the same object you passed\n    to [`toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) when serializing as\n    third argument.\n    */\n    static fromJSON(json, config = {}, fields) {\n        if (!json || typeof json.doc != \"string\")\n            throw new RangeError(\"Invalid JSON representation for EditorState\");\n        let fieldInit = [];\n        if (fields)\n            for (let prop in fields) {\n                if (Object.prototype.hasOwnProperty.call(json, prop)) {\n                    let field = fields[prop], value = json[prop];\n                    fieldInit.push(field.init(state => field.spec.fromJSON(value, state)));\n                }\n            }\n        return EditorState.create({\n            doc: json.doc,\n            selection: EditorSelection.fromJSON(json.selection),\n            extensions: config.extensions ? fieldInit.concat([config.extensions]) : fieldInit\n        });\n    }\n    /**\n    Create a new state. You'll usually only need this when\n    initializing an editor\u2014updated states are created by applying\n    transactions.\n    */\n    static create(config = {}) {\n        let configuration = Configuration.resolve(config.extensions || [], new Map);\n        let doc = config.doc instanceof Text ? config.doc\n            : Text.of((config.doc || \"\").split(configuration.staticFacet(EditorState.lineSeparator) || DefaultSplit));\n        let selection = !config.selection ? EditorSelection.single(0)\n            : config.selection instanceof EditorSelection ? config.selection\n                : EditorSelection.single(config.selection.anchor, config.selection.head);\n        checkSelection(selection, doc.length);\n        if (!configuration.staticFacet(allowMultipleSelections))\n            selection = selection.asSingle();\n        return new EditorState(configuration, doc, selection, configuration.dynamicSlots.map(() => null), (state, slot) => slot.create(state), null);\n    }\n    /**\n    The size (in columns) of a tab in the document, determined by\n    the [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) facet.\n    */\n    get tabSize() { return this.facet(EditorState.tabSize); }\n    /**\n    Get the proper [line-break](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator)\n    string for this state.\n    */\n    get lineBreak() { return this.facet(EditorState.lineSeparator) || \"\\n\"; }\n    /**\n    Returns true when the editor is\n    [configured](https://codemirror.net/6/docs/ref/#state.EditorState^readOnly) to be read-only.\n    */\n    get readOnly() { return this.facet(readOnly); }\n    /**\n    Look up a translation for the given phrase (via the\n    [`phrases`](https://codemirror.net/6/docs/ref/#state.EditorState^phrases) facet), or return the\n    original string if no translation is found.\n    \n    If additional arguments are passed, they will be inserted in\n    place of markers like `$1` (for the first value) and `$2`, etc.\n    A single `$` is equivalent to `$1`, and `$$` will produce a\n    literal dollar sign.\n    */\n    phrase(phrase, ...insert) {\n        for (let map of this.facet(EditorState.phrases))\n            if (Object.prototype.hasOwnProperty.call(map, phrase)) {\n                phrase = map[phrase];\n                break;\n            }\n        if (insert.length)\n            phrase = phrase.replace(/\\$(\\$|\\d*)/g, (m, i) => {\n                if (i == \"$\")\n                    return \"$\";\n                let n = +(i || 1);\n                return !n || n > insert.length ? m : insert[n - 1];\n            });\n        return phrase;\n    }\n    /**\n    Find the values for a given language data field, provided by the\n    the [`languageData`](https://codemirror.net/6/docs/ref/#state.EditorState^languageData) facet.\n    \n    Examples of language data fields are...\n    \n    - [`\"commentTokens\"`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) for specifying\n      comment syntax.\n    - [`\"autocomplete\"`](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion^config.override)\n      for providing language-specific completion sources.\n    - [`\"wordChars\"`](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) for adding\n      characters that should be considered part of words in this\n      language.\n    - [`\"closeBrackets\"`](https://codemirror.net/6/docs/ref/#autocomplete.CloseBracketConfig) controls\n      bracket closing behavior.\n    */\n    languageDataAt(name, pos, side = -1) {\n        let values = [];\n        for (let provider of this.facet(languageData)) {\n            for (let result of provider(this, pos, side)) {\n                if (Object.prototype.hasOwnProperty.call(result, name))\n                    values.push(result[name]);\n            }\n        }\n        return values;\n    }\n    /**\n    Return a function that can categorize strings (expected to\n    represent a single [grapheme cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak))\n    into one of:\n    \n     - Word (contains an alphanumeric character or a character\n       explicitly listed in the local language's `\"wordChars\"`\n       language data, which should be a string)\n     - Space (contains only whitespace)\n     - Other (anything else)\n    */\n    charCategorizer(at) {\n        return makeCategorizer(this.languageDataAt(\"wordChars\", at).join(\"\"));\n    }\n    /**\n    Find the word at the given position, meaning the range\n    containing all [word](https://codemirror.net/6/docs/ref/#state.CharCategory.Word) characters\n    around it. If no word characters are adjacent to the position,\n    this returns null.\n    */\n    wordAt(pos) {\n        let { text, from, length } = this.doc.lineAt(pos);\n        let cat = this.charCategorizer(pos);\n        let start = pos - from, end = pos - from;\n        while (start > 0) {\n            let prev = findClusterBreak(text, start, false);\n            if (cat(text.slice(prev, start)) != CharCategory.Word)\n                break;\n            start = prev;\n        }\n        while (end < length) {\n            let next = findClusterBreak(text, end);\n            if (cat(text.slice(end, next)) != CharCategory.Word)\n                break;\n            end = next;\n        }\n        return start == end ? null : EditorSelection.range(start + from, end + from);\n    }\n}\n/**\nA facet that, when enabled, causes the editor to allow multiple\nranges to be selected. Be careful though, because by default the\neditor relies on the native DOM selection, which cannot handle\nmultiple selections. An extension like\n[`drawSelection`](https://codemirror.net/6/docs/ref/#view.drawSelection) can be used to make\nsecondary selections visible to the user.\n*/\nEditorState.allowMultipleSelections = allowMultipleSelections;\n/**\nConfigures the tab size to use in this state. The first\n(highest-precedence) value of the facet is used. If no value is\ngiven, this defaults to 4.\n*/\nEditorState.tabSize = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : 4\n});\n/**\nThe line separator to use. By default, any of `\"\\n\"`, `\"\\r\\n\"`\nand `\"\\r\"` is treated as a separator when splitting lines, and\nlines are joined with `\"\\n\"`.\n\nWhen you configure a value here, only that precise separator\nwill be used, allowing you to round-trip documents through the\neditor without normalizing line separators.\n*/\nEditorState.lineSeparator = lineSeparator;\n/**\nThis facet controls the value of the\n[`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) getter, which is\nconsulted by commands and extensions that implement editing\nfunctionality to determine whether they should apply. It\ndefaults to false, but when its highest-precedence value is\n`true`, such functionality disables itself.\n\nNot to be confused with\n[`EditorView.editable`](https://codemirror.net/6/docs/ref/#view.EditorView^editable), which\ncontrols whether the editor's DOM is set to be editable (and\nthus focusable).\n*/\nEditorState.readOnly = readOnly;\n/**\nRegisters translation phrases. The\n[`phrase`](https://codemirror.net/6/docs/ref/#state.EditorState.phrase) method will look through\nall objects registered with this facet to find translations for\nits argument.\n*/\nEditorState.phrases = /*@__PURE__*/Facet.define({\n    compare(a, b) {\n        let kA = Object.keys(a), kB = Object.keys(b);\n        return kA.length == kB.length && kA.every(k => a[k] == b[k]);\n    }\n});\n/**\nA facet used to register [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) providers.\n*/\nEditorState.languageData = languageData;\n/**\nFacet used to register change filters, which are called for each\ntransaction (unless explicitly\n[disabled](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter)), and can suppress\npart of the transaction's changes.\n\nSuch a function can return `true` to indicate that it doesn't\nwant to do anything, `false` to completely stop the changes in\nthe transaction, or a set of ranges in which changes should be\nsuppressed. Such ranges are represented as an array of numbers,\nwith each pair of two numbers indicating the start and end of a\nrange. So for example `[10, 20, 100, 110]` suppresses changes\nbetween 10 and 20, and between 100 and 110.\n*/\nEditorState.changeFilter = changeFilter;\n/**\nFacet used to register a hook that gets a chance to update or\nreplace transaction specs before they are applied. This will\nonly be applied for transactions that don't have\n[`filter`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter) set to `false`. You\ncan either return a single transaction spec (possibly the input\ntransaction), or an array of specs (which will be combined in\nthe same way as the arguments to\n[`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update)).\n\nWhen possible, it is recommended to avoid accessing\n[`Transaction.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state) in a filter,\nsince it will force creation of a state that will then be\ndiscarded again, if the transaction is actually filtered.\n\n(This functionality should be used with care. Indiscriminately\nmodifying transaction is likely to break something or degrade\nthe user experience.)\n*/\nEditorState.transactionFilter = transactionFilter;\n/**\nThis is a more limited form of\n[`transactionFilter`](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter),\nwhich can only add\n[annotations](https://codemirror.net/6/docs/ref/#state.TransactionSpec.annotations) and\n[effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects). _But_, this type\nof filter runs even if the transaction has disabled regular\n[filtering](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter), making it suitable\nfor effects that don't need to touch the changes or selection,\nbut do want to process every transaction.\n\nExtenders run _after_ filters, when both are present.\n*/\nEditorState.transactionExtender = transactionExtender;\nCompartment.reconfigure = /*@__PURE__*/StateEffect.define();\n\n/**\nUtility function for combining behaviors to fill in a config\nobject from an array of provided configs. `defaults` should hold\ndefault values for all optional fields in `Config`.\n\nThe function will, by default, error\nwhen a field gets two values that aren't `===`-equal, but you can\nprovide combine functions per field to do something else.\n*/\nfunction combineConfig(configs, defaults, // Should hold only the optional properties of Config, but I haven't managed to express that\ncombine = {}) {\n    let result = {};\n    for (let config of configs)\n        for (let key of Object.keys(config)) {\n            let value = config[key], current = result[key];\n            if (current === undefined)\n                result[key] = value;\n            else if (current === value || value === undefined) ; // No conflict\n            else if (Object.hasOwnProperty.call(combine, key))\n                result[key] = combine[key](current, value);\n            else\n                throw new Error(\"Config merge conflict for field \" + key);\n        }\n    for (let key in defaults)\n        if (result[key] === undefined)\n            result[key] = defaults[key];\n    return result;\n}\n\n/**\nEach range is associated with a value, which must inherit from\nthis class.\n*/\nclass RangeValue {\n    /**\n    Compare this value with another value. Used when comparing\n    rangesets. The default implementation compares by identity.\n    Unless you are only creating a fixed number of unique instances\n    of your value type, it is a good idea to implement this\n    properly.\n    */\n    eq(other) { return this == other; }\n    /**\n    Create a [range](https://codemirror.net/6/docs/ref/#state.Range) with this value.\n    */\n    range(from, to = from) { return Range.create(from, to, this); }\n}\nRangeValue.prototype.startSide = RangeValue.prototype.endSide = 0;\nRangeValue.prototype.point = false;\nRangeValue.prototype.mapMode = MapMode.TrackDel;\n/**\nA range associates a value with a range of positions.\n*/\nclass Range {\n    constructor(\n    /**\n    The range's start position.\n    */\n    from, \n    /**\n    Its end position.\n    */\n    to, \n    /**\n    The value associated with this range.\n    */\n    value) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n    }\n    /**\n    @internal\n    */\n    static create(from, to, value) {\n        return new Range(from, to, value);\n    }\n}\nfunction cmpRange(a, b) {\n    return a.from - b.from || a.value.startSide - b.value.startSide;\n}\nclass Chunk {\n    constructor(from, to, value, \n    // Chunks are marked with the largest point that occurs\n    // in them (or -1 for no points), so that scans that are\n    // only interested in points (such as the\n    // heightmap-related logic) can skip range-only chunks.\n    maxPoint) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n        this.maxPoint = maxPoint;\n    }\n    get length() { return this.to[this.to.length - 1]; }\n    // Find the index of the given position and side. Use the ranges'\n    // `from` pos when `end == false`, `to` when `end == true`.\n    findIndex(pos, side, end, startAt = 0) {\n        let arr = end ? this.to : this.from;\n        for (let lo = startAt, hi = arr.length;;) {\n            if (lo == hi)\n                return lo;\n            let mid = (lo + hi) >> 1;\n            let diff = arr[mid] - pos || (end ? this.value[mid].endSide : this.value[mid].startSide) - side;\n            if (mid == lo)\n                return diff >= 0 ? lo : hi;\n            if (diff >= 0)\n                hi = mid;\n            else\n                lo = mid + 1;\n        }\n    }\n    between(offset, from, to, f) {\n        for (let i = this.findIndex(from, -1000000000 /* C.Far */, true), e = this.findIndex(to, 1000000000 /* C.Far */, false, i); i < e; i++)\n            if (f(this.from[i] + offset, this.to[i] + offset, this.value[i]) === false)\n                return false;\n    }\n    map(offset, changes) {\n        let value = [], from = [], to = [], newPos = -1, maxPoint = -1;\n        for (let i = 0; i < this.value.length; i++) {\n            let val = this.value[i], curFrom = this.from[i] + offset, curTo = this.to[i] + offset, newFrom, newTo;\n            if (curFrom == curTo) {\n                let mapped = changes.mapPos(curFrom, val.startSide, val.mapMode);\n                if (mapped == null)\n                    continue;\n                newFrom = newTo = mapped;\n                if (val.startSide != val.endSide) {\n                    newTo = changes.mapPos(curFrom, val.endSide);\n                    if (newTo < newFrom)\n                        continue;\n                }\n            }\n            else {\n                newFrom = changes.mapPos(curFrom, val.startSide);\n                newTo = changes.mapPos(curTo, val.endSide);\n                if (newFrom > newTo || newFrom == newTo && val.startSide > 0 && val.endSide <= 0)\n                    continue;\n            }\n            if ((newTo - newFrom || val.endSide - val.startSide) < 0)\n                continue;\n            if (newPos < 0)\n                newPos = newFrom;\n            if (val.point)\n                maxPoint = Math.max(maxPoint, newTo - newFrom);\n            value.push(val);\n            from.push(newFrom - newPos);\n            to.push(newTo - newPos);\n        }\n        return { mapped: value.length ? new Chunk(from, to, value, maxPoint) : null, pos: newPos };\n    }\n}\n/**\nA range set stores a collection of [ranges](https://codemirror.net/6/docs/ref/#state.Range) in a\nway that makes them efficient to [map](https://codemirror.net/6/docs/ref/#state.RangeSet.map) and\n[update](https://codemirror.net/6/docs/ref/#state.RangeSet.update). This is an immutable data\nstructure.\n*/\nclass RangeSet {\n    constructor(\n    /**\n    @internal\n    */\n    chunkPos, \n    /**\n    @internal\n    */\n    chunk, \n    /**\n    @internal\n    */\n    nextLayer, \n    /**\n    @internal\n    */\n    maxPoint) {\n        this.chunkPos = chunkPos;\n        this.chunk = chunk;\n        this.nextLayer = nextLayer;\n        this.maxPoint = maxPoint;\n    }\n    /**\n    @internal\n    */\n    static create(chunkPos, chunk, nextLayer, maxPoint) {\n        return new RangeSet(chunkPos, chunk, nextLayer, maxPoint);\n    }\n    /**\n    @internal\n    */\n    get length() {\n        let last = this.chunk.length - 1;\n        return last < 0 ? 0 : Math.max(this.chunkEnd(last), this.nextLayer.length);\n    }\n    /**\n    The number of ranges in the set.\n    */\n    get size() {\n        if (this.isEmpty)\n            return 0;\n        let size = this.nextLayer.size;\n        for (let chunk of this.chunk)\n            size += chunk.value.length;\n        return size;\n    }\n    /**\n    @internal\n    */\n    chunkEnd(index) {\n        return this.chunkPos[index] + this.chunk[index].length;\n    }\n    /**\n    Update the range set, optionally adding new ranges or filtering\n    out existing ones.\n    \n    (Note: The type parameter is just there as a kludge to work\n    around TypeScript variance issues that prevented `RangeSet<X>`\n    from being a subtype of `RangeSet<Y>` when `X` is a subtype of\n    `Y`.)\n    */\n    update(updateSpec) {\n        let { add = [], sort = false, filterFrom = 0, filterTo = this.length } = updateSpec;\n        let filter = updateSpec.filter;\n        if (add.length == 0 && !filter)\n            return this;\n        if (sort)\n            add = add.slice().sort(cmpRange);\n        if (this.isEmpty)\n            return add.length ? RangeSet.of(add) : this;\n        let cur = new LayerCursor(this, null, -1).goto(0), i = 0, spill = [];\n        let builder = new RangeSetBuilder();\n        while (cur.value || i < add.length) {\n            if (i < add.length && (cur.from - add[i].from || cur.startSide - add[i].value.startSide) >= 0) {\n                let range = add[i++];\n                if (!builder.addInner(range.from, range.to, range.value))\n                    spill.push(range);\n            }\n            else if (cur.rangeIndex == 1 && cur.chunkIndex < this.chunk.length &&\n                (i == add.length || this.chunkEnd(cur.chunkIndex) < add[i].from) &&\n                (!filter || filterFrom > this.chunkEnd(cur.chunkIndex) || filterTo < this.chunkPos[cur.chunkIndex]) &&\n                builder.addChunk(this.chunkPos[cur.chunkIndex], this.chunk[cur.chunkIndex])) {\n                cur.nextChunk();\n            }\n            else {\n                if (!filter || filterFrom > cur.to || filterTo < cur.from || filter(cur.from, cur.to, cur.value)) {\n                    if (!builder.addInner(cur.from, cur.to, cur.value))\n                        spill.push(Range.create(cur.from, cur.to, cur.value));\n                }\n                cur.next();\n            }\n        }\n        return builder.finishInner(this.nextLayer.isEmpty && !spill.length ? RangeSet.empty\n            : this.nextLayer.update({ add: spill, filter, filterFrom, filterTo }));\n    }\n    /**\n    Map this range set through a set of changes, return the new set.\n    */\n    map(changes) {\n        if (changes.empty || this.isEmpty)\n            return this;\n        let chunks = [], chunkPos = [], maxPoint = -1;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            let touch = changes.touchesRange(start, start + chunk.length);\n            if (touch === false) {\n                maxPoint = Math.max(maxPoint, chunk.maxPoint);\n                chunks.push(chunk);\n                chunkPos.push(changes.mapPos(start));\n            }\n            else if (touch === true) {\n                let { mapped, pos } = chunk.map(start, changes);\n                if (mapped) {\n                    maxPoint = Math.max(maxPoint, mapped.maxPoint);\n                    chunks.push(mapped);\n                    chunkPos.push(pos);\n                }\n            }\n        }\n        let next = this.nextLayer.map(changes);\n        return chunks.length == 0 ? next : new RangeSet(chunkPos, chunks, next || RangeSet.empty, maxPoint);\n    }\n    /**\n    Iterate over the ranges that touch the region `from` to `to`,\n    calling `f` for each. There is no guarantee that the ranges will\n    be reported in any specific order. When the callback returns\n    `false`, iteration stops.\n    */\n    between(from, to, f) {\n        if (this.isEmpty)\n            return;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            if (to >= start && from <= start + chunk.length &&\n                chunk.between(start, from - start, to - start, f) === false)\n                return;\n        }\n        this.nextLayer.between(from, to, f);\n    }\n    /**\n    Iterate over the ranges in this set, in order, including all\n    ranges that end at or after `from`.\n    */\n    iter(from = 0) {\n        return HeapCursor.from([this]).goto(from);\n    }\n    /**\n    @internal\n    */\n    get isEmpty() { return this.nextLayer == this; }\n    /**\n    Iterate over the ranges in a collection of sets, in order,\n    starting from `from`.\n    */\n    static iter(sets, from = 0) {\n        return HeapCursor.from(sets).goto(from);\n    }\n    /**\n    Iterate over two groups of sets, calling methods on `comparator`\n    to notify it of possible differences.\n    */\n    static compare(oldSets, newSets, \n    /**\n    This indicates how the underlying data changed between these\n    ranges, and is needed to synchronize the iteration.\n    */\n    textDiff, comparator, \n    /**\n    Can be used to ignore all non-point ranges, and points below\n    the given size. When -1, all ranges are compared.\n    */\n    minPointSize = -1) {\n        let a = oldSets.filter(set => set.maxPoint > 0 || !set.isEmpty && set.maxPoint >= minPointSize);\n        let b = newSets.filter(set => set.maxPoint > 0 || !set.isEmpty && set.maxPoint >= minPointSize);\n        let sharedChunks = findSharedChunks(a, b, textDiff);\n        let sideA = new SpanCursor(a, sharedChunks, minPointSize);\n        let sideB = new SpanCursor(b, sharedChunks, minPointSize);\n        textDiff.iterGaps((fromA, fromB, length) => compare(sideA, fromA, sideB, fromB, length, comparator));\n        if (textDiff.empty && textDiff.length == 0)\n            compare(sideA, 0, sideB, 0, 0, comparator);\n    }\n    /**\n    Compare the contents of two groups of range sets, returning true\n    if they are equivalent in the given range.\n    */\n    static eq(oldSets, newSets, from = 0, to) {\n        if (to == null)\n            to = 1000000000 /* C.Far */ - 1;\n        let a = oldSets.filter(set => !set.isEmpty && newSets.indexOf(set) < 0);\n        let b = newSets.filter(set => !set.isEmpty && oldSets.indexOf(set) < 0);\n        if (a.length != b.length)\n            return false;\n        if (!a.length)\n            return true;\n        let sharedChunks = findSharedChunks(a, b);\n        let sideA = new SpanCursor(a, sharedChunks, 0).goto(from), sideB = new SpanCursor(b, sharedChunks, 0).goto(from);\n        for (;;) {\n            if (sideA.to != sideB.to ||\n                !sameValues(sideA.active, sideB.active) ||\n                sideA.point && (!sideB.point || !sideA.point.eq(sideB.point)))\n                return false;\n            if (sideA.to > to)\n                return true;\n            sideA.next();\n            sideB.next();\n        }\n    }\n    /**\n    Iterate over a group of range sets at the same time, notifying\n    the iterator about the ranges covering every given piece of\n    content. Returns the open count (see\n    [`SpanIterator.span`](https://codemirror.net/6/docs/ref/#state.SpanIterator.span)) at the end\n    of the iteration.\n    */\n    static spans(sets, from, to, iterator, \n    /**\n    When given and greater than -1, only points of at least this\n    size are taken into account.\n    */\n    minPointSize = -1) {\n        let cursor = new SpanCursor(sets, null, minPointSize).goto(from), pos = from;\n        let openRanges = cursor.openStart;\n        for (;;) {\n            let curTo = Math.min(cursor.to, to);\n            if (cursor.point) {\n                let active = cursor.activeForPoint(cursor.to);\n                let openCount = cursor.pointFrom < from ? active.length + 1\n                    : cursor.point.startSide < 0 ? active.length\n                        : Math.min(active.length, openRanges);\n                iterator.point(pos, curTo, cursor.point, active, openCount, cursor.pointRank);\n                openRanges = Math.min(cursor.openEnd(curTo), active.length);\n            }\n            else if (curTo > pos) {\n                iterator.span(pos, curTo, cursor.active, openRanges);\n                openRanges = cursor.openEnd(curTo);\n            }\n            if (cursor.to > to)\n                return openRanges + (cursor.point && cursor.to > to ? 1 : 0);\n            pos = cursor.to;\n            cursor.next();\n        }\n    }\n    /**\n    Create a range set for the given range or array of ranges. By\n    default, this expects the ranges to be _sorted_ (by start\n    position and, if two start at the same position,\n    `value.startSide`). You can pass `true` as second argument to\n    cause the method to sort them.\n    */\n    static of(ranges, sort = false) {\n        let build = new RangeSetBuilder();\n        for (let range of ranges instanceof Range ? [ranges] : sort ? lazySort(ranges) : ranges)\n            build.add(range.from, range.to, range.value);\n        return build.finish();\n    }\n    /**\n    Join an array of range sets into a single set.\n    */\n    static join(sets) {\n        if (!sets.length)\n            return RangeSet.empty;\n        let result = sets[sets.length - 1];\n        for (let i = sets.length - 2; i >= 0; i--) {\n            for (let layer = sets[i]; layer != RangeSet.empty; layer = layer.nextLayer)\n                result = new RangeSet(layer.chunkPos, layer.chunk, result, Math.max(layer.maxPoint, result.maxPoint));\n        }\n        return result;\n    }\n}\n/**\nThe empty set of ranges.\n*/\nRangeSet.empty = /*@__PURE__*/new RangeSet([], [], null, -1);\nfunction lazySort(ranges) {\n    if (ranges.length > 1)\n        for (let prev = ranges[0], i = 1; i < ranges.length; i++) {\n            let cur = ranges[i];\n            if (cmpRange(prev, cur) > 0)\n                return ranges.slice().sort(cmpRange);\n            prev = cur;\n        }\n    return ranges;\n}\nRangeSet.empty.nextLayer = RangeSet.empty;\n/**\nA range set builder is a data structure that helps build up a\n[range set](https://codemirror.net/6/docs/ref/#state.RangeSet) directly, without first allocating\nan array of [`Range`](https://codemirror.net/6/docs/ref/#state.Range) objects.\n*/\nclass RangeSetBuilder {\n    finishChunk(newArrays) {\n        this.chunks.push(new Chunk(this.from, this.to, this.value, this.maxPoint));\n        this.chunkPos.push(this.chunkStart);\n        this.chunkStart = -1;\n        this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint);\n        this.maxPoint = -1;\n        if (newArrays) {\n            this.from = [];\n            this.to = [];\n            this.value = [];\n        }\n    }\n    /**\n    Create an empty builder.\n    */\n    constructor() {\n        this.chunks = [];\n        this.chunkPos = [];\n        this.chunkStart = -1;\n        this.last = null;\n        this.lastFrom = -1000000000 /* C.Far */;\n        this.lastTo = -1000000000 /* C.Far */;\n        this.from = [];\n        this.to = [];\n        this.value = [];\n        this.maxPoint = -1;\n        this.setMaxPoint = -1;\n        this.nextLayer = null;\n    }\n    /**\n    Add a range. Ranges should be added in sorted (by `from` and\n    `value.startSide`) order.\n    */\n    add(from, to, value) {\n        if (!this.addInner(from, to, value))\n            (this.nextLayer || (this.nextLayer = new RangeSetBuilder)).add(from, to, value);\n    }\n    /**\n    @internal\n    */\n    addInner(from, to, value) {\n        let diff = from - this.lastTo || value.startSide - this.last.endSide;\n        if (diff <= 0 && (from - this.lastFrom || value.startSide - this.last.startSide) < 0)\n            throw new Error(\"Ranges must be added sorted by `from` position and `startSide`\");\n        if (diff < 0)\n            return false;\n        if (this.from.length == 250 /* C.ChunkSize */)\n            this.finishChunk(true);\n        if (this.chunkStart < 0)\n            this.chunkStart = from;\n        this.from.push(from - this.chunkStart);\n        this.to.push(to - this.chunkStart);\n        this.last = value;\n        this.lastFrom = from;\n        this.lastTo = to;\n        this.value.push(value);\n        if (value.point)\n            this.maxPoint = Math.max(this.maxPoint, to - from);\n        return true;\n    }\n    /**\n    @internal\n    */\n    addChunk(from, chunk) {\n        if ((from - this.lastTo || chunk.value[0].startSide - this.last.endSide) < 0)\n            return false;\n        if (this.from.length)\n            this.finishChunk(true);\n        this.setMaxPoint = Math.max(this.setMaxPoint, chunk.maxPoint);\n        this.chunks.push(chunk);\n        this.chunkPos.push(from);\n        let last = chunk.value.length - 1;\n        this.last = chunk.value[last];\n        this.lastFrom = chunk.from[last] + from;\n        this.lastTo = chunk.to[last] + from;\n        return true;\n    }\n    /**\n    Finish the range set. Returns the new set. The builder can't be\n    used anymore after this has been called.\n    */\n    finish() { return this.finishInner(RangeSet.empty); }\n    /**\n    @internal\n    */\n    finishInner(next) {\n        if (this.from.length)\n            this.finishChunk(false);\n        if (this.chunks.length == 0)\n            return next;\n        let result = RangeSet.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(next) : next, this.setMaxPoint);\n        this.from = null; // Make sure further `add` calls produce errors\n        return result;\n    }\n}\nfunction findSharedChunks(a, b, textDiff) {\n    let inA = new Map();\n    for (let set of a)\n        for (let i = 0; i < set.chunk.length; i++)\n            if (set.chunk[i].maxPoint <= 0)\n                inA.set(set.chunk[i], set.chunkPos[i]);\n    let shared = new Set();\n    for (let set of b)\n        for (let i = 0; i < set.chunk.length; i++) {\n            let known = inA.get(set.chunk[i]);\n            if (known != null && (textDiff ? textDiff.mapPos(known) : known) == set.chunkPos[i] &&\n                !(textDiff === null || textDiff === void 0 ? void 0 : textDiff.touchesRange(known, known + set.chunk[i].length)))\n                shared.add(set.chunk[i]);\n        }\n    return shared;\n}\nclass LayerCursor {\n    constructor(layer, skip, minPoint, rank = 0) {\n        this.layer = layer;\n        this.skip = skip;\n        this.minPoint = minPoint;\n        this.rank = rank;\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    get endSide() { return this.value ? this.value.endSide : 0; }\n    goto(pos, side = -1000000000 /* C.Far */) {\n        this.chunkIndex = this.rangeIndex = 0;\n        this.gotoInner(pos, side, false);\n        return this;\n    }\n    gotoInner(pos, side, forward) {\n        while (this.chunkIndex < this.layer.chunk.length) {\n            let next = this.layer.chunk[this.chunkIndex];\n            if (!(this.skip && this.skip.has(next) ||\n                this.layer.chunkEnd(this.chunkIndex) < pos ||\n                next.maxPoint < this.minPoint))\n                break;\n            this.chunkIndex++;\n            forward = false;\n        }\n        if (this.chunkIndex < this.layer.chunk.length) {\n            let rangeIndex = this.layer.chunk[this.chunkIndex].findIndex(pos - this.layer.chunkPos[this.chunkIndex], side, true);\n            if (!forward || this.rangeIndex < rangeIndex)\n                this.setRangeIndex(rangeIndex);\n        }\n        this.next();\n    }\n    forward(pos, side) {\n        if ((this.to - pos || this.endSide - side) < 0)\n            this.gotoInner(pos, side, true);\n    }\n    next() {\n        for (;;) {\n            if (this.chunkIndex == this.layer.chunk.length) {\n                this.from = this.to = 1000000000 /* C.Far */;\n                this.value = null;\n                break;\n            }\n            else {\n                let chunkPos = this.layer.chunkPos[this.chunkIndex], chunk = this.layer.chunk[this.chunkIndex];\n                let from = chunkPos + chunk.from[this.rangeIndex];\n                this.from = from;\n                this.to = chunkPos + chunk.to[this.rangeIndex];\n                this.value = chunk.value[this.rangeIndex];\n                this.setRangeIndex(this.rangeIndex + 1);\n                if (this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)\n                    break;\n            }\n        }\n    }\n    setRangeIndex(index) {\n        if (index == this.layer.chunk[this.chunkIndex].value.length) {\n            this.chunkIndex++;\n            if (this.skip) {\n                while (this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]))\n                    this.chunkIndex++;\n            }\n            this.rangeIndex = 0;\n        }\n        else {\n            this.rangeIndex = index;\n        }\n    }\n    nextChunk() {\n        this.chunkIndex++;\n        this.rangeIndex = 0;\n        this.next();\n    }\n    compare(other) {\n        return this.from - other.from || this.startSide - other.startSide || this.rank - other.rank ||\n            this.to - other.to || this.endSide - other.endSide;\n    }\n}\nclass HeapCursor {\n    constructor(heap) {\n        this.heap = heap;\n    }\n    static from(sets, skip = null, minPoint = -1) {\n        let heap = [];\n        for (let i = 0; i < sets.length; i++) {\n            for (let cur = sets[i]; !cur.isEmpty; cur = cur.nextLayer) {\n                if (cur.maxPoint >= minPoint)\n                    heap.push(new LayerCursor(cur, skip, minPoint, i));\n            }\n        }\n        return heap.length == 1 ? heap[0] : new HeapCursor(heap);\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    goto(pos, side = -1000000000 /* C.Far */) {\n        for (let cur of this.heap)\n            cur.goto(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        for (let cur of this.heap)\n            cur.forward(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        if ((this.to - pos || this.value.endSide - side) < 0)\n            this.next();\n    }\n    next() {\n        if (this.heap.length == 0) {\n            this.from = this.to = 1000000000 /* C.Far */;\n            this.value = null;\n            this.rank = -1;\n        }\n        else {\n            let top = this.heap[0];\n            this.from = top.from;\n            this.to = top.to;\n            this.value = top.value;\n            this.rank = top.rank;\n            if (top.value)\n                top.next();\n            heapBubble(this.heap, 0);\n        }\n    }\n}\nfunction heapBubble(heap, index) {\n    for (let cur = heap[index];;) {\n        let childIndex = (index << 1) + 1;\n        if (childIndex >= heap.length)\n            break;\n        let child = heap[childIndex];\n        if (childIndex + 1 < heap.length && child.compare(heap[childIndex + 1]) >= 0) {\n            child = heap[childIndex + 1];\n            childIndex++;\n        }\n        if (cur.compare(child) < 0)\n            break;\n        heap[childIndex] = cur;\n        heap[index] = child;\n        index = childIndex;\n    }\n}\nclass SpanCursor {\n    constructor(sets, skip, minPoint) {\n        this.minPoint = minPoint;\n        this.active = [];\n        this.activeTo = [];\n        this.activeRank = [];\n        this.minActive = -1;\n        // A currently active point range, if any\n        this.point = null;\n        this.pointFrom = 0;\n        this.pointRank = 0;\n        this.to = -1000000000 /* C.Far */;\n        this.endSide = 0;\n        // The amount of open active ranges at the start of the iterator.\n        // Not including points.\n        this.openStart = -1;\n        this.cursor = HeapCursor.from(sets, skip, minPoint);\n    }\n    goto(pos, side = -1000000000 /* C.Far */) {\n        this.cursor.goto(pos, side);\n        this.active.length = this.activeTo.length = this.activeRank.length = 0;\n        this.minActive = -1;\n        this.to = pos;\n        this.endSide = side;\n        this.openStart = -1;\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        while (this.minActive > -1 && (this.activeTo[this.minActive] - pos || this.active[this.minActive].endSide - side) < 0)\n            this.removeActive(this.minActive);\n        this.cursor.forward(pos, side);\n    }\n    removeActive(index) {\n        remove(this.active, index);\n        remove(this.activeTo, index);\n        remove(this.activeRank, index);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    addActive(trackOpen) {\n        let i = 0, { value, to, rank } = this.cursor;\n        // Organize active marks by rank first, then by size\n        while (i < this.activeRank.length && (rank - this.activeRank[i] || to - this.activeTo[i]) > 0)\n            i++;\n        insert(this.active, i, value);\n        insert(this.activeTo, i, to);\n        insert(this.activeRank, i, rank);\n        if (trackOpen)\n            insert(trackOpen, i, this.cursor.from);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    // After calling this, if `this.point` != null, the next range is a\n    // point. Otherwise, it's a regular range, covered by `this.active`.\n    next() {\n        let from = this.to, wasPoint = this.point;\n        this.point = null;\n        let trackOpen = this.openStart < 0 ? [] : null;\n        for (;;) {\n            let a = this.minActive;\n            if (a > -1 && (this.activeTo[a] - this.cursor.from || this.active[a].endSide - this.cursor.startSide) < 0) {\n                if (this.activeTo[a] > from) {\n                    this.to = this.activeTo[a];\n                    this.endSide = this.active[a].endSide;\n                    break;\n                }\n                this.removeActive(a);\n                if (trackOpen)\n                    remove(trackOpen, a);\n            }\n            else if (!this.cursor.value) {\n                this.to = this.endSide = 1000000000 /* C.Far */;\n                break;\n            }\n            else if (this.cursor.from > from) {\n                this.to = this.cursor.from;\n                this.endSide = this.cursor.startSide;\n                break;\n            }\n            else {\n                let nextVal = this.cursor.value;\n                if (!nextVal.point) { // Opening a range\n                    this.addActive(trackOpen);\n                    this.cursor.next();\n                }\n                else if (wasPoint && this.cursor.to == this.to && this.cursor.from < this.cursor.to) {\n                    // Ignore any non-empty points that end precisely at the end of the prev point\n                    this.cursor.next();\n                }\n                else { // New point\n                    this.point = nextVal;\n                    this.pointFrom = this.cursor.from;\n                    this.pointRank = this.cursor.rank;\n                    this.to = this.cursor.to;\n                    this.endSide = nextVal.endSide;\n                    this.cursor.next();\n                    this.forward(this.to, this.endSide);\n                    break;\n                }\n            }\n        }\n        if (trackOpen) {\n            this.openStart = 0;\n            for (let i = trackOpen.length - 1; i >= 0 && trackOpen[i] < from; i--)\n                this.openStart++;\n        }\n    }\n    activeForPoint(to) {\n        if (!this.active.length)\n            return this.active;\n        let active = [];\n        for (let i = this.active.length - 1; i >= 0; i--) {\n            if (this.activeRank[i] < this.pointRank)\n                break;\n            if (this.activeTo[i] > to || this.activeTo[i] == to && this.active[i].endSide >= this.point.endSide)\n                active.push(this.active[i]);\n        }\n        return active.reverse();\n    }\n    openEnd(to) {\n        let open = 0;\n        for (let i = this.activeTo.length - 1; i >= 0 && this.activeTo[i] > to; i--)\n            open++;\n        return open;\n    }\n}\nfunction compare(a, startA, b, startB, length, comparator) {\n    a.goto(startA);\n    b.goto(startB);\n    let endB = startB + length;\n    let pos = startB, dPos = startB - startA;\n    for (;;) {\n        let dEnd = (a.to + dPos) - b.to, diff = dEnd || a.endSide - b.endSide;\n        let end = diff < 0 ? a.to + dPos : b.to, clipEnd = Math.min(end, endB);\n        if (a.point || b.point) {\n            if (!(a.point && b.point && (a.point == b.point || a.point.eq(b.point)) &&\n                sameValues(a.activeForPoint(a.to), b.activeForPoint(b.to))))\n                comparator.comparePoint(pos, clipEnd, a.point, b.point);\n        }\n        else {\n            if (clipEnd > pos && !sameValues(a.active, b.active))\n                comparator.compareRange(pos, clipEnd, a.active, b.active);\n        }\n        if (end > endB)\n            break;\n        if ((dEnd || a.openEnd != b.openEnd) && comparator.boundChange)\n            comparator.boundChange(end);\n        pos = end;\n        if (diff <= 0)\n            a.next();\n        if (diff >= 0)\n            b.next();\n    }\n}\nfunction sameValues(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (a[i] != b[i] && !a[i].eq(b[i]))\n            return false;\n    return true;\n}\nfunction remove(array, index) {\n    for (let i = index, e = array.length - 1; i < e; i++)\n        array[i] = array[i + 1];\n    array.pop();\n}\nfunction insert(array, index, value) {\n    for (let i = array.length - 1; i >= index; i--)\n        array[i + 1] = array[i];\n    array[index] = value;\n}\nfunction findMinIndex(value, array) {\n    let found = -1, foundPos = 1000000000 /* C.Far */;\n    for (let i = 0; i < array.length; i++)\n        if ((array[i] - foundPos || value[i].endSide - value[found].endSide) < 0) {\n            found = i;\n            foundPos = array[i];\n        }\n    return found;\n}\n\n/**\nCount the column position at the given offset into the string,\ntaking extending characters and tab size into account.\n*/\nfunction countColumn(string, tabSize, to = string.length) {\n    let n = 0;\n    for (let i = 0; i < to && i < string.length;) {\n        if (string.charCodeAt(i) == 9) {\n            n += tabSize - (n % tabSize);\n            i++;\n        }\n        else {\n            n++;\n            i = findClusterBreak(string, i);\n        }\n    }\n    return n;\n}\n/**\nFind the offset that corresponds to the given column position in a\nstring, taking extending characters and tab size into account. By\ndefault, the string length is returned when it is too short to\nreach the column. Pass `strict` true to make it return -1 in that\nsituation.\n*/\nfunction findColumn(string, col, tabSize, strict) {\n    for (let i = 0, n = 0;;) {\n        if (n >= col)\n            return i;\n        if (i == string.length)\n            break;\n        n += string.charCodeAt(i) == 9 ? tabSize - (n % tabSize) : 1;\n        i = findClusterBreak(string, i);\n    }\n    return strict === true ? -1 : string.length;\n}\n\nexport { Annotation, AnnotationType, ChangeDesc, ChangeSet, CharCategory, Compartment, EditorSelection, EditorState, Facet, Line, MapMode, Prec, Range, RangeSet, RangeSetBuilder, RangeValue, SelectionRange, StateEffect, StateEffectType, StateField, Text, Transaction, codePointAt, codePointSize, combineConfig, countColumn, findClusterBreak, findColumn, fromCodePoint };\n", "const C = \"\\u037c\"\nconst COUNT = typeof Symbol == \"undefined\" ? \"__\" + C : Symbol.for(C)\nconst SET = typeof Symbol == \"undefined\" ? \"__styleSet\" + Math.floor(Math.random() * 1e8) : Symbol(\"styleSet\")\nconst top = typeof globalThis != \"undefined\" ? globalThis : typeof window != \"undefined\" ? window : {}\n\n// :: - Style modules encapsulate a set of CSS rules defined from\n// JavaScript. Their definitions are only available in a given DOM\n// root after it has been _mounted_ there with `StyleModule.mount`.\n//\n// Style modules should be created once and stored somewhere, as\n// opposed to re-creating them every time you need them. The amount of\n// CSS rules generated for a given DOM root is bounded by the amount\n// of style modules that were used. So to avoid leaking rules, don't\n// create these dynamically, but treat them as one-time allocations.\nexport class StyleModule {\n  // :: (Object<Style>, ?{finish: ?(string) \u2192 string})\n  // Create a style module from the given spec.\n  //\n  // When `finish` is given, it is called on regular (non-`@`)\n  // selectors (after `&` expansion) to compute the final selector.\n  constructor(spec, options) {\n    this.rules = []\n    let {finish} = options || {}\n\n    function splitSelector(selector) {\n      return /^@/.test(selector) ? [selector] : selector.split(/,\\s*/)\n    }\n\n    function render(selectors, spec, target, isKeyframes) {\n      let local = [], isAt = /^@(\\w+)\\b/.exec(selectors[0]), keyframes = isAt && isAt[1] == \"keyframes\"\n      if (isAt && spec == null) return target.push(selectors[0] + \";\")\n      for (let prop in spec) {\n        let value = spec[prop]\n        if (/&/.test(prop)) {\n          render(prop.split(/,\\s*/).map(part => selectors.map(sel => part.replace(/&/, sel))).reduce((a, b) => a.concat(b)),\n                 value, target)\n        } else if (value && typeof value == \"object\") {\n          if (!isAt) throw new RangeError(\"The value of a property (\" + prop + \") should be a primitive value.\")\n          render(splitSelector(prop), value, local, keyframes)\n        } else if (value != null) {\n          local.push(prop.replace(/_.*/, \"\").replace(/[A-Z]/g, l => \"-\" + l.toLowerCase()) + \": \" + value + \";\")\n        }\n      }\n      if (local.length || keyframes) {\n        target.push((finish && !isAt && !isKeyframes ? selectors.map(finish) : selectors).join(\", \") +\n                    \" {\" + local.join(\" \") + \"}\")\n      }\n    }\n\n    for (let prop in spec) render(splitSelector(prop), spec[prop], this.rules)\n  }\n\n  // :: () \u2192 string\n  // Returns a string containing the module's CSS rules.\n  getRules() { return this.rules.join(\"\\n\") }\n\n  // :: () \u2192 string\n  // Generate a new unique CSS class name.\n  static newName() {\n    let id = top[COUNT] || 1\n    top[COUNT] = id + 1\n    return C + id.toString(36)\n  }\n\n  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>, ?{nonce: ?string})\n  //\n  // Mount the given set of modules in the given DOM root, which ensures\n  // that the CSS rules defined by the module are available in that\n  // context.\n  //\n  // Rules are only added to the document once per root.\n  //\n  // Rule order will follow the order of the modules, so that rules from\n  // modules later in the array take precedence of those from earlier\n  // modules. If you call this function multiple times for the same root\n  // in a way that changes the order of already mounted modules, the old\n  // order will be changed.\n  //\n  // If a Content Security Policy nonce is provided, it is added to\n  // the `<style>` tag generated by the library.\n  static mount(root, modules, options) {\n    let set = root[SET], nonce = options && options.nonce\n    if (!set) set = new StyleSet(root, nonce)\n    else if (nonce) set.setNonce(nonce)\n    set.mount(Array.isArray(modules) ? modules : [modules], root)\n  }\n}\n\nlet adoptedSet = new Map //<Document, StyleSet>\n\nclass StyleSet {\n  constructor(root, nonce) {\n    let doc = root.ownerDocument || root, win = doc.defaultView\n    if (!root.head && root.adoptedStyleSheets && win.CSSStyleSheet) {\n      let adopted = adoptedSet.get(doc)\n      if (adopted) return root[SET] = adopted\n      this.sheet = new win.CSSStyleSheet\n      adoptedSet.set(doc, this)\n    } else {\n      this.styleTag = doc.createElement(\"style\")\n      if (nonce) this.styleTag.setAttribute(\"nonce\", nonce)\n    }\n    this.modules = []\n    root[SET] = this\n  }\n\n  mount(modules, root) {\n    let sheet = this.sheet\n    let pos = 0 /* Current rule offset */, j = 0 /* Index into this.modules */\n    for (let i = 0; i < modules.length; i++) {\n      let mod = modules[i], index = this.modules.indexOf(mod)\n      if (index < j && index > -1) { // Ordering conflict\n        this.modules.splice(index, 1)\n        j--\n        index = -1\n      }\n      if (index == -1) {\n        this.modules.splice(j++, 0, mod)\n        if (sheet) for (let k = 0; k < mod.rules.length; k++)\n          sheet.insertRule(mod.rules[k], pos++)\n      } else {\n        while (j < index) pos += this.modules[j++].rules.length\n        pos += mod.rules.length\n        j++\n      }\n    }\n\n    if (sheet) {\n      if (root.adoptedStyleSheets.indexOf(this.sheet) < 0)\n        root.adoptedStyleSheets = [this.sheet, ...root.adoptedStyleSheets]\n    } else {\n      let text = \"\"\n      for (let i = 0; i < this.modules.length; i++)\n        text += this.modules[i].getRules() + \"\\n\"\n      this.styleTag.textContent = text\n      let target = root.head || root\n      if (this.styleTag.parentNode != target)\n        target.insertBefore(this.styleTag, target.firstChild)\n    }\n  }\n\n  setNonce(nonce) {\n    if (this.styleTag && this.styleTag.getAttribute(\"nonce\") != nonce)\n      this.styleTag.setAttribute(\"nonce\", nonce)\n  }\n}\n\n// Style::Object<union<Style,string>>\n//\n// A style is an object that, in the simple case, maps CSS property\n// names to strings holding their values, as in `{color: \"red\",\n// fontWeight: \"bold\"}`. The property names can be given in\n// camel-case\u2014the library will insert a dash before capital letters\n// when converting them to CSS.\n//\n// If you include an underscore in a property name, it and everything\n// after it will be removed from the output, which can be useful when\n// providing a property multiple times, for browser compatibility\n// reasons.\n//\n// A property in a style object can also be a sub-selector, which\n// extends the current context to add a pseudo-selector or a child\n// selector. Such a property should contain a `&` character, which\n// will be replaced by the current selector. For example `{\"&:before\":\n// {content: '\"hi\"'}}`. Sub-selectors and regular properties can\n// freely be mixed in a given object. Any property containing a `&` is\n// assumed to be a sub-selector.\n//\n// Finally, a property can specify an @-block to be wrapped around the\n// styles defined inside the object that's the property's value. For\n// example to create a media query you can do `{\"@media screen and\n// (min-width: 400px)\": {...}}`.\n", "export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\"\n}\n\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // On macOS, keys held with Shift and Cmd don't reflect the effect of Shift in `.key`.\n  // On IE, shift effect is never included in `.key`.\n  var ignoreKey = mac && event.metaKey && event.shiftKey && !event.ctrlKey && !event.altKey ||\n      ie && event.shiftKey && event.key && event.key.length == 1 ||\n      event.key == \"Unidentified\"\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n", "import { Text, RangeSet, MapMode, RangeValue, findClusterBreak, EditorSelection, Facet, StateEffect, ChangeSet, findColumn, CharCategory, EditorState, Annotation, Transaction, Prec, codePointAt, codePointSize, combineConfig, StateField, RangeSetBuilder, countColumn } from '@codemirror/state';\nimport { StyleModule } from 'style-mod';\nimport { keyName, base, shift } from 'w3c-keyname';\n\nfunction getSelection(root) {\n    let target;\n    // Browsers differ on whether shadow roots have a getSelection\n    // method. If it exists, use that, otherwise, call it on the\n    // document.\n    if (root.nodeType == 11) { // Shadow root\n        target = root.getSelection ? root : root.ownerDocument;\n    }\n    else {\n        target = root;\n    }\n    return target.getSelection();\n}\nfunction contains(dom, node) {\n    return node ? dom == node || dom.contains(node.nodeType != 1 ? node.parentNode : node) : false;\n}\nfunction hasSelection(dom, selection) {\n    if (!selection.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return contains(dom, selection.anchorNode);\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction clientRectsFor(dom) {\n    if (dom.nodeType == 3)\n        return textRange(dom, 0, dom.nodeValue.length).getClientRects();\n    else if (dom.nodeType == 1)\n        return dom.getClientRects();\n    else\n        return [];\n}\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nfunction isEquivalentPosition(node, off, targetNode, targetOff) {\n    return targetNode ? (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1)) : false;\n}\nfunction domIndex(node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n}\nfunction isBlockElement(node) {\n    return node.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\\d|SECTION|PRE)$/.test(node.nodeName);\n}\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : maxOffset(node))) {\n            if (node.nodeName == \"DIV\")\n                return false;\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1)\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            if (node.nodeType == 1 && node.contentEditable == \"false\")\n                return false;\n            off = dir < 0 ? maxOffset(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction maxOffset(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction flattenRect(rect, left) {\n    let x = left ? rect.left : rect.right;\n    return { left: x, right: x, top: rect.top, bottom: rect.bottom };\n}\nfunction windowRect(win) {\n    let vp = win.visualViewport;\n    if (vp)\n        return {\n            left: 0, right: vp.width,\n            top: 0, bottom: vp.height\n        };\n    return { left: 0, right: win.innerWidth,\n        top: 0, bottom: win.innerHeight };\n}\nfunction getScale(elt, rect) {\n    let scaleX = rect.width / elt.offsetWidth;\n    let scaleY = rect.height / elt.offsetHeight;\n    if (scaleX > 0.995 && scaleX < 1.005 || !isFinite(scaleX) || Math.abs(rect.width - elt.offsetWidth) < 1)\n        scaleX = 1;\n    if (scaleY > 0.995 && scaleY < 1.005 || !isFinite(scaleY) || Math.abs(rect.height - elt.offsetHeight) < 1)\n        scaleY = 1;\n    return { scaleX, scaleY };\n}\nfunction scrollRectIntoView(dom, rect, side, x, y, xMargin, yMargin, ltr) {\n    let doc = dom.ownerDocument, win = doc.defaultView || window;\n    for (let cur = dom, stop = false; cur && !stop;) {\n        if (cur.nodeType == 1) { // Element\n            let bounding, top = cur == doc.body;\n            let scaleX = 1, scaleY = 1;\n            if (top) {\n                bounding = windowRect(win);\n            }\n            else {\n                if (/^(fixed|sticky)$/.test(getComputedStyle(cur).position))\n                    stop = true;\n                if (cur.scrollHeight <= cur.clientHeight && cur.scrollWidth <= cur.clientWidth) {\n                    cur = cur.assignedSlot || cur.parentNode;\n                    continue;\n                }\n                let rect = cur.getBoundingClientRect();\n                ({ scaleX, scaleY } = getScale(cur, rect));\n                // Make sure scrollbar width isn't included in the rectangle\n                bounding = { left: rect.left, right: rect.left + cur.clientWidth * scaleX,\n                    top: rect.top, bottom: rect.top + cur.clientHeight * scaleY };\n            }\n            let moveX = 0, moveY = 0;\n            if (y == \"nearest\") {\n                if (rect.top < bounding.top) {\n                    moveY = -(bounding.top - rect.top + yMargin);\n                    if (side > 0 && rect.bottom > bounding.bottom + moveY)\n                        moveY = rect.bottom - bounding.bottom + moveY + yMargin;\n                }\n                else if (rect.bottom > bounding.bottom) {\n                    moveY = rect.bottom - bounding.bottom + yMargin;\n                    if (side < 0 && (rect.top - moveY) < bounding.top)\n                        moveY = -(bounding.top + moveY - rect.top + yMargin);\n                }\n            }\n            else {\n                let rectHeight = rect.bottom - rect.top, boundingHeight = bounding.bottom - bounding.top;\n                let targetTop = y == \"center\" && rectHeight <= boundingHeight ? rect.top + rectHeight / 2 - boundingHeight / 2 :\n                    y == \"start\" || y == \"center\" && side < 0 ? rect.top - yMargin :\n                        rect.bottom - boundingHeight + yMargin;\n                moveY = targetTop - bounding.top;\n            }\n            if (x == \"nearest\") {\n                if (rect.left < bounding.left) {\n                    moveX = -(bounding.left - rect.left + xMargin);\n                    if (side > 0 && rect.right > bounding.right + moveX)\n                        moveX = rect.right - bounding.right + moveX + xMargin;\n                }\n                else if (rect.right > bounding.right) {\n                    moveX = rect.right - bounding.right + xMargin;\n                    if (side < 0 && rect.left < bounding.left + moveX)\n                        moveX = -(bounding.left + moveX - rect.left + xMargin);\n                }\n            }\n            else {\n                let targetLeft = x == \"center\" ? rect.left + (rect.right - rect.left) / 2 - (bounding.right - bounding.left) / 2 :\n                    (x == \"start\") == ltr ? rect.left - xMargin :\n                        rect.right - (bounding.right - bounding.left) + xMargin;\n                moveX = targetLeft - bounding.left;\n            }\n            if (moveX || moveY) {\n                if (top) {\n                    win.scrollBy(moveX, moveY);\n                }\n                else {\n                    let movedX = 0, movedY = 0;\n                    if (moveY) {\n                        let start = cur.scrollTop;\n                        cur.scrollTop += moveY / scaleY;\n                        movedY = (cur.scrollTop - start) * scaleY;\n                    }\n                    if (moveX) {\n                        let start = cur.scrollLeft;\n                        cur.scrollLeft += moveX / scaleX;\n                        movedX = (cur.scrollLeft - start) * scaleX;\n                    }\n                    rect = { left: rect.left - movedX, top: rect.top - movedY,\n                        right: rect.right - movedX, bottom: rect.bottom - movedY };\n                    if (movedX && Math.abs(movedX - moveX) < 1)\n                        x = \"nearest\";\n                    if (movedY && Math.abs(movedY - moveY) < 1)\n                        y = \"nearest\";\n                }\n            }\n            if (top)\n                break;\n            cur = cur.assignedSlot || cur.parentNode;\n        }\n        else if (cur.nodeType == 11) { // A shadow root\n            cur = cur.host;\n        }\n        else {\n            break;\n        }\n    }\n}\nfunction scrollableParents(dom) {\n    let doc = dom.ownerDocument, x, y;\n    for (let cur = dom.parentNode; cur;) {\n        if (cur == doc.body || (x && y)) {\n            break;\n        }\n        else if (cur.nodeType == 1) {\n            if (!y && cur.scrollHeight > cur.clientHeight)\n                y = cur;\n            if (!x && cur.scrollWidth > cur.clientWidth)\n                x = cur;\n            cur = cur.assignedSlot || cur.parentNode;\n        }\n        else if (cur.nodeType == 11) {\n            cur = cur.host;\n        }\n        else {\n            break;\n        }\n    }\n    return { x, y };\n}\nclass DOMSelectionState {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    eq(domSel) {\n        return this.anchorNode == domSel.anchorNode && this.anchorOffset == domSel.anchorOffset &&\n            this.focusNode == domSel.focusNode && this.focusOffset == domSel.focusOffset;\n    }\n    setRange(range) {\n        let { anchorNode, focusNode } = range;\n        // Clip offsets to node size to avoid crashes when Safari reports bogus offsets (#1152)\n        this.set(anchorNode, Math.min(range.anchorOffset, anchorNode ? maxOffset(anchorNode) : 0), focusNode, Math.min(range.focusOffset, focusNode ? maxOffset(focusNode) : 0));\n    }\n    set(anchorNode, anchorOffset, focusNode, focusOffset) {\n        this.anchorNode = anchorNode;\n        this.anchorOffset = anchorOffset;\n        this.focusNode = focusNode;\n        this.focusOffset = focusOffset;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stack = [];\n    for (let cur = dom; cur; cur = cur.parentNode) {\n        stack.push(cur, cur.scrollTop, cur.scrollLeft);\n        if (cur == cur.ownerDocument)\n            break;\n    }\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        for (let i = 0; i < stack.length;) {\n            let elt = stack[i++], top = stack[i++], left = stack[i++];\n            if (elt.scrollTop != top)\n                elt.scrollTop = top;\n            if (elt.scrollLeft != left)\n                elt.scrollLeft = left;\n        }\n    }\n}\nlet scratchRange;\nfunction textRange(node, from, to = from) {\n    let range = scratchRange || (scratchRange = document.createRange());\n    range.setEnd(node, to);\n    range.setStart(node, from);\n    return range;\n}\nfunction dispatchKey(elt, name, code, mods) {\n    let options = { key: name, code: name, keyCode: code, which: code, cancelable: true };\n    if (mods)\n        ({ altKey: options.altKey, ctrlKey: options.ctrlKey, shiftKey: options.shiftKey, metaKey: options.metaKey } = mods);\n    let down = new KeyboardEvent(\"keydown\", options);\n    down.synthetic = true;\n    elt.dispatchEvent(down);\n    let up = new KeyboardEvent(\"keyup\", options);\n    up.synthetic = true;\n    elt.dispatchEvent(up);\n    return down.defaultPrevented || up.defaultPrevented;\n}\nfunction getRoot(node) {\n    while (node) {\n        if (node && (node.nodeType == 9 || node.nodeType == 11 && node.host))\n            return node;\n        node = node.assignedSlot || node.parentNode;\n    }\n    return null;\n}\nfunction clearAttributes(node) {\n    while (node.attributes.length)\n        node.removeAttributeNode(node.attributes[0]);\n}\nfunction atElementStart(doc, selection) {\n    let node = selection.focusNode, offset = selection.focusOffset;\n    if (!node || selection.anchorNode != node || selection.anchorOffset != offset)\n        return false;\n    // Safari can report bogus offsets (#1152)\n    offset = Math.min(offset, maxOffset(node));\n    for (;;) {\n        if (offset) {\n            if (node.nodeType != 1)\n                return false;\n            let prev = node.childNodes[offset - 1];\n            if (prev.contentEditable == \"false\")\n                offset--;\n            else {\n                node = prev;\n                offset = maxOffset(node);\n            }\n        }\n        else if (node == doc) {\n            return true;\n        }\n        else {\n            offset = domIndex(node);\n            node = node.parentNode;\n        }\n    }\n}\nfunction isScrolledToBottom(elt) {\n    return elt.scrollTop > Math.max(1, elt.scrollHeight - elt.clientHeight - 4);\n}\nfunction textNodeBefore(startNode, startOffset) {\n    for (let node = startNode, offset = startOffset;;) {\n        if (node.nodeType == 3 && offset > 0) {\n            return { node: node, offset: offset };\n        }\n        else if (node.nodeType == 1 && offset > 0) {\n            if (node.contentEditable == \"false\")\n                return null;\n            node = node.childNodes[offset - 1];\n            offset = maxOffset(node);\n        }\n        else if (node.parentNode && !isBlockElement(node)) {\n            offset = domIndex(node);\n            node = node.parentNode;\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction textNodeAfter(startNode, startOffset) {\n    for (let node = startNode, offset = startOffset;;) {\n        if (node.nodeType == 3 && offset < node.nodeValue.length) {\n            return { node: node, offset: offset };\n        }\n        else if (node.nodeType == 1 && offset < node.childNodes.length) {\n            if (node.contentEditable == \"false\")\n                return null;\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else if (node.parentNode && !isBlockElement(node)) {\n            offset = domIndex(node) + 1;\n            node = node.parentNode;\n        }\n        else {\n            return null;\n        }\n    }\n}\n\nclass DOMPos {\n    constructor(node, offset, precise = true) {\n        this.node = node;\n        this.offset = offset;\n        this.precise = precise;\n    }\n    static before(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom), precise); }\n    static after(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom) + 1, precise); }\n}\nconst noChildren = [];\nclass ContentView {\n    constructor() {\n        this.parent = null;\n        this.dom = null;\n        this.flags = 2 /* ViewFlag.NodeDirty */;\n    }\n    get overrideDOMText() { return null; }\n    get posAtStart() {\n        return this.parent ? this.parent.posBefore(this) : 0;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.length;\n    }\n    posBefore(view) {\n        let pos = this.posAtStart;\n        for (let child of this.children) {\n            if (child == view)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n        throw new RangeError(\"Invalid child in posBefore\");\n    }\n    posAfter(view) {\n        return this.posBefore(view) + view.length;\n    }\n    sync(view, track) {\n        if (this.flags & 2 /* ViewFlag.NodeDirty */) {\n            let parent = this.dom;\n            let prev = null, next;\n            for (let child of this.children) {\n                if (child.flags & 7 /* ViewFlag.Dirty */) {\n                    if (!child.dom && (next = prev ? prev.nextSibling : parent.firstChild)) {\n                        let contentView = ContentView.get(next);\n                        if (!contentView || !contentView.parent && contentView.canReuseDOM(child))\n                            child.reuseDOM(next);\n                    }\n                    child.sync(view, track);\n                    child.flags &= ~7 /* ViewFlag.Dirty */;\n                }\n                next = prev ? prev.nextSibling : parent.firstChild;\n                if (track && !track.written && track.node == parent && next != child.dom)\n                    track.written = true;\n                if (child.dom.parentNode == parent) {\n                    while (next && next != child.dom)\n                        next = rm$1(next);\n                }\n                else {\n                    parent.insertBefore(child.dom, next);\n                }\n                prev = child.dom;\n            }\n            next = prev ? prev.nextSibling : parent.firstChild;\n            if (next && track && track.node == parent)\n                track.written = true;\n            while (next)\n                next = rm$1(next);\n        }\n        else if (this.flags & 1 /* ViewFlag.ChildDirty */) {\n            for (let child of this.children)\n                if (child.flags & 7 /* ViewFlag.Dirty */) {\n                    child.sync(view, track);\n                    child.flags &= ~7 /* ViewFlag.Dirty */;\n                }\n        }\n    }\n    reuseDOM(_dom) { }\n    localPosFromDOM(node, offset) {\n        let after;\n        if (node == this.dom) {\n            after = this.dom.childNodes[offset];\n        }\n        else {\n            let bias = maxOffset(node) == 0 ? 0 : offset == 0 ? -1 : 1;\n            for (;;) {\n                let parent = node.parentNode;\n                if (parent == this.dom)\n                    break;\n                if (bias == 0 && parent.firstChild != parent.lastChild) {\n                    if (node == parent.firstChild)\n                        bias = -1;\n                    else\n                        bias = 1;\n                }\n                node = parent;\n            }\n            if (bias < 0)\n                after = node;\n            else\n                after = node.nextSibling;\n        }\n        if (after == this.dom.firstChild)\n            return 0;\n        while (after && !ContentView.get(after))\n            after = after.nextSibling;\n        if (!after)\n            return this.length;\n        for (let i = 0, pos = 0;; i++) {\n            let child = this.children[i];\n            if (child.dom == after)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n    }\n    domBoundsAround(from, to, offset = 0) {\n        let fromI = -1, fromStart = -1, toI = -1, toEnd = -1;\n        for (let i = 0, pos = offset, prevEnd = offset; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (pos < from && end > to)\n                return child.domBoundsAround(from, to, pos);\n            if (end >= from && fromI == -1) {\n                fromI = i;\n                fromStart = pos;\n            }\n            if (pos > to && child.dom.parentNode == this.dom) {\n                toI = i;\n                toEnd = prevEnd;\n                break;\n            }\n            prevEnd = end;\n            pos = end + child.breakAfter;\n        }\n        return { from: fromStart, to: toEnd < 0 ? offset + this.length : toEnd,\n            startDOM: (fromI ? this.children[fromI - 1].dom.nextSibling : null) || this.dom.firstChild,\n            endDOM: toI < this.children.length && toI >= 0 ? this.children[toI].dom : null };\n    }\n    markDirty(andParent = false) {\n        this.flags |= 2 /* ViewFlag.NodeDirty */;\n        this.markParentsDirty(andParent);\n    }\n    markParentsDirty(childList) {\n        for (let parent = this.parent; parent; parent = parent.parent) {\n            if (childList)\n                parent.flags |= 2 /* ViewFlag.NodeDirty */;\n            if (parent.flags & 1 /* ViewFlag.ChildDirty */)\n                return;\n            parent.flags |= 1 /* ViewFlag.ChildDirty */;\n            childList = false;\n        }\n    }\n    setParent(parent) {\n        if (this.parent != parent) {\n            this.parent = parent;\n            if (this.flags & 7 /* ViewFlag.Dirty */)\n                this.markParentsDirty(true);\n        }\n    }\n    setDOM(dom) {\n        if (this.dom == dom)\n            return;\n        if (this.dom)\n            this.dom.cmView = null;\n        this.dom = dom;\n        dom.cmView = this;\n    }\n    get rootView() {\n        for (let v = this;;) {\n            let parent = v.parent;\n            if (!parent)\n                return v;\n            v = parent;\n        }\n    }\n    replaceChildren(from, to, children = noChildren) {\n        this.markDirty();\n        for (let i = from; i < to; i++) {\n            let child = this.children[i];\n            if (child.parent == this && children.indexOf(child) < 0)\n                child.destroy();\n        }\n        if (children.length < 250)\n            this.children.splice(from, to - from, ...children);\n        else\n            this.children = [].concat(this.children.slice(0, from), children, this.children.slice(to));\n        for (let i = 0; i < children.length; i++)\n            children[i].setParent(this);\n    }\n    ignoreMutation(_rec) { return false; }\n    ignoreEvent(_event) { return false; }\n    childCursor(pos = this.length) {\n        return new ChildCursor(this.children, pos, this.children.length);\n    }\n    childPos(pos, bias = 1) {\n        return this.childCursor().findPos(pos, bias);\n    }\n    toString() {\n        let name = this.constructor.name.replace(\"View\", \"\");\n        return name + (this.children.length ? \"(\" + this.children.join() + \")\" :\n            this.length ? \"[\" + (name == \"Text\" ? this.text : this.length) + \"]\" : \"\") +\n            (this.breakAfter ? \"#\" : \"\");\n    }\n    static get(node) { return node.cmView; }\n    get isEditable() { return true; }\n    get isWidget() { return false; }\n    get isHidden() { return false; }\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        return false;\n    }\n    become(other) { return false; }\n    canReuseDOM(other) {\n        return other.constructor == this.constructor && !((this.flags | other.flags) & 8 /* ViewFlag.Composition */);\n    }\n    // When this is a zero-length view with a side, this should return a\n    // number <= 0 to indicate it is before its position, or a\n    // number > 0 when after its position.\n    getSide() { return 0; }\n    destroy() {\n        for (let child of this.children)\n            if (child.parent == this)\n                child.destroy();\n        this.parent = null;\n    }\n}\nContentView.prototype.breakAfter = 0;\n// Remove a DOM node and return its next sibling.\nfunction rm$1(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\nclass ChildCursor {\n    constructor(children, pos, i) {\n        this.children = children;\n        this.pos = pos;\n        this.i = i;\n        this.off = 0;\n    }\n    findPos(pos, bias = 1) {\n        for (;;) {\n            if (pos > this.pos || pos == this.pos &&\n                (bias > 0 || this.i == 0 || this.children[this.i - 1].breakAfter)) {\n                this.off = pos - this.pos;\n                return this;\n            }\n            let next = this.children[--this.i];\n            this.pos -= next.length + next.breakAfter;\n        }\n    }\n}\nfunction replaceRange(parent, fromI, fromOff, toI, toOff, insert, breakAtStart, openStart, openEnd) {\n    let { children } = parent;\n    let before = children.length ? children[fromI] : null;\n    let last = insert.length ? insert[insert.length - 1] : null;\n    let breakAtEnd = last ? last.breakAfter : breakAtStart;\n    // Change within a single child\n    if (fromI == toI && before && !breakAtStart && !breakAtEnd && insert.length < 2 &&\n        before.merge(fromOff, toOff, insert.length ? last : null, fromOff == 0, openStart, openEnd))\n        return;\n    if (toI < children.length) {\n        let after = children[toI];\n        // Make sure the end of the child after the update is preserved in `after`\n        if (after && (toOff < after.length || after.breakAfter && (last === null || last === void 0 ? void 0 : last.breakAfter))) {\n            // If we're splitting a child, separate part of it to avoid that\n            // being mangled when updating the child before the update.\n            if (fromI == toI) {\n                after = after.split(toOff);\n                toOff = 0;\n            }\n            // If the element after the replacement should be merged with\n            // the last replacing element, update `content`\n            if (!breakAtEnd && last && after.merge(0, toOff, last, true, 0, openEnd)) {\n                insert[insert.length - 1] = after;\n            }\n            else {\n                // Remove the start of the after element, if necessary, and\n                // add it to `content`.\n                if (toOff || after.children.length && !after.children[0].length)\n                    after.merge(0, toOff, null, false, 0, openEnd);\n                insert.push(after);\n            }\n        }\n        else if (after === null || after === void 0 ? void 0 : after.breakAfter) {\n            // The element at `toI` is entirely covered by this range.\n            // Preserve its line break, if any.\n            if (last)\n                last.breakAfter = 1;\n            else\n                breakAtStart = 1;\n        }\n        // Since we've handled the next element from the current elements\n        // now, make sure `toI` points after that.\n        toI++;\n    }\n    if (before) {\n        before.breakAfter = breakAtStart;\n        if (fromOff > 0) {\n            if (!breakAtStart && insert.length && before.merge(fromOff, before.length, insert[0], false, openStart, 0)) {\n                before.breakAfter = insert.shift().breakAfter;\n            }\n            else if (fromOff < before.length || before.children.length && before.children[before.children.length - 1].length == 0) {\n                before.merge(fromOff, before.length, null, false, openStart, 0);\n            }\n            fromI++;\n        }\n    }\n    // Try to merge widgets on the boundaries of the replacement\n    while (fromI < toI && insert.length) {\n        if (children[toI - 1].become(insert[insert.length - 1])) {\n            toI--;\n            insert.pop();\n            openEnd = insert.length ? 0 : openStart;\n        }\n        else if (children[fromI].become(insert[0])) {\n            fromI++;\n            insert.shift();\n            openStart = insert.length ? 0 : openEnd;\n        }\n        else {\n            break;\n        }\n    }\n    if (!insert.length && fromI && toI < children.length && !children[fromI - 1].breakAfter &&\n        children[toI].merge(0, 0, children[fromI - 1], false, openStart, openEnd))\n        fromI--;\n    if (fromI < toI || insert.length)\n        parent.replaceChildren(fromI, toI, insert);\n}\nfunction mergeChildrenInto(parent, from, to, insert, openStart, openEnd) {\n    let cur = parent.childCursor();\n    let { i: toI, off: toOff } = cur.findPos(to, 1);\n    let { i: fromI, off: fromOff } = cur.findPos(from, -1);\n    let dLen = from - to;\n    for (let view of insert)\n        dLen += view.length;\n    parent.length += dLen;\n    replaceRange(parent, fromI, fromOff, toI, toOff, insert, 0, openStart, openEnd);\n}\n\nlet nav = typeof navigator != \"undefined\" ? navigator : { userAgent: \"\", vendor: \"\", platform: \"\" };\nlet doc = typeof document != \"undefined\" ? document : { documentElement: { style: {} } };\nconst ie_edge = /*@__PURE__*//Edge\\/(\\d+)/.exec(nav.userAgent);\nconst ie_upto10 = /*@__PURE__*//MSIE \\d/.test(nav.userAgent);\nconst ie_11up = /*@__PURE__*//Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(nav.userAgent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst gecko = !ie && /*@__PURE__*//gecko\\/(\\d+)/i.test(nav.userAgent);\nconst chrome = !ie && /*@__PURE__*//Chrome\\/(\\d+)/.exec(nav.userAgent);\nconst webkit = \"webkitFontSmoothing\" in doc.documentElement.style;\nconst safari = !ie && /*@__PURE__*//Apple Computer/.test(nav.vendor);\nconst ios = safari && (/*@__PURE__*//Mobile\\/\\w+/.test(nav.userAgent) || nav.maxTouchPoints > 2);\nvar browser = {\n    mac: ios || /*@__PURE__*//Mac/.test(nav.platform),\n    windows: /*@__PURE__*//Win/.test(nav.platform),\n    linux: /*@__PURE__*//Linux|X11/.test(nav.platform),\n    ie,\n    ie_version: ie_upto10 ? doc.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0,\n    gecko,\n    gecko_version: gecko ? +(/*@__PURE__*//Firefox\\/(\\d+)/.exec(nav.userAgent) || [0, 0])[1] : 0,\n    chrome: !!chrome,\n    chrome_version: chrome ? +chrome[1] : 0,\n    ios,\n    android: /*@__PURE__*//Android\\b/.test(nav.userAgent),\n    webkit,\n    safari,\n    webkit_version: webkit ? +(/*@__PURE__*//\\bAppleWebKit\\/(\\d+)/.exec(nav.userAgent) || [0, 0])[1] : 0,\n    tabSize: doc.documentElement.style.tabSize != null ? \"tab-size\" : \"-moz-tab-size\"\n};\n\nconst MaxJoinLen = 256;\nclass TextView extends ContentView {\n    constructor(text) {\n        super();\n        this.text = text;\n    }\n    get length() { return this.text.length; }\n    createDOM(textDOM) {\n        this.setDOM(textDOM || document.createTextNode(this.text));\n    }\n    sync(view, track) {\n        if (!this.dom)\n            this.createDOM();\n        if (this.dom.nodeValue != this.text) {\n            if (track && track.node == this.dom)\n                track.written = true;\n            this.dom.nodeValue = this.text;\n        }\n    }\n    reuseDOM(dom) {\n        if (dom.nodeType == 3)\n            this.createDOM(dom);\n    }\n    merge(from, to, source) {\n        if ((this.flags & 8 /* ViewFlag.Composition */) ||\n            source && (!(source instanceof TextView) ||\n                this.length - (to - from) + source.length > MaxJoinLen ||\n                (source.flags & 8 /* ViewFlag.Composition */)))\n            return false;\n        this.text = this.text.slice(0, from) + (source ? source.text : \"\") + this.text.slice(to);\n        this.markDirty();\n        return true;\n    }\n    split(from) {\n        let result = new TextView(this.text.slice(from));\n        this.text = this.text.slice(0, from);\n        this.markDirty();\n        result.flags |= this.flags & 8 /* ViewFlag.Composition */;\n        return result;\n    }\n    localPosFromDOM(node, offset) {\n        return node == this.dom ? offset : offset ? this.text.length : 0;\n    }\n    domAtPos(pos) { return new DOMPos(this.dom, pos); }\n    domBoundsAround(_from, _to, offset) {\n        return { from: offset, to: offset + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };\n    }\n    coordsAt(pos, side) {\n        return textCoords(this.dom, pos, side);\n    }\n}\nclass MarkView extends ContentView {\n    constructor(mark, children = [], length = 0) {\n        super();\n        this.mark = mark;\n        this.children = children;\n        this.length = length;\n        for (let ch of children)\n            ch.setParent(this);\n    }\n    setAttrs(dom) {\n        clearAttributes(dom);\n        if (this.mark.class)\n            dom.className = this.mark.class;\n        if (this.mark.attrs)\n            for (let name in this.mark.attrs)\n                dom.setAttribute(name, this.mark.attrs[name]);\n        return dom;\n    }\n    canReuseDOM(other) {\n        return super.canReuseDOM(other) && !((this.flags | other.flags) & 8 /* ViewFlag.Composition */);\n    }\n    reuseDOM(node) {\n        if (node.nodeName == this.mark.tagName.toUpperCase()) {\n            this.setDOM(node);\n            this.flags |= 4 /* ViewFlag.AttrsDirty */ | 2 /* ViewFlag.NodeDirty */;\n        }\n    }\n    sync(view, track) {\n        if (!this.dom)\n            this.setDOM(this.setAttrs(document.createElement(this.mark.tagName)));\n        else if (this.flags & 4 /* ViewFlag.AttrsDirty */)\n            this.setAttrs(this.dom);\n        super.sync(view, track);\n    }\n    merge(from, to, source, _hasStart, openStart, openEnd) {\n        if (source && (!(source instanceof MarkView && source.mark.eq(this.mark)) ||\n            (from && openStart <= 0) || (to < this.length && openEnd <= 0)))\n            return false;\n        mergeChildrenInto(this, from, to, source ? source.children.slice() : [], openStart - 1, openEnd - 1);\n        this.markDirty();\n        return true;\n    }\n    split(from) {\n        let result = [], off = 0, detachFrom = -1, i = 0;\n        for (let elt of this.children) {\n            let end = off + elt.length;\n            if (end > from)\n                result.push(off < from ? elt.split(from - off) : elt);\n            if (detachFrom < 0 && off >= from)\n                detachFrom = i;\n            off = end;\n            i++;\n        }\n        let length = this.length - from;\n        this.length = from;\n        if (detachFrom > -1) {\n            this.children.length = detachFrom;\n            this.markDirty();\n        }\n        return new MarkView(this.mark, result, length);\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this, pos);\n    }\n    coordsAt(pos, side) {\n        return coordsInChildren(this, pos, side);\n    }\n}\nfunction textCoords(text, pos, side) {\n    let length = text.nodeValue.length;\n    if (pos > length)\n        pos = length;\n    let from = pos, to = pos, flatten = 0;\n    if (pos == 0 && side < 0 || pos == length && side >= 0) {\n        if (!(browser.chrome || browser.gecko)) { // These browsers reliably return valid rectangles for empty ranges\n            if (pos) {\n                from--;\n                flatten = 1;\n            } // FIXME this is wrong in RTL text\n            else if (to < length) {\n                to++;\n                flatten = -1;\n            }\n        }\n    }\n    else {\n        if (side < 0)\n            from--;\n        else if (to < length)\n            to++;\n    }\n    let rects = textRange(text, from, to).getClientRects();\n    if (!rects.length)\n        return null;\n    let rect = rects[(flatten ? flatten < 0 : side >= 0) ? 0 : rects.length - 1];\n    if (browser.safari && !flatten && rect.width == 0)\n        rect = Array.prototype.find.call(rects, r => r.width) || rect;\n    return flatten ? flattenRect(rect, flatten < 0) : rect || null;\n}\n// Also used for collapsed ranges that don't have a placeholder widget!\nclass WidgetView extends ContentView {\n    static create(widget, length, side) {\n        return new WidgetView(widget, length, side);\n    }\n    constructor(widget, length, side) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.side = side;\n        this.prevWidget = null;\n    }\n    split(from) {\n        let result = WidgetView.create(this.widget, this.length - from, this.side);\n        this.length -= from;\n        return result;\n    }\n    sync(view) {\n        if (!this.dom || !this.widget.updateDOM(this.dom, view)) {\n            if (this.dom && this.prevWidget)\n                this.prevWidget.destroy(this.dom);\n            this.prevWidget = null;\n            this.setDOM(this.widget.toDOM(view));\n            if (!this.widget.editable)\n                this.dom.contentEditable = \"false\";\n        }\n    }\n    getSide() { return this.side; }\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        if (source && (!(source instanceof WidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    become(other) {\n        if (other instanceof WidgetView && other.side == this.side &&\n            this.widget.constructor == other.widget.constructor) {\n            if (!this.widget.compare(other.widget))\n                this.markDirty(true);\n            if (this.dom && !this.prevWidget)\n                this.prevWidget = this.widget;\n            this.widget = other.widget;\n            this.length = other.length;\n            return true;\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n    get overrideDOMText() {\n        if (this.length == 0)\n            return Text.empty;\n        let top = this;\n        while (top.parent)\n            top = top.parent;\n        let { view } = top, text = view && view.state.doc, start = this.posAtStart;\n        return text ? text.slice(start, start + this.length) : Text.empty;\n    }\n    domAtPos(pos) {\n        return (this.length ? pos == 0 : this.side > 0)\n            ? DOMPos.before(this.dom)\n            : DOMPos.after(this.dom, pos == this.length);\n    }\n    domBoundsAround() { return null; }\n    coordsAt(pos, side) {\n        let custom = this.widget.coordsAt(this.dom, pos, side);\n        if (custom)\n            return custom;\n        let rects = this.dom.getClientRects(), rect = null;\n        if (!rects.length)\n            return null;\n        let fromBack = this.side ? this.side < 0 : pos > 0;\n        for (let i = fromBack ? rects.length - 1 : 0;; i += (fromBack ? -1 : 1)) {\n            rect = rects[i];\n            if (pos > 0 ? i == 0 : i == rects.length - 1 || rect.top < rect.bottom)\n                break;\n        }\n        return flattenRect(rect, !fromBack);\n    }\n    get isEditable() { return false; }\n    get isWidget() { return true; }\n    get isHidden() { return this.widget.isHidden; }\n    destroy() {\n        super.destroy();\n        if (this.dom)\n            this.widget.destroy(this.dom);\n    }\n}\n// These are drawn around uneditable widgets to avoid a number of\n// browser bugs that show up when the cursor is directly next to\n// uneditable inline content.\nclass WidgetBufferView extends ContentView {\n    constructor(side) {\n        super();\n        this.side = side;\n    }\n    get length() { return 0; }\n    merge() { return false; }\n    become(other) {\n        return other instanceof WidgetBufferView && other.side == this.side;\n    }\n    split() { return new WidgetBufferView(this.side); }\n    sync() {\n        if (!this.dom) {\n            let dom = document.createElement(\"img\");\n            dom.className = \"cm-widgetBuffer\";\n            dom.setAttribute(\"aria-hidden\", \"true\");\n            this.setDOM(dom);\n        }\n    }\n    getSide() { return this.side; }\n    domAtPos(pos) { return this.side > 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom); }\n    localPosFromDOM() { return 0; }\n    domBoundsAround() { return null; }\n    coordsAt(pos) {\n        return this.dom.getBoundingClientRect();\n    }\n    get overrideDOMText() {\n        return Text.empty;\n    }\n    get isHidden() { return true; }\n}\nTextView.prototype.children = WidgetView.prototype.children = WidgetBufferView.prototype.children = noChildren;\nfunction inlineDOMAtPos(parent, pos) {\n    let dom = parent.dom, { children } = parent, i = 0;\n    for (let off = 0; i < children.length; i++) {\n        let child = children[i], end = off + child.length;\n        if (end == off && child.getSide() <= 0)\n            continue;\n        if (pos > off && pos < end && child.dom.parentNode == dom)\n            return child.domAtPos(pos - off);\n        if (pos <= off)\n            break;\n        off = end;\n    }\n    for (let j = i; j > 0; j--) {\n        let prev = children[j - 1];\n        if (prev.dom.parentNode == dom)\n            return prev.domAtPos(prev.length);\n    }\n    for (let j = i; j < children.length; j++) {\n        let next = children[j];\n        if (next.dom.parentNode == dom)\n            return next.domAtPos(0);\n    }\n    return new DOMPos(dom, 0);\n}\n// Assumes `view`, if a mark view, has precisely 1 child.\nfunction joinInlineInto(parent, view, open) {\n    let last, { children } = parent;\n    if (open > 0 && view instanceof MarkView && children.length &&\n        (last = children[children.length - 1]) instanceof MarkView && last.mark.eq(view.mark)) {\n        joinInlineInto(last, view.children[0], open - 1);\n    }\n    else {\n        children.push(view);\n        view.setParent(parent);\n    }\n    parent.length += view.length;\n}\nfunction coordsInChildren(view, pos, side) {\n    let before = null, beforePos = -1, after = null, afterPos = -1;\n    function scan(view, pos) {\n        for (let i = 0, off = 0; i < view.children.length && off <= pos; i++) {\n            let child = view.children[i], end = off + child.length;\n            if (end >= pos) {\n                if (child.children.length) {\n                    scan(child, pos - off);\n                }\n                else if ((!after || after.isHidden && side > 0) &&\n                    (end > pos || off == end && child.getSide() > 0)) {\n                    after = child;\n                    afterPos = pos - off;\n                }\n                else if (off < pos || (off == end && child.getSide() < 0) && !child.isHidden) {\n                    before = child;\n                    beforePos = pos - off;\n                }\n            }\n            off = end;\n        }\n    }\n    scan(view, pos);\n    let target = (side < 0 ? before : after) || before || after;\n    if (target)\n        return target.coordsAt(Math.max(0, target == before ? beforePos : afterPos), side);\n    return fallbackRect(view);\n}\nfunction fallbackRect(view) {\n    let last = view.dom.lastChild;\n    if (!last)\n        return view.dom.getBoundingClientRect();\n    let rects = clientRectsFor(last);\n    return rects[rects.length - 1] || null;\n}\n\nfunction combineAttrs(source, target) {\n    for (let name in source) {\n        if (name == \"class\" && target.class)\n            target.class += \" \" + source.class;\n        else if (name == \"style\" && target.style)\n            target.style += \";\" + source.style;\n        else\n            target[name] = source[name];\n    }\n    return target;\n}\nconst noAttrs = /*@__PURE__*/Object.create(null);\nfunction attrsEq(a, b, ignore) {\n    if (a == b)\n        return true;\n    if (!a)\n        a = noAttrs;\n    if (!b)\n        b = noAttrs;\n    let keysA = Object.keys(a), keysB = Object.keys(b);\n    if (keysA.length - (ignore && keysA.indexOf(ignore) > -1 ? 1 : 0) !=\n        keysB.length - (ignore && keysB.indexOf(ignore) > -1 ? 1 : 0))\n        return false;\n    for (let key of keysA) {\n        if (key != ignore && (keysB.indexOf(key) == -1 || a[key] !== b[key]))\n            return false;\n    }\n    return true;\n}\nfunction updateAttrs(dom, prev, attrs) {\n    let changed = false;\n    if (prev)\n        for (let name in prev)\n            if (!(attrs && name in attrs)) {\n                changed = true;\n                if (name == \"style\")\n                    dom.style.cssText = \"\";\n                else\n                    dom.removeAttribute(name);\n            }\n    if (attrs)\n        for (let name in attrs)\n            if (!(prev && prev[name] == attrs[name])) {\n                changed = true;\n                if (name == \"style\")\n                    dom.style.cssText = attrs[name];\n                else\n                    dom.setAttribute(name, attrs[name]);\n            }\n    return changed;\n}\nfunction getAttrs(dom) {\n    let attrs = Object.create(null);\n    for (let i = 0; i < dom.attributes.length; i++) {\n        let attr = dom.attributes[i];\n        attrs[attr.name] = attr.value;\n    }\n    return attrs;\n}\n\n/**\nWidgets added to the content are described by subclasses of this\nclass. Using a description object like that makes it possible to\ndelay creating of the DOM structure for a widget until it is\nneeded, and to avoid redrawing widgets even if the decorations\nthat define them are recreated.\n*/\nclass WidgetType {\n    /**\n    Compare this instance to another instance of the same type.\n    (TypeScript can't express this, but only instances of the same\n    specific class will be passed to this method.) This is used to\n    avoid redrawing widgets when they are replaced by a new\n    decoration of the same type. The default implementation just\n    returns `false`, which will cause new instances of the widget to\n    always be redrawn.\n    */\n    eq(widget) { return false; }\n    /**\n    Update a DOM element created by a widget of the same type (but\n    different, non-`eq` content) to reflect this widget. May return\n    true to indicate that it could update, false to indicate it\n    couldn't (in which case the widget will be redrawn). The default\n    implementation just returns false.\n    */\n    updateDOM(dom, view) { return false; }\n    /**\n    @internal\n    */\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /**\n    The estimated height this widget will have, to be used when\n    estimating the height of content that hasn't been drawn. May\n    return -1 to indicate you don't know. The default implementation\n    returns -1.\n    */\n    get estimatedHeight() { return -1; }\n    /**\n    For inline widgets that are displayed inline (as opposed to\n    `inline-block`) and introduce line breaks (through `<br>` tags\n    or textual newlines), this must indicate the amount of line\n    breaks they introduce. Defaults to 0.\n    */\n    get lineBreaks() { return 0; }\n    /**\n    Can be used to configure which kinds of events inside the widget\n    should be ignored by the editor. The default is to ignore all\n    events.\n    */\n    ignoreEvent(event) { return true; }\n    /**\n    Override the way screen coordinates for positions at/in the\n    widget are found. `pos` will be the offset into the widget, and\n    `side` the side of the position that is being queried\u2014less than\n    zero for before, greater than zero for after, and zero for\n    directly at that position.\n    */\n    coordsAt(dom, pos, side) { return null; }\n    /**\n    @internal\n    */\n    get isHidden() { return false; }\n    /**\n    @internal\n    */\n    get editable() { return false; }\n    /**\n    This is called when the an instance of the widget is removed\n    from the editor view.\n    */\n    destroy(dom) { }\n}\n/**\nThe different types of blocks that can occur in an editor view.\n*/\nvar BlockType = /*@__PURE__*/(function (BlockType) {\n    /**\n    A line of text.\n    */\n    BlockType[BlockType[\"Text\"] = 0] = \"Text\";\n    /**\n    A block widget associated with the position after it.\n    */\n    BlockType[BlockType[\"WidgetBefore\"] = 1] = \"WidgetBefore\";\n    /**\n    A block widget associated with the position before it.\n    */\n    BlockType[BlockType[\"WidgetAfter\"] = 2] = \"WidgetAfter\";\n    /**\n    A block widget [replacing](https://codemirror.net/6/docs/ref/#view.Decoration^replace) a range of content.\n    */\n    BlockType[BlockType[\"WidgetRange\"] = 3] = \"WidgetRange\";\nreturn BlockType})(BlockType || (BlockType = {}));\n/**\nA decoration provides information on how to draw or style a piece\nof content. You'll usually use it wrapped in a\n[`Range`](https://codemirror.net/6/docs/ref/#state.Range), which adds a start and end position.\n@nonabstract\n*/\nclass Decoration extends RangeValue {\n    constructor(\n    /**\n    @internal\n    */\n    startSide, \n    /**\n    @internal\n    */\n    endSide, \n    /**\n    @internal\n    */\n    widget, \n    /**\n    The config object used to create this decoration. You can\n    include additional properties in there to store metadata about\n    your decoration.\n    */\n    spec) {\n        super();\n        this.startSide = startSide;\n        this.endSide = endSide;\n        this.widget = widget;\n        this.spec = spec;\n    }\n    /**\n    @internal\n    */\n    get heightRelevant() { return false; }\n    /**\n    Create a mark decoration, which influences the styling of the\n    content in its range. Nested mark decorations will cause nested\n    DOM elements to be created. Nesting order is determined by\n    precedence of the [facet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), with\n    the higher-precedence decorations creating the inner DOM nodes.\n    Such elements are split on line boundaries and on the boundaries\n    of lower-precedence decorations.\n    */\n    static mark(spec) {\n        return new MarkDecoration(spec);\n    }\n    /**\n    Create a widget decoration, which displays a DOM element at the\n    given position.\n    */\n    static widget(spec) {\n        let side = Math.max(-10000, Math.min(10000, spec.side || 0)), block = !!spec.block;\n        side += (block && !spec.inlineOrder)\n            ? (side > 0 ? 300000000 /* Side.BlockAfter */ : -400000000 /* Side.BlockBefore */)\n            : (side > 0 ? 100000000 /* Side.InlineAfter */ : -100000000 /* Side.InlineBefore */);\n        return new PointDecoration(spec, side, side, block, spec.widget || null, false);\n    }\n    /**\n    Create a replace decoration which replaces the given range with\n    a widget, or simply hides it.\n    */\n    static replace(spec) {\n        let block = !!spec.block, startSide, endSide;\n        if (spec.isBlockGap) {\n            startSide = -500000000 /* Side.GapStart */;\n            endSide = 400000000 /* Side.GapEnd */;\n        }\n        else {\n            let { start, end } = getInclusive(spec, block);\n            startSide = (start ? (block ? -300000000 /* Side.BlockIncStart */ : -1 /* Side.InlineIncStart */) : 500000000 /* Side.NonIncStart */) - 1;\n            endSide = (end ? (block ? 200000000 /* Side.BlockIncEnd */ : 1 /* Side.InlineIncEnd */) : -600000000 /* Side.NonIncEnd */) + 1;\n        }\n        return new PointDecoration(spec, startSide, endSide, block, spec.widget || null, true);\n    }\n    /**\n    Create a line decoration, which can add DOM attributes to the\n    line starting at the given position.\n    */\n    static line(spec) {\n        return new LineDecoration(spec);\n    }\n    /**\n    Build a [`DecorationSet`](https://codemirror.net/6/docs/ref/#view.DecorationSet) from the given\n    decorated range or ranges. If the ranges aren't already sorted,\n    pass `true` for `sort` to make the library sort them for you.\n    */\n    static set(of, sort = false) {\n        return RangeSet.of(of, sort);\n    }\n    /**\n    @internal\n    */\n    hasHeight() { return this.widget ? this.widget.estimatedHeight > -1 : false; }\n}\n/**\nThe empty set of decorations.\n*/\nDecoration.none = RangeSet.empty;\nclass MarkDecoration extends Decoration {\n    constructor(spec) {\n        let { start, end } = getInclusive(spec);\n        super(start ? -1 /* Side.InlineIncStart */ : 500000000 /* Side.NonIncStart */, end ? 1 /* Side.InlineIncEnd */ : -600000000 /* Side.NonIncEnd */, null, spec);\n        this.tagName = spec.tagName || \"span\";\n        this.class = spec.class || \"\";\n        this.attrs = spec.attributes || null;\n    }\n    eq(other) {\n        var _a, _b;\n        return this == other ||\n            other instanceof MarkDecoration &&\n                this.tagName == other.tagName &&\n                (this.class || ((_a = this.attrs) === null || _a === void 0 ? void 0 : _a.class)) == (other.class || ((_b = other.attrs) === null || _b === void 0 ? void 0 : _b.class)) &&\n                attrsEq(this.attrs, other.attrs, \"class\");\n    }\n    range(from, to = from) {\n        if (from >= to)\n            throw new RangeError(\"Mark decorations may not be empty\");\n        return super.range(from, to);\n    }\n}\nMarkDecoration.prototype.point = false;\nclass LineDecoration extends Decoration {\n    constructor(spec) {\n        super(-200000000 /* Side.Line */, -200000000 /* Side.Line */, null, spec);\n    }\n    eq(other) {\n        return other instanceof LineDecoration &&\n            this.spec.class == other.spec.class &&\n            attrsEq(this.spec.attributes, other.spec.attributes);\n    }\n    range(from, to = from) {\n        if (to != from)\n            throw new RangeError(\"Line decoration ranges must be zero-length\");\n        return super.range(from, to);\n    }\n}\nLineDecoration.prototype.mapMode = MapMode.TrackBefore;\nLineDecoration.prototype.point = true;\nclass PointDecoration extends Decoration {\n    constructor(spec, startSide, endSide, block, widget, isReplace) {\n        super(startSide, endSide, widget, spec);\n        this.block = block;\n        this.isReplace = isReplace;\n        this.mapMode = !block ? MapMode.TrackDel : startSide <= 0 ? MapMode.TrackBefore : MapMode.TrackAfter;\n    }\n    // Only relevant when this.block == true\n    get type() {\n        return this.startSide != this.endSide ? BlockType.WidgetRange\n            : this.startSide <= 0 ? BlockType.WidgetBefore : BlockType.WidgetAfter;\n    }\n    get heightRelevant() {\n        return this.block || !!this.widget && (this.widget.estimatedHeight >= 5 || this.widget.lineBreaks > 0);\n    }\n    eq(other) {\n        return other instanceof PointDecoration &&\n            widgetsEq(this.widget, other.widget) &&\n            this.block == other.block &&\n            this.startSide == other.startSide && this.endSide == other.endSide;\n    }\n    range(from, to = from) {\n        if (this.isReplace && (from > to || (from == to && this.startSide > 0 && this.endSide <= 0)))\n            throw new RangeError(\"Invalid range for replacement decoration\");\n        if (!this.isReplace && to != from)\n            throw new RangeError(\"Widget decorations can only have zero-length ranges\");\n        return super.range(from, to);\n    }\n}\nPointDecoration.prototype.point = true;\nfunction getInclusive(spec, block = false) {\n    let { inclusiveStart: start, inclusiveEnd: end } = spec;\n    if (start == null)\n        start = spec.inclusive;\n    if (end == null)\n        end = spec.inclusive;\n    return { start: start !== null && start !== void 0 ? start : block, end: end !== null && end !== void 0 ? end : block };\n}\nfunction widgetsEq(a, b) {\n    return a == b || !!(a && b && a.compare(b));\n}\nfunction addRange(from, to, ranges, margin = 0) {\n    let last = ranges.length - 1;\n    if (last >= 0 && ranges[last] + margin >= from)\n        ranges[last] = Math.max(ranges[last], to);\n    else\n        ranges.push(from, to);\n}\n\nclass LineView extends ContentView {\n    constructor() {\n        super(...arguments);\n        this.children = [];\n        this.length = 0;\n        this.prevAttrs = undefined;\n        this.attrs = null;\n        this.breakAfter = 0;\n    }\n    // Consumes source\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        if (source) {\n            if (!(source instanceof LineView))\n                return false;\n            if (!this.dom)\n                source.transferDOM(this); // Reuse source.dom when appropriate\n        }\n        if (hasStart)\n            this.setDeco(source ? source.attrs : null);\n        mergeChildrenInto(this, from, to, source ? source.children.slice() : [], openStart, openEnd);\n        return true;\n    }\n    split(at) {\n        let end = new LineView;\n        end.breakAfter = this.breakAfter;\n        if (this.length == 0)\n            return end;\n        let { i, off } = this.childPos(at);\n        if (off) {\n            end.append(this.children[i].split(off), 0);\n            this.children[i].merge(off, this.children[i].length, null, false, 0, 0);\n            i++;\n        }\n        for (let j = i; j < this.children.length; j++)\n            end.append(this.children[j], 0);\n        while (i > 0 && this.children[i - 1].length == 0)\n            this.children[--i].destroy();\n        this.children.length = i;\n        this.markDirty();\n        this.length = at;\n        return end;\n    }\n    transferDOM(other) {\n        if (!this.dom)\n            return;\n        this.markDirty();\n        other.setDOM(this.dom);\n        other.prevAttrs = this.prevAttrs === undefined ? this.attrs : this.prevAttrs;\n        this.prevAttrs = undefined;\n        this.dom = null;\n    }\n    setDeco(attrs) {\n        if (!attrsEq(this.attrs, attrs)) {\n            if (this.dom) {\n                this.prevAttrs = this.attrs;\n                this.markDirty();\n            }\n            this.attrs = attrs;\n        }\n    }\n    append(child, openStart) {\n        joinInlineInto(this, child, openStart);\n    }\n    // Only called when building a line view in ContentBuilder\n    addLineDeco(deco) {\n        let attrs = deco.spec.attributes, cls = deco.spec.class;\n        if (attrs)\n            this.attrs = combineAttrs(attrs, this.attrs || {});\n        if (cls)\n            this.attrs = combineAttrs({ class: cls }, this.attrs || {});\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this, pos);\n    }\n    reuseDOM(node) {\n        if (node.nodeName == \"DIV\") {\n            this.setDOM(node);\n            this.flags |= 4 /* ViewFlag.AttrsDirty */ | 2 /* ViewFlag.NodeDirty */;\n        }\n    }\n    sync(view, track) {\n        var _a;\n        if (!this.dom) {\n            this.setDOM(document.createElement(\"div\"));\n            this.dom.className = \"cm-line\";\n            this.prevAttrs = this.attrs ? null : undefined;\n        }\n        else if (this.flags & 4 /* ViewFlag.AttrsDirty */) {\n            clearAttributes(this.dom);\n            this.dom.className = \"cm-line\";\n            this.prevAttrs = this.attrs ? null : undefined;\n        }\n        if (this.prevAttrs !== undefined) {\n            updateAttrs(this.dom, this.prevAttrs, this.attrs);\n            this.dom.classList.add(\"cm-line\");\n            this.prevAttrs = undefined;\n        }\n        super.sync(view, track);\n        let last = this.dom.lastChild;\n        while (last && ContentView.get(last) instanceof MarkView)\n            last = last.lastChild;\n        if (!last || !this.length ||\n            last.nodeName != \"BR\" && ((_a = ContentView.get(last)) === null || _a === void 0 ? void 0 : _a.isEditable) == false &&\n                (!browser.ios || !this.children.some(ch => ch instanceof TextView))) {\n            let hack = document.createElement(\"BR\");\n            hack.cmIgnore = true;\n            this.dom.appendChild(hack);\n        }\n    }\n    measureTextSize() {\n        if (this.children.length == 0 || this.length > 20)\n            return null;\n        let totalWidth = 0, textHeight;\n        for (let child of this.children) {\n            if (!(child instanceof TextView) || /[^ -~]/.test(child.text))\n                return null;\n            let rects = clientRectsFor(child.dom);\n            if (rects.length != 1)\n                return null;\n            totalWidth += rects[0].width;\n            textHeight = rects[0].height;\n        }\n        return !totalWidth ? null : {\n            lineHeight: this.dom.getBoundingClientRect().height,\n            charWidth: totalWidth / this.length,\n            textHeight\n        };\n    }\n    coordsAt(pos, side) {\n        let rect = coordsInChildren(this, pos, side);\n        // Correct rectangle height for empty lines when the returned\n        // height is larger than the text height.\n        if (!this.children.length && rect && this.parent) {\n            let { heightOracle } = this.parent.view.viewState, height = rect.bottom - rect.top;\n            if (Math.abs(height - heightOracle.lineHeight) < 2 && heightOracle.textHeight < height) {\n                let dist = (height - heightOracle.textHeight) / 2;\n                return { top: rect.top + dist, bottom: rect.bottom - dist, left: rect.left, right: rect.left };\n            }\n        }\n        return rect;\n    }\n    become(other) {\n        return other instanceof LineView && this.children.length == 0 && other.children.length == 0 &&\n            attrsEq(this.attrs, other.attrs) && this.breakAfter == other.breakAfter;\n    }\n    covers() { return true; }\n    static find(docView, pos) {\n        for (let i = 0, off = 0; i < docView.children.length; i++) {\n            let block = docView.children[i], end = off + block.length;\n            if (end >= pos) {\n                if (block instanceof LineView)\n                    return block;\n                if (end > pos)\n                    break;\n            }\n            off = end + block.breakAfter;\n        }\n        return null;\n    }\n}\nclass BlockWidgetView extends ContentView {\n    constructor(widget, length, deco) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.deco = deco;\n        this.breakAfter = 0;\n        this.prevWidget = null;\n    }\n    merge(from, to, source, _takeDeco, openStart, openEnd) {\n        if (source && (!(source instanceof BlockWidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    domAtPos(pos) {\n        return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n    }\n    split(at) {\n        let len = this.length - at;\n        this.length = at;\n        let end = new BlockWidgetView(this.widget, len, this.deco);\n        end.breakAfter = this.breakAfter;\n        return end;\n    }\n    get children() { return noChildren; }\n    sync(view) {\n        if (!this.dom || !this.widget.updateDOM(this.dom, view)) {\n            if (this.dom && this.prevWidget)\n                this.prevWidget.destroy(this.dom);\n            this.prevWidget = null;\n            this.setDOM(this.widget.toDOM(view));\n            if (!this.widget.editable)\n                this.dom.contentEditable = \"false\";\n        }\n    }\n    get overrideDOMText() {\n        return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : Text.empty;\n    }\n    domBoundsAround() { return null; }\n    become(other) {\n        if (other instanceof BlockWidgetView &&\n            other.widget.constructor == this.widget.constructor) {\n            if (!other.widget.compare(this.widget))\n                this.markDirty(true);\n            if (this.dom && !this.prevWidget)\n                this.prevWidget = this.widget;\n            this.widget = other.widget;\n            this.length = other.length;\n            this.deco = other.deco;\n            this.breakAfter = other.breakAfter;\n            return true;\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n    get isEditable() { return false; }\n    get isWidget() { return true; }\n    coordsAt(pos, side) {\n        let custom = this.widget.coordsAt(this.dom, pos, side);\n        if (custom)\n            return custom;\n        if (this.widget instanceof BlockGapWidget)\n            return null;\n        return flattenRect(this.dom.getBoundingClientRect(), this.length ? pos == 0 : side <= 0);\n    }\n    destroy() {\n        super.destroy();\n        if (this.dom)\n            this.widget.destroy(this.dom);\n    }\n    covers(side) {\n        let { startSide, endSide } = this.deco;\n        return startSide == endSide ? false : side < 0 ? startSide < 0 : endSide > 0;\n    }\n}\nclass BlockGapWidget extends WidgetType {\n    constructor(height) {\n        super();\n        this.height = height;\n    }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        elt.className = \"cm-gap\";\n        this.updateDOM(elt);\n        return elt;\n    }\n    eq(other) { return other.height == this.height; }\n    updateDOM(elt) {\n        elt.style.height = this.height + \"px\";\n        return true;\n    }\n    get editable() { return true; }\n    get estimatedHeight() { return this.height; }\n    ignoreEvent() { return false; }\n}\n\nclass ContentBuilder {\n    constructor(doc, pos, end, disallowBlockEffectsFor) {\n        this.doc = doc;\n        this.pos = pos;\n        this.end = end;\n        this.disallowBlockEffectsFor = disallowBlockEffectsFor;\n        this.content = [];\n        this.curLine = null;\n        this.breakAtStart = 0;\n        this.pendingBuffer = 0 /* Buf.No */;\n        this.bufferMarks = [];\n        // Set to false directly after a widget that covers the position after it\n        this.atCursorPos = true;\n        this.openStart = -1;\n        this.openEnd = -1;\n        this.text = \"\";\n        this.textOff = 0;\n        this.cursor = doc.iter();\n        this.skip = pos;\n    }\n    posCovered() {\n        if (this.content.length == 0)\n            return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;\n        let last = this.content[this.content.length - 1];\n        return !(last.breakAfter || last instanceof BlockWidgetView && last.deco.endSide < 0);\n    }\n    getLine() {\n        if (!this.curLine) {\n            this.content.push(this.curLine = new LineView);\n            this.atCursorPos = true;\n        }\n        return this.curLine;\n    }\n    flushBuffer(active = this.bufferMarks) {\n        if (this.pendingBuffer) {\n            this.curLine.append(wrapMarks(new WidgetBufferView(-1), active), active.length);\n            this.pendingBuffer = 0 /* Buf.No */;\n        }\n    }\n    addBlockWidget(view) {\n        this.flushBuffer();\n        this.curLine = null;\n        this.content.push(view);\n    }\n    finish(openEnd) {\n        if (this.pendingBuffer && openEnd <= this.bufferMarks.length)\n            this.flushBuffer();\n        else\n            this.pendingBuffer = 0 /* Buf.No */;\n        if (!this.posCovered() &&\n            !(openEnd && this.content.length && this.content[this.content.length - 1] instanceof BlockWidgetView))\n            this.getLine();\n    }\n    buildText(length, active, openStart) {\n        while (length > 0) {\n            if (this.textOff == this.text.length) {\n                let { value, lineBreak, done } = this.cursor.next(this.skip);\n                this.skip = 0;\n                if (done)\n                    throw new Error(\"Ran out of text content when drawing inline views\");\n                if (lineBreak) {\n                    if (!this.posCovered())\n                        this.getLine();\n                    if (this.content.length)\n                        this.content[this.content.length - 1].breakAfter = 1;\n                    else\n                        this.breakAtStart = 1;\n                    this.flushBuffer();\n                    this.curLine = null;\n                    this.atCursorPos = true;\n                    length--;\n                    continue;\n                }\n                else {\n                    this.text = value;\n                    this.textOff = 0;\n                }\n            }\n            let take = Math.min(this.text.length - this.textOff, length, 512 /* T.Chunk */);\n            this.flushBuffer(active.slice(active.length - openStart));\n            this.getLine().append(wrapMarks(new TextView(this.text.slice(this.textOff, this.textOff + take)), active), openStart);\n            this.atCursorPos = true;\n            this.textOff += take;\n            length -= take;\n            openStart = 0;\n        }\n    }\n    span(from, to, active, openStart) {\n        this.buildText(to - from, active, openStart);\n        this.pos = to;\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    point(from, to, deco, active, openStart, index) {\n        if (this.disallowBlockEffectsFor[index] && deco instanceof PointDecoration) {\n            if (deco.block)\n                throw new RangeError(\"Block decorations may not be specified via plugins\");\n            if (to > this.doc.lineAt(this.pos).to)\n                throw new RangeError(\"Decorations that replace line breaks may not be specified via plugins\");\n        }\n        let len = to - from;\n        if (deco instanceof PointDecoration) {\n            if (deco.block) {\n                if (deco.startSide > 0 && !this.posCovered())\n                    this.getLine();\n                this.addBlockWidget(new BlockWidgetView(deco.widget || NullWidget.block, len, deco));\n            }\n            else {\n                let view = WidgetView.create(deco.widget || NullWidget.inline, len, len ? 0 : deco.startSide);\n                let cursorBefore = this.atCursorPos && !view.isEditable && openStart <= active.length &&\n                    (from < to || deco.startSide > 0);\n                let cursorAfter = !view.isEditable && (from < to || openStart > active.length || deco.startSide <= 0);\n                let line = this.getLine();\n                if (this.pendingBuffer == 2 /* Buf.IfCursor */ && !cursorBefore && !view.isEditable)\n                    this.pendingBuffer = 0 /* Buf.No */;\n                this.flushBuffer(active);\n                if (cursorBefore) {\n                    line.append(wrapMarks(new WidgetBufferView(1), active), openStart);\n                    openStart = active.length + Math.max(0, openStart - active.length);\n                }\n                line.append(wrapMarks(view, active), openStart);\n                this.atCursorPos = cursorAfter;\n                this.pendingBuffer = !cursorAfter ? 0 /* Buf.No */ : from < to || openStart > active.length ? 1 /* Buf.Yes */ : 2 /* Buf.IfCursor */;\n                if (this.pendingBuffer)\n                    this.bufferMarks = active.slice();\n            }\n        }\n        else if (this.doc.lineAt(this.pos).from == this.pos) { // Line decoration\n            this.getLine().addLineDeco(deco);\n        }\n        if (len) {\n            // Advance the iterator past the replaced content\n            if (this.textOff + len <= this.text.length) {\n                this.textOff += len;\n            }\n            else {\n                this.skip += len - (this.text.length - this.textOff);\n                this.text = \"\";\n                this.textOff = 0;\n            }\n            this.pos = to;\n        }\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    static build(text, from, to, decorations, dynamicDecorationMap) {\n        let builder = new ContentBuilder(text, from, to, dynamicDecorationMap);\n        builder.openEnd = RangeSet.spans(decorations, from, to, builder);\n        if (builder.openStart < 0)\n            builder.openStart = builder.openEnd;\n        builder.finish(builder.openEnd);\n        return builder;\n    }\n}\nfunction wrapMarks(view, active) {\n    for (let mark of active)\n        view = new MarkView(mark, [view], view.length);\n    return view;\n}\nclass NullWidget extends WidgetType {\n    constructor(tag) {\n        super();\n        this.tag = tag;\n    }\n    eq(other) { return other.tag == this.tag; }\n    toDOM() { return document.createElement(this.tag); }\n    updateDOM(elt) { return elt.nodeName.toLowerCase() == this.tag; }\n    get isHidden() { return true; }\n}\nNullWidget.inline = /*@__PURE__*/new NullWidget(\"span\");\nNullWidget.block = /*@__PURE__*/new NullWidget(\"div\");\n\n/**\nUsed to indicate [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).\n*/\nvar Direction = /*@__PURE__*/(function (Direction) {\n    // (These are chosen to match the base levels, in bidi algorithm\n    // terms, of spans in that direction.)\n    /**\n    Left-to-right.\n    */\n    Direction[Direction[\"LTR\"] = 0] = \"LTR\";\n    /**\n    Right-to-left.\n    */\n    Direction[Direction[\"RTL\"] = 1] = \"RTL\";\nreturn Direction})(Direction || (Direction = {}));\nconst LTR = Direction.LTR, RTL = Direction.RTL;\n// Decode a string with each type encoded as log2(type)\nfunction dec(str) {\n    let result = [];\n    for (let i = 0; i < str.length; i++)\n        result.push(1 << +str[i]);\n    return result;\n}\n// Character types for codepoints 0 to 0xf8\nconst LowTypes = /*@__PURE__*/dec(\"88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008\");\n// Character types for codepoints 0x600 to 0x6f9\nconst ArabicTypes = /*@__PURE__*/dec(\"4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333\");\nconst Brackets = /*@__PURE__*/Object.create(null), BracketStack = [];\n// There's a lot more in\n// https://www.unicode.org/Public/UCD/latest/ucd/BidiBrackets.txt,\n// which are left out to keep code size down.\nfor (let p of [\"()\", \"[]\", \"{}\"]) {\n    let l = /*@__PURE__*/p.charCodeAt(0), r = /*@__PURE__*/p.charCodeAt(1);\n    Brackets[l] = r;\n    Brackets[r] = -l;\n}\nfunction charType(ch) {\n    return ch <= 0xf7 ? LowTypes[ch] :\n        0x590 <= ch && ch <= 0x5f4 ? 2 /* T.R */ :\n            0x600 <= ch && ch <= 0x6f9 ? ArabicTypes[ch - 0x600] :\n                0x6ee <= ch && ch <= 0x8ac ? 4 /* T.AL */ :\n                    0x2000 <= ch && ch <= 0x200c ? 256 /* T.NI */ :\n                        0xfb50 <= ch && ch <= 0xfdff ? 4 /* T.AL */ : 1 /* T.L */;\n}\nconst BidiRE = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac\\ufb50-\\ufdff]/;\n/**\nRepresents a contiguous range of text that has a single direction\n(as in left-to-right or right-to-left).\n*/\nclass BidiSpan {\n    /**\n    The direction of this span.\n    */\n    get dir() { return this.level % 2 ? RTL : LTR; }\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start of the span (relative to the start of the line).\n    */\n    from, \n    /**\n    The end of the span.\n    */\n    to, \n    /**\n    The [\"bidi\n    level\"](https://unicode.org/reports/tr9/#Basic_Display_Algorithm)\n    of the span (in this context, 0 means\n    left-to-right, 1 means right-to-left, 2 means left-to-right\n    number inside right-to-left text).\n    */\n    level) {\n        this.from = from;\n        this.to = to;\n        this.level = level;\n    }\n    /**\n    @internal\n    */\n    side(end, dir) { return (this.dir == dir) == end ? this.to : this.from; }\n    /**\n    @internal\n    */\n    forward(forward, dir) { return forward == (this.dir == dir); }\n    /**\n    @internal\n    */\n    static find(order, index, level, assoc) {\n        let maybe = -1;\n        for (let i = 0; i < order.length; i++) {\n            let span = order[i];\n            if (span.from <= index && span.to >= index) {\n                if (span.level == level)\n                    return i;\n                // When multiple spans match, if assoc != 0, take the one that\n                // covers that side, otherwise take the one with the minimum\n                // level.\n                if (maybe < 0 || (assoc != 0 ? (assoc < 0 ? span.from < index : span.to > index) : order[maybe].level > span.level))\n                    maybe = i;\n            }\n        }\n        if (maybe < 0)\n            throw new RangeError(\"Index out of range\");\n        return maybe;\n    }\n}\nfunction isolatesEq(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++) {\n        let iA = a[i], iB = b[i];\n        if (iA.from != iB.from || iA.to != iB.to || iA.direction != iB.direction || !isolatesEq(iA.inner, iB.inner))\n            return false;\n    }\n    return true;\n}\n// Reused array of character types\nconst types = [];\n// Fill in the character types (in `types`) from `from` to `to` and\n// apply W normalization rules.\nfunction computeCharTypes(line, rFrom, rTo, isolates, outerType) {\n    for (let iI = 0; iI <= isolates.length; iI++) {\n        let from = iI ? isolates[iI - 1].to : rFrom, to = iI < isolates.length ? isolates[iI].from : rTo;\n        let prevType = iI ? 256 /* T.NI */ : outerType;\n        // W1. Examine each non-spacing mark (NSM) in the level run, and\n        // change the type of the NSM to the type of the previous\n        // character. If the NSM is at the start of the level run, it will\n        // get the type of sor.\n        // W2. Search backwards from each instance of a European number\n        // until the first strong type (R, L, AL, or sor) is found. If an\n        // AL is found, change the type of the European number to Arabic\n        // number.\n        // W3. Change all ALs to R.\n        // (Left after this: L, R, EN, AN, ET, CS, NI)\n        for (let i = from, prev = prevType, prevStrong = prevType; i < to; i++) {\n            let type = charType(line.charCodeAt(i));\n            if (type == 512 /* T.NSM */)\n                type = prev;\n            else if (type == 8 /* T.EN */ && prevStrong == 4 /* T.AL */)\n                type = 16 /* T.AN */;\n            types[i] = type == 4 /* T.AL */ ? 2 /* T.R */ : type;\n            if (type & 7 /* T.Strong */)\n                prevStrong = type;\n            prev = type;\n        }\n        // W5. A sequence of European terminators adjacent to European\n        // numbers changes to all European numbers.\n        // W6. Otherwise, separators and terminators change to Other\n        // Neutral.\n        // W7. Search backwards from each instance of a European number\n        // until the first strong type (R, L, or sor) is found. If an L is\n        // found, then change the type of the European number to L.\n        // (Left after this: L, R, EN+AN, NI)\n        for (let i = from, prev = prevType, prevStrong = prevType; i < to; i++) {\n            let type = types[i];\n            if (type == 128 /* T.CS */) {\n                if (i < to - 1 && prev == types[i + 1] && (prev & 24 /* T.Num */))\n                    type = types[i] = prev;\n                else\n                    types[i] = 256 /* T.NI */;\n            }\n            else if (type == 64 /* T.ET */) {\n                let end = i + 1;\n                while (end < to && types[end] == 64 /* T.ET */)\n                    end++;\n                let replace = (i && prev == 8 /* T.EN */) || (end < rTo && types[end] == 8 /* T.EN */) ? (prevStrong == 1 /* T.L */ ? 1 /* T.L */ : 8 /* T.EN */) : 256 /* T.NI */;\n                for (let j = i; j < end; j++)\n                    types[j] = replace;\n                i = end - 1;\n            }\n            else if (type == 8 /* T.EN */ && prevStrong == 1 /* T.L */) {\n                types[i] = 1 /* T.L */;\n            }\n            prev = type;\n            if (type & 7 /* T.Strong */)\n                prevStrong = type;\n        }\n    }\n}\n// Process brackets throughout a run sequence.\nfunction processBracketPairs(line, rFrom, rTo, isolates, outerType) {\n    let oppositeType = outerType == 1 /* T.L */ ? 2 /* T.R */ : 1 /* T.L */;\n    for (let iI = 0, sI = 0, context = 0; iI <= isolates.length; iI++) {\n        let from = iI ? isolates[iI - 1].to : rFrom, to = iI < isolates.length ? isolates[iI].from : rTo;\n        // N0. Process bracket pairs in an isolating run sequence\n        // sequentially in the logical order of the text positions of the\n        // opening paired brackets using the logic given below. Within this\n        // scope, bidirectional types EN and AN are treated as R.\n        for (let i = from, ch, br, type; i < to; i++) {\n            // Keeps [startIndex, type, strongSeen] triples for each open\n            // bracket on BracketStack.\n            if (br = Brackets[ch = line.charCodeAt(i)]) {\n                if (br < 0) { // Closing bracket\n                    for (let sJ = sI - 3; sJ >= 0; sJ -= 3) {\n                        if (BracketStack[sJ + 1] == -br) {\n                            let flags = BracketStack[sJ + 2];\n                            let type = (flags & 2 /* Bracketed.EmbedInside */) ? outerType :\n                                !(flags & 4 /* Bracketed.OppositeInside */) ? 0 :\n                                    (flags & 1 /* Bracketed.OppositeBefore */) ? oppositeType : outerType;\n                            if (type)\n                                types[i] = types[BracketStack[sJ]] = type;\n                            sI = sJ;\n                            break;\n                        }\n                    }\n                }\n                else if (BracketStack.length == 189 /* Bracketed.MaxDepth */) {\n                    break;\n                }\n                else {\n                    BracketStack[sI++] = i;\n                    BracketStack[sI++] = ch;\n                    BracketStack[sI++] = context;\n                }\n            }\n            else if ((type = types[i]) == 2 /* T.R */ || type == 1 /* T.L */) {\n                let embed = type == outerType;\n                context = embed ? 0 : 1 /* Bracketed.OppositeBefore */;\n                for (let sJ = sI - 3; sJ >= 0; sJ -= 3) {\n                    let cur = BracketStack[sJ + 2];\n                    if (cur & 2 /* Bracketed.EmbedInside */)\n                        break;\n                    if (embed) {\n                        BracketStack[sJ + 2] |= 2 /* Bracketed.EmbedInside */;\n                    }\n                    else {\n                        if (cur & 4 /* Bracketed.OppositeInside */)\n                            break;\n                        BracketStack[sJ + 2] |= 4 /* Bracketed.OppositeInside */;\n                    }\n                }\n            }\n        }\n    }\n}\nfunction processNeutrals(rFrom, rTo, isolates, outerType) {\n    for (let iI = 0, prev = outerType; iI <= isolates.length; iI++) {\n        let from = iI ? isolates[iI - 1].to : rFrom, to = iI < isolates.length ? isolates[iI].from : rTo;\n        // N1. A sequence of neutrals takes the direction of the\n        // surrounding strong text if the text on both sides has the same\n        // direction. European and Arabic numbers act as if they were R in\n        // terms of their influence on neutrals. Start-of-level-run (sor)\n        // and end-of-level-run (eor) are used at level run boundaries.\n        // N2. Any remaining neutrals take the embedding direction.\n        // (Left after this: L, R, EN+AN)\n        for (let i = from; i < to;) {\n            let type = types[i];\n            if (type == 256 /* T.NI */) {\n                let end = i + 1;\n                for (;;) {\n                    if (end == to) {\n                        if (iI == isolates.length)\n                            break;\n                        end = isolates[iI++].to;\n                        to = iI < isolates.length ? isolates[iI].from : rTo;\n                    }\n                    else if (types[end] == 256 /* T.NI */) {\n                        end++;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                let beforeL = prev == 1 /* T.L */;\n                let afterL = (end < rTo ? types[end] : outerType) == 1 /* T.L */;\n                let replace = beforeL == afterL ? (beforeL ? 1 /* T.L */ : 2 /* T.R */) : outerType;\n                for (let j = end, jI = iI, fromJ = jI ? isolates[jI - 1].to : rFrom; j > i;) {\n                    if (j == fromJ) {\n                        j = isolates[--jI].from;\n                        fromJ = jI ? isolates[jI - 1].to : rFrom;\n                    }\n                    types[--j] = replace;\n                }\n                i = end;\n            }\n            else {\n                prev = type;\n                i++;\n            }\n        }\n    }\n}\n// Find the contiguous ranges of character types in a given range, and\n// emit spans for them. Flip the order of the spans as appropriate\n// based on the level, and call through to compute the spans for\n// isolates at the proper point.\nfunction emitSpans(line, from, to, level, baseLevel, isolates, order) {\n    let ourType = level % 2 ? 2 /* T.R */ : 1 /* T.L */;\n    if ((level % 2) == (baseLevel % 2)) { // Same dir as base direction, don't flip\n        for (let iCh = from, iI = 0; iCh < to;) {\n            // Scan a section of characters in direction ourType, unless\n            // there's another type of char right after iCh, in which case\n            // we scan a section of other characters (which, if ourType ==\n            // T.L, may contain both T.R and T.AN chars).\n            let sameDir = true, isNum = false;\n            if (iI == isolates.length || iCh < isolates[iI].from) {\n                let next = types[iCh];\n                if (next != ourType) {\n                    sameDir = false;\n                    isNum = next == 16 /* T.AN */;\n                }\n            }\n            // Holds an array of isolates to pass to a recursive call if we\n            // must recurse (to distinguish T.AN inside an RTL section in\n            // LTR text), null if we can emit directly\n            let recurse = !sameDir && ourType == 1 /* T.L */ ? [] : null;\n            let localLevel = sameDir ? level : level + 1;\n            let iScan = iCh;\n            run: for (;;) {\n                if (iI < isolates.length && iScan == isolates[iI].from) {\n                    if (isNum)\n                        break run;\n                    let iso = isolates[iI];\n                    // Scan ahead to verify that there is another char in this dir after the isolate(s)\n                    if (!sameDir)\n                        for (let upto = iso.to, jI = iI + 1;;) {\n                            if (upto == to)\n                                break run;\n                            if (jI < isolates.length && isolates[jI].from == upto)\n                                upto = isolates[jI++].to;\n                            else if (types[upto] == ourType)\n                                break run;\n                            else\n                                break;\n                        }\n                    iI++;\n                    if (recurse) {\n                        recurse.push(iso);\n                    }\n                    else {\n                        if (iso.from > iCh)\n                            order.push(new BidiSpan(iCh, iso.from, localLevel));\n                        let dirSwap = (iso.direction == LTR) != !(localLevel % 2);\n                        computeSectionOrder(line, dirSwap ? level + 1 : level, baseLevel, iso.inner, iso.from, iso.to, order);\n                        iCh = iso.to;\n                    }\n                    iScan = iso.to;\n                }\n                else if (iScan == to || (sameDir ? types[iScan] != ourType : types[iScan] == ourType)) {\n                    break;\n                }\n                else {\n                    iScan++;\n                }\n            }\n            if (recurse)\n                emitSpans(line, iCh, iScan, level + 1, baseLevel, recurse, order);\n            else if (iCh < iScan)\n                order.push(new BidiSpan(iCh, iScan, localLevel));\n            iCh = iScan;\n        }\n    }\n    else {\n        // Iterate in reverse to flip the span order. Same code again, but\n        // going from the back of the section to the front\n        for (let iCh = to, iI = isolates.length; iCh > from;) {\n            let sameDir = true, isNum = false;\n            if (!iI || iCh > isolates[iI - 1].to) {\n                let next = types[iCh - 1];\n                if (next != ourType) {\n                    sameDir = false;\n                    isNum = next == 16 /* T.AN */;\n                }\n            }\n            let recurse = !sameDir && ourType == 1 /* T.L */ ? [] : null;\n            let localLevel = sameDir ? level : level + 1;\n            let iScan = iCh;\n            run: for (;;) {\n                if (iI && iScan == isolates[iI - 1].to) {\n                    if (isNum)\n                        break run;\n                    let iso = isolates[--iI];\n                    // Scan ahead to verify that there is another char in this dir after the isolate(s)\n                    if (!sameDir)\n                        for (let upto = iso.from, jI = iI;;) {\n                            if (upto == from)\n                                break run;\n                            if (jI && isolates[jI - 1].to == upto)\n                                upto = isolates[--jI].from;\n                            else if (types[upto - 1] == ourType)\n                                break run;\n                            else\n                                break;\n                        }\n                    if (recurse) {\n                        recurse.push(iso);\n                    }\n                    else {\n                        if (iso.to < iCh)\n                            order.push(new BidiSpan(iso.to, iCh, localLevel));\n                        let dirSwap = (iso.direction == LTR) != !(localLevel % 2);\n                        computeSectionOrder(line, dirSwap ? level + 1 : level, baseLevel, iso.inner, iso.from, iso.to, order);\n                        iCh = iso.from;\n                    }\n                    iScan = iso.from;\n                }\n                else if (iScan == from || (sameDir ? types[iScan - 1] != ourType : types[iScan - 1] == ourType)) {\n                    break;\n                }\n                else {\n                    iScan--;\n                }\n            }\n            if (recurse)\n                emitSpans(line, iScan, iCh, level + 1, baseLevel, recurse, order);\n            else if (iScan < iCh)\n                order.push(new BidiSpan(iScan, iCh, localLevel));\n            iCh = iScan;\n        }\n    }\n}\nfunction computeSectionOrder(line, level, baseLevel, isolates, from, to, order) {\n    let outerType = (level % 2 ? 2 /* T.R */ : 1 /* T.L */);\n    computeCharTypes(line, from, to, isolates, outerType);\n    processBracketPairs(line, from, to, isolates, outerType);\n    processNeutrals(from, to, isolates, outerType);\n    emitSpans(line, from, to, level, baseLevel, isolates, order);\n}\nfunction computeOrder(line, direction, isolates) {\n    if (!line)\n        return [new BidiSpan(0, 0, direction == RTL ? 1 : 0)];\n    if (direction == LTR && !isolates.length && !BidiRE.test(line))\n        return trivialOrder(line.length);\n    if (isolates.length)\n        while (line.length > types.length)\n            types[types.length] = 256 /* T.NI */; // Make sure types array has no gaps\n    let order = [], level = direction == LTR ? 0 : 1;\n    computeSectionOrder(line, level, level, isolates, 0, line.length, order);\n    return order;\n}\nfunction trivialOrder(length) {\n    return [new BidiSpan(0, length, 0)];\n}\nlet movedOver = \"\";\n// This implementation moves strictly visually, without concern for a\n// traversal visiting every logical position in the string. It will\n// still do so for simple input, but situations like multiple isolates\n// with the same level next to each other, or text going against the\n// main dir at the end of the line, will make some positions\n// unreachable with this motion. Each visible cursor position will\n// correspond to the lower-level bidi span that touches it.\n//\n// The alternative would be to solve an order globally for a given\n// line, making sure that it includes every position, but that would\n// require associating non-canonical (higher bidi span level)\n// positions with a given visual position, which is likely to confuse\n// people. (And would generally be a lot more complicated.)\nfunction moveVisually(line, order, dir, start, forward) {\n    var _a;\n    let startIndex = start.head - line.from;\n    let spanI = BidiSpan.find(order, startIndex, (_a = start.bidiLevel) !== null && _a !== void 0 ? _a : -1, start.assoc);\n    let span = order[spanI], spanEnd = span.side(forward, dir);\n    // End of span\n    if (startIndex == spanEnd) {\n        let nextI = spanI += forward ? 1 : -1;\n        if (nextI < 0 || nextI >= order.length)\n            return null;\n        span = order[spanI = nextI];\n        startIndex = span.side(!forward, dir);\n        spanEnd = span.side(forward, dir);\n    }\n    let nextIndex = findClusterBreak(line.text, startIndex, span.forward(forward, dir));\n    if (nextIndex < span.from || nextIndex > span.to)\n        nextIndex = spanEnd;\n    movedOver = line.text.slice(Math.min(startIndex, nextIndex), Math.max(startIndex, nextIndex));\n    let nextSpan = spanI == (forward ? order.length - 1 : 0) ? null : order[spanI + (forward ? 1 : -1)];\n    if (nextSpan && nextIndex == spanEnd && nextSpan.level + (forward ? 0 : 1) < span.level)\n        return EditorSelection.cursor(nextSpan.side(!forward, dir) + line.from, nextSpan.forward(forward, dir) ? 1 : -1, nextSpan.level);\n    return EditorSelection.cursor(nextIndex + line.from, span.forward(forward, dir) ? -1 : 1, span.level);\n}\nfunction autoDirection(text, from, to) {\n    for (let i = from; i < to; i++) {\n        let type = charType(text.charCodeAt(i));\n        if (type == 1 /* T.L */)\n            return LTR;\n        if (type == 2 /* T.R */ || type == 4 /* T.AL */)\n            return RTL;\n    }\n    return LTR;\n}\n\nconst clickAddsSelectionRange = /*@__PURE__*/Facet.define();\nconst dragMovesSelection$1 = /*@__PURE__*/Facet.define();\nconst mouseSelectionStyle = /*@__PURE__*/Facet.define();\nconst exceptionSink = /*@__PURE__*/Facet.define();\nconst updateListener = /*@__PURE__*/Facet.define();\nconst inputHandler = /*@__PURE__*/Facet.define();\nconst focusChangeEffect = /*@__PURE__*/Facet.define();\nconst clipboardInputFilter = /*@__PURE__*/Facet.define();\nconst clipboardOutputFilter = /*@__PURE__*/Facet.define();\nconst perLineTextDirection = /*@__PURE__*/Facet.define({\n    combine: values => values.some(x => x)\n});\nconst nativeSelectionHidden = /*@__PURE__*/Facet.define({\n    combine: values => values.some(x => x)\n});\nconst scrollHandler = /*@__PURE__*/Facet.define();\nclass ScrollTarget {\n    constructor(range, y = \"nearest\", x = \"nearest\", yMargin = 5, xMargin = 5, \n    // This data structure is abused to also store precise scroll\n    // snapshots, instead of a `scrollIntoView` request. When this\n    // flag is `true`, `range` points at a position in the reference\n    // line, `yMargin` holds the difference between the top of that\n    // line and the top of the editor, and `xMargin` holds the\n    // editor's `scrollLeft`.\n    isSnapshot = false) {\n        this.range = range;\n        this.y = y;\n        this.x = x;\n        this.yMargin = yMargin;\n        this.xMargin = xMargin;\n        this.isSnapshot = isSnapshot;\n    }\n    map(changes) {\n        return changes.empty ? this :\n            new ScrollTarget(this.range.map(changes), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);\n    }\n    clip(state) {\n        return this.range.to <= state.doc.length ? this :\n            new ScrollTarget(EditorSelection.cursor(state.doc.length), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);\n    }\n}\nconst scrollIntoView = /*@__PURE__*/StateEffect.define({ map: (t, ch) => t.map(ch) });\nconst setEditContextFormatting = /*@__PURE__*/StateEffect.define();\n/**\nLog or report an unhandled exception in client code. Should\nprobably only be used by extension code that allows client code to\nprovide functions, and calls those functions in a context where an\nexception can't be propagated to calling code in a reasonable way\n(for example when in an event handler).\n\nEither calls a handler registered with\n[`EditorView.exceptionSink`](https://codemirror.net/6/docs/ref/#view.EditorView^exceptionSink),\n`window.onerror`, if defined, or `console.error` (in which case\nit'll pass `context`, when given, as first argument).\n*/\nfunction logException(state, exception, context) {\n    let handler = state.facet(exceptionSink);\n    if (handler.length)\n        handler[0](exception);\n    else if (window.onerror)\n        window.onerror(String(exception), context, undefined, undefined, exception);\n    else if (context)\n        console.error(context + \":\", exception);\n    else\n        console.error(exception);\n}\nconst editable = /*@__PURE__*/Facet.define({ combine: values => values.length ? values[0] : true });\nlet nextPluginID = 0;\nconst viewPlugin = /*@__PURE__*/Facet.define();\n/**\nView plugins associate stateful values with a view. They can\ninfluence the way the content is drawn, and are notified of things\nthat happen in the view.\n*/\nclass ViewPlugin {\n    constructor(\n    /**\n    @internal\n    */\n    id, \n    /**\n    @internal\n    */\n    create, \n    /**\n    @internal\n    */\n    domEventHandlers, \n    /**\n    @internal\n    */\n    domEventObservers, buildExtensions) {\n        this.id = id;\n        this.create = create;\n        this.domEventHandlers = domEventHandlers;\n        this.domEventObservers = domEventObservers;\n        this.extension = buildExtensions(this);\n    }\n    /**\n    Define a plugin from a constructor function that creates the\n    plugin's value, given an editor view.\n    */\n    static define(create, spec) {\n        const { eventHandlers, eventObservers, provide, decorations: deco } = spec || {};\n        return new ViewPlugin(nextPluginID++, create, eventHandlers, eventObservers, plugin => {\n            let ext = [viewPlugin.of(plugin)];\n            if (deco)\n                ext.push(decorations.of(view => {\n                    let pluginInst = view.plugin(plugin);\n                    return pluginInst ? deco(pluginInst) : Decoration.none;\n                }));\n            if (provide)\n                ext.push(provide(plugin));\n            return ext;\n        });\n    }\n    /**\n    Create a plugin for a class whose constructor takes a single\n    editor view as argument.\n    */\n    static fromClass(cls, spec) {\n        return ViewPlugin.define(view => new cls(view), spec);\n    }\n}\nclass PluginInstance {\n    constructor(spec) {\n        this.spec = spec;\n        // When starting an update, all plugins have this field set to the\n        // update object, indicating they need to be updated. When finished\n        // updating, it is set to `false`. Retrieving a plugin that needs to\n        // be updated with `view.plugin` forces an eager update.\n        this.mustUpdate = null;\n        // This is null when the plugin is initially created, but\n        // initialized on the first update.\n        this.value = null;\n    }\n    update(view) {\n        if (!this.value) {\n            if (this.spec) {\n                try {\n                    this.value = this.spec.create(view);\n                }\n                catch (e) {\n                    logException(view.state, e, \"CodeMirror plugin crashed\");\n                    this.deactivate();\n                }\n            }\n        }\n        else if (this.mustUpdate) {\n            let update = this.mustUpdate;\n            this.mustUpdate = null;\n            if (this.value.update) {\n                try {\n                    this.value.update(update);\n                }\n                catch (e) {\n                    logException(update.state, e, \"CodeMirror plugin crashed\");\n                    if (this.value.destroy)\n                        try {\n                            this.value.destroy();\n                        }\n                        catch (_) { }\n                    this.deactivate();\n                }\n            }\n        }\n        return this;\n    }\n    destroy(view) {\n        var _a;\n        if ((_a = this.value) === null || _a === void 0 ? void 0 : _a.destroy) {\n            try {\n                this.value.destroy();\n            }\n            catch (e) {\n                logException(view.state, e, \"CodeMirror plugin crashed\");\n            }\n        }\n    }\n    deactivate() {\n        this.spec = this.value = null;\n    }\n}\nconst editorAttributes = /*@__PURE__*/Facet.define();\nconst contentAttributes = /*@__PURE__*/Facet.define();\n// Provide decorations\nconst decorations = /*@__PURE__*/Facet.define();\nconst outerDecorations = /*@__PURE__*/Facet.define();\nconst atomicRanges = /*@__PURE__*/Facet.define();\nconst bidiIsolatedRanges = /*@__PURE__*/Facet.define();\nfunction getIsolatedRanges(view, line) {\n    let isolates = view.state.facet(bidiIsolatedRanges);\n    if (!isolates.length)\n        return isolates;\n    let sets = isolates.map(i => i instanceof Function ? i(view) : i);\n    let result = [];\n    RangeSet.spans(sets, line.from, line.to, {\n        point() { },\n        span(fromDoc, toDoc, active, open) {\n            let from = fromDoc - line.from, to = toDoc - line.from;\n            let level = result;\n            for (let i = active.length - 1; i >= 0; i--, open--) {\n                let direction = active[i].spec.bidiIsolate, update;\n                if (direction == null)\n                    direction = autoDirection(line.text, from, to);\n                if (open > 0 && level.length &&\n                    (update = level[level.length - 1]).to == from && update.direction == direction) {\n                    update.to = to;\n                    level = update.inner;\n                }\n                else {\n                    let add = { from, to, direction, inner: [] };\n                    level.push(add);\n                    level = add.inner;\n                }\n            }\n        }\n    });\n    return result;\n}\nconst scrollMargins = /*@__PURE__*/Facet.define();\nfunction getScrollMargins(view) {\n    let left = 0, right = 0, top = 0, bottom = 0;\n    for (let source of view.state.facet(scrollMargins)) {\n        let m = source(view);\n        if (m) {\n            if (m.left != null)\n                left = Math.max(left, m.left);\n            if (m.right != null)\n                right = Math.max(right, m.right);\n            if (m.top != null)\n                top = Math.max(top, m.top);\n            if (m.bottom != null)\n                bottom = Math.max(bottom, m.bottom);\n        }\n    }\n    return { left, right, top, bottom };\n}\nconst styleModule = /*@__PURE__*/Facet.define();\nclass ChangedRange {\n    constructor(fromA, toA, fromB, toB) {\n        this.fromA = fromA;\n        this.toA = toA;\n        this.fromB = fromB;\n        this.toB = toB;\n    }\n    join(other) {\n        return new ChangedRange(Math.min(this.fromA, other.fromA), Math.max(this.toA, other.toA), Math.min(this.fromB, other.fromB), Math.max(this.toB, other.toB));\n    }\n    addToSet(set) {\n        let i = set.length, me = this;\n        for (; i > 0; i--) {\n            let range = set[i - 1];\n            if (range.fromA > me.toA)\n                continue;\n            if (range.toA < me.fromA)\n                break;\n            me = me.join(range);\n            set.splice(i - 1, 1);\n        }\n        set.splice(i, 0, me);\n        return set;\n    }\n    static extendWithRanges(diff, ranges) {\n        if (ranges.length == 0)\n            return diff;\n        let result = [];\n        for (let dI = 0, rI = 0, posA = 0, posB = 0;; dI++) {\n            let next = dI == diff.length ? null : diff[dI], off = posA - posB;\n            let end = next ? next.fromB : 1e9;\n            while (rI < ranges.length && ranges[rI] < end) {\n                let from = ranges[rI], to = ranges[rI + 1];\n                let fromB = Math.max(posB, from), toB = Math.min(end, to);\n                if (fromB <= toB)\n                    new ChangedRange(fromB + off, toB + off, fromB, toB).addToSet(result);\n                if (to > end)\n                    break;\n                else\n                    rI += 2;\n            }\n            if (!next)\n                return result;\n            new ChangedRange(next.fromA, next.toA, next.fromB, next.toB).addToSet(result);\n            posA = next.toA;\n            posB = next.toB;\n        }\n    }\n}\n/**\nView [plugins](https://codemirror.net/6/docs/ref/#view.ViewPlugin) are given instances of this\nclass, which describe what happened, whenever the view is updated.\n*/\nclass ViewUpdate {\n    constructor(\n    /**\n    The editor view that the update is associated with.\n    */\n    view, \n    /**\n    The new editor state.\n    */\n    state, \n    /**\n    The transactions involved in the update. May be empty.\n    */\n    transactions) {\n        this.view = view;\n        this.state = state;\n        this.transactions = transactions;\n        /**\n        @internal\n        */\n        this.flags = 0;\n        this.startState = view.state;\n        this.changes = ChangeSet.empty(this.startState.doc.length);\n        for (let tr of transactions)\n            this.changes = this.changes.compose(tr.changes);\n        let changedRanges = [];\n        this.changes.iterChangedRanges((fromA, toA, fromB, toB) => changedRanges.push(new ChangedRange(fromA, toA, fromB, toB)));\n        this.changedRanges = changedRanges;\n    }\n    /**\n    @internal\n    */\n    static create(view, state, transactions) {\n        return new ViewUpdate(view, state, transactions);\n    }\n    /**\n    Tells you whether the [viewport](https://codemirror.net/6/docs/ref/#view.EditorView.viewport) or\n    [visible ranges](https://codemirror.net/6/docs/ref/#view.EditorView.visibleRanges) changed in this\n    update.\n    */\n    get viewportChanged() {\n        return (this.flags & 4 /* UpdateFlag.Viewport */) > 0;\n    }\n    /**\n    Returns true when\n    [`viewportChanged`](https://codemirror.net/6/docs/ref/#view.ViewUpdate.viewportChanged) is true\n    and the viewport change is not just the result of mapping it in\n    response to document changes.\n    */\n    get viewportMoved() {\n        return (this.flags & 8 /* UpdateFlag.ViewportMoved */) > 0;\n    }\n    /**\n    Indicates whether the height of a block element in the editor\n    changed in this update.\n    */\n    get heightChanged() {\n        return (this.flags & 2 /* UpdateFlag.Height */) > 0;\n    }\n    /**\n    Returns true when the document was modified or the size of the\n    editor, or elements within the editor, changed.\n    */\n    get geometryChanged() {\n        return this.docChanged || (this.flags & (16 /* UpdateFlag.Geometry */ | 2 /* UpdateFlag.Height */)) > 0;\n    }\n    /**\n    True when this update indicates a focus change.\n    */\n    get focusChanged() {\n        return (this.flags & 1 /* UpdateFlag.Focus */) > 0;\n    }\n    /**\n    Whether the document changed in this update.\n    */\n    get docChanged() {\n        return !this.changes.empty;\n    }\n    /**\n    Whether the selection was explicitly set in this update.\n    */\n    get selectionSet() {\n        return this.transactions.some(tr => tr.selection);\n    }\n    /**\n    @internal\n    */\n    get empty() { return this.flags == 0 && this.transactions.length == 0; }\n}\n\nclass DocView extends ContentView {\n    get length() { return this.view.state.doc.length; }\n    constructor(view) {\n        super();\n        this.view = view;\n        this.decorations = [];\n        this.dynamicDecorationMap = [false];\n        this.domChanged = null;\n        this.hasComposition = null;\n        this.markedForComposition = new Set;\n        this.editContextFormatting = Decoration.none;\n        this.lastCompositionAfterCursor = false;\n        // Track a minimum width for the editor. When measuring sizes in\n        // measureVisibleLineHeights, this is updated to point at the width\n        // of a given element and its extent in the document. When a change\n        // happens in that range, these are reset. That way, once we've seen\n        // a line/element of a given length, we keep the editor wide enough\n        // to fit at least that element, until it is changed, at which point\n        // we forget it again.\n        this.minWidth = 0;\n        this.minWidthFrom = 0;\n        this.minWidthTo = 0;\n        // Track whether the DOM selection was set in a lossy way, so that\n        // we don't mess it up when reading it back it\n        this.impreciseAnchor = null;\n        this.impreciseHead = null;\n        this.forceSelection = false;\n        // Used by the resize observer to ignore resizes that we caused\n        // ourselves\n        this.lastUpdate = Date.now();\n        this.setDOM(view.contentDOM);\n        this.children = [new LineView];\n        this.children[0].setParent(this);\n        this.updateDeco();\n        this.updateInner([new ChangedRange(0, 0, 0, view.state.doc.length)], 0, null);\n    }\n    // Update the document view to a given state.\n    update(update) {\n        var _a;\n        let changedRanges = update.changedRanges;\n        if (this.minWidth > 0 && changedRanges.length) {\n            if (!changedRanges.every(({ fromA, toA }) => toA < this.minWidthFrom || fromA > this.minWidthTo)) {\n                this.minWidth = this.minWidthFrom = this.minWidthTo = 0;\n            }\n            else {\n                this.minWidthFrom = update.changes.mapPos(this.minWidthFrom, 1);\n                this.minWidthTo = update.changes.mapPos(this.minWidthTo, 1);\n            }\n        }\n        this.updateEditContextFormatting(update);\n        let readCompositionAt = -1;\n        if (this.view.inputState.composing >= 0 && !this.view.observer.editContext) {\n            if ((_a = this.domChanged) === null || _a === void 0 ? void 0 : _a.newSel)\n                readCompositionAt = this.domChanged.newSel.head;\n            else if (!touchesComposition(update.changes, this.hasComposition) && !update.selectionSet)\n                readCompositionAt = update.state.selection.main.head;\n        }\n        let composition = readCompositionAt > -1 ? findCompositionRange(this.view, update.changes, readCompositionAt) : null;\n        this.domChanged = null;\n        if (this.hasComposition) {\n            this.markedForComposition.clear();\n            let { from, to } = this.hasComposition;\n            changedRanges = new ChangedRange(from, to, update.changes.mapPos(from, -1), update.changes.mapPos(to, 1))\n                .addToSet(changedRanges.slice());\n        }\n        this.hasComposition = composition ? { from: composition.range.fromB, to: composition.range.toB } : null;\n        // When the DOM nodes around the selection are moved to another\n        // parent, Chrome sometimes reports a different selection through\n        // getSelection than the one that it actually shows to the user.\n        // This forces a selection update when lines are joined to work\n        // around that. Issue #54\n        if ((browser.ie || browser.chrome) && !composition && update &&\n            update.state.doc.lines != update.startState.doc.lines)\n            this.forceSelection = true;\n        let prevDeco = this.decorations, deco = this.updateDeco();\n        let decoDiff = findChangedDeco(prevDeco, deco, update.changes);\n        changedRanges = ChangedRange.extendWithRanges(changedRanges, decoDiff);\n        if (!(this.flags & 7 /* ViewFlag.Dirty */) && changedRanges.length == 0) {\n            return false;\n        }\n        else {\n            this.updateInner(changedRanges, update.startState.doc.length, composition);\n            if (update.transactions.length)\n                this.lastUpdate = Date.now();\n            return true;\n        }\n    }\n    // Used by update and the constructor do perform the actual DOM\n    // update\n    updateInner(changes, oldLength, composition) {\n        this.view.viewState.mustMeasureContent = true;\n        this.updateChildren(changes, oldLength, composition);\n        let { observer } = this.view;\n        observer.ignore(() => {\n            // Lock the height during redrawing, since Chrome sometimes\n            // messes with the scroll position during DOM mutation (though\n            // no relayout is triggered and I cannot imagine how it can\n            // recompute the scroll position without a layout)\n            this.dom.style.height = this.view.viewState.contentHeight / this.view.scaleY + \"px\";\n            this.dom.style.flexBasis = this.minWidth ? this.minWidth + \"px\" : \"\";\n            // Chrome will sometimes, when DOM mutations occur directly\n            // around the selection, get confused and report a different\n            // selection from the one it displays (issue #218). This tries\n            // to detect that situation.\n            let track = browser.chrome || browser.ios ? { node: observer.selectionRange.focusNode, written: false } : undefined;\n            this.sync(this.view, track);\n            this.flags &= ~7 /* ViewFlag.Dirty */;\n            if (track && (track.written || observer.selectionRange.focusNode != track.node))\n                this.forceSelection = true;\n            this.dom.style.height = \"\";\n        });\n        this.markedForComposition.forEach(cView => cView.flags &= ~8 /* ViewFlag.Composition */);\n        let gaps = [];\n        if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length)\n            for (let child of this.children)\n                if (child instanceof BlockWidgetView && child.widget instanceof BlockGapWidget)\n                    gaps.push(child.dom);\n        observer.updateGaps(gaps);\n    }\n    updateChildren(changes, oldLength, composition) {\n        let ranges = composition ? composition.range.addToSet(changes.slice()) : changes;\n        let cursor = this.childCursor(oldLength);\n        for (let i = ranges.length - 1;; i--) {\n            let next = i >= 0 ? ranges[i] : null;\n            if (!next)\n                break;\n            let { fromA, toA, fromB, toB } = next, content, breakAtStart, openStart, openEnd;\n            if (composition && composition.range.fromB < toB && composition.range.toB > fromB) {\n                let before = ContentBuilder.build(this.view.state.doc, fromB, composition.range.fromB, this.decorations, this.dynamicDecorationMap);\n                let after = ContentBuilder.build(this.view.state.doc, composition.range.toB, toB, this.decorations, this.dynamicDecorationMap);\n                breakAtStart = before.breakAtStart;\n                openStart = before.openStart;\n                openEnd = after.openEnd;\n                let compLine = this.compositionView(composition);\n                if (after.breakAtStart) {\n                    compLine.breakAfter = 1;\n                }\n                else if (after.content.length &&\n                    compLine.merge(compLine.length, compLine.length, after.content[0], false, after.openStart, 0)) {\n                    compLine.breakAfter = after.content[0].breakAfter;\n                    after.content.shift();\n                }\n                if (before.content.length &&\n                    compLine.merge(0, 0, before.content[before.content.length - 1], true, 0, before.openEnd)) {\n                    before.content.pop();\n                }\n                content = before.content.concat(compLine).concat(after.content);\n            }\n            else {\n                ({ content, breakAtStart, openStart, openEnd } =\n                    ContentBuilder.build(this.view.state.doc, fromB, toB, this.decorations, this.dynamicDecorationMap));\n            }\n            let { i: toI, off: toOff } = cursor.findPos(toA, 1);\n            let { i: fromI, off: fromOff } = cursor.findPos(fromA, -1);\n            replaceRange(this, fromI, fromOff, toI, toOff, content, breakAtStart, openStart, openEnd);\n        }\n        if (composition)\n            this.fixCompositionDOM(composition);\n    }\n    updateEditContextFormatting(update) {\n        this.editContextFormatting = this.editContextFormatting.map(update.changes);\n        for (let tr of update.transactions)\n            for (let effect of tr.effects)\n                if (effect.is(setEditContextFormatting)) {\n                    this.editContextFormatting = effect.value;\n                }\n    }\n    compositionView(composition) {\n        let cur = new TextView(composition.text.nodeValue);\n        cur.flags |= 8 /* ViewFlag.Composition */;\n        for (let { deco } of composition.marks)\n            cur = new MarkView(deco, [cur], cur.length);\n        let line = new LineView;\n        line.append(cur, 0);\n        return line;\n    }\n    fixCompositionDOM(composition) {\n        let fix = (dom, cView) => {\n            cView.flags |= 8 /* ViewFlag.Composition */ | (cView.children.some(c => c.flags & 7 /* ViewFlag.Dirty */) ? 1 /* ViewFlag.ChildDirty */ : 0);\n            this.markedForComposition.add(cView);\n            let prev = ContentView.get(dom);\n            if (prev && prev != cView)\n                prev.dom = null;\n            cView.setDOM(dom);\n        };\n        let pos = this.childPos(composition.range.fromB, 1);\n        let cView = this.children[pos.i];\n        fix(composition.line, cView);\n        for (let i = composition.marks.length - 1; i >= -1; i--) {\n            pos = cView.childPos(pos.off, 1);\n            cView = cView.children[pos.i];\n            fix(i >= 0 ? composition.marks[i].node : composition.text, cView);\n        }\n    }\n    // Sync the DOM selection to this.state.selection\n    updateSelection(mustRead = false, fromPointer = false) {\n        if (mustRead || !this.view.observer.selectionRange.focusNode)\n            this.view.observer.readSelectionRange();\n        let activeElt = this.view.root.activeElement, focused = activeElt == this.dom;\n        let selectionNotFocus = !focused && !(this.view.state.facet(editable) || this.dom.tabIndex > -1) &&\n            hasSelection(this.dom, this.view.observer.selectionRange) && !(activeElt && this.dom.contains(activeElt));\n        if (!(focused || fromPointer || selectionNotFocus))\n            return;\n        let force = this.forceSelection;\n        this.forceSelection = false;\n        let main = this.view.state.selection.main;\n        let anchor = this.moveToLine(this.domAtPos(main.anchor));\n        let head = main.empty ? anchor : this.moveToLine(this.domAtPos(main.head));\n        // Always reset on Firefox when next to an uneditable node to\n        // avoid invisible cursor bugs (#111)\n        if (browser.gecko && main.empty && !this.hasComposition && betweenUneditable(anchor)) {\n            let dummy = document.createTextNode(\"\");\n            this.view.observer.ignore(() => anchor.node.insertBefore(dummy, anchor.node.childNodes[anchor.offset] || null));\n            anchor = head = new DOMPos(dummy, 0);\n            force = true;\n        }\n        let domSel = this.view.observer.selectionRange;\n        // If the selection is already here, or in an equivalent position, don't touch it\n        if (force || !domSel.focusNode || (!isEquivalentPosition(anchor.node, anchor.offset, domSel.anchorNode, domSel.anchorOffset) ||\n            !isEquivalentPosition(head.node, head.offset, domSel.focusNode, domSel.focusOffset)) && !this.suppressWidgetCursorChange(domSel, main)) {\n            this.view.observer.ignore(() => {\n                // Chrome Android will hide the virtual keyboard when tapping\n                // inside an uneditable node, and not bring it back when we\n                // move the cursor to its proper position. This tries to\n                // restore the keyboard by cycling focus.\n                if (browser.android && browser.chrome && this.dom.contains(domSel.focusNode) &&\n                    inUneditable(domSel.focusNode, this.dom)) {\n                    this.dom.blur();\n                    this.dom.focus({ preventScroll: true });\n                }\n                let rawSel = getSelection(this.view.root);\n                if (!rawSel) ;\n                else if (main.empty) {\n                    // Work around https://bugzilla.mozilla.org/show_bug.cgi?id=1612076\n                    if (browser.gecko) {\n                        let nextTo = nextToUneditable(anchor.node, anchor.offset);\n                        if (nextTo && nextTo != (1 /* NextTo.Before */ | 2 /* NextTo.After */)) {\n                            let text = (nextTo == 1 /* NextTo.Before */ ? textNodeBefore : textNodeAfter)(anchor.node, anchor.offset);\n                            if (text)\n                                anchor = new DOMPos(text.node, text.offset);\n                        }\n                    }\n                    rawSel.collapse(anchor.node, anchor.offset);\n                    if (main.bidiLevel != null && rawSel.caretBidiLevel !== undefined)\n                        rawSel.caretBidiLevel = main.bidiLevel;\n                }\n                else if (rawSel.extend) {\n                    // Selection.extend can be used to create an 'inverted' selection\n                    // (one where the focus is before the anchor), but not all\n                    // browsers support it yet.\n                    rawSel.collapse(anchor.node, anchor.offset);\n                    // Safari will ignore the call above when the editor is\n                    // hidden, and then raise an error on the call to extend\n                    // (#940).\n                    try {\n                        rawSel.extend(head.node, head.offset);\n                    }\n                    catch (_) { }\n                }\n                else {\n                    // Primitive (IE) way\n                    let range = document.createRange();\n                    if (main.anchor > main.head)\n                        [anchor, head] = [head, anchor];\n                    range.setEnd(head.node, head.offset);\n                    range.setStart(anchor.node, anchor.offset);\n                    rawSel.removeAllRanges();\n                    rawSel.addRange(range);\n                }\n                if (selectionNotFocus && this.view.root.activeElement == this.dom) {\n                    this.dom.blur();\n                    if (activeElt)\n                        activeElt.focus();\n                }\n            });\n            this.view.observer.setSelectionRange(anchor, head);\n        }\n        this.impreciseAnchor = anchor.precise ? null : new DOMPos(domSel.anchorNode, domSel.anchorOffset);\n        this.impreciseHead = head.precise ? null : new DOMPos(domSel.focusNode, domSel.focusOffset);\n    }\n    // If a zero-length widget is inserted next to the cursor during\n    // composition, avoid moving it across it and disrupting the\n    // composition.\n    suppressWidgetCursorChange(sel, cursor) {\n        return this.hasComposition && cursor.empty &&\n            isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset) &&\n            this.posFromDOM(sel.focusNode, sel.focusOffset) == cursor.head;\n    }\n    enforceCursorAssoc() {\n        if (this.hasComposition)\n            return;\n        let { view } = this, cursor = view.state.selection.main;\n        let sel = getSelection(view.root);\n        let { anchorNode, anchorOffset } = view.observer.selectionRange;\n        if (!sel || !cursor.empty || !cursor.assoc || !sel.modify)\n            return;\n        let line = LineView.find(this, cursor.head);\n        if (!line)\n            return;\n        let lineStart = line.posAtStart;\n        if (cursor.head == lineStart || cursor.head == lineStart + line.length)\n            return;\n        let before = this.coordsAt(cursor.head, -1), after = this.coordsAt(cursor.head, 1);\n        if (!before || !after || before.bottom > after.top)\n            return;\n        let dom = this.domAtPos(cursor.head + cursor.assoc);\n        sel.collapse(dom.node, dom.offset);\n        sel.modify(\"move\", cursor.assoc < 0 ? \"forward\" : \"backward\", \"lineboundary\");\n        // This can go wrong in corner cases like single-character lines,\n        // so check and reset if necessary.\n        view.observer.readSelectionRange();\n        let newRange = view.observer.selectionRange;\n        if (view.docView.posFromDOM(newRange.anchorNode, newRange.anchorOffset) != cursor.from)\n            sel.collapse(anchorNode, anchorOffset);\n    }\n    // If a position is in/near a block widget, move it to a nearby text\n    // line, since we don't want the cursor inside a block widget.\n    moveToLine(pos) {\n        // Block widgets will return positions before/after them, which\n        // are thus directly in the document DOM element.\n        let dom = this.dom, newPos;\n        if (pos.node != dom)\n            return pos;\n        for (let i = pos.offset; !newPos && i < dom.childNodes.length; i++) {\n            let view = ContentView.get(dom.childNodes[i]);\n            if (view instanceof LineView)\n                newPos = view.domAtPos(0);\n        }\n        for (let i = pos.offset - 1; !newPos && i >= 0; i--) {\n            let view = ContentView.get(dom.childNodes[i]);\n            if (view instanceof LineView)\n                newPos = view.domAtPos(view.length);\n        }\n        return newPos ? new DOMPos(newPos.node, newPos.offset, true) : pos;\n    }\n    nearest(dom) {\n        for (let cur = dom; cur;) {\n            let domView = ContentView.get(cur);\n            if (domView && domView.rootView == this)\n                return domView;\n            cur = cur.parentNode;\n        }\n        return null;\n    }\n    posFromDOM(node, offset) {\n        let view = this.nearest(node);\n        if (!view)\n            throw new RangeError(\"Trying to find position for a DOM position outside of the document\");\n        return view.localPosFromDOM(node, offset) + view.posAtStart;\n    }\n    domAtPos(pos) {\n        let { i, off } = this.childCursor().findPos(pos, -1);\n        for (; i < this.children.length - 1;) {\n            let child = this.children[i];\n            if (off < child.length || child instanceof LineView)\n                break;\n            i++;\n            off = 0;\n        }\n        return this.children[i].domAtPos(off);\n    }\n    coordsAt(pos, side) {\n        let best = null, bestPos = 0;\n        for (let off = this.length, i = this.children.length - 1; i >= 0; i--) {\n            let child = this.children[i], end = off - child.breakAfter, start = end - child.length;\n            if (end < pos)\n                break;\n            if (start <= pos && (start < pos || child.covers(-1)) && (end > pos || child.covers(1)) &&\n                (!best || child instanceof LineView && !(best instanceof LineView && side >= 0))) {\n                best = child;\n                bestPos = start;\n            }\n            else if (best && start == pos && end == pos && child instanceof BlockWidgetView && Math.abs(side) < 2) {\n                if (child.deco.startSide < 0)\n                    break;\n                else if (i)\n                    best = null;\n            }\n            off = start;\n        }\n        return best ? best.coordsAt(pos - bestPos, side) : null;\n    }\n    coordsForChar(pos) {\n        let { i, off } = this.childPos(pos, 1), child = this.children[i];\n        if (!(child instanceof LineView))\n            return null;\n        while (child.children.length) {\n            let { i, off: childOff } = child.childPos(off, 1);\n            for (;; i++) {\n                if (i == child.children.length)\n                    return null;\n                if ((child = child.children[i]).length)\n                    break;\n            }\n            off = childOff;\n        }\n        if (!(child instanceof TextView))\n            return null;\n        let end = findClusterBreak(child.text, off);\n        if (end == off)\n            return null;\n        let rects = textRange(child.dom, off, end).getClientRects();\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (i == rects.length - 1 || rect.top < rect.bottom && rect.left < rect.right)\n                return rect;\n        }\n        return null;\n    }\n    measureVisibleLineHeights(viewport) {\n        let result = [], { from, to } = viewport;\n        let contentWidth = this.view.contentDOM.clientWidth;\n        let isWider = contentWidth > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1;\n        let widest = -1, ltr = this.view.textDirection == Direction.LTR;\n        for (let pos = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (end > to)\n                break;\n            if (pos >= from) {\n                let childRect = child.dom.getBoundingClientRect();\n                result.push(childRect.height);\n                if (isWider) {\n                    let last = child.dom.lastChild;\n                    let rects = last ? clientRectsFor(last) : [];\n                    if (rects.length) {\n                        let rect = rects[rects.length - 1];\n                        let width = ltr ? rect.right - childRect.left : childRect.right - rect.left;\n                        if (width > widest) {\n                            widest = width;\n                            this.minWidth = contentWidth;\n                            this.minWidthFrom = pos;\n                            this.minWidthTo = end;\n                        }\n                    }\n                }\n            }\n            pos = end + child.breakAfter;\n        }\n        return result;\n    }\n    textDirectionAt(pos) {\n        let { i } = this.childPos(pos, 1);\n        return getComputedStyle(this.children[i].dom).direction == \"rtl\" ? Direction.RTL : Direction.LTR;\n    }\n    measureTextSize() {\n        for (let child of this.children) {\n            if (child instanceof LineView) {\n                let measure = child.measureTextSize();\n                if (measure)\n                    return measure;\n            }\n        }\n        // If no workable line exists, force a layout of a measurable element\n        let dummy = document.createElement(\"div\"), lineHeight, charWidth, textHeight;\n        dummy.className = \"cm-line\";\n        dummy.style.width = \"99999px\";\n        dummy.style.position = \"absolute\";\n        dummy.textContent = \"abc def ghi jkl mno pqr stu\";\n        this.view.observer.ignore(() => {\n            this.dom.appendChild(dummy);\n            let rect = clientRectsFor(dummy.firstChild)[0];\n            lineHeight = dummy.getBoundingClientRect().height;\n            charWidth = rect ? rect.width / 27 : 7;\n            textHeight = rect ? rect.height : lineHeight;\n            dummy.remove();\n        });\n        return { lineHeight, charWidth, textHeight };\n    }\n    childCursor(pos = this.length) {\n        // Move back to start of last element when possible, so that\n        // `ChildCursor.findPos` doesn't have to deal with the edge case\n        // of being after the last element.\n        let i = this.children.length;\n        if (i)\n            pos -= this.children[--i].length;\n        return new ChildCursor(this.children, pos, i);\n    }\n    computeBlockGapDeco() {\n        let deco = [], vs = this.view.viewState;\n        for (let pos = 0, i = 0;; i++) {\n            let next = i == vs.viewports.length ? null : vs.viewports[i];\n            let end = next ? next.from - 1 : this.length;\n            if (end > pos) {\n                let height = (vs.lineBlockAt(end).bottom - vs.lineBlockAt(pos).top) / this.view.scaleY;\n                deco.push(Decoration.replace({\n                    widget: new BlockGapWidget(height),\n                    block: true,\n                    inclusive: true,\n                    isBlockGap: true,\n                }).range(pos, end));\n            }\n            if (!next)\n                break;\n            pos = next.to + 1;\n        }\n        return Decoration.set(deco);\n    }\n    updateDeco() {\n        let i = 1;\n        let allDeco = this.view.state.facet(decorations).map(d => {\n            let dynamic = this.dynamicDecorationMap[i++] = typeof d == \"function\";\n            return dynamic ? d(this.view) : d;\n        });\n        let dynamicOuter = false, outerDeco = this.view.state.facet(outerDecorations).map((d, i) => {\n            let dynamic = typeof d == \"function\";\n            if (dynamic)\n                dynamicOuter = true;\n            return dynamic ? d(this.view) : d;\n        });\n        if (outerDeco.length) {\n            this.dynamicDecorationMap[i++] = dynamicOuter;\n            allDeco.push(RangeSet.join(outerDeco));\n        }\n        this.decorations = [\n            this.editContextFormatting,\n            ...allDeco,\n            this.computeBlockGapDeco(),\n            this.view.viewState.lineGapDeco\n        ];\n        while (i < this.decorations.length)\n            this.dynamicDecorationMap[i++] = false;\n        return this.decorations;\n    }\n    scrollIntoView(target) {\n        if (target.isSnapshot) {\n            let ref = this.view.viewState.lineBlockAt(target.range.head);\n            this.view.scrollDOM.scrollTop = ref.top - target.yMargin;\n            this.view.scrollDOM.scrollLeft = target.xMargin;\n            return;\n        }\n        for (let handler of this.view.state.facet(scrollHandler)) {\n            try {\n                if (handler(this.view, target.range, target))\n                    return true;\n            }\n            catch (e) {\n                logException(this.view.state, e, \"scroll handler\");\n            }\n        }\n        let { range } = target;\n        let rect = this.coordsAt(range.head, range.empty ? range.assoc : range.head > range.anchor ? -1 : 1), other;\n        if (!rect)\n            return;\n        if (!range.empty && (other = this.coordsAt(range.anchor, range.anchor > range.head ? -1 : 1)))\n            rect = { left: Math.min(rect.left, other.left), top: Math.min(rect.top, other.top),\n                right: Math.max(rect.right, other.right), bottom: Math.max(rect.bottom, other.bottom) };\n        let margins = getScrollMargins(this.view);\n        let targetRect = {\n            left: rect.left - margins.left, top: rect.top - margins.top,\n            right: rect.right + margins.right, bottom: rect.bottom + margins.bottom\n        };\n        let { offsetWidth, offsetHeight } = this.view.scrollDOM;\n        scrollRectIntoView(this.view.scrollDOM, targetRect, range.head < range.anchor ? -1 : 1, target.x, target.y, Math.max(Math.min(target.xMargin, offsetWidth), -offsetWidth), Math.max(Math.min(target.yMargin, offsetHeight), -offsetHeight), this.view.textDirection == Direction.LTR);\n    }\n}\nfunction betweenUneditable(pos) {\n    return pos.node.nodeType == 1 && pos.node.firstChild &&\n        (pos.offset == 0 || pos.node.childNodes[pos.offset - 1].contentEditable == \"false\") &&\n        (pos.offset == pos.node.childNodes.length || pos.node.childNodes[pos.offset].contentEditable == \"false\");\n}\nfunction findCompositionNode(view, headPos) {\n    let sel = view.observer.selectionRange;\n    if (!sel.focusNode)\n        return null;\n    let textBefore = textNodeBefore(sel.focusNode, sel.focusOffset);\n    let textAfter = textNodeAfter(sel.focusNode, sel.focusOffset);\n    let textNode = textBefore || textAfter;\n    if (textAfter && textBefore && textAfter.node != textBefore.node) {\n        let descAfter = ContentView.get(textAfter.node);\n        if (!descAfter || descAfter instanceof TextView && descAfter.text != textAfter.node.nodeValue) {\n            textNode = textAfter;\n        }\n        else if (view.docView.lastCompositionAfterCursor) {\n            let descBefore = ContentView.get(textBefore.node);\n            if (!(!descBefore || descBefore instanceof TextView && descBefore.text != textBefore.node.nodeValue))\n                textNode = textAfter;\n        }\n    }\n    view.docView.lastCompositionAfterCursor = textNode != textBefore;\n    if (!textNode)\n        return null;\n    let from = headPos - textNode.offset;\n    return { from, to: from + textNode.node.nodeValue.length, node: textNode.node };\n}\nfunction findCompositionRange(view, changes, headPos) {\n    let found = findCompositionNode(view, headPos);\n    if (!found)\n        return null;\n    let { node: textNode, from, to } = found, text = textNode.nodeValue;\n    // Don't try to preserve multi-line compositions\n    if (/[\\n\\r]/.test(text))\n        return null;\n    if (view.state.doc.sliceString(found.from, found.to) != text)\n        return null;\n    let inv = changes.invertedDesc;\n    let range = new ChangedRange(inv.mapPos(from), inv.mapPos(to), from, to);\n    let marks = [];\n    for (let parent = textNode.parentNode;; parent = parent.parentNode) {\n        let parentView = ContentView.get(parent);\n        if (parentView instanceof MarkView)\n            marks.push({ node: parent, deco: parentView.mark });\n        else if (parentView instanceof LineView || parent.nodeName == \"DIV\" && parent.parentNode == view.contentDOM)\n            return { range, text: textNode, marks, line: parent };\n        else if (parent != view.contentDOM)\n            marks.push({ node: parent, deco: new MarkDecoration({\n                    inclusive: true,\n                    attributes: getAttrs(parent),\n                    tagName: parent.tagName.toLowerCase()\n                }) });\n        else\n            return null;\n    }\n}\nfunction nextToUneditable(node, offset) {\n    if (node.nodeType != 1)\n        return 0;\n    return (offset && node.childNodes[offset - 1].contentEditable == \"false\" ? 1 /* NextTo.Before */ : 0) |\n        (offset < node.childNodes.length && node.childNodes[offset].contentEditable == \"false\" ? 2 /* NextTo.After */ : 0);\n}\nlet DecorationComparator$1 = class DecorationComparator {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange(from, to) { addRange(from, to, this.changes); }\n    comparePoint(from, to) { addRange(from, to, this.changes); }\n    boundChange(pos) { addRange(pos, pos, this.changes); }\n};\nfunction findChangedDeco(a, b, diff) {\n    let comp = new DecorationComparator$1;\n    RangeSet.compare(a, b, diff, comp);\n    return comp.changes;\n}\nfunction inUneditable(node, inside) {\n    for (let cur = node; cur && cur != inside; cur = cur.assignedSlot || cur.parentNode) {\n        if (cur.nodeType == 1 && cur.contentEditable == 'false') {\n            return true;\n        }\n    }\n    return false;\n}\nfunction touchesComposition(changes, composition) {\n    let touched = false;\n    if (composition)\n        changes.iterChangedRanges((from, to) => {\n            if (from < composition.to && to > composition.from)\n                touched = true;\n        });\n    return touched;\n}\n\nfunction groupAt(state, pos, bias = 1) {\n    let categorize = state.charCategorizer(pos);\n    let line = state.doc.lineAt(pos), linePos = pos - line.from;\n    if (line.length == 0)\n        return EditorSelection.cursor(pos);\n    if (linePos == 0)\n        bias = 1;\n    else if (linePos == line.length)\n        bias = -1;\n    let from = linePos, to = linePos;\n    if (bias < 0)\n        from = findClusterBreak(line.text, linePos, false);\n    else\n        to = findClusterBreak(line.text, linePos);\n    let cat = categorize(line.text.slice(from, to));\n    while (from > 0) {\n        let prev = findClusterBreak(line.text, from, false);\n        if (categorize(line.text.slice(prev, from)) != cat)\n            break;\n        from = prev;\n    }\n    while (to < line.length) {\n        let next = findClusterBreak(line.text, to);\n        if (categorize(line.text.slice(to, next)) != cat)\n            break;\n        to = next;\n    }\n    return EditorSelection.range(from + line.from, to + line.from);\n}\n// Search the DOM for the {node, offset} position closest to the given\n// coordinates. Very inefficient and crude, but can usually be avoided\n// by calling caret(Position|Range)FromPoint instead.\nfunction getdx(x, rect) {\n    return rect.left > x ? rect.left - x : Math.max(0, x - rect.right);\n}\nfunction getdy(y, rect) {\n    return rect.top > y ? rect.top - y : Math.max(0, y - rect.bottom);\n}\nfunction yOverlap(a, b) {\n    return a.top < b.bottom - 1 && a.bottom > b.top + 1;\n}\nfunction upTop(rect, top) {\n    return top < rect.top ? { top, left: rect.left, right: rect.right, bottom: rect.bottom } : rect;\n}\nfunction upBot(rect, bottom) {\n    return bottom > rect.bottom ? { top: rect.top, left: rect.left, right: rect.right, bottom } : rect;\n}\nfunction domPosAtCoords(parent, x, y) {\n    let closest, closestRect, closestX, closestY, closestOverlap = false;\n    let above, below, aboveRect, belowRect;\n    for (let child = parent.firstChild; child; child = child.nextSibling) {\n        let rects = clientRectsFor(child);\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (closestRect && yOverlap(closestRect, rect))\n                rect = upTop(upBot(rect, closestRect.bottom), closestRect.top);\n            let dx = getdx(x, rect), dy = getdy(y, rect);\n            if (dx == 0 && dy == 0)\n                return child.nodeType == 3 ? domPosInText(child, x, y) : domPosAtCoords(child, x, y);\n            if (!closest || closestY > dy || closestY == dy && closestX > dx) {\n                closest = child;\n                closestRect = rect;\n                closestX = dx;\n                closestY = dy;\n                let side = dy ? (y < rect.top ? -1 : 1) : dx ? (x < rect.left ? -1 : 1) : 0;\n                closestOverlap = !side || (side > 0 ? i < rects.length - 1 : i > 0);\n            }\n            if (dx == 0) {\n                if (y > rect.bottom && (!aboveRect || aboveRect.bottom < rect.bottom)) {\n                    above = child;\n                    aboveRect = rect;\n                }\n                else if (y < rect.top && (!belowRect || belowRect.top > rect.top)) {\n                    below = child;\n                    belowRect = rect;\n                }\n            }\n            else if (aboveRect && yOverlap(aboveRect, rect)) {\n                aboveRect = upBot(aboveRect, rect.bottom);\n            }\n            else if (belowRect && yOverlap(belowRect, rect)) {\n                belowRect = upTop(belowRect, rect.top);\n            }\n        }\n    }\n    if (aboveRect && aboveRect.bottom >= y) {\n        closest = above;\n        closestRect = aboveRect;\n    }\n    else if (belowRect && belowRect.top <= y) {\n        closest = below;\n        closestRect = belowRect;\n    }\n    if (!closest)\n        return { node: parent, offset: 0 };\n    let clipX = Math.max(closestRect.left, Math.min(closestRect.right, x));\n    if (closest.nodeType == 3)\n        return domPosInText(closest, clipX, y);\n    if (closestOverlap && closest.contentEditable != \"false\")\n        return domPosAtCoords(closest, clipX, y);\n    let offset = Array.prototype.indexOf.call(parent.childNodes, closest) +\n        (x >= (closestRect.left + closestRect.right) / 2 ? 1 : 0);\n    return { node: parent, offset };\n}\nfunction domPosInText(node, x, y) {\n    let len = node.nodeValue.length;\n    let closestOffset = -1, closestDY = 1e9, generalSide = 0;\n    for (let i = 0; i < len; i++) {\n        let rects = textRange(node, i, i + 1).getClientRects();\n        for (let j = 0; j < rects.length; j++) {\n            let rect = rects[j];\n            if (rect.top == rect.bottom)\n                continue;\n            if (!generalSide)\n                generalSide = x - rect.left;\n            let dy = (rect.top > y ? rect.top - y : y - rect.bottom) - 1;\n            if (rect.left - 1 <= x && rect.right + 1 >= x && dy < closestDY) {\n                let right = x >= (rect.left + rect.right) / 2, after = right;\n                if (browser.chrome || browser.gecko) {\n                    // Check for RTL on browsers that support getting client\n                    // rects for empty ranges.\n                    let rectBefore = textRange(node, i).getBoundingClientRect();\n                    if (rectBefore.left == rect.right)\n                        after = !right;\n                }\n                if (dy <= 0)\n                    return { node, offset: i + (after ? 1 : 0) };\n                closestOffset = i + (after ? 1 : 0);\n                closestDY = dy;\n            }\n        }\n    }\n    return { node, offset: closestOffset > -1 ? closestOffset : generalSide > 0 ? node.nodeValue.length : 0 };\n}\nfunction posAtCoords(view, coords, precise, bias = -1) {\n    var _a, _b;\n    let content = view.contentDOM.getBoundingClientRect(), docTop = content.top + view.viewState.paddingTop;\n    let block, { docHeight } = view.viewState;\n    let { x, y } = coords, yOffset = y - docTop;\n    if (yOffset < 0)\n        return 0;\n    if (yOffset > docHeight)\n        return view.state.doc.length;\n    // Scan for a text block near the queried y position\n    for (let halfLine = view.viewState.heightOracle.textHeight / 2, bounced = false;;) {\n        block = view.elementAtHeight(yOffset);\n        if (block.type == BlockType.Text)\n            break;\n        for (;;) {\n            // Move the y position out of this block\n            yOffset = bias > 0 ? block.bottom + halfLine : block.top - halfLine;\n            if (yOffset >= 0 && yOffset <= docHeight)\n                break;\n            // If the document consists entirely of replaced widgets, we\n            // won't find a text block, so return 0\n            if (bounced)\n                return precise ? null : 0;\n            bounced = true;\n            bias = -bias;\n        }\n    }\n    y = docTop + yOffset;\n    let lineStart = block.from;\n    // If this is outside of the rendered viewport, we can't determine a position\n    if (lineStart < view.viewport.from)\n        return view.viewport.from == 0 ? 0 : precise ? null : posAtCoordsImprecise(view, content, block, x, y);\n    if (lineStart > view.viewport.to)\n        return view.viewport.to == view.state.doc.length ? view.state.doc.length :\n            precise ? null : posAtCoordsImprecise(view, content, block, x, y);\n    // Prefer ShadowRootOrDocument.elementFromPoint if present, fall back to document if not\n    let doc = view.dom.ownerDocument;\n    let root = view.root.elementFromPoint ? view.root : doc;\n    let element = root.elementFromPoint(x, y);\n    if (element && !view.contentDOM.contains(element))\n        element = null;\n    // If the element is unexpected, clip x at the sides of the content area and try again\n    if (!element) {\n        x = Math.max(content.left + 1, Math.min(content.right - 1, x));\n        element = root.elementFromPoint(x, y);\n        if (element && !view.contentDOM.contains(element))\n            element = null;\n    }\n    // There's visible editor content under the point, so we can try\n    // using caret(Position|Range)FromPoint as a shortcut\n    let node, offset = -1;\n    if (element && ((_a = view.docView.nearest(element)) === null || _a === void 0 ? void 0 : _a.isEditable) != false) {\n        if (doc.caretPositionFromPoint) {\n            let pos = doc.caretPositionFromPoint(x, y);\n            if (pos)\n                ({ offsetNode: node, offset } = pos);\n        }\n        else if (doc.caretRangeFromPoint) {\n            let range = doc.caretRangeFromPoint(x, y);\n            if (range) {\n                ({ startContainer: node, startOffset: offset } = range);\n                if (!view.contentDOM.contains(node) ||\n                    browser.safari && isSuspiciousSafariCaretResult(node, offset, x) ||\n                    browser.chrome && isSuspiciousChromeCaretResult(node, offset, x))\n                    node = undefined;\n            }\n        }\n        // Chrome will return offsets into <input> elements without child\n        // nodes, which will lead to a null deref below, so clip the\n        // offset to the node size.\n        if (node)\n            offset = Math.min(maxOffset(node), offset);\n    }\n    // No luck, do our own (potentially expensive) search\n    if (!node || !view.docView.dom.contains(node)) {\n        let line = LineView.find(view.docView, lineStart);\n        if (!line)\n            return yOffset > block.top + block.height / 2 ? block.to : block.from;\n        ({ node, offset } = domPosAtCoords(line.dom, x, y));\n    }\n    let nearest = view.docView.nearest(node);\n    if (!nearest)\n        return null;\n    if (nearest.isWidget && ((_b = nearest.dom) === null || _b === void 0 ? void 0 : _b.nodeType) == 1) {\n        let rect = nearest.dom.getBoundingClientRect();\n        return coords.y < rect.top || coords.y <= rect.bottom && coords.x <= (rect.left + rect.right) / 2\n            ? nearest.posAtStart : nearest.posAtEnd;\n    }\n    else {\n        return nearest.localPosFromDOM(node, offset) + nearest.posAtStart;\n    }\n}\nfunction posAtCoordsImprecise(view, contentRect, block, x, y) {\n    let into = Math.round((x - contentRect.left) * view.defaultCharacterWidth);\n    if (view.lineWrapping && block.height > view.defaultLineHeight * 1.5) {\n        let textHeight = view.viewState.heightOracle.textHeight;\n        let line = Math.floor((y - block.top - (view.defaultLineHeight - textHeight) * 0.5) / textHeight);\n        into += line * view.viewState.heightOracle.lineLength;\n    }\n    let content = view.state.sliceDoc(block.from, block.to);\n    return block.from + findColumn(content, into, view.state.tabSize);\n}\n// In case of a high line height, Safari's caretRangeFromPoint treats\n// the space between lines as belonging to the last character of the\n// line before. This is used to detect such a result so that it can be\n// ignored (issue #401).\nfunction isSuspiciousSafariCaretResult(node, offset, x) {\n    let len;\n    if (node.nodeType != 3 || offset != (len = node.nodeValue.length))\n        return false;\n    for (let next = node.nextSibling; next; next = next.nextSibling)\n        if (next.nodeType != 1 || next.nodeName != \"BR\")\n            return false;\n    return textRange(node, len - 1, len).getBoundingClientRect().left > x;\n}\n// Chrome will move positions between lines to the start of the next line\nfunction isSuspiciousChromeCaretResult(node, offset, x) {\n    if (offset != 0)\n        return false;\n    for (let cur = node;;) {\n        let parent = cur.parentNode;\n        if (!parent || parent.nodeType != 1 || parent.firstChild != cur)\n            return false;\n        if (parent.classList.contains(\"cm-line\"))\n            break;\n        cur = parent;\n    }\n    let rect = node.nodeType == 1 ? node.getBoundingClientRect()\n        : textRange(node, 0, Math.max(node.nodeValue.length, 1)).getBoundingClientRect();\n    return x - rect.left > 5;\n}\nfunction blockAt(view, pos) {\n    let line = view.lineBlockAt(pos);\n    if (Array.isArray(line.type))\n        for (let l of line.type) {\n            if (l.to > pos || l.to == pos && (l.to == line.to || l.type == BlockType.Text))\n                return l;\n        }\n    return line;\n}\nfunction moveToLineBoundary(view, start, forward, includeWrap) {\n    let line = blockAt(view, start.head);\n    let coords = !includeWrap || line.type != BlockType.Text || !(view.lineWrapping || line.widgetLineBreaks) ? null\n        : view.coordsAtPos(start.assoc < 0 && start.head > line.from ? start.head - 1 : start.head);\n    if (coords) {\n        let editorRect = view.dom.getBoundingClientRect();\n        let direction = view.textDirectionAt(line.from);\n        let pos = view.posAtCoords({ x: forward == (direction == Direction.LTR) ? editorRect.right - 1 : editorRect.left + 1,\n            y: (coords.top + coords.bottom) / 2 });\n        if (pos != null)\n            return EditorSelection.cursor(pos, forward ? -1 : 1);\n    }\n    return EditorSelection.cursor(forward ? line.to : line.from, forward ? -1 : 1);\n}\nfunction moveByChar(view, start, forward, by) {\n    let line = view.state.doc.lineAt(start.head), spans = view.bidiSpans(line);\n    let direction = view.textDirectionAt(line.from);\n    for (let cur = start, check = null;;) {\n        let next = moveVisually(line, spans, direction, cur, forward), char = movedOver;\n        if (!next) {\n            if (line.number == (forward ? view.state.doc.lines : 1))\n                return cur;\n            char = \"\\n\";\n            line = view.state.doc.line(line.number + (forward ? 1 : -1));\n            spans = view.bidiSpans(line);\n            next = view.visualLineSide(line, !forward);\n        }\n        if (!check) {\n            if (!by)\n                return next;\n            check = by(char);\n        }\n        else if (!check(char)) {\n            return cur;\n        }\n        cur = next;\n    }\n}\nfunction byGroup(view, pos, start) {\n    let categorize = view.state.charCategorizer(pos);\n    let cat = categorize(start);\n    return (next) => {\n        let nextCat = categorize(next);\n        if (cat == CharCategory.Space)\n            cat = nextCat;\n        return cat == nextCat;\n    };\n}\nfunction moveVertically(view, start, forward, distance) {\n    let startPos = start.head, dir = forward ? 1 : -1;\n    if (startPos == (forward ? view.state.doc.length : 0))\n        return EditorSelection.cursor(startPos, start.assoc);\n    let goal = start.goalColumn, startY;\n    let rect = view.contentDOM.getBoundingClientRect();\n    let startCoords = view.coordsAtPos(startPos, start.assoc || -1), docTop = view.documentTop;\n    if (startCoords) {\n        if (goal == null)\n            goal = startCoords.left - rect.left;\n        startY = dir < 0 ? startCoords.top : startCoords.bottom;\n    }\n    else {\n        let line = view.viewState.lineBlockAt(startPos);\n        if (goal == null)\n            goal = Math.min(rect.right - rect.left, view.defaultCharacterWidth * (startPos - line.from));\n        startY = (dir < 0 ? line.top : line.bottom) + docTop;\n    }\n    let resolvedGoal = rect.left + goal;\n    let dist = distance !== null && distance !== void 0 ? distance : (view.viewState.heightOracle.textHeight >> 1);\n    for (let extra = 0;; extra += 10) {\n        let curY = startY + (dist + extra) * dir;\n        let pos = posAtCoords(view, { x: resolvedGoal, y: curY }, false, dir);\n        if (curY < rect.top || curY > rect.bottom || (dir < 0 ? pos < startPos : pos > startPos)) {\n            let charRect = view.docView.coordsForChar(pos);\n            let assoc = !charRect || curY < charRect.top ? -1 : 1;\n            return EditorSelection.cursor(pos, assoc, undefined, goal);\n        }\n    }\n}\nfunction skipAtomicRanges(atoms, pos, bias) {\n    for (;;) {\n        let moved = 0;\n        for (let set of atoms) {\n            set.between(pos - 1, pos + 1, (from, to, value) => {\n                if (pos > from && pos < to) {\n                    let side = moved || bias || (pos - from < to - pos ? -1 : 1);\n                    pos = side < 0 ? from : to;\n                    moved = side;\n                }\n            });\n        }\n        if (!moved)\n            return pos;\n    }\n}\nfunction skipAtoms(view, oldPos, pos) {\n    let newPos = skipAtomicRanges(view.state.facet(atomicRanges).map(f => f(view)), pos.from, oldPos.head > pos.from ? -1 : 1);\n    return newPos == pos.from ? pos : EditorSelection.cursor(newPos, newPos < pos.from ? 1 : -1);\n}\n\nconst LineBreakPlaceholder = \"\\uffff\";\nclass DOMReader {\n    constructor(points, state) {\n        this.points = points;\n        this.text = \"\";\n        this.lineSeparator = state.facet(EditorState.lineSeparator);\n    }\n    append(text) {\n        this.text += text;\n    }\n    lineBreak() {\n        this.text += LineBreakPlaceholder;\n    }\n    readRange(start, end) {\n        if (!start)\n            return this;\n        let parent = start.parentNode;\n        for (let cur = start;;) {\n            this.findPointBefore(parent, cur);\n            let oldLen = this.text.length;\n            this.readNode(cur);\n            let next = cur.nextSibling;\n            if (next == end)\n                break;\n            let view = ContentView.get(cur), nextView = ContentView.get(next);\n            if (view && nextView ? view.breakAfter :\n                (view ? view.breakAfter : isBlockElement(cur)) ||\n                    (isBlockElement(next) && (cur.nodeName != \"BR\" || cur.cmIgnore) && this.text.length > oldLen))\n                this.lineBreak();\n            cur = next;\n        }\n        this.findPointBefore(parent, end);\n        return this;\n    }\n    readTextNode(node) {\n        let text = node.nodeValue;\n        for (let point of this.points)\n            if (point.node == node)\n                point.pos = this.text.length + Math.min(point.offset, text.length);\n        for (let off = 0, re = this.lineSeparator ? null : /\\r\\n?|\\n/g;;) {\n            let nextBreak = -1, breakSize = 1, m;\n            if (this.lineSeparator) {\n                nextBreak = text.indexOf(this.lineSeparator, off);\n                breakSize = this.lineSeparator.length;\n            }\n            else if (m = re.exec(text)) {\n                nextBreak = m.index;\n                breakSize = m[0].length;\n            }\n            this.append(text.slice(off, nextBreak < 0 ? text.length : nextBreak));\n            if (nextBreak < 0)\n                break;\n            this.lineBreak();\n            if (breakSize > 1)\n                for (let point of this.points)\n                    if (point.node == node && point.pos > this.text.length)\n                        point.pos -= breakSize - 1;\n            off = nextBreak + breakSize;\n        }\n    }\n    readNode(node) {\n        if (node.cmIgnore)\n            return;\n        let view = ContentView.get(node);\n        let fromView = view && view.overrideDOMText;\n        if (fromView != null) {\n            this.findPointInside(node, fromView.length);\n            for (let i = fromView.iter(); !i.next().done;) {\n                if (i.lineBreak)\n                    this.lineBreak();\n                else\n                    this.append(i.value);\n            }\n        }\n        else if (node.nodeType == 3) {\n            this.readTextNode(node);\n        }\n        else if (node.nodeName == \"BR\") {\n            if (node.nextSibling)\n                this.lineBreak();\n        }\n        else if (node.nodeType == 1) {\n            this.readRange(node.firstChild, null);\n        }\n    }\n    findPointBefore(node, next) {\n        for (let point of this.points)\n            if (point.node == node && node.childNodes[point.offset] == next)\n                point.pos = this.text.length;\n    }\n    findPointInside(node, length) {\n        for (let point of this.points)\n            if (node.nodeType == 3 ? point.node == node : node.contains(point.node))\n                point.pos = this.text.length + (isAtEnd(node, point.node, point.offset) ? length : 0);\n    }\n}\nfunction isAtEnd(parent, node, offset) {\n    for (;;) {\n        if (!node || offset < maxOffset(node))\n            return false;\n        if (node == parent)\n            return true;\n        offset = domIndex(node) + 1;\n        node = node.parentNode;\n    }\n}\nclass DOMPoint {\n    constructor(node, offset) {\n        this.node = node;\n        this.offset = offset;\n        this.pos = -1;\n    }\n}\n\nclass DOMChange {\n    constructor(view, start, end, typeOver) {\n        this.typeOver = typeOver;\n        this.bounds = null;\n        this.text = \"\";\n        this.domChanged = start > -1;\n        let { impreciseHead: iHead, impreciseAnchor: iAnchor } = view.docView;\n        if (view.state.readOnly && start > -1) {\n            // Ignore changes when the editor is read-only\n            this.newSel = null;\n        }\n        else if (start > -1 && (this.bounds = view.docView.domBoundsAround(start, end, 0))) {\n            let selPoints = iHead || iAnchor ? [] : selectionPoints(view);\n            let reader = new DOMReader(selPoints, view.state);\n            reader.readRange(this.bounds.startDOM, this.bounds.endDOM);\n            this.text = reader.text;\n            this.newSel = selectionFromPoints(selPoints, this.bounds.from);\n        }\n        else {\n            let domSel = view.observer.selectionRange;\n            let head = iHead && iHead.node == domSel.focusNode && iHead.offset == domSel.focusOffset ||\n                !contains(view.contentDOM, domSel.focusNode)\n                ? view.state.selection.main.head\n                : view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset);\n            let anchor = iAnchor && iAnchor.node == domSel.anchorNode && iAnchor.offset == domSel.anchorOffset ||\n                !contains(view.contentDOM, domSel.anchorNode)\n                ? view.state.selection.main.anchor\n                : view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset);\n            // iOS will refuse to select the block gaps when doing\n            // select-all.\n            // Chrome will put the selection *inside* them, confusing\n            // posFromDOM\n            let vp = view.viewport;\n            if ((browser.ios || browser.chrome) && view.state.selection.main.empty && head != anchor &&\n                (vp.from > 0 || vp.to < view.state.doc.length)) {\n                let from = Math.min(head, anchor), to = Math.max(head, anchor);\n                let offFrom = vp.from - from, offTo = vp.to - to;\n                if ((offFrom == 0 || offFrom == 1 || from == 0) && (offTo == 0 || offTo == -1 || to == view.state.doc.length)) {\n                    head = 0;\n                    anchor = view.state.doc.length;\n                }\n            }\n            this.newSel = EditorSelection.single(anchor, head);\n        }\n    }\n}\nfunction applyDOMChange(view, domChange) {\n    let change;\n    let { newSel } = domChange, sel = view.state.selection.main;\n    let lastKey = view.inputState.lastKeyTime > Date.now() - 100 ? view.inputState.lastKeyCode : -1;\n    if (domChange.bounds) {\n        let { from, to } = domChange.bounds;\n        let preferredPos = sel.from, preferredSide = null;\n        // Prefer anchoring to end when Backspace is pressed (or, on\n        // Android, when something was deleted)\n        if (lastKey === 8 || browser.android && domChange.text.length < to - from) {\n            preferredPos = sel.to;\n            preferredSide = \"end\";\n        }\n        let diff = findDiff(view.state.doc.sliceString(from, to, LineBreakPlaceholder), domChange.text, preferredPos - from, preferredSide);\n        if (diff) {\n            // Chrome inserts two newlines when pressing shift-enter at the\n            // end of a line. DomChange drops one of those.\n            if (browser.chrome && lastKey == 13 &&\n                diff.toB == diff.from + 2 && domChange.text.slice(diff.from, diff.toB) == LineBreakPlaceholder + LineBreakPlaceholder)\n                diff.toB--;\n            change = { from: from + diff.from, to: from + diff.toA,\n                insert: Text.of(domChange.text.slice(diff.from, diff.toB).split(LineBreakPlaceholder)) };\n        }\n    }\n    else if (newSel && (!view.hasFocus && view.state.facet(editable) || newSel.main.eq(sel))) {\n        newSel = null;\n    }\n    if (!change && !newSel)\n        return false;\n    if (!change && domChange.typeOver && !sel.empty && newSel && newSel.main.empty) {\n        // Heuristic to notice typing over a selected character\n        change = { from: sel.from, to: sel.to, insert: view.state.doc.slice(sel.from, sel.to) };\n    }\n    else if ((browser.mac || browser.android) && change && change.from == change.to && change.from == sel.head - 1 &&\n        /^\\. ?$/.test(change.insert.toString()) && view.contentDOM.getAttribute(\"autocorrect\") == \"off\") {\n        // Detect insert-period-on-double-space Mac and Android behavior,\n        // and transform it into a regular space insert.\n        if (newSel && change.insert.length == 2)\n            newSel = EditorSelection.single(newSel.main.anchor - 1, newSel.main.head - 1);\n        change = { from: change.from, to: change.to, insert: Text.of([change.insert.toString().replace(\".\", \" \")]) };\n    }\n    else if (change && change.from >= sel.from && change.to <= sel.to &&\n        (change.from != sel.from || change.to != sel.to) &&\n        (sel.to - sel.from) - (change.to - change.from) <= 4) {\n        // If the change is inside the selection and covers most of it,\n        // assume it is a selection replace (with identical characters at\n        // the start/end not included in the diff)\n        change = {\n            from: sel.from, to: sel.to,\n            insert: view.state.doc.slice(sel.from, change.from).append(change.insert).append(view.state.doc.slice(change.to, sel.to))\n        };\n    }\n    else if (browser.chrome && change && change.from == change.to && change.from == sel.head &&\n        change.insert.toString() == \"\\n \" && view.lineWrapping) {\n        // In Chrome, if you insert a space at the start of a wrapped\n        // line, it will actually insert a newline and a space, causing a\n        // bogus new line to be created in CodeMirror (#968)\n        if (newSel)\n            newSel = EditorSelection.single(newSel.main.anchor - 1, newSel.main.head - 1);\n        change = { from: sel.from, to: sel.to, insert: Text.of([\" \"]) };\n    }\n    if (change) {\n        return applyDOMChangeInner(view, change, newSel, lastKey);\n    }\n    else if (newSel && !newSel.main.eq(sel)) {\n        let scrollIntoView = false, userEvent = \"select\";\n        if (view.inputState.lastSelectionTime > Date.now() - 50) {\n            if (view.inputState.lastSelectionOrigin == \"select\")\n                scrollIntoView = true;\n            userEvent = view.inputState.lastSelectionOrigin;\n        }\n        view.dispatch({ selection: newSel, scrollIntoView, userEvent });\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction applyDOMChangeInner(view, change, newSel, lastKey = -1) {\n    if (browser.ios && view.inputState.flushIOSKey(change))\n        return true;\n    let sel = view.state.selection.main;\n    // Android browsers don't fire reasonable key events for enter,\n    // backspace, or delete. So this detects changes that look like\n    // they're caused by those keys, and reinterprets them as key\n    // events. (Some of these keys are also handled by beforeinput\n    // events and the pendingAndroidKey mechanism, but that's not\n    // reliable in all situations.)\n    if (browser.android &&\n        ((change.to == sel.to &&\n            // GBoard will sometimes remove a space it just inserted\n            // after a completion when you press enter\n            (change.from == sel.from || change.from == sel.from - 1 && view.state.sliceDoc(change.from, sel.from) == \" \") &&\n            change.insert.length == 1 && change.insert.lines == 2 &&\n            dispatchKey(view.contentDOM, \"Enter\", 13)) ||\n            ((change.from == sel.from - 1 && change.to == sel.to && change.insert.length == 0 ||\n                lastKey == 8 && change.insert.length < change.to - change.from && change.to > sel.head) &&\n                dispatchKey(view.contentDOM, \"Backspace\", 8)) ||\n            (change.from == sel.from && change.to == sel.to + 1 && change.insert.length == 0 &&\n                dispatchKey(view.contentDOM, \"Delete\", 46))))\n        return true;\n    let text = change.insert.toString();\n    if (view.inputState.composing >= 0)\n        view.inputState.composing++;\n    let defaultTr;\n    let defaultInsert = () => defaultTr || (defaultTr = applyDefaultInsert(view, change, newSel));\n    if (!view.state.facet(inputHandler).some(h => h(view, change.from, change.to, text, defaultInsert)))\n        view.dispatch(defaultInsert());\n    return true;\n}\nfunction applyDefaultInsert(view, change, newSel) {\n    let tr, startState = view.state, sel = startState.selection.main;\n    if (change.from >= sel.from && change.to <= sel.to && change.to - change.from >= (sel.to - sel.from) / 3 &&\n        (!newSel || newSel.main.empty && newSel.main.from == change.from + change.insert.length) &&\n        view.inputState.composing < 0) {\n        let before = sel.from < change.from ? startState.sliceDoc(sel.from, change.from) : \"\";\n        let after = sel.to > change.to ? startState.sliceDoc(change.to, sel.to) : \"\";\n        tr = startState.replaceSelection(view.state.toText(before + change.insert.sliceString(0, undefined, view.state.lineBreak) + after));\n    }\n    else {\n        let changes = startState.changes(change);\n        let mainSel = newSel && newSel.main.to <= changes.newLength ? newSel.main : undefined;\n        // Try to apply a composition change to all cursors\n        if (startState.selection.ranges.length > 1 && view.inputState.composing >= 0 &&\n            change.to <= sel.to && change.to >= sel.to - 10) {\n            let replaced = view.state.sliceDoc(change.from, change.to);\n            let compositionRange, composition = newSel && findCompositionNode(view, newSel.main.head);\n            if (composition) {\n                let dLen = change.insert.length - (change.to - change.from);\n                compositionRange = { from: composition.from, to: composition.to - dLen };\n            }\n            else {\n                compositionRange = view.state.doc.lineAt(sel.head);\n            }\n            let offset = sel.to - change.to, size = sel.to - sel.from;\n            tr = startState.changeByRange(range => {\n                if (range.from == sel.from && range.to == sel.to)\n                    return { changes, range: mainSel || range.map(changes) };\n                let to = range.to - offset, from = to - replaced.length;\n                if (range.to - range.from != size || view.state.sliceDoc(from, to) != replaced ||\n                    // Unfortunately, there's no way to make multiple\n                    // changes in the same node work without aborting\n                    // composition, so cursors in the composition range are\n                    // ignored.\n                    range.to >= compositionRange.from && range.from <= compositionRange.to)\n                    return { range };\n                let rangeChanges = startState.changes({ from, to, insert: change.insert }), selOff = range.to - sel.to;\n                return {\n                    changes: rangeChanges,\n                    range: !mainSel ? range.map(rangeChanges) :\n                        EditorSelection.range(Math.max(0, mainSel.anchor + selOff), Math.max(0, mainSel.head + selOff))\n                };\n            });\n        }\n        else {\n            tr = {\n                changes,\n                selection: mainSel && startState.selection.replaceRange(mainSel)\n            };\n        }\n    }\n    let userEvent = \"input.type\";\n    if (view.composing ||\n        view.inputState.compositionPendingChange && view.inputState.compositionEndedAt > Date.now() - 50) {\n        view.inputState.compositionPendingChange = false;\n        userEvent += \".compose\";\n        if (view.inputState.compositionFirstChange) {\n            userEvent += \".start\";\n            view.inputState.compositionFirstChange = false;\n        }\n    }\n    return startState.update(tr, { userEvent, scrollIntoView: true });\n}\nfunction findDiff(a, b, preferredPos, preferredSide) {\n    let minLen = Math.min(a.length, b.length);\n    let from = 0;\n    while (from < minLen && a.charCodeAt(from) == b.charCodeAt(from))\n        from++;\n    if (from == minLen && a.length == b.length)\n        return null;\n    let toA = a.length, toB = b.length;\n    while (toA > 0 && toB > 0 && a.charCodeAt(toA - 1) == b.charCodeAt(toB - 1)) {\n        toA--;\n        toB--;\n    }\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, from - Math.min(toA, toB));\n        preferredPos -= toA + adjust - from;\n    }\n    if (toA < from && a.length < b.length) {\n        let move = preferredPos <= from && preferredPos >= toA ? from - preferredPos : 0;\n        from -= move;\n        toB = from + (toB - toA);\n        toA = from;\n    }\n    else if (toB < from) {\n        let move = preferredPos <= from && preferredPos >= toB ? from - preferredPos : 0;\n        from -= move;\n        toA = from + (toA - toB);\n        toB = from;\n    }\n    return { from, toA, toB };\n}\nfunction selectionPoints(view) {\n    let result = [];\n    if (view.root.activeElement != view.contentDOM)\n        return result;\n    let { anchorNode, anchorOffset, focusNode, focusOffset } = view.observer.selectionRange;\n    if (anchorNode) {\n        result.push(new DOMPoint(anchorNode, anchorOffset));\n        if (focusNode != anchorNode || focusOffset != anchorOffset)\n            result.push(new DOMPoint(focusNode, focusOffset));\n    }\n    return result;\n}\nfunction selectionFromPoints(points, base) {\n    if (points.length == 0)\n        return null;\n    let anchor = points[0].pos, head = points.length == 2 ? points[1].pos : anchor;\n    return anchor > -1 && head > -1 ? EditorSelection.single(anchor + base, head + base) : null;\n}\n\nclass InputState {\n    setSelectionOrigin(origin) {\n        this.lastSelectionOrigin = origin;\n        this.lastSelectionTime = Date.now();\n    }\n    constructor(view) {\n        this.view = view;\n        this.lastKeyCode = 0;\n        this.lastKeyTime = 0;\n        this.lastTouchTime = 0;\n        this.lastFocusTime = 0;\n        this.lastScrollTop = 0;\n        this.lastScrollLeft = 0;\n        // On iOS, some keys need to have their default behavior happen\n        // (after which we retroactively handle them and reset the DOM) to\n        // avoid messing up the virtual keyboard state.\n        this.pendingIOSKey = undefined;\n        /**\n        When enabled (>-1), tab presses are not given to key handlers,\n        leaving the browser's default behavior. If >0, the mode expires\n        at that timestamp, and any other keypress clears it.\n        Esc enables temporary tab focus mode for two seconds when not\n        otherwise handled.\n        */\n        this.tabFocusMode = -1;\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.lastContextMenu = 0;\n        this.scrollHandlers = [];\n        this.handlers = Object.create(null);\n        // -1 means not in a composition. Otherwise, this counts the number\n        // of changes made during the composition. The count is used to\n        // avoid treating the start state of the composition, before any\n        // changes have been made, as part of the composition.\n        this.composing = -1;\n        // Tracks whether the next change should be marked as starting the\n        // composition (null means no composition, true means next is the\n        // first, false means first has already been marked for this\n        // composition)\n        this.compositionFirstChange = null;\n        // End time of the previous composition\n        this.compositionEndedAt = 0;\n        // Used in a kludge to detect when an Enter keypress should be\n        // considered part of the composition on Safari, which fires events\n        // in the wrong order\n        this.compositionPendingKey = false;\n        // Used to categorize changes as part of a composition, even when\n        // the mutation events fire shortly after the compositionend event\n        this.compositionPendingChange = false;\n        this.mouseSelection = null;\n        // When a drag from the editor is active, this points at the range\n        // being dragged.\n        this.draggedContent = null;\n        this.handleEvent = this.handleEvent.bind(this);\n        this.notifiedFocused = view.hasFocus;\n        // On Safari adding an input event handler somehow prevents an\n        // issue where the composition vanishes when you press enter.\n        if (browser.safari)\n            view.contentDOM.addEventListener(\"input\", () => null);\n        if (browser.gecko)\n            firefoxCopyCutHack(view.contentDOM.ownerDocument);\n    }\n    handleEvent(event) {\n        if (!eventBelongsToEditor(this.view, event) || this.ignoreDuringComposition(event))\n            return;\n        if (event.type == \"keydown\" && this.keydown(event))\n            return;\n        if (this.view.updateState != 0 /* UpdateState.Idle */)\n            Promise.resolve().then(() => this.runHandlers(event.type, event));\n        else\n            this.runHandlers(event.type, event);\n    }\n    runHandlers(type, event) {\n        let handlers = this.handlers[type];\n        if (handlers) {\n            for (let observer of handlers.observers)\n                observer(this.view, event);\n            for (let handler of handlers.handlers) {\n                if (event.defaultPrevented)\n                    break;\n                if (handler(this.view, event)) {\n                    event.preventDefault();\n                    break;\n                }\n            }\n        }\n    }\n    ensureHandlers(plugins) {\n        let handlers = computeHandlers(plugins), prev = this.handlers, dom = this.view.contentDOM;\n        for (let type in handlers)\n            if (type != \"scroll\") {\n                let passive = !handlers[type].handlers.length;\n                let exists = prev[type];\n                if (exists && passive != !exists.handlers.length) {\n                    dom.removeEventListener(type, this.handleEvent);\n                    exists = null;\n                }\n                if (!exists)\n                    dom.addEventListener(type, this.handleEvent, { passive });\n            }\n        for (let type in prev)\n            if (type != \"scroll\" && !handlers[type])\n                dom.removeEventListener(type, this.handleEvent);\n        this.handlers = handlers;\n    }\n    keydown(event) {\n        // Must always run, even if a custom handler handled the event\n        this.lastKeyCode = event.keyCode;\n        this.lastKeyTime = Date.now();\n        if (event.keyCode == 9 && this.tabFocusMode > -1 && (!this.tabFocusMode || Date.now() <= this.tabFocusMode))\n            return true;\n        if (this.tabFocusMode > 0 && event.keyCode != 27 && modifierCodes.indexOf(event.keyCode) < 0)\n            this.tabFocusMode = -1;\n        // Chrome for Android usually doesn't fire proper key events, but\n        // occasionally does, usually surrounded by a bunch of complicated\n        // composition changes. When an enter or backspace key event is\n        // seen, hold off on handling DOM events for a bit, and then\n        // dispatch it.\n        if (browser.android && browser.chrome && !event.synthetic &&\n            (event.keyCode == 13 || event.keyCode == 8)) {\n            this.view.observer.delayAndroidKey(event.key, event.keyCode);\n            return true;\n        }\n        // Preventing the default behavior of Enter on iOS makes the\n        // virtual keyboard get stuck in the wrong (lowercase)\n        // state. So we let it go through, and then, in\n        // applyDOMChange, notify key handlers of it and reset to\n        // the state they produce.\n        let pending;\n        if (browser.ios && !event.synthetic && !event.altKey && !event.metaKey &&\n            ((pending = PendingKeys.find(key => key.keyCode == event.keyCode)) && !event.ctrlKey ||\n                EmacsyPendingKeys.indexOf(event.key) > -1 && event.ctrlKey && !event.shiftKey)) {\n            this.pendingIOSKey = pending || event;\n            setTimeout(() => this.flushIOSKey(), 250);\n            return true;\n        }\n        if (event.keyCode != 229)\n            this.view.observer.forceFlush();\n        return false;\n    }\n    flushIOSKey(change) {\n        let key = this.pendingIOSKey;\n        if (!key)\n            return false;\n        // This looks like an autocorrection before Enter\n        if (key.key == \"Enter\" && change && change.from < change.to && /^\\S+$/.test(change.insert.toString()))\n            return false;\n        this.pendingIOSKey = undefined;\n        return dispatchKey(this.view.contentDOM, key.key, key.keyCode, key instanceof KeyboardEvent ? key : undefined);\n    }\n    ignoreDuringComposition(event) {\n        if (!/^key/.test(event.type))\n            return false;\n        if (this.composing > 0)\n            return true;\n        // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n        // On some input method editors (IMEs), the Enter key is used to\n        // confirm character selection. On Safari, when Enter is pressed,\n        // compositionend and keydown events are sometimes emitted in the\n        // wrong order. The key event should still be ignored, even when\n        // it happens after the compositionend event.\n        if (browser.safari && !browser.ios && this.compositionPendingKey && Date.now() - this.compositionEndedAt < 100) {\n            this.compositionPendingKey = false;\n            return true;\n        }\n        return false;\n    }\n    startMouseSelection(mouseSelection) {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n        this.mouseSelection = mouseSelection;\n    }\n    update(update) {\n        this.view.observer.update(update);\n        if (this.mouseSelection)\n            this.mouseSelection.update(update);\n        if (this.draggedContent && update.docChanged)\n            this.draggedContent = this.draggedContent.map(update.changes);\n        if (update.transactions.length)\n            this.lastKeyCode = this.lastSelectionTime = 0;\n    }\n    destroy() {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n    }\n}\nfunction bindHandler(plugin, handler) {\n    return (view, event) => {\n        try {\n            return handler.call(plugin, event, view);\n        }\n        catch (e) {\n            logException(view.state, e);\n        }\n    };\n}\nfunction computeHandlers(plugins) {\n    let result = Object.create(null);\n    function record(type) {\n        return result[type] || (result[type] = { observers: [], handlers: [] });\n    }\n    for (let plugin of plugins) {\n        let spec = plugin.spec;\n        if (spec && spec.domEventHandlers)\n            for (let type in spec.domEventHandlers) {\n                let f = spec.domEventHandlers[type];\n                if (f)\n                    record(type).handlers.push(bindHandler(plugin.value, f));\n            }\n        if (spec && spec.domEventObservers)\n            for (let type in spec.domEventObservers) {\n                let f = spec.domEventObservers[type];\n                if (f)\n                    record(type).observers.push(bindHandler(plugin.value, f));\n            }\n    }\n    for (let type in handlers)\n        record(type).handlers.push(handlers[type]);\n    for (let type in observers)\n        record(type).observers.push(observers[type]);\n    return result;\n}\nconst PendingKeys = [\n    { key: \"Backspace\", keyCode: 8, inputType: \"deleteContentBackward\" },\n    { key: \"Enter\", keyCode: 13, inputType: \"insertParagraph\" },\n    { key: \"Enter\", keyCode: 13, inputType: \"insertLineBreak\" },\n    { key: \"Delete\", keyCode: 46, inputType: \"deleteContentForward\" }\n];\nconst EmacsyPendingKeys = \"dthko\";\n// Key codes for modifier keys\nconst modifierCodes = [16, 17, 18, 20, 91, 92, 224, 225];\nconst dragScrollMargin = 6;\nfunction dragScrollSpeed(dist) {\n    return Math.max(0, dist) * 0.7 + 8;\n}\nfunction dist(a, b) {\n    return Math.max(Math.abs(a.clientX - b.clientX), Math.abs(a.clientY - b.clientY));\n}\nclass MouseSelection {\n    constructor(view, startEvent, style, mustSelect) {\n        this.view = view;\n        this.startEvent = startEvent;\n        this.style = style;\n        this.mustSelect = mustSelect;\n        this.scrollSpeed = { x: 0, y: 0 };\n        this.scrolling = -1;\n        this.lastEvent = startEvent;\n        this.scrollParents = scrollableParents(view.contentDOM);\n        this.atoms = view.state.facet(atomicRanges).map(f => f(view));\n        let doc = view.contentDOM.ownerDocument;\n        doc.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        doc.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        this.extend = startEvent.shiftKey;\n        this.multiple = view.state.facet(EditorState.allowMultipleSelections) && addsSelectionRange(view, startEvent);\n        this.dragging = isInPrimarySelection(view, startEvent) && getClickType(startEvent) == 1 ? null : false;\n    }\n    start(event) {\n        // When clicking outside of the selection, immediately apply the\n        // effect of starting the selection\n        if (this.dragging === false)\n            this.select(event);\n    }\n    move(event) {\n        if (event.buttons == 0)\n            return this.destroy();\n        if (this.dragging || this.dragging == null && dist(this.startEvent, event) < 10)\n            return;\n        this.select(this.lastEvent = event);\n        let sx = 0, sy = 0;\n        let left = 0, top = 0, right = this.view.win.innerWidth, bottom = this.view.win.innerHeight;\n        if (this.scrollParents.x)\n            ({ left, right } = this.scrollParents.x.getBoundingClientRect());\n        if (this.scrollParents.y)\n            ({ top, bottom } = this.scrollParents.y.getBoundingClientRect());\n        let margins = getScrollMargins(this.view);\n        if (event.clientX - margins.left <= left + dragScrollMargin)\n            sx = -dragScrollSpeed(left - event.clientX);\n        else if (event.clientX + margins.right >= right - dragScrollMargin)\n            sx = dragScrollSpeed(event.clientX - right);\n        if (event.clientY - margins.top <= top + dragScrollMargin)\n            sy = -dragScrollSpeed(top - event.clientY);\n        else if (event.clientY + margins.bottom >= bottom - dragScrollMargin)\n            sy = dragScrollSpeed(event.clientY - bottom);\n        this.setScrollSpeed(sx, sy);\n    }\n    up(event) {\n        if (this.dragging == null)\n            this.select(this.lastEvent);\n        if (!this.dragging)\n            event.preventDefault();\n        this.destroy();\n    }\n    destroy() {\n        this.setScrollSpeed(0, 0);\n        let doc = this.view.contentDOM.ownerDocument;\n        doc.removeEventListener(\"mousemove\", this.move);\n        doc.removeEventListener(\"mouseup\", this.up);\n        this.view.inputState.mouseSelection = this.view.inputState.draggedContent = null;\n    }\n    setScrollSpeed(sx, sy) {\n        this.scrollSpeed = { x: sx, y: sy };\n        if (sx || sy) {\n            if (this.scrolling < 0)\n                this.scrolling = setInterval(() => this.scroll(), 50);\n        }\n        else if (this.scrolling > -1) {\n            clearInterval(this.scrolling);\n            this.scrolling = -1;\n        }\n    }\n    scroll() {\n        let { x, y } = this.scrollSpeed;\n        if (x && this.scrollParents.x) {\n            this.scrollParents.x.scrollLeft += x;\n            x = 0;\n        }\n        if (y && this.scrollParents.y) {\n            this.scrollParents.y.scrollTop += y;\n            y = 0;\n        }\n        if (x || y)\n            this.view.win.scrollBy(x, y);\n        if (this.dragging === false)\n            this.select(this.lastEvent);\n    }\n    skipAtoms(sel) {\n        let ranges = null;\n        for (let i = 0; i < sel.ranges.length; i++) {\n            let range = sel.ranges[i], updated = null;\n            if (range.empty) {\n                let pos = skipAtomicRanges(this.atoms, range.from, 0);\n                if (pos != range.from)\n                    updated = EditorSelection.cursor(pos, -1);\n            }\n            else {\n                let from = skipAtomicRanges(this.atoms, range.from, -1);\n                let to = skipAtomicRanges(this.atoms, range.to, 1);\n                if (from != range.from || to != range.to)\n                    updated = EditorSelection.range(range.from == range.anchor ? from : to, range.from == range.head ? from : to);\n            }\n            if (updated) {\n                if (!ranges)\n                    ranges = sel.ranges.slice();\n                ranges[i] = updated;\n            }\n        }\n        return ranges ? EditorSelection.create(ranges, sel.mainIndex) : sel;\n    }\n    select(event) {\n        let { view } = this, selection = this.skipAtoms(this.style.get(event, this.extend, this.multiple));\n        if (this.mustSelect || !selection.eq(view.state.selection, this.dragging === false))\n            this.view.dispatch({\n                selection,\n                userEvent: \"select.pointer\"\n            });\n        this.mustSelect = false;\n    }\n    update(update) {\n        if (update.transactions.some(tr => tr.isUserEvent(\"input.type\")))\n            this.destroy();\n        else if (this.style.update(update))\n            setTimeout(() => this.select(this.lastEvent), 20);\n    }\n}\nfunction addsSelectionRange(view, event) {\n    let facet = view.state.facet(clickAddsSelectionRange);\n    return facet.length ? facet[0](event) : browser.mac ? event.metaKey : event.ctrlKey;\n}\nfunction dragMovesSelection(view, event) {\n    let facet = view.state.facet(dragMovesSelection$1);\n    return facet.length ? facet[0](event) : browser.mac ? !event.altKey : !event.ctrlKey;\n}\nfunction isInPrimarySelection(view, event) {\n    let { main } = view.state.selection;\n    if (main.empty)\n        return false;\n    // On boundary clicks, check whether the coordinates are inside the\n    // selection's client rectangles\n    let sel = getSelection(view.root);\n    if (!sel || sel.rangeCount == 0)\n        return true;\n    let rects = sel.getRangeAt(0).getClientRects();\n    for (let i = 0; i < rects.length; i++) {\n        let rect = rects[i];\n        if (rect.left <= event.clientX && rect.right >= event.clientX &&\n            rect.top <= event.clientY && rect.bottom >= event.clientY)\n            return true;\n    }\n    return false;\n}\nfunction eventBelongsToEditor(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target, cView; node != view.contentDOM; node = node.parentNode)\n        if (!node || node.nodeType == 11 || ((cView = ContentView.get(node)) && cView.ignoreEvent(event)))\n            return false;\n    return true;\n}\nconst handlers = /*@__PURE__*/Object.create(null);\nconst observers = /*@__PURE__*/Object.create(null);\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API\u2014all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n    (browser.ios && browser.webkit_version < 604);\nfunction capturePaste(view) {\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    setTimeout(() => {\n        view.focus();\n        target.remove();\n        doPaste(view, target.value);\n    }, 50);\n}\nfunction textFilter(state, facet, text) {\n    for (let filter of state.facet(facet))\n        text = filter(text, state);\n    return text;\n}\nfunction doPaste(view, input) {\n    input = textFilter(view.state, clipboardInputFilter, input);\n    let { state } = view, changes, i = 1, text = state.toText(input);\n    let byLine = text.lines == state.selection.ranges.length;\n    let linewise = lastLinewiseCopy != null && state.selection.ranges.every(r => r.empty) && lastLinewiseCopy == text.toString();\n    if (linewise) {\n        let lastLine = -1;\n        changes = state.changeByRange(range => {\n            let line = state.doc.lineAt(range.from);\n            if (line.from == lastLine)\n                return { range };\n            lastLine = line.from;\n            let insert = state.toText((byLine ? text.line(i++).text : input) + state.lineBreak);\n            return { changes: { from: line.from, insert },\n                range: EditorSelection.cursor(range.from + insert.length) };\n        });\n    }\n    else if (byLine) {\n        changes = state.changeByRange(range => {\n            let line = text.line(i++);\n            return { changes: { from: range.from, to: range.to, insert: line.text },\n                range: EditorSelection.cursor(range.from + line.length) };\n        });\n    }\n    else {\n        changes = state.replaceSelection(text);\n    }\n    view.dispatch(changes, {\n        userEvent: \"input.paste\",\n        scrollIntoView: true\n    });\n}\nobservers.scroll = view => {\n    view.inputState.lastScrollTop = view.scrollDOM.scrollTop;\n    view.inputState.lastScrollLeft = view.scrollDOM.scrollLeft;\n};\nhandlers.keydown = (view, event) => {\n    view.inputState.setSelectionOrigin(\"select\");\n    if (event.keyCode == 27 && view.inputState.tabFocusMode != 0)\n        view.inputState.tabFocusMode = Date.now() + 2000;\n    return false;\n};\nobservers.touchstart = (view, e) => {\n    view.inputState.lastTouchTime = Date.now();\n    view.inputState.setSelectionOrigin(\"select.pointer\");\n};\nobservers.touchmove = view => {\n    view.inputState.setSelectionOrigin(\"select.pointer\");\n};\nhandlers.mousedown = (view, event) => {\n    view.observer.flush();\n    if (view.inputState.lastTouchTime > Date.now() - 2000)\n        return false; // Ignore touch interaction\n    let style = null;\n    for (let makeStyle of view.state.facet(mouseSelectionStyle)) {\n        style = makeStyle(view, event);\n        if (style)\n            break;\n    }\n    if (!style && event.button == 0)\n        style = basicMouseSelection(view, event);\n    if (style) {\n        let mustFocus = !view.hasFocus;\n        view.inputState.startMouseSelection(new MouseSelection(view, event, style, mustFocus));\n        if (mustFocus)\n            view.observer.ignore(() => {\n                focusPreventScroll(view.contentDOM);\n                let active = view.root.activeElement;\n                if (active && !active.contains(view.contentDOM))\n                    active.blur();\n            });\n        let mouseSel = view.inputState.mouseSelection;\n        if (mouseSel) {\n            mouseSel.start(event);\n            return mouseSel.dragging === false;\n        }\n    }\n    return false;\n};\nfunction rangeForClick(view, pos, bias, type) {\n    if (type == 1) { // Single click\n        return EditorSelection.cursor(pos, bias);\n    }\n    else if (type == 2) { // Double click\n        return groupAt(view.state, pos, bias);\n    }\n    else { // Triple click\n        let visual = LineView.find(view.docView, pos), line = view.state.doc.lineAt(visual ? visual.posAtEnd : pos);\n        let from = visual ? visual.posAtStart : line.from, to = visual ? visual.posAtEnd : line.to;\n        if (to < view.state.doc.length && to == line.to)\n            to++;\n        return EditorSelection.range(from, to);\n    }\n}\nlet inside = (x, y, rect) => y >= rect.top && y <= rect.bottom && x >= rect.left && x <= rect.right;\n// Try to determine, for the given coordinates, associated with the\n// given position, whether they are related to the element before or\n// the element after the position.\nfunction findPositionSide(view, pos, x, y) {\n    let line = LineView.find(view.docView, pos);\n    if (!line)\n        return 1;\n    let off = pos - line.posAtStart;\n    // Line boundaries point into the line\n    if (off == 0)\n        return 1;\n    if (off == line.length)\n        return -1;\n    // Positions on top of an element point at that element\n    let before = line.coordsAt(off, -1);\n    if (before && inside(x, y, before))\n        return -1;\n    let after = line.coordsAt(off, 1);\n    if (after && inside(x, y, after))\n        return 1;\n    // This is probably a line wrap point. Pick before if the point is\n    // above its bottom.\n    return before && before.bottom >= y ? -1 : 1;\n}\nfunction queryPos(view, event) {\n    let pos = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    return { pos, bias: findPositionSide(view, pos, event.clientX, event.clientY) };\n}\nconst BadMouseDetail = browser.ie && browser.ie_version <= 11;\nlet lastMouseDown = null, lastMouseDownCount = 0, lastMouseDownTime = 0;\nfunction getClickType(event) {\n    if (!BadMouseDetail)\n        return event.detail;\n    let last = lastMouseDown, lastTime = lastMouseDownTime;\n    lastMouseDown = event;\n    lastMouseDownTime = Date.now();\n    return lastMouseDownCount = !last || (lastTime > Date.now() - 400 && Math.abs(last.clientX - event.clientX) < 2 &&\n        Math.abs(last.clientY - event.clientY) < 2) ? (lastMouseDownCount + 1) % 3 : 1;\n}\nfunction basicMouseSelection(view, event) {\n    let start = queryPos(view, event), type = getClickType(event);\n    let startSel = view.state.selection;\n    return {\n        update(update) {\n            if (update.docChanged) {\n                start.pos = update.changes.mapPos(start.pos);\n                startSel = startSel.map(update.changes);\n            }\n        },\n        get(event, extend, multiple) {\n            let cur = queryPos(view, event), removed;\n            let range = rangeForClick(view, cur.pos, cur.bias, type);\n            if (start.pos != cur.pos && !extend) {\n                let startRange = rangeForClick(view, start.pos, start.bias, type);\n                let from = Math.min(startRange.from, range.from), to = Math.max(startRange.to, range.to);\n                range = from < range.from ? EditorSelection.range(from, to) : EditorSelection.range(to, from);\n            }\n            if (extend)\n                return startSel.replaceRange(startSel.main.extend(range.from, range.to));\n            else if (multiple && type == 1 && startSel.ranges.length > 1 && (removed = removeRangeAround(startSel, cur.pos)))\n                return removed;\n            else if (multiple)\n                return startSel.addRange(range);\n            else\n                return EditorSelection.create([range]);\n        }\n    };\n}\nfunction removeRangeAround(sel, pos) {\n    for (let i = 0; i < sel.ranges.length; i++) {\n        let { from, to } = sel.ranges[i];\n        if (from <= pos && to >= pos)\n            return EditorSelection.create(sel.ranges.slice(0, i).concat(sel.ranges.slice(i + 1)), sel.mainIndex == i ? 0 : sel.mainIndex - (sel.mainIndex > i ? 1 : 0));\n    }\n    return null;\n}\nhandlers.dragstart = (view, event) => {\n    let { selection: { main: range } } = view.state;\n    if (event.target.draggable) {\n        let cView = view.docView.nearest(event.target);\n        if (cView && cView.isWidget) {\n            let from = cView.posAtStart, to = from + cView.length;\n            if (from >= range.to || to <= range.from)\n                range = EditorSelection.range(from, to);\n        }\n    }\n    let { inputState } = view;\n    if (inputState.mouseSelection)\n        inputState.mouseSelection.dragging = true;\n    inputState.draggedContent = range;\n    if (event.dataTransfer) {\n        event.dataTransfer.setData(\"Text\", textFilter(view.state, clipboardOutputFilter, view.state.sliceDoc(range.from, range.to)));\n        event.dataTransfer.effectAllowed = \"copyMove\";\n    }\n    return false;\n};\nhandlers.dragend = view => {\n    view.inputState.draggedContent = null;\n    return false;\n};\nfunction dropText(view, event, text, direct) {\n    text = textFilter(view.state, clipboardInputFilter, text);\n    if (!text)\n        return;\n    let dropPos = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    let { draggedContent } = view.inputState;\n    let del = direct && draggedContent && dragMovesSelection(view, event)\n        ? { from: draggedContent.from, to: draggedContent.to } : null;\n    let ins = { from: dropPos, insert: text };\n    let changes = view.state.changes(del ? [del, ins] : ins);\n    view.focus();\n    view.dispatch({\n        changes,\n        selection: { anchor: changes.mapPos(dropPos, -1), head: changes.mapPos(dropPos, 1) },\n        userEvent: del ? \"move.drop\" : \"input.drop\"\n    });\n    view.inputState.draggedContent = null;\n}\nhandlers.drop = (view, event) => {\n    if (!event.dataTransfer)\n        return false;\n    if (view.state.readOnly)\n        return true;\n    let files = event.dataTransfer.files;\n    if (files && files.length) { // For a file drop, read the file's text.\n        let text = Array(files.length), read = 0;\n        let finishFile = () => {\n            if (++read == files.length)\n                dropText(view, event, text.filter(s => s != null).join(view.state.lineBreak), false);\n        };\n        for (let i = 0; i < files.length; i++) {\n            let reader = new FileReader;\n            reader.onerror = finishFile;\n            reader.onload = () => {\n                if (!/[\\x00-\\x08\\x0e-\\x1f]{2}/.test(reader.result))\n                    text[i] = reader.result;\n                finishFile();\n            };\n            reader.readAsText(files[i]);\n        }\n        return true;\n    }\n    else {\n        let text = event.dataTransfer.getData(\"Text\");\n        if (text) {\n            dropText(view, event, text, true);\n            return true;\n        }\n    }\n    return false;\n};\nhandlers.paste = (view, event) => {\n    if (view.state.readOnly)\n        return true;\n    view.observer.flush();\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data) {\n        doPaste(view, data.getData(\"text/plain\") || data.getData(\"text/uri-list\"));\n        return true;\n    }\n    else {\n        capturePaste(view);\n        return false;\n    }\n};\nfunction captureCopy(view, text) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.value = text;\n    target.focus();\n    target.selectionEnd = text.length;\n    target.selectionStart = 0;\n    setTimeout(() => {\n        target.remove();\n        view.focus();\n    }, 50);\n}\nfunction copiedRange(state) {\n    let content = [], ranges = [], linewise = false;\n    for (let range of state.selection.ranges)\n        if (!range.empty) {\n            content.push(state.sliceDoc(range.from, range.to));\n            ranges.push(range);\n        }\n    if (!content.length) {\n        // Nothing selected, do a line-wise copy\n        let upto = -1;\n        for (let { from } of state.selection.ranges) {\n            let line = state.doc.lineAt(from);\n            if (line.number > upto) {\n                content.push(line.text);\n                ranges.push({ from: line.from, to: Math.min(state.doc.length, line.to + 1) });\n            }\n            upto = line.number;\n        }\n        linewise = true;\n    }\n    return { text: textFilter(state, clipboardOutputFilter, content.join(state.lineBreak)), ranges, linewise };\n}\nlet lastLinewiseCopy = null;\nhandlers.copy = handlers.cut = (view, event) => {\n    let { text, ranges, linewise } = copiedRange(view.state);\n    if (!text && !linewise)\n        return false;\n    lastLinewiseCopy = linewise ? text : null;\n    if (event.type == \"cut\" && !view.state.readOnly)\n        view.dispatch({\n            changes: ranges,\n            scrollIntoView: true,\n            userEvent: \"delete.cut\"\n        });\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data) {\n        data.clearData();\n        data.setData(\"text/plain\", text);\n        return true;\n    }\n    else {\n        captureCopy(view, text);\n        return false;\n    }\n};\nconst isFocusChange = /*@__PURE__*/Annotation.define();\nfunction focusChangeTransaction(state, focus) {\n    let effects = [];\n    for (let getEffect of state.facet(focusChangeEffect)) {\n        let effect = getEffect(state, focus);\n        if (effect)\n            effects.push(effect);\n    }\n    return effects ? state.update({ effects, annotations: isFocusChange.of(true) }) : null;\n}\nfunction updateForFocusChange(view) {\n    setTimeout(() => {\n        let focus = view.hasFocus;\n        if (focus != view.inputState.notifiedFocused) {\n            let tr = focusChangeTransaction(view.state, focus);\n            if (tr)\n                view.dispatch(tr);\n            else\n                view.update([]);\n        }\n    }, 10);\n}\nobservers.focus = view => {\n    view.inputState.lastFocusTime = Date.now();\n    // When focusing reset the scroll position, move it back to where it was\n    if (!view.scrollDOM.scrollTop && (view.inputState.lastScrollTop || view.inputState.lastScrollLeft)) {\n        view.scrollDOM.scrollTop = view.inputState.lastScrollTop;\n        view.scrollDOM.scrollLeft = view.inputState.lastScrollLeft;\n    }\n    updateForFocusChange(view);\n};\nobservers.blur = view => {\n    view.observer.clearSelectionRange();\n    updateForFocusChange(view);\n};\nobservers.compositionstart = observers.compositionupdate = view => {\n    if (view.observer.editContext)\n        return; // Composition handled by edit context\n    if (view.inputState.compositionFirstChange == null)\n        view.inputState.compositionFirstChange = true;\n    if (view.inputState.composing < 0) {\n        // FIXME possibly set a timeout to clear it again on Android\n        view.inputState.composing = 0;\n    }\n};\nobservers.compositionend = view => {\n    if (view.observer.editContext)\n        return; // Composition handled by edit context\n    view.inputState.composing = -1;\n    view.inputState.compositionEndedAt = Date.now();\n    view.inputState.compositionPendingKey = true;\n    view.inputState.compositionPendingChange = view.observer.pendingRecords().length > 0;\n    view.inputState.compositionFirstChange = null;\n    if (browser.chrome && browser.android) {\n        // Delay flushing for a bit on Android because it'll often fire a\n        // bunch of contradictory changes in a row at end of compositon\n        view.observer.flushSoon();\n    }\n    else if (view.inputState.compositionPendingChange) {\n        // If we found pending records, schedule a flush.\n        Promise.resolve().then(() => view.observer.flush());\n    }\n    else {\n        // Otherwise, make sure that, if no changes come in soon, the\n        // composition view is cleared.\n        setTimeout(() => {\n            if (view.inputState.composing < 0 && view.docView.hasComposition)\n                view.update([]);\n        }, 50);\n    }\n};\nobservers.contextmenu = view => {\n    view.inputState.lastContextMenu = Date.now();\n};\nhandlers.beforeinput = (view, event) => {\n    var _a, _b;\n    // In EditContext mode, we must handle insertReplacementText events\n    // directly, to make spell checking corrections work\n    if (event.inputType == \"insertReplacementText\" && view.observer.editContext) {\n        let text = (_a = event.dataTransfer) === null || _a === void 0 ? void 0 : _a.getData(\"text/plain\"), ranges = event.getTargetRanges();\n        if (text && ranges.length) {\n            let r = ranges[0];\n            let from = view.posAtDOM(r.startContainer, r.startOffset), to = view.posAtDOM(r.endContainer, r.endOffset);\n            applyDOMChangeInner(view, { from, to, insert: view.state.toText(text) }, null);\n            return true;\n        }\n    }\n    // Because Chrome Android doesn't fire useful key events, use\n    // beforeinput to detect backspace (and possibly enter and delete,\n    // but those usually don't even seem to fire beforeinput events at\n    // the moment) and fake a key event for it.\n    //\n    // (preventDefault on beforeinput, though supported in the spec,\n    // seems to do nothing at all on Chrome).\n    let pending;\n    if (browser.chrome && browser.android && (pending = PendingKeys.find(key => key.inputType == event.inputType))) {\n        view.observer.delayAndroidKey(pending.key, pending.keyCode);\n        if (pending.key == \"Backspace\" || pending.key == \"Delete\") {\n            let startViewHeight = ((_b = window.visualViewport) === null || _b === void 0 ? void 0 : _b.height) || 0;\n            setTimeout(() => {\n                var _a;\n                // Backspacing near uneditable nodes on Chrome Android sometimes\n                // closes the virtual keyboard. This tries to crudely detect\n                // that and refocus to get it back.\n                if ((((_a = window.visualViewport) === null || _a === void 0 ? void 0 : _a.height) || 0) > startViewHeight + 10 && view.hasFocus) {\n                    view.contentDOM.blur();\n                    view.focus();\n                }\n            }, 100);\n        }\n    }\n    if (browser.ios && event.inputType == \"deleteContentForward\") {\n        // For some reason, DOM changes (and beforeinput) happen _before_\n        // the key event for ctrl-d on iOS when using an external\n        // keyboard.\n        view.observer.flushSoon();\n    }\n    // Safari will occasionally forget to fire compositionend at the end of a dead-key composition\n    if (browser.safari && event.inputType == \"insertText\" && view.inputState.composing >= 0) {\n        setTimeout(() => observers.compositionend(view, event), 20);\n    }\n    return false;\n};\nconst appliedFirefoxHack = /*@__PURE__*/new Set;\n// In Firefox, when cut/copy handlers are added to the document, that\n// somehow avoids a bug where those events aren't fired when the\n// selection is empty. See https://github.com/codemirror/dev/issues/1082\n// and https://bugzilla.mozilla.org/show_bug.cgi?id=995961\nfunction firefoxCopyCutHack(doc) {\n    if (!appliedFirefoxHack.has(doc)) {\n        appliedFirefoxHack.add(doc);\n        doc.addEventListener(\"copy\", () => { });\n        doc.addEventListener(\"cut\", () => { });\n    }\n}\n\nconst wrappingWhiteSpace = [\"pre-wrap\", \"normal\", \"pre-line\", \"break-spaces\"];\n// Used to track, during updateHeight, if any actual heights changed\nlet heightChangeFlag = false;\nfunction clearHeightChangeFlag() { heightChangeFlag = false; }\nclass HeightOracle {\n    constructor(lineWrapping) {\n        this.lineWrapping = lineWrapping;\n        this.doc = Text.empty;\n        this.heightSamples = {};\n        this.lineHeight = 14; // The height of an entire line (line-height)\n        this.charWidth = 7;\n        this.textHeight = 14; // The height of the actual font (font-size)\n        this.lineLength = 30;\n    }\n    heightForGap(from, to) {\n        let lines = this.doc.lineAt(to).number - this.doc.lineAt(from).number + 1;\n        if (this.lineWrapping)\n            lines += Math.max(0, Math.ceil(((to - from) - (lines * this.lineLength * 0.5)) / this.lineLength));\n        return this.lineHeight * lines;\n    }\n    heightForLine(length) {\n        if (!this.lineWrapping)\n            return this.lineHeight;\n        let lines = 1 + Math.max(0, Math.ceil((length - this.lineLength) / (this.lineLength - 5)));\n        return lines * this.lineHeight;\n    }\n    setDoc(doc) { this.doc = doc; return this; }\n    mustRefreshForWrapping(whiteSpace) {\n        return (wrappingWhiteSpace.indexOf(whiteSpace) > -1) != this.lineWrapping;\n    }\n    mustRefreshForHeights(lineHeights) {\n        let newHeight = false;\n        for (let i = 0; i < lineHeights.length; i++) {\n            let h = lineHeights[i];\n            if (h < 0) {\n                i++;\n            }\n            else if (!this.heightSamples[Math.floor(h * 10)]) { // Round to .1 pixels\n                newHeight = true;\n                this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return newHeight;\n    }\n    refresh(whiteSpace, lineHeight, charWidth, textHeight, lineLength, knownHeights) {\n        let lineWrapping = wrappingWhiteSpace.indexOf(whiteSpace) > -1;\n        let changed = Math.round(lineHeight) != Math.round(this.lineHeight) || this.lineWrapping != lineWrapping;\n        this.lineWrapping = lineWrapping;\n        this.lineHeight = lineHeight;\n        this.charWidth = charWidth;\n        this.textHeight = textHeight;\n        this.lineLength = lineLength;\n        if (changed) {\n            this.heightSamples = {};\n            for (let i = 0; i < knownHeights.length; i++) {\n                let h = knownHeights[i];\n                if (h < 0)\n                    i++;\n                else\n                    this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return changed;\n    }\n}\n// This object is used by `updateHeight` to make DOM measurements\n// arrive at the right nides. The `heights` array is a sequence of\n// block heights, starting from position `from`.\nclass MeasuredHeights {\n    constructor(from, heights) {\n        this.from = from;\n        this.heights = heights;\n        this.index = 0;\n    }\n    get more() { return this.index < this.heights.length; }\n}\n/**\nRecord used to represent information about a block-level element\nin the editor view.\n*/\nclass BlockInfo {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start of the element in the document.\n    */\n    from, \n    /**\n    The length of the element.\n    */\n    length, \n    /**\n    The top position of the element (relative to the top of the\n    document).\n    */\n    top, \n    /**\n    Its height.\n    */\n    height, \n    /**\n    @internal Weird packed field that holds an array of children\n    for composite blocks, a decoration for block widgets, and a\n    number indicating the amount of widget-create line breaks for\n    text blocks.\n    */\n    _content) {\n        this.from = from;\n        this.length = length;\n        this.top = top;\n        this.height = height;\n        this._content = _content;\n    }\n    /**\n    The type of element this is. When querying lines, this may be\n    an array of all the blocks that make up the line.\n    */\n    get type() {\n        return typeof this._content == \"number\" ? BlockType.Text :\n            Array.isArray(this._content) ? this._content : this._content.type;\n    }\n    /**\n    The end of the element as a document position.\n    */\n    get to() { return this.from + this.length; }\n    /**\n    The bottom position of the element.\n    */\n    get bottom() { return this.top + this.height; }\n    /**\n    If this is a widget block, this will return the widget\n    associated with it.\n    */\n    get widget() {\n        return this._content instanceof PointDecoration ? this._content.widget : null;\n    }\n    /**\n    If this is a textblock, this holds the number of line breaks\n    that appear in widgets inside the block.\n    */\n    get widgetLineBreaks() {\n        return typeof this._content == \"number\" ? this._content : 0;\n    }\n    /**\n    @internal\n    */\n    join(other) {\n        let content = (Array.isArray(this._content) ? this._content : [this])\n            .concat(Array.isArray(other._content) ? other._content : [other]);\n        return new BlockInfo(this.from, this.length + other.length, this.top, this.height + other.height, content);\n    }\n}\nvar QueryType = /*@__PURE__*/(function (QueryType) {\n    QueryType[QueryType[\"ByPos\"] = 0] = \"ByPos\";\n    QueryType[QueryType[\"ByHeight\"] = 1] = \"ByHeight\";\n    QueryType[QueryType[\"ByPosNoHeight\"] = 2] = \"ByPosNoHeight\";\nreturn QueryType})(QueryType || (QueryType = {}));\nconst Epsilon = 1e-3;\nclass HeightMap {\n    constructor(length, // The number of characters covered\n    height, // Height of this part of the document\n    flags = 2 /* Flag.Outdated */) {\n        this.length = length;\n        this.height = height;\n        this.flags = flags;\n    }\n    get outdated() { return (this.flags & 2 /* Flag.Outdated */) > 0; }\n    set outdated(value) { this.flags = (value ? 2 /* Flag.Outdated */ : 0) | (this.flags & ~2 /* Flag.Outdated */); }\n    setHeight(height) {\n        if (this.height != height) {\n            if (Math.abs(this.height - height) > Epsilon)\n                heightChangeFlag = true;\n            this.height = height;\n        }\n    }\n    // Base case is to replace a leaf node, which simply builds a tree\n    // from the new nodes and returns that (HeightMapBranch and\n    // HeightMapGap override this to actually use from/to)\n    replace(_from, _to, nodes) {\n        return HeightMap.of(nodes);\n    }\n    // Again, these are base cases, and are overridden for branch and gap nodes.\n    decomposeLeft(_to, result) { result.push(this); }\n    decomposeRight(_from, result) { result.push(this); }\n    applyChanges(decorations, oldDoc, oracle, changes) {\n        let me = this, doc = oracle.doc;\n        for (let i = changes.length - 1; i >= 0; i--) {\n            let { fromA, toA, fromB, toB } = changes[i];\n            let start = me.lineAt(fromA, QueryType.ByPosNoHeight, oracle.setDoc(oldDoc), 0, 0);\n            let end = start.to >= toA ? start : me.lineAt(toA, QueryType.ByPosNoHeight, oracle, 0, 0);\n            toB += end.to - toA;\n            toA = end.to;\n            while (i > 0 && start.from <= changes[i - 1].toA) {\n                fromA = changes[i - 1].fromA;\n                fromB = changes[i - 1].fromB;\n                i--;\n                if (fromA < start.from)\n                    start = me.lineAt(fromA, QueryType.ByPosNoHeight, oracle, 0, 0);\n            }\n            fromB += start.from - fromA;\n            fromA = start.from;\n            let nodes = NodeBuilder.build(oracle.setDoc(doc), decorations, fromB, toB);\n            me = replace(me, me.replace(fromA, toA, nodes));\n        }\n        return me.updateHeight(oracle, 0);\n    }\n    static empty() { return new HeightMapText(0, 0); }\n    // nodes uses null values to indicate the position of line breaks.\n    // There are never line breaks at the start or end of the array, or\n    // two line breaks next to each other, and the array isn't allowed\n    // to be empty (same restrictions as return value from the builder).\n    static of(nodes) {\n        if (nodes.length == 1)\n            return nodes[0];\n        let i = 0, j = nodes.length, before = 0, after = 0;\n        for (;;) {\n            if (i == j) {\n                if (before > after * 2) {\n                    let split = nodes[i - 1];\n                    if (split.break)\n                        nodes.splice(--i, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(--i, 1, split.left, split.right);\n                    j += 1 + split.break;\n                    before -= split.size;\n                }\n                else if (after > before * 2) {\n                    let split = nodes[j];\n                    if (split.break)\n                        nodes.splice(j, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(j, 1, split.left, split.right);\n                    j += 2 + split.break;\n                    after -= split.size;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (before < after) {\n                let next = nodes[i++];\n                if (next)\n                    before += next.size;\n            }\n            else {\n                let next = nodes[--j];\n                if (next)\n                    after += next.size;\n            }\n        }\n        let brk = 0;\n        if (nodes[i - 1] == null) {\n            brk = 1;\n            i--;\n        }\n        else if (nodes[i] == null) {\n            brk = 1;\n            j++;\n        }\n        return new HeightMapBranch(HeightMap.of(nodes.slice(0, i)), brk, HeightMap.of(nodes.slice(j)));\n    }\n}\nfunction replace(old, val) {\n    if (old == val)\n        return old;\n    if (old.constructor != val.constructor)\n        heightChangeFlag = true;\n    return val;\n}\nHeightMap.prototype.size = 1;\nclass HeightMapBlock extends HeightMap {\n    constructor(length, height, deco) {\n        super(length, height);\n        this.deco = deco;\n    }\n    blockAt(_height, _oracle, top, offset) {\n        return new BlockInfo(offset, this.length, top, this.height, this.deco || 0);\n    }\n    lineAt(_value, _type, oracle, top, offset) {\n        return this.blockAt(0, oracle, top, offset);\n    }\n    forEachLine(from, to, oracle, top, offset, f) {\n        if (from <= offset + this.length && to >= offset)\n            f(this.blockAt(0, oracle, top, offset));\n    }\n    updateHeight(oracle, offset = 0, _force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(measured.heights[measured.index++]);\n        this.outdated = false;\n        return this;\n    }\n    toString() { return `block(${this.length})`; }\n}\nclass HeightMapText extends HeightMapBlock {\n    constructor(length, height) {\n        super(length, height, null);\n        this.collapsed = 0; // Amount of collapsed content in the line\n        this.widgetHeight = 0; // Maximum inline widget height\n        this.breaks = 0; // Number of widget-introduced line breaks on the line\n    }\n    blockAt(_height, _oracle, top, offset) {\n        return new BlockInfo(offset, this.length, top, this.height, this.breaks);\n    }\n    replace(_from, _to, nodes) {\n        let node = nodes[0];\n        if (nodes.length == 1 && (node instanceof HeightMapText || node instanceof HeightMapGap && (node.flags & 4 /* Flag.SingleLine */)) &&\n            Math.abs(this.length - node.length) < 10) {\n            if (node instanceof HeightMapGap)\n                node = new HeightMapText(node.length, this.height);\n            else\n                node.height = this.height;\n            if (!this.outdated)\n                node.outdated = false;\n            return node;\n        }\n        else {\n            return HeightMap.of(nodes);\n        }\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(measured.heights[measured.index++]);\n        else if (force || this.outdated)\n            this.setHeight(Math.max(this.widgetHeight, oracle.heightForLine(this.length - this.collapsed)) +\n                this.breaks * oracle.lineHeight);\n        this.outdated = false;\n        return this;\n    }\n    toString() {\n        return `line(${this.length}${this.collapsed ? -this.collapsed : \"\"}${this.widgetHeight ? \":\" + this.widgetHeight : \"\"})`;\n    }\n}\nclass HeightMapGap extends HeightMap {\n    constructor(length) { super(length, 0); }\n    heightMetrics(oracle, offset) {\n        let firstLine = oracle.doc.lineAt(offset).number, lastLine = oracle.doc.lineAt(offset + this.length).number;\n        let lines = lastLine - firstLine + 1;\n        let perLine, perChar = 0;\n        if (oracle.lineWrapping) {\n            let totalPerLine = Math.min(this.height, oracle.lineHeight * lines);\n            perLine = totalPerLine / lines;\n            if (this.length > lines + 1)\n                perChar = (this.height - totalPerLine) / (this.length - lines - 1);\n        }\n        else {\n            perLine = this.height / lines;\n        }\n        return { firstLine, lastLine, perLine, perChar };\n    }\n    blockAt(height, oracle, top, offset) {\n        let { firstLine, lastLine, perLine, perChar } = this.heightMetrics(oracle, offset);\n        if (oracle.lineWrapping) {\n            let guess = offset + (height < oracle.lineHeight ? 0\n                : Math.round(Math.max(0, Math.min(1, (height - top) / this.height)) * this.length));\n            let line = oracle.doc.lineAt(guess), lineHeight = perLine + line.length * perChar;\n            let lineTop = Math.max(top, height - lineHeight / 2);\n            return new BlockInfo(line.from, line.length, lineTop, lineHeight, 0);\n        }\n        else {\n            let line = Math.max(0, Math.min(lastLine - firstLine, Math.floor((height - top) / perLine)));\n            let { from, length } = oracle.doc.line(firstLine + line);\n            return new BlockInfo(from, length, top + perLine * line, perLine, 0);\n        }\n    }\n    lineAt(value, type, oracle, top, offset) {\n        if (type == QueryType.ByHeight)\n            return this.blockAt(value, oracle, top, offset);\n        if (type == QueryType.ByPosNoHeight) {\n            let { from, to } = oracle.doc.lineAt(value);\n            return new BlockInfo(from, to - from, 0, 0, 0);\n        }\n        let { firstLine, perLine, perChar } = this.heightMetrics(oracle, offset);\n        let line = oracle.doc.lineAt(value), lineHeight = perLine + line.length * perChar;\n        let linesAbove = line.number - firstLine;\n        let lineTop = top + perLine * linesAbove + perChar * (line.from - offset - linesAbove);\n        return new BlockInfo(line.from, line.length, Math.max(top, Math.min(lineTop, top + this.height - lineHeight)), lineHeight, 0);\n    }\n    forEachLine(from, to, oracle, top, offset, f) {\n        from = Math.max(from, offset);\n        to = Math.min(to, offset + this.length);\n        let { firstLine, perLine, perChar } = this.heightMetrics(oracle, offset);\n        for (let pos = from, lineTop = top; pos <= to;) {\n            let line = oracle.doc.lineAt(pos);\n            if (pos == from) {\n                let linesAbove = line.number - firstLine;\n                lineTop += perLine * linesAbove + perChar * (from - offset - linesAbove);\n            }\n            let lineHeight = perLine + perChar * line.length;\n            f(new BlockInfo(line.from, line.length, lineTop, lineHeight, 0));\n            lineTop += lineHeight;\n            pos = line.to + 1;\n        }\n    }\n    replace(from, to, nodes) {\n        let after = this.length - to;\n        if (after > 0) {\n            let last = nodes[nodes.length - 1];\n            if (last instanceof HeightMapGap)\n                nodes[nodes.length - 1] = new HeightMapGap(last.length + after);\n            else\n                nodes.push(null, new HeightMapGap(after - 1));\n        }\n        if (from > 0) {\n            let first = nodes[0];\n            if (first instanceof HeightMapGap)\n                nodes[0] = new HeightMapGap(from + first.length);\n            else\n                nodes.unshift(new HeightMapGap(from - 1), null);\n        }\n        return HeightMap.of(nodes);\n    }\n    decomposeLeft(to, result) {\n        result.push(new HeightMapGap(to - 1), null);\n    }\n    decomposeRight(from, result) {\n        result.push(null, new HeightMapGap(this.length - from - 1));\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let end = offset + this.length;\n        if (measured && measured.from <= offset + this.length && measured.more) {\n            // Fill in part of this gap with measured lines. We know there\n            // can't be widgets or collapsed ranges in those lines, because\n            // they would already have been added to the heightmap (gaps\n            // only contain plain text).\n            let nodes = [], pos = Math.max(offset, measured.from), singleHeight = -1;\n            if (measured.from > offset)\n                nodes.push(new HeightMapGap(measured.from - offset - 1).updateHeight(oracle, offset));\n            while (pos <= end && measured.more) {\n                let len = oracle.doc.lineAt(pos).length;\n                if (nodes.length)\n                    nodes.push(null);\n                let height = measured.heights[measured.index++];\n                if (singleHeight == -1)\n                    singleHeight = height;\n                else if (Math.abs(height - singleHeight) >= Epsilon)\n                    singleHeight = -2;\n                let line = new HeightMapText(len, height);\n                line.outdated = false;\n                nodes.push(line);\n                pos += len + 1;\n            }\n            if (pos <= end)\n                nodes.push(null, new HeightMapGap(end - pos).updateHeight(oracle, pos));\n            let result = HeightMap.of(nodes);\n            if (singleHeight < 0 || Math.abs(result.height - this.height) >= Epsilon ||\n                Math.abs(singleHeight - this.heightMetrics(oracle, offset).perLine) >= Epsilon)\n                heightChangeFlag = true;\n            return replace(this, result);\n        }\n        else if (force || this.outdated) {\n            this.setHeight(oracle.heightForGap(offset, offset + this.length));\n            this.outdated = false;\n        }\n        return this;\n    }\n    toString() { return `gap(${this.length})`; }\n}\nclass HeightMapBranch extends HeightMap {\n    constructor(left, brk, right) {\n        super(left.length + brk + right.length, left.height + right.height, brk | (left.outdated || right.outdated ? 2 /* Flag.Outdated */ : 0));\n        this.left = left;\n        this.right = right;\n        this.size = left.size + right.size;\n    }\n    get break() { return this.flags & 1 /* Flag.Break */; }\n    blockAt(height, oracle, top, offset) {\n        let mid = top + this.left.height;\n        return height < mid ? this.left.blockAt(height, oracle, top, offset)\n            : this.right.blockAt(height, oracle, mid, offset + this.left.length + this.break);\n    }\n    lineAt(value, type, oracle, top, offset) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        let left = type == QueryType.ByHeight ? value < rightTop : value < rightOffset;\n        let base = left ? this.left.lineAt(value, type, oracle, top, offset)\n            : this.right.lineAt(value, type, oracle, rightTop, rightOffset);\n        if (this.break || (left ? base.to < rightOffset : base.from > rightOffset))\n            return base;\n        let subQuery = type == QueryType.ByPosNoHeight ? QueryType.ByPosNoHeight : QueryType.ByPos;\n        if (left)\n            return base.join(this.right.lineAt(rightOffset, subQuery, oracle, rightTop, rightOffset));\n        else\n            return this.left.lineAt(rightOffset, subQuery, oracle, top, offset).join(base);\n    }\n    forEachLine(from, to, oracle, top, offset, f) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        if (this.break) {\n            if (from < rightOffset)\n                this.left.forEachLine(from, to, oracle, top, offset, f);\n            if (to >= rightOffset)\n                this.right.forEachLine(from, to, oracle, rightTop, rightOffset, f);\n        }\n        else {\n            let mid = this.lineAt(rightOffset, QueryType.ByPos, oracle, top, offset);\n            if (from < mid.from)\n                this.left.forEachLine(from, mid.from - 1, oracle, top, offset, f);\n            if (mid.to >= from && mid.from <= to)\n                f(mid);\n            if (to > mid.to)\n                this.right.forEachLine(mid.to + 1, to, oracle, rightTop, rightOffset, f);\n        }\n    }\n    replace(from, to, nodes) {\n        let rightStart = this.left.length + this.break;\n        if (to < rightStart)\n            return this.balanced(this.left.replace(from, to, nodes), this.right);\n        if (from > this.left.length)\n            return this.balanced(this.left, this.right.replace(from - rightStart, to - rightStart, nodes));\n        let result = [];\n        if (from > 0)\n            this.decomposeLeft(from, result);\n        let left = result.length;\n        for (let node of nodes)\n            result.push(node);\n        if (from > 0)\n            mergeGaps(result, left - 1);\n        if (to < this.length) {\n            let right = result.length;\n            this.decomposeRight(to, result);\n            mergeGaps(result, right);\n        }\n        return HeightMap.of(result);\n    }\n    decomposeLeft(to, result) {\n        let left = this.left.length;\n        if (to <= left)\n            return this.left.decomposeLeft(to, result);\n        result.push(this.left);\n        if (this.break) {\n            left++;\n            if (to >= left)\n                result.push(null);\n        }\n        if (to > left)\n            this.right.decomposeLeft(to - left, result);\n    }\n    decomposeRight(from, result) {\n        let left = this.left.length, right = left + this.break;\n        if (from >= right)\n            return this.right.decomposeRight(from - right, result);\n        if (from < left)\n            this.left.decomposeRight(from, result);\n        if (this.break && from < right)\n            result.push(null);\n        result.push(this.right);\n    }\n    balanced(left, right) {\n        if (left.size > 2 * right.size || right.size > 2 * left.size)\n            return HeightMap.of(this.break ? [left, null, right] : [left, right]);\n        this.left = replace(this.left, left);\n        this.right = replace(this.right, right);\n        this.setHeight(left.height + right.height);\n        this.outdated = left.outdated || right.outdated;\n        this.size = left.size + right.size;\n        this.length = left.length + this.break + right.length;\n        return this;\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let { left, right } = this, rightStart = offset + left.length + this.break, rebalance = null;\n        if (measured && measured.from <= offset + left.length && measured.more)\n            rebalance = left = left.updateHeight(oracle, offset, force, measured);\n        else\n            left.updateHeight(oracle, offset, force);\n        if (measured && measured.from <= rightStart + right.length && measured.more)\n            rebalance = right = right.updateHeight(oracle, rightStart, force, measured);\n        else\n            right.updateHeight(oracle, rightStart, force);\n        if (rebalance)\n            return this.balanced(left, right);\n        this.height = this.left.height + this.right.height;\n        this.outdated = false;\n        return this;\n    }\n    toString() { return this.left + (this.break ? \" \" : \"-\") + this.right; }\n}\nfunction mergeGaps(nodes, around) {\n    let before, after;\n    if (nodes[around] == null &&\n        (before = nodes[around - 1]) instanceof HeightMapGap &&\n        (after = nodes[around + 1]) instanceof HeightMapGap)\n        nodes.splice(around - 1, 3, new HeightMapGap(before.length + 1 + after.length));\n}\nconst relevantWidgetHeight = 5;\nclass NodeBuilder {\n    constructor(pos, oracle) {\n        this.pos = pos;\n        this.oracle = oracle;\n        this.nodes = [];\n        this.lineStart = -1;\n        this.lineEnd = -1;\n        this.covering = null;\n        this.writtenTo = pos;\n    }\n    get isCovered() {\n        return this.covering && this.nodes[this.nodes.length - 1] == this.covering;\n    }\n    span(_from, to) {\n        if (this.lineStart > -1) {\n            let end = Math.min(to, this.lineEnd), last = this.nodes[this.nodes.length - 1];\n            if (last instanceof HeightMapText)\n                last.length += end - this.pos;\n            else if (end > this.pos || !this.isCovered)\n                this.nodes.push(new HeightMapText(end - this.pos, -1));\n            this.writtenTo = end;\n            if (to > end) {\n                this.nodes.push(null);\n                this.writtenTo++;\n                this.lineStart = -1;\n            }\n        }\n        this.pos = to;\n    }\n    point(from, to, deco) {\n        if (from < to || deco.heightRelevant) {\n            let height = deco.widget ? deco.widget.estimatedHeight : 0;\n            let breaks = deco.widget ? deco.widget.lineBreaks : 0;\n            if (height < 0)\n                height = this.oracle.lineHeight;\n            let len = to - from;\n            if (deco.block) {\n                this.addBlock(new HeightMapBlock(len, height, deco));\n            }\n            else if (len || breaks || height >= relevantWidgetHeight) {\n                this.addLineDeco(height, breaks, len);\n            }\n        }\n        else if (to > from) {\n            this.span(from, to);\n        }\n        if (this.lineEnd > -1 && this.lineEnd < this.pos)\n            this.lineEnd = this.oracle.doc.lineAt(this.pos).to;\n    }\n    enterLine() {\n        if (this.lineStart > -1)\n            return;\n        let { from, to } = this.oracle.doc.lineAt(this.pos);\n        this.lineStart = from;\n        this.lineEnd = to;\n        if (this.writtenTo < from) {\n            if (this.writtenTo < from - 1 || this.nodes[this.nodes.length - 1] == null)\n                this.nodes.push(this.blankContent(this.writtenTo, from - 1));\n            this.nodes.push(null);\n        }\n        if (this.pos > from)\n            this.nodes.push(new HeightMapText(this.pos - from, -1));\n        this.writtenTo = this.pos;\n    }\n    blankContent(from, to) {\n        let gap = new HeightMapGap(to - from);\n        if (this.oracle.doc.lineAt(from).to == to)\n            gap.flags |= 4 /* Flag.SingleLine */;\n        return gap;\n    }\n    ensureLine() {\n        this.enterLine();\n        let last = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;\n        if (last instanceof HeightMapText)\n            return last;\n        let line = new HeightMapText(0, -1);\n        this.nodes.push(line);\n        return line;\n    }\n    addBlock(block) {\n        this.enterLine();\n        let deco = block.deco;\n        if (deco && deco.startSide > 0 && !this.isCovered)\n            this.ensureLine();\n        this.nodes.push(block);\n        this.writtenTo = this.pos = this.pos + block.length;\n        if (deco && deco.endSide > 0)\n            this.covering = block;\n    }\n    addLineDeco(height, breaks, length) {\n        let line = this.ensureLine();\n        line.length += length;\n        line.collapsed += length;\n        line.widgetHeight = Math.max(line.widgetHeight, height);\n        line.breaks += breaks;\n        this.writtenTo = this.pos = this.pos + length;\n    }\n    finish(from) {\n        let last = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];\n        if (this.lineStart > -1 && !(last instanceof HeightMapText) && !this.isCovered)\n            this.nodes.push(new HeightMapText(0, -1));\n        else if (this.writtenTo < this.pos || last == null)\n            this.nodes.push(this.blankContent(this.writtenTo, this.pos));\n        let pos = from;\n        for (let node of this.nodes) {\n            if (node instanceof HeightMapText)\n                node.updateHeight(this.oracle, pos);\n            pos += node ? node.length : 1;\n        }\n        return this.nodes;\n    }\n    // Always called with a region that on both sides either stretches\n    // to a line break or the end of the document.\n    // The returned array uses null to indicate line breaks, but never\n    // starts or ends in a line break, or has multiple line breaks next\n    // to each other.\n    static build(oracle, decorations, from, to) {\n        let builder = new NodeBuilder(from, oracle);\n        RangeSet.spans(decorations, from, to, builder, 0);\n        return builder.finish(from);\n    }\n}\nfunction heightRelevantDecoChanges(a, b, diff) {\n    let comp = new DecorationComparator;\n    RangeSet.compare(a, b, diff, comp, 0);\n    return comp.changes;\n}\nclass DecorationComparator {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange() { }\n    comparePoint(from, to, a, b) {\n        if (from < to || a && a.heightRelevant || b && b.heightRelevant)\n            addRange(from, to, this.changes, 5);\n    }\n}\n\nfunction visiblePixelRange(dom, paddingTop) {\n    let rect = dom.getBoundingClientRect();\n    let doc = dom.ownerDocument, win = doc.defaultView || window;\n    let left = Math.max(0, rect.left), right = Math.min(win.innerWidth, rect.right);\n    let top = Math.max(0, rect.top), bottom = Math.min(win.innerHeight, rect.bottom);\n    for (let parent = dom.parentNode; parent && parent != doc.body;) {\n        if (parent.nodeType == 1) {\n            let elt = parent;\n            let style = window.getComputedStyle(elt);\n            if ((elt.scrollHeight > elt.clientHeight || elt.scrollWidth > elt.clientWidth) &&\n                style.overflow != \"visible\") {\n                let parentRect = elt.getBoundingClientRect();\n                left = Math.max(left, parentRect.left);\n                right = Math.min(right, parentRect.right);\n                top = Math.max(top, parentRect.top);\n                bottom = Math.min(parent == dom.parentNode ? win.innerHeight : bottom, parentRect.bottom);\n            }\n            parent = style.position == \"absolute\" || style.position == \"fixed\" ? elt.offsetParent : elt.parentNode;\n        }\n        else if (parent.nodeType == 11) { // Shadow root\n            parent = parent.host;\n        }\n        else {\n            break;\n        }\n    }\n    return { left: left - rect.left, right: Math.max(left, right) - rect.left,\n        top: top - (rect.top + paddingTop), bottom: Math.max(top, bottom) - (rect.top + paddingTop) };\n}\nfunction inWindow(elt) {\n    let rect = elt.getBoundingClientRect(), win = elt.ownerDocument.defaultView || window;\n    return rect.left < win.innerWidth && rect.right > 0 &&\n        rect.top < win.innerHeight && rect.bottom > 0;\n}\nfunction fullPixelRange(dom, paddingTop) {\n    let rect = dom.getBoundingClientRect();\n    return { left: 0, right: rect.right - rect.left,\n        top: paddingTop, bottom: rect.bottom - (rect.top + paddingTop) };\n}\n// Line gaps are placeholder widgets used to hide pieces of overlong\n// lines within the viewport, as a kludge to keep the editor\n// responsive when a ridiculously long line is loaded into it.\nclass LineGap {\n    constructor(from, to, size, displaySize) {\n        this.from = from;\n        this.to = to;\n        this.size = size;\n        this.displaySize = displaySize;\n    }\n    static same(a, b) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            let gA = a[i], gB = b[i];\n            if (gA.from != gB.from || gA.to != gB.to || gA.size != gB.size)\n                return false;\n        }\n        return true;\n    }\n    draw(viewState, wrapping) {\n        return Decoration.replace({\n            widget: new LineGapWidget(this.displaySize * (wrapping ? viewState.scaleY : viewState.scaleX), wrapping)\n        }).range(this.from, this.to);\n    }\n}\nclass LineGapWidget extends WidgetType {\n    constructor(size, vertical) {\n        super();\n        this.size = size;\n        this.vertical = vertical;\n    }\n    eq(other) { return other.size == this.size && other.vertical == this.vertical; }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        if (this.vertical) {\n            elt.style.height = this.size + \"px\";\n        }\n        else {\n            elt.style.width = this.size + \"px\";\n            elt.style.height = \"2px\";\n            elt.style.display = \"inline-block\";\n        }\n        return elt;\n    }\n    get estimatedHeight() { return this.vertical ? this.size : -1; }\n}\nclass ViewState {\n    constructor(state) {\n        this.state = state;\n        // These are contentDOM-local coordinates\n        this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 };\n        this.inView = true;\n        this.paddingTop = 0; // Padding above the document, scaled\n        this.paddingBottom = 0; // Padding below the document, scaled\n        this.contentDOMWidth = 0; // contentDOM.getBoundingClientRect().width\n        this.contentDOMHeight = 0; // contentDOM.getBoundingClientRect().height\n        this.editorHeight = 0; // scrollDOM.clientHeight, unscaled\n        this.editorWidth = 0; // scrollDOM.clientWidth, unscaled\n        this.scrollTop = 0; // Last seen scrollDOM.scrollTop, scaled\n        this.scrolledToBottom = false;\n        // The CSS-transformation scale of the editor (transformed size /\n        // concrete size)\n        this.scaleX = 1;\n        this.scaleY = 1;\n        // The vertical position (document-relative) to which to anchor the\n        // scroll position. -1 means anchor to the end of the document.\n        this.scrollAnchorPos = 0;\n        // The height at the anchor position. Set by the DOM update phase.\n        // -1 means no height available.\n        this.scrollAnchorHeight = -1;\n        // See VP.MaxDOMHeight\n        this.scaler = IdScaler;\n        this.scrollTarget = null;\n        // Briefly set to true when printing, to disable viewport limiting\n        this.printing = false;\n        // Flag set when editor content was redrawn, so that the next\n        // measure stage knows it must read DOM layout\n        this.mustMeasureContent = true;\n        this.defaultTextDirection = Direction.LTR;\n        this.visibleRanges = [];\n        // Cursor 'assoc' is only significant when the cursor is on a line\n        // wrap point, where it must stick to the character that it is\n        // associated with. Since browsers don't provide a reasonable\n        // interface to set or query this, when a selection is set that\n        // might cause this to be significant, this flag is set. The next\n        // measure phase will check whether the cursor is on a line-wrapping\n        // boundary and, if so, reset it to make sure it is positioned in\n        // the right place.\n        this.mustEnforceCursorAssoc = false;\n        let guessWrapping = state.facet(contentAttributes).some(v => typeof v != \"function\" && v.class == \"cm-lineWrapping\");\n        this.heightOracle = new HeightOracle(guessWrapping);\n        this.stateDeco = state.facet(decorations).filter(d => typeof d != \"function\");\n        this.heightMap = HeightMap.empty().applyChanges(this.stateDeco, Text.empty, this.heightOracle.setDoc(state.doc), [new ChangedRange(0, 0, 0, state.doc.length)]);\n        for (let i = 0; i < 2; i++) {\n            this.viewport = this.getViewport(0, null);\n            if (!this.updateForViewport())\n                break;\n        }\n        this.updateViewportLines();\n        this.lineGaps = this.ensureLineGaps([]);\n        this.lineGapDeco = Decoration.set(this.lineGaps.map(gap => gap.draw(this, false)));\n        this.computeVisibleRanges();\n    }\n    updateForViewport() {\n        let viewports = [this.viewport], { main } = this.state.selection;\n        for (let i = 0; i <= 1; i++) {\n            let pos = i ? main.head : main.anchor;\n            if (!viewports.some(({ from, to }) => pos >= from && pos <= to)) {\n                let { from, to } = this.lineBlockAt(pos);\n                viewports.push(new Viewport(from, to));\n            }\n        }\n        this.viewports = viewports.sort((a, b) => a.from - b.from);\n        return this.updateScaler();\n    }\n    updateScaler() {\n        let scaler = this.scaler;\n        this.scaler = this.heightMap.height <= 7000000 /* VP.MaxDOMHeight */ ? IdScaler :\n            new BigScaler(this.heightOracle, this.heightMap, this.viewports);\n        return scaler.eq(this.scaler) ? 0 : 2 /* UpdateFlag.Height */;\n    }\n    updateViewportLines() {\n        this.viewportLines = [];\n        this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.heightOracle.setDoc(this.state.doc), 0, 0, block => {\n            this.viewportLines.push(scaleBlock(block, this.scaler));\n        });\n    }\n    update(update, scrollTarget = null) {\n        this.state = update.state;\n        let prevDeco = this.stateDeco;\n        this.stateDeco = this.state.facet(decorations).filter(d => typeof d != \"function\");\n        let contentChanges = update.changedRanges;\n        let heightChanges = ChangedRange.extendWithRanges(contentChanges, heightRelevantDecoChanges(prevDeco, this.stateDeco, update ? update.changes : ChangeSet.empty(this.state.doc.length)));\n        let prevHeight = this.heightMap.height;\n        let scrollAnchor = this.scrolledToBottom ? null : this.scrollAnchorAt(this.scrollTop);\n        clearHeightChangeFlag();\n        this.heightMap = this.heightMap.applyChanges(this.stateDeco, update.startState.doc, this.heightOracle.setDoc(this.state.doc), heightChanges);\n        if (this.heightMap.height != prevHeight || heightChangeFlag)\n            update.flags |= 2 /* UpdateFlag.Height */;\n        if (scrollAnchor) {\n            this.scrollAnchorPos = update.changes.mapPos(scrollAnchor.from, -1);\n            this.scrollAnchorHeight = scrollAnchor.top;\n        }\n        else {\n            this.scrollAnchorPos = -1;\n            this.scrollAnchorHeight = this.heightMap.height;\n        }\n        let viewport = heightChanges.length ? this.mapViewport(this.viewport, update.changes) : this.viewport;\n        if (scrollTarget && (scrollTarget.range.head < viewport.from || scrollTarget.range.head > viewport.to) ||\n            !this.viewportIsAppropriate(viewport))\n            viewport = this.getViewport(0, scrollTarget);\n        let viewportChange = viewport.from != this.viewport.from || viewport.to != this.viewport.to;\n        this.viewport = viewport;\n        update.flags |= this.updateForViewport();\n        if (viewportChange || !update.changes.empty || (update.flags & 2 /* UpdateFlag.Height */))\n            this.updateViewportLines();\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > (2000 /* LG.Margin */ << 1))\n            this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, update.changes)));\n        update.flags |= this.computeVisibleRanges(update.changes);\n        if (scrollTarget)\n            this.scrollTarget = scrollTarget;\n        if (!this.mustEnforceCursorAssoc && update.selectionSet && update.view.lineWrapping &&\n            update.state.selection.main.empty && update.state.selection.main.assoc &&\n            !update.state.facet(nativeSelectionHidden))\n            this.mustEnforceCursorAssoc = true;\n    }\n    measure(view) {\n        let dom = view.contentDOM, style = window.getComputedStyle(dom);\n        let oracle = this.heightOracle;\n        let whiteSpace = style.whiteSpace;\n        this.defaultTextDirection = style.direction == \"rtl\" ? Direction.RTL : Direction.LTR;\n        let refresh = this.heightOracle.mustRefreshForWrapping(whiteSpace);\n        let domRect = dom.getBoundingClientRect();\n        let measureContent = refresh || this.mustMeasureContent || this.contentDOMHeight != domRect.height;\n        this.contentDOMHeight = domRect.height;\n        this.mustMeasureContent = false;\n        let result = 0, bias = 0;\n        if (domRect.width && domRect.height) {\n            let { scaleX, scaleY } = getScale(dom, domRect);\n            if (scaleX > .005 && Math.abs(this.scaleX - scaleX) > .005 ||\n                scaleY > .005 && Math.abs(this.scaleY - scaleY) > .005) {\n                this.scaleX = scaleX;\n                this.scaleY = scaleY;\n                result |= 16 /* UpdateFlag.Geometry */;\n                refresh = measureContent = true;\n            }\n        }\n        // Vertical padding\n        let paddingTop = (parseInt(style.paddingTop) || 0) * this.scaleY;\n        let paddingBottom = (parseInt(style.paddingBottom) || 0) * this.scaleY;\n        if (this.paddingTop != paddingTop || this.paddingBottom != paddingBottom) {\n            this.paddingTop = paddingTop;\n            this.paddingBottom = paddingBottom;\n            result |= 16 /* UpdateFlag.Geometry */ | 2 /* UpdateFlag.Height */;\n        }\n        if (this.editorWidth != view.scrollDOM.clientWidth) {\n            if (oracle.lineWrapping)\n                measureContent = true;\n            this.editorWidth = view.scrollDOM.clientWidth;\n            result |= 16 /* UpdateFlag.Geometry */;\n        }\n        let scrollTop = view.scrollDOM.scrollTop * this.scaleY;\n        if (this.scrollTop != scrollTop) {\n            this.scrollAnchorHeight = -1;\n            this.scrollTop = scrollTop;\n        }\n        this.scrolledToBottom = isScrolledToBottom(view.scrollDOM);\n        // Pixel viewport\n        let pixelViewport = (this.printing ? fullPixelRange : visiblePixelRange)(dom, this.paddingTop);\n        let dTop = pixelViewport.top - this.pixelViewport.top, dBottom = pixelViewport.bottom - this.pixelViewport.bottom;\n        this.pixelViewport = pixelViewport;\n        let inView = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;\n        if (inView != this.inView) {\n            this.inView = inView;\n            if (inView)\n                measureContent = true;\n        }\n        if (!this.inView && !this.scrollTarget && !inWindow(view.dom))\n            return 0;\n        let contentWidth = domRect.width;\n        if (this.contentDOMWidth != contentWidth || this.editorHeight != view.scrollDOM.clientHeight) {\n            this.contentDOMWidth = domRect.width;\n            this.editorHeight = view.scrollDOM.clientHeight;\n            result |= 16 /* UpdateFlag.Geometry */;\n        }\n        if (measureContent) {\n            let lineHeights = view.docView.measureVisibleLineHeights(this.viewport);\n            if (oracle.mustRefreshForHeights(lineHeights))\n                refresh = true;\n            if (refresh || oracle.lineWrapping && Math.abs(contentWidth - this.contentDOMWidth) > oracle.charWidth) {\n                let { lineHeight, charWidth, textHeight } = view.docView.measureTextSize();\n                refresh = lineHeight > 0 && oracle.refresh(whiteSpace, lineHeight, charWidth, textHeight, contentWidth / charWidth, lineHeights);\n                if (refresh) {\n                    view.docView.minWidth = 0;\n                    result |= 16 /* UpdateFlag.Geometry */;\n                }\n            }\n            if (dTop > 0 && dBottom > 0)\n                bias = Math.max(dTop, dBottom);\n            else if (dTop < 0 && dBottom < 0)\n                bias = Math.min(dTop, dBottom);\n            clearHeightChangeFlag();\n            for (let vp of this.viewports) {\n                let heights = vp.from == this.viewport.from ? lineHeights : view.docView.measureVisibleLineHeights(vp);\n                this.heightMap = (refresh ? HeightMap.empty().applyChanges(this.stateDeco, Text.empty, this.heightOracle, [new ChangedRange(0, 0, 0, view.state.doc.length)]) : this.heightMap).updateHeight(oracle, 0, refresh, new MeasuredHeights(vp.from, heights));\n            }\n            if (heightChangeFlag)\n                result |= 2 /* UpdateFlag.Height */;\n        }\n        let viewportChange = !this.viewportIsAppropriate(this.viewport, bias) ||\n            this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from ||\n                this.scrollTarget.range.head > this.viewport.to);\n        if (viewportChange) {\n            if (result & 2 /* UpdateFlag.Height */)\n                result |= this.updateScaler();\n            this.viewport = this.getViewport(bias, this.scrollTarget);\n            result |= this.updateForViewport();\n        }\n        if ((result & 2 /* UpdateFlag.Height */) || viewportChange)\n            this.updateViewportLines();\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > (2000 /* LG.Margin */ << 1))\n            this.updateLineGaps(this.ensureLineGaps(refresh ? [] : this.lineGaps, view));\n        result |= this.computeVisibleRanges();\n        if (this.mustEnforceCursorAssoc) {\n            this.mustEnforceCursorAssoc = false;\n            // This is done in the read stage, because moving the selection\n            // to a line end is going to trigger a layout anyway, so it\n            // can't be a pure write. It should be rare that it does any\n            // writing.\n            view.docView.enforceCursorAssoc();\n        }\n        return result;\n    }\n    get visibleTop() { return this.scaler.fromDOM(this.pixelViewport.top); }\n    get visibleBottom() { return this.scaler.fromDOM(this.pixelViewport.bottom); }\n    getViewport(bias, scrollTarget) {\n        // This will divide VP.Margin between the top and the\n        // bottom, depending on the bias (the change in viewport position\n        // since the last update). It'll hold a number between 0 and 1\n        let marginTop = 0.5 - Math.max(-0.5, Math.min(0.5, bias / 1000 /* VP.Margin */ / 2));\n        let map = this.heightMap, oracle = this.heightOracle;\n        let { visibleTop, visibleBottom } = this;\n        let viewport = new Viewport(map.lineAt(visibleTop - marginTop * 1000 /* VP.Margin */, QueryType.ByHeight, oracle, 0, 0).from, map.lineAt(visibleBottom + (1 - marginTop) * 1000 /* VP.Margin */, QueryType.ByHeight, oracle, 0, 0).to);\n        // If scrollTarget is given, make sure the viewport includes that position\n        if (scrollTarget) {\n            let { head } = scrollTarget.range;\n            if (head < viewport.from || head > viewport.to) {\n                let viewHeight = Math.min(this.editorHeight, this.pixelViewport.bottom - this.pixelViewport.top);\n                let block = map.lineAt(head, QueryType.ByPos, oracle, 0, 0), topPos;\n                if (scrollTarget.y == \"center\")\n                    topPos = (block.top + block.bottom) / 2 - viewHeight / 2;\n                else if (scrollTarget.y == \"start\" || scrollTarget.y == \"nearest\" && head < viewport.from)\n                    topPos = block.top;\n                else\n                    topPos = block.bottom - viewHeight;\n                viewport = new Viewport(map.lineAt(topPos - 1000 /* VP.Margin */ / 2, QueryType.ByHeight, oracle, 0, 0).from, map.lineAt(topPos + viewHeight + 1000 /* VP.Margin */ / 2, QueryType.ByHeight, oracle, 0, 0).to);\n            }\n        }\n        return viewport;\n    }\n    mapViewport(viewport, changes) {\n        let from = changes.mapPos(viewport.from, -1), to = changes.mapPos(viewport.to, 1);\n        return new Viewport(this.heightMap.lineAt(from, QueryType.ByPos, this.heightOracle, 0, 0).from, this.heightMap.lineAt(to, QueryType.ByPos, this.heightOracle, 0, 0).to);\n    }\n    // Checks if a given viewport covers the visible part of the\n    // document and not too much beyond that.\n    viewportIsAppropriate({ from, to }, bias = 0) {\n        if (!this.inView)\n            return true;\n        let { top } = this.heightMap.lineAt(from, QueryType.ByPos, this.heightOracle, 0, 0);\n        let { bottom } = this.heightMap.lineAt(to, QueryType.ByPos, this.heightOracle, 0, 0);\n        let { visibleTop, visibleBottom } = this;\n        return (from == 0 || top <= visibleTop - Math.max(10 /* VP.MinCoverMargin */, Math.min(-bias, 250 /* VP.MaxCoverMargin */))) &&\n            (to == this.state.doc.length ||\n                bottom >= visibleBottom + Math.max(10 /* VP.MinCoverMargin */, Math.min(bias, 250 /* VP.MaxCoverMargin */))) &&\n            (top > visibleTop - 2 * 1000 /* VP.Margin */ && bottom < visibleBottom + 2 * 1000 /* VP.Margin */);\n    }\n    mapLineGaps(gaps, changes) {\n        if (!gaps.length || changes.empty)\n            return gaps;\n        let mapped = [];\n        for (let gap of gaps)\n            if (!changes.touchesRange(gap.from, gap.to))\n                mapped.push(new LineGap(changes.mapPos(gap.from), changes.mapPos(gap.to), gap.size, gap.displaySize));\n        return mapped;\n    }\n    // Computes positions in the viewport where the start or end of a\n    // line should be hidden, trying to reuse existing line gaps when\n    // appropriate to avoid unneccesary redraws.\n    // Uses crude character-counting for the positioning and sizing,\n    // since actual DOM coordinates aren't always available and\n    // predictable. Relies on generous margins (see LG.Margin) to hide\n    // the artifacts this might produce from the user.\n    ensureLineGaps(current, mayMeasure) {\n        let wrapping = this.heightOracle.lineWrapping;\n        let margin = wrapping ? 10000 /* LG.MarginWrap */ : 2000 /* LG.Margin */, halfMargin = margin >> 1, doubleMargin = margin << 1;\n        // The non-wrapping logic won't work at all in predominantly right-to-left text.\n        if (this.defaultTextDirection != Direction.LTR && !wrapping)\n            return [];\n        let gaps = [];\n        let addGap = (from, to, line, structure) => {\n            if (to - from < halfMargin)\n                return;\n            let sel = this.state.selection.main, avoid = [sel.from];\n            if (!sel.empty)\n                avoid.push(sel.to);\n            for (let pos of avoid) {\n                if (pos > from && pos < to) {\n                    addGap(from, pos - 10 /* LG.SelectionMargin */, line, structure);\n                    addGap(pos + 10 /* LG.SelectionMargin */, to, line, structure);\n                    return;\n                }\n            }\n            let gap = find(current, gap => gap.from >= line.from && gap.to <= line.to &&\n                Math.abs(gap.from - from) < halfMargin && Math.abs(gap.to - to) < halfMargin &&\n                !avoid.some(pos => gap.from < pos && gap.to > pos));\n            if (!gap) {\n                // When scrolling down, snap gap ends to line starts to avoid shifts in wrapping\n                if (to < line.to && mayMeasure && wrapping &&\n                    mayMeasure.visibleRanges.some(r => r.from <= to && r.to >= to)) {\n                    let lineStart = mayMeasure.moveToLineBoundary(EditorSelection.cursor(to), false, true).head;\n                    if (lineStart > from)\n                        to = lineStart;\n                }\n                let size = this.gapSize(line, from, to, structure);\n                let displaySize = wrapping || size < 2000000 /* VP.MaxHorizGap */ ? size : 2000000 /* VP.MaxHorizGap */;\n                gap = new LineGap(from, to, size, displaySize);\n            }\n            gaps.push(gap);\n        };\n        let checkLine = (line) => {\n            if (line.length < doubleMargin || line.type != BlockType.Text)\n                return;\n            let structure = lineStructure(line.from, line.to, this.stateDeco);\n            if (structure.total < doubleMargin)\n                return;\n            let target = this.scrollTarget ? this.scrollTarget.range.head : null;\n            let viewFrom, viewTo;\n            if (wrapping) {\n                let marginHeight = (margin / this.heightOracle.lineLength) * this.heightOracle.lineHeight;\n                let top, bot;\n                if (target != null) {\n                    let targetFrac = findFraction(structure, target);\n                    let spaceFrac = ((this.visibleBottom - this.visibleTop) / 2 + marginHeight) / line.height;\n                    top = targetFrac - spaceFrac;\n                    bot = targetFrac + spaceFrac;\n                }\n                else {\n                    top = (this.visibleTop - line.top - marginHeight) / line.height;\n                    bot = (this.visibleBottom - line.top + marginHeight) / line.height;\n                }\n                viewFrom = findPosition(structure, top);\n                viewTo = findPosition(structure, bot);\n            }\n            else {\n                let totalWidth = structure.total * this.heightOracle.charWidth;\n                let marginWidth = margin * this.heightOracle.charWidth;\n                let horizOffset = 0;\n                if (totalWidth > 2000000 /* VP.MaxHorizGap */)\n                    for (let old of current) {\n                        if (old.from >= line.from && old.from < line.to && old.size != old.displaySize &&\n                            old.from * this.heightOracle.charWidth + horizOffset < this.pixelViewport.left)\n                            horizOffset = old.size - old.displaySize;\n                    }\n                let pxLeft = this.pixelViewport.left + horizOffset, pxRight = this.pixelViewport.right + horizOffset;\n                let left, right;\n                if (target != null) {\n                    let targetFrac = findFraction(structure, target);\n                    let spaceFrac = ((pxRight - pxLeft) / 2 + marginWidth) / totalWidth;\n                    left = targetFrac - spaceFrac;\n                    right = targetFrac + spaceFrac;\n                }\n                else {\n                    left = (pxLeft - marginWidth) / totalWidth;\n                    right = (pxRight + marginWidth) / totalWidth;\n                }\n                viewFrom = findPosition(structure, left);\n                viewTo = findPosition(structure, right);\n            }\n            if (viewFrom > line.from)\n                addGap(line.from, viewFrom, line, structure);\n            if (viewTo < line.to)\n                addGap(viewTo, line.to, line, structure);\n        };\n        for (let line of this.viewportLines) {\n            if (Array.isArray(line.type))\n                line.type.forEach(checkLine);\n            else\n                checkLine(line);\n        }\n        return gaps;\n    }\n    gapSize(line, from, to, structure) {\n        let fraction = findFraction(structure, to) - findFraction(structure, from);\n        if (this.heightOracle.lineWrapping) {\n            return line.height * fraction;\n        }\n        else {\n            return structure.total * this.heightOracle.charWidth * fraction;\n        }\n    }\n    updateLineGaps(gaps) {\n        if (!LineGap.same(gaps, this.lineGaps)) {\n            this.lineGaps = gaps;\n            this.lineGapDeco = Decoration.set(gaps.map(gap => gap.draw(this, this.heightOracle.lineWrapping)));\n        }\n    }\n    computeVisibleRanges(changes) {\n        let deco = this.stateDeco;\n        if (this.lineGaps.length)\n            deco = deco.concat(this.lineGapDeco);\n        let ranges = [];\n        RangeSet.spans(deco, this.viewport.from, this.viewport.to, {\n            span(from, to) { ranges.push({ from, to }); },\n            point() { }\n        }, 20);\n        let changed = 0;\n        if (ranges.length != this.visibleRanges.length) {\n            changed = 8 /* UpdateFlag.ViewportMoved */ | 4 /* UpdateFlag.Viewport */;\n        }\n        else {\n            for (let i = 0; i < ranges.length && !(changed & 8 /* UpdateFlag.ViewportMoved */); i++) {\n                let old = this.visibleRanges[i], nw = ranges[i];\n                if (old.from != nw.from || old.to != nw.to) {\n                    changed |= 4 /* UpdateFlag.Viewport */;\n                    if (!(changes && changes.mapPos(old.from, -1) == nw.from && changes.mapPos(old.to, 1) == nw.to))\n                        changed |= 8 /* UpdateFlag.ViewportMoved */;\n                }\n            }\n        }\n        this.visibleRanges = ranges;\n        return changed;\n    }\n    lineBlockAt(pos) {\n        return (pos >= this.viewport.from && pos <= this.viewport.to &&\n            this.viewportLines.find(b => b.from <= pos && b.to >= pos)) ||\n            scaleBlock(this.heightMap.lineAt(pos, QueryType.ByPos, this.heightOracle, 0, 0), this.scaler);\n    }\n    lineBlockAtHeight(height) {\n        return (height >= this.viewportLines[0].top && height <= this.viewportLines[this.viewportLines.length - 1].bottom &&\n            this.viewportLines.find(l => l.top <= height && l.bottom >= height)) ||\n            scaleBlock(this.heightMap.lineAt(this.scaler.fromDOM(height), QueryType.ByHeight, this.heightOracle, 0, 0), this.scaler);\n    }\n    scrollAnchorAt(scrollTop) {\n        let block = this.lineBlockAtHeight(scrollTop + 8);\n        return block.from >= this.viewport.from || this.viewportLines[0].top - scrollTop > 200 ? block : this.viewportLines[0];\n    }\n    elementAtHeight(height) {\n        return scaleBlock(this.heightMap.blockAt(this.scaler.fromDOM(height), this.heightOracle, 0, 0), this.scaler);\n    }\n    get docHeight() {\n        return this.scaler.toDOM(this.heightMap.height);\n    }\n    get contentHeight() {\n        return this.docHeight + this.paddingTop + this.paddingBottom;\n    }\n}\nclass Viewport {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\nfunction lineStructure(from, to, stateDeco) {\n    let ranges = [], pos = from, total = 0;\n    RangeSet.spans(stateDeco, from, to, {\n        span() { },\n        point(from, to) {\n            if (from > pos) {\n                ranges.push({ from: pos, to: from });\n                total += from - pos;\n            }\n            pos = to;\n        }\n    }, 20); // We're only interested in collapsed ranges of a significant size\n    if (pos < to) {\n        ranges.push({ from: pos, to });\n        total += to - pos;\n    }\n    return { total, ranges };\n}\nfunction findPosition({ total, ranges }, ratio) {\n    if (ratio <= 0)\n        return ranges[0].from;\n    if (ratio >= 1)\n        return ranges[ranges.length - 1].to;\n    let dist = Math.floor(total * ratio);\n    for (let i = 0;; i++) {\n        let { from, to } = ranges[i], size = to - from;\n        if (dist <= size)\n            return from + dist;\n        dist -= size;\n    }\n}\nfunction findFraction(structure, pos) {\n    let counted = 0;\n    for (let { from, to } of structure.ranges) {\n        if (pos <= to) {\n            counted += pos - from;\n            break;\n        }\n        counted += to - from;\n    }\n    return counted / structure.total;\n}\nfunction find(array, f) {\n    for (let val of array)\n        if (f(val))\n            return val;\n    return undefined;\n}\n// Don't scale when the document height is within the range of what\n// the DOM can handle.\nconst IdScaler = {\n    toDOM(n) { return n; },\n    fromDOM(n) { return n; },\n    scale: 1,\n    eq(other) { return other == this; }\n};\n// When the height is too big (> VP.MaxDOMHeight), scale down the\n// regions outside the viewports so that the total height is\n// VP.MaxDOMHeight.\nclass BigScaler {\n    constructor(oracle, heightMap, viewports) {\n        let vpHeight = 0, base = 0, domBase = 0;\n        this.viewports = viewports.map(({ from, to }) => {\n            let top = heightMap.lineAt(from, QueryType.ByPos, oracle, 0, 0).top;\n            let bottom = heightMap.lineAt(to, QueryType.ByPos, oracle, 0, 0).bottom;\n            vpHeight += bottom - top;\n            return { from, to, top, bottom, domTop: 0, domBottom: 0 };\n        });\n        this.scale = (7000000 /* VP.MaxDOMHeight */ - vpHeight) / (heightMap.height - vpHeight);\n        for (let obj of this.viewports) {\n            obj.domTop = domBase + (obj.top - base) * this.scale;\n            domBase = obj.domBottom = obj.domTop + (obj.bottom - obj.top);\n            base = obj.bottom;\n        }\n    }\n    toDOM(n) {\n        for (let i = 0, base = 0, domBase = 0;; i++) {\n            let vp = i < this.viewports.length ? this.viewports[i] : null;\n            if (!vp || n < vp.top)\n                return domBase + (n - base) * this.scale;\n            if (n <= vp.bottom)\n                return vp.domTop + (n - vp.top);\n            base = vp.bottom;\n            domBase = vp.domBottom;\n        }\n    }\n    fromDOM(n) {\n        for (let i = 0, base = 0, domBase = 0;; i++) {\n            let vp = i < this.viewports.length ? this.viewports[i] : null;\n            if (!vp || n < vp.domTop)\n                return base + (n - domBase) / this.scale;\n            if (n <= vp.domBottom)\n                return vp.top + (n - vp.domTop);\n            base = vp.bottom;\n            domBase = vp.domBottom;\n        }\n    }\n    eq(other) {\n        if (!(other instanceof BigScaler))\n            return false;\n        return this.scale == other.scale && this.viewports.length == other.viewports.length &&\n            this.viewports.every((vp, i) => vp.from == other.viewports[i].from && vp.to == other.viewports[i].to);\n    }\n}\nfunction scaleBlock(block, scaler) {\n    if (scaler.scale == 1)\n        return block;\n    let bTop = scaler.toDOM(block.top), bBottom = scaler.toDOM(block.bottom);\n    return new BlockInfo(block.from, block.length, bTop, bBottom - bTop, Array.isArray(block._content) ? block._content.map(b => scaleBlock(b, scaler)) : block._content);\n}\n\nconst theme = /*@__PURE__*/Facet.define({ combine: strs => strs.join(\" \") });\nconst darkTheme = /*@__PURE__*/Facet.define({ combine: values => values.indexOf(true) > -1 });\nconst baseThemeID = /*@__PURE__*/StyleModule.newName(), baseLightID = /*@__PURE__*/StyleModule.newName(), baseDarkID = /*@__PURE__*/StyleModule.newName();\nconst lightDarkIDs = { \"&light\": \".\" + baseLightID, \"&dark\": \".\" + baseDarkID };\nfunction buildTheme(main, spec, scopes) {\n    return new StyleModule(spec, {\n        finish(sel) {\n            return /&/.test(sel) ? sel.replace(/&\\w*/, m => {\n                if (m == \"&\")\n                    return main;\n                if (!scopes || !scopes[m])\n                    throw new RangeError(`Unsupported selector: ${m}`);\n                return scopes[m];\n            }) : main + \" \" + sel;\n        }\n    });\n}\nconst baseTheme$1 = /*@__PURE__*/buildTheme(\".\" + baseThemeID, {\n    \"&\": {\n        position: \"relative !important\",\n        boxSizing: \"border-box\",\n        \"&.cm-focused\": {\n            // Provide a simple default outline to make sure a focused\n            // editor is visually distinct. Can't leave the default behavior\n            // because that will apply to the content element, which is\n            // inside the scrollable container and doesn't include the\n            // gutters. We also can't use an 'auto' outline, since those\n            // are, for some reason, drawn behind the element content, which\n            // will cause things like the active line background to cover\n            // the outline (#297).\n            outline: \"1px dotted #212121\"\n        },\n        display: \"flex !important\",\n        flexDirection: \"column\"\n    },\n    \".cm-scroller\": {\n        display: \"flex !important\",\n        alignItems: \"flex-start !important\",\n        fontFamily: \"monospace\",\n        lineHeight: 1.4,\n        height: \"100%\",\n        overflowX: \"auto\",\n        position: \"relative\",\n        zIndex: 0,\n        overflowAnchor: \"none\",\n    },\n    \".cm-content\": {\n        margin: 0,\n        flexGrow: 2,\n        flexShrink: 0,\n        display: \"block\",\n        whiteSpace: \"pre\",\n        wordWrap: \"normal\", // https://github.com/codemirror/dev/issues/456\n        boxSizing: \"border-box\",\n        minHeight: \"100%\",\n        padding: \"4px 0\",\n        outline: \"none\",\n        \"&[contenteditable=true]\": {\n            WebkitUserModify: \"read-write-plaintext-only\",\n        }\n    },\n    \".cm-lineWrapping\": {\n        whiteSpace_fallback: \"pre-wrap\", // For IE\n        whiteSpace: \"break-spaces\",\n        wordBreak: \"break-word\", // For Safari, which doesn't support overflow-wrap: anywhere\n        overflowWrap: \"anywhere\",\n        flexShrink: 1\n    },\n    \"&light .cm-content\": { caretColor: \"black\" },\n    \"&dark .cm-content\": { caretColor: \"white\" },\n    \".cm-line\": {\n        display: \"block\",\n        padding: \"0 2px 0 6px\"\n    },\n    \".cm-layer\": {\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        contain: \"size style\",\n        \"& > *\": {\n            position: \"absolute\"\n        }\n    },\n    \"&light .cm-selectionBackground\": {\n        background: \"#d9d9d9\"\n    },\n    \"&dark .cm-selectionBackground\": {\n        background: \"#222\"\n    },\n    \"&light.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground\": {\n        background: \"#d7d4f0\"\n    },\n    \"&dark.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground\": {\n        background: \"#233\"\n    },\n    \".cm-cursorLayer\": {\n        pointerEvents: \"none\"\n    },\n    \"&.cm-focused > .cm-scroller > .cm-cursorLayer\": {\n        animation: \"steps(1) cm-blink 1.2s infinite\"\n    },\n    // Two animations defined so that we can switch between them to\n    // restart the animation without forcing another style\n    // recomputation.\n    \"@keyframes cm-blink\": { \"0%\": {}, \"50%\": { opacity: 0 }, \"100%\": {} },\n    \"@keyframes cm-blink2\": { \"0%\": {}, \"50%\": { opacity: 0 }, \"100%\": {} },\n    \".cm-cursor, .cm-dropCursor\": {\n        borderLeft: \"1.2px solid black\",\n        marginLeft: \"-0.6px\",\n        pointerEvents: \"none\",\n    },\n    \".cm-cursor\": {\n        display: \"none\"\n    },\n    \"&dark .cm-cursor\": {\n        borderLeftColor: \"#ddd\"\n    },\n    \".cm-dropCursor\": {\n        position: \"absolute\"\n    },\n    \"&.cm-focused > .cm-scroller > .cm-cursorLayer .cm-cursor\": {\n        display: \"block\"\n    },\n    \".cm-iso\": {\n        unicodeBidi: \"isolate\"\n    },\n    \".cm-announced\": {\n        position: \"fixed\",\n        top: \"-10000px\"\n    },\n    \"@media print\": {\n        \".cm-announced\": { display: \"none\" }\n    },\n    \"&light .cm-activeLine\": { backgroundColor: \"#cceeff44\" },\n    \"&dark .cm-activeLine\": { backgroundColor: \"#99eeff33\" },\n    \"&light .cm-specialChar\": { color: \"red\" },\n    \"&dark .cm-specialChar\": { color: \"#f78\" },\n    \".cm-gutters\": {\n        flexShrink: 0,\n        display: \"flex\",\n        height: \"100%\",\n        boxSizing: \"border-box\",\n        insetInlineStart: 0,\n        zIndex: 200\n    },\n    \"&light .cm-gutters\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"#6c6c6c\",\n        borderRight: \"1px solid #ddd\"\n    },\n    \"&dark .cm-gutters\": {\n        backgroundColor: \"#333338\",\n        color: \"#ccc\"\n    },\n    \".cm-gutter\": {\n        display: \"flex !important\", // Necessary -- prevents margin collapsing\n        flexDirection: \"column\",\n        flexShrink: 0,\n        boxSizing: \"border-box\",\n        minHeight: \"100%\",\n        overflow: \"hidden\"\n    },\n    \".cm-gutterElement\": {\n        boxSizing: \"border-box\"\n    },\n    \".cm-lineNumbers .cm-gutterElement\": {\n        padding: \"0 3px 0 5px\",\n        minWidth: \"20px\",\n        textAlign: \"right\",\n        whiteSpace: \"nowrap\"\n    },\n    \"&light .cm-activeLineGutter\": {\n        backgroundColor: \"#e2f2ff\"\n    },\n    \"&dark .cm-activeLineGutter\": {\n        backgroundColor: \"#222227\"\n    },\n    \".cm-panels\": {\n        boxSizing: \"border-box\",\n        position: \"sticky\",\n        left: 0,\n        right: 0,\n        zIndex: 300\n    },\n    \"&light .cm-panels\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"black\"\n    },\n    \"&light .cm-panels-top\": {\n        borderBottom: \"1px solid #ddd\"\n    },\n    \"&light .cm-panels-bottom\": {\n        borderTop: \"1px solid #ddd\"\n    },\n    \"&dark .cm-panels\": {\n        backgroundColor: \"#333338\",\n        color: \"white\"\n    },\n    \".cm-tab\": {\n        display: \"inline-block\",\n        overflow: \"hidden\",\n        verticalAlign: \"bottom\"\n    },\n    \".cm-widgetBuffer\": {\n        verticalAlign: \"text-top\",\n        height: \"1em\",\n        width: 0,\n        display: \"inline\"\n    },\n    \".cm-placeholder\": {\n        color: \"#888\",\n        display: \"inline-block\",\n        verticalAlign: \"top\",\n    },\n    \".cm-highlightSpace\": {\n        backgroundImage: \"radial-gradient(circle at 50% 55%, #aaa 20%, transparent 5%)\",\n        backgroundPosition: \"center\",\n    },\n    \".cm-highlightTab\": {\n        backgroundImage: `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"20\"><path stroke=\"%23888\" stroke-width=\"1\" fill=\"none\" d=\"M1 10H196L190 5M190 15L196 10M197 4L197 16\"/></svg>')`,\n        backgroundSize: \"auto 100%\",\n        backgroundPosition: \"right 90%\",\n        backgroundRepeat: \"no-repeat\"\n    },\n    \".cm-trailingSpace\": {\n        backgroundColor: \"#ff332255\"\n    },\n    \".cm-button\": {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        padding: \".2em 1em\",\n        borderRadius: \"1px\"\n    },\n    \"&light .cm-button\": {\n        backgroundImage: \"linear-gradient(#eff1f5, #d9d9df)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#b4b4b4, #d0d3d6)\"\n        }\n    },\n    \"&dark .cm-button\": {\n        backgroundImage: \"linear-gradient(#393939, #111)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#111, #333)\"\n        }\n    },\n    \".cm-textfield\": {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        border: \"1px solid silver\",\n        padding: \".2em .5em\"\n    },\n    \"&light .cm-textfield\": {\n        backgroundColor: \"white\"\n    },\n    \"&dark .cm-textfield\": {\n        border: \"1px solid #555\",\n        backgroundColor: \"inherit\"\n    }\n}, lightDarkIDs);\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    subtree: true,\n    attributes: true,\n    characterDataOldValue: true\n};\n// IE11 has very broken mutation observers, so we also listen to\n// DOMCharacterDataModified there\nconst useCharData = browser.ie && browser.ie_version <= 11;\nclass DOMObserver {\n    constructor(view) {\n        this.view = view;\n        this.active = false;\n        this.editContext = null;\n        // The known selection. Kept in our own object, as opposed to just\n        // directly accessing the selection because:\n        //  - Safari doesn't report the right selection in shadow DOM\n        //  - Reading from the selection forces a DOM layout\n        //  - This way, we can ignore selectionchange events if we have\n        //    already seen the 'new' selection\n        this.selectionRange = new DOMSelectionState;\n        // Set when a selection change is detected, cleared on flush\n        this.selectionChanged = false;\n        this.delayedFlush = -1;\n        this.resizeTimeout = -1;\n        this.queue = [];\n        this.delayedAndroidKey = null;\n        this.flushingAndroidKey = -1;\n        this.lastChange = 0;\n        this.scrollTargets = [];\n        this.intersection = null;\n        this.resizeScroll = null;\n        this.intersecting = false;\n        this.gapIntersection = null;\n        this.gaps = [];\n        this.printQuery = null;\n        // Timeout for scheduling check of the parents that need scroll handlers\n        this.parentCheck = -1;\n        this.dom = view.contentDOM;\n        this.observer = new MutationObserver(mutations => {\n            for (let mut of mutations)\n                this.queue.push(mut);\n            // IE11 will sometimes (on typing over a selection or\n            // backspacing out a single character text node) call the\n            // observer callback before actually updating the DOM.\n            //\n            // Unrelatedly, iOS Safari will, when ending a composition,\n            // sometimes first clear it, deliver the mutations, and then\n            // reinsert the finished text. CodeMirror's handling of the\n            // deletion will prevent the reinsertion from happening,\n            // breaking composition.\n            if ((browser.ie && browser.ie_version <= 11 || browser.ios && view.composing) &&\n                mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                this.flushSoon();\n            else\n                this.flush();\n        });\n        if (window.EditContext && view.constructor.EDIT_CONTEXT !== false &&\n            // Chrome <126 doesn't support inverted selections in edit context (#1392)\n            !(browser.chrome && browser.chrome_version < 126)) {\n            this.editContext = new EditContextManager(view);\n            if (view.state.facet(editable))\n                view.contentDOM.editContext = this.editContext.editContext;\n        }\n        if (useCharData)\n            this.onCharData = (event) => {\n                this.queue.push({ target: event.target,\n                    type: \"characterData\",\n                    oldValue: event.prevValue });\n                this.flushSoon();\n            };\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n        this.onResize = this.onResize.bind(this);\n        this.onPrint = this.onPrint.bind(this);\n        this.onScroll = this.onScroll.bind(this);\n        if (window.matchMedia)\n            this.printQuery = window.matchMedia(\"print\");\n        if (typeof ResizeObserver == \"function\") {\n            this.resizeScroll = new ResizeObserver(() => {\n                var _a;\n                if (((_a = this.view.docView) === null || _a === void 0 ? void 0 : _a.lastUpdate) < Date.now() - 75)\n                    this.onResize();\n            });\n            this.resizeScroll.observe(view.scrollDOM);\n        }\n        this.addWindowListeners(this.win = view.win);\n        this.start();\n        if (typeof IntersectionObserver == \"function\") {\n            this.intersection = new IntersectionObserver(entries => {\n                if (this.parentCheck < 0)\n                    this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1000);\n                if (entries.length > 0 && (entries[entries.length - 1].intersectionRatio > 0) != this.intersecting) {\n                    this.intersecting = !this.intersecting;\n                    if (this.intersecting != this.view.inView)\n                        this.onScrollChanged(document.createEvent(\"Event\"));\n                }\n            }, { threshold: [0, .001] });\n            this.intersection.observe(this.dom);\n            this.gapIntersection = new IntersectionObserver(entries => {\n                if (entries.length > 0 && entries[entries.length - 1].intersectionRatio > 0)\n                    this.onScrollChanged(document.createEvent(\"Event\"));\n            }, {});\n        }\n        this.listenForScroll();\n        this.readSelectionRange();\n    }\n    onScrollChanged(e) {\n        this.view.inputState.runHandlers(\"scroll\", e);\n        if (this.intersecting)\n            this.view.measure();\n    }\n    onScroll(e) {\n        if (this.intersecting)\n            this.flush(false);\n        if (this.editContext)\n            this.view.requestMeasure(this.editContext.measureReq);\n        this.onScrollChanged(e);\n    }\n    onResize() {\n        if (this.resizeTimeout < 0)\n            this.resizeTimeout = setTimeout(() => {\n                this.resizeTimeout = -1;\n                this.view.requestMeasure();\n            }, 50);\n    }\n    onPrint(event) {\n        if ((event.type == \"change\" || !event.type) && !event.matches)\n            return;\n        this.view.viewState.printing = true;\n        this.view.measure();\n        setTimeout(() => {\n            this.view.viewState.printing = false;\n            this.view.requestMeasure();\n        }, 500);\n    }\n    updateGaps(gaps) {\n        if (this.gapIntersection && (gaps.length != this.gaps.length || this.gaps.some((g, i) => g != gaps[i]))) {\n            this.gapIntersection.disconnect();\n            for (let gap of gaps)\n                this.gapIntersection.observe(gap);\n            this.gaps = gaps;\n        }\n    }\n    onSelectionChange(event) {\n        let wasChanged = this.selectionChanged;\n        if (!this.readSelectionRange() || this.delayedAndroidKey)\n            return;\n        let { view } = this, sel = this.selectionRange;\n        if (view.state.facet(editable) ? view.root.activeElement != this.dom : !hasSelection(this.dom, sel))\n            return;\n        let context = sel.anchorNode && view.docView.nearest(sel.anchorNode);\n        if (context && context.ignoreEvent(event)) {\n            if (!wasChanged)\n                this.selectionChanged = false;\n            return;\n        }\n        // Deletions on IE11 fire their events in the wrong order, giving\n        // us a selection change event before the DOM changes are\n        // reported.\n        // Chrome Android has a similar issue when backspacing out a\n        // selection (#645).\n        if ((browser.ie && browser.ie_version <= 11 || browser.android && browser.chrome) && !view.state.selection.main.empty &&\n            // (Selection.isCollapsed isn't reliable on IE)\n            sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n            this.flushSoon();\n        else\n            this.flush(false);\n    }\n    readSelectionRange() {\n        let { view } = this;\n        // The Selection object is broken in shadow roots in Safari. See\n        // https://github.com/codemirror/dev/issues/414\n        let selection = getSelection(view.root);\n        if (!selection)\n            return false;\n        let range = browser.safari && view.root.nodeType == 11 &&\n            view.root.activeElement == this.dom &&\n            safariSelectionRangeHack(this.view, selection) || selection;\n        if (!range || this.selectionRange.eq(range))\n            return false;\n        let local = hasSelection(this.dom, range);\n        // Detect the situation where the browser has, on focus, moved the\n        // selection to the start of the content element. Reset it to the\n        // position from the editor state.\n        if (local && !this.selectionChanged &&\n            view.inputState.lastFocusTime > Date.now() - 200 &&\n            view.inputState.lastTouchTime < Date.now() - 300 &&\n            atElementStart(this.dom, range)) {\n            this.view.inputState.lastFocusTime = 0;\n            view.docView.updateSelection();\n            return false;\n        }\n        this.selectionRange.setRange(range);\n        if (local)\n            this.selectionChanged = true;\n        return true;\n    }\n    setSelectionRange(anchor, head) {\n        this.selectionRange.set(anchor.node, anchor.offset, head.node, head.offset);\n        this.selectionChanged = false;\n    }\n    clearSelectionRange() {\n        this.selectionRange.set(null, 0, null, 0);\n    }\n    listenForScroll() {\n        this.parentCheck = -1;\n        let i = 0, changed = null;\n        for (let dom = this.dom; dom;) {\n            if (dom.nodeType == 1) {\n                if (!changed && i < this.scrollTargets.length && this.scrollTargets[i] == dom)\n                    i++;\n                else if (!changed)\n                    changed = this.scrollTargets.slice(0, i);\n                if (changed)\n                    changed.push(dom);\n                dom = dom.assignedSlot || dom.parentNode;\n            }\n            else if (dom.nodeType == 11) { // Shadow root\n                dom = dom.host;\n            }\n            else {\n                break;\n            }\n        }\n        if (i < this.scrollTargets.length && !changed)\n            changed = this.scrollTargets.slice(0, i);\n        if (changed) {\n            for (let dom of this.scrollTargets)\n                dom.removeEventListener(\"scroll\", this.onScroll);\n            for (let dom of this.scrollTargets = changed)\n                dom.addEventListener(\"scroll\", this.onScroll);\n        }\n    }\n    ignore(f) {\n        if (!this.active)\n            return f();\n        try {\n            this.stop();\n            return f();\n        }\n        finally {\n            this.start();\n            this.clear();\n        }\n    }\n    start() {\n        if (this.active)\n            return;\n        this.observer.observe(this.dom, observeOptions);\n        if (useCharData)\n            this.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.active = true;\n    }\n    stop() {\n        if (!this.active)\n            return;\n        this.active = false;\n        this.observer.disconnect();\n        if (useCharData)\n            this.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n    }\n    // Throw away any pending changes\n    clear() {\n        this.processRecords();\n        this.queue.length = 0;\n        this.selectionChanged = false;\n    }\n    // Chrome Android, especially in combination with GBoard, not only\n    // doesn't reliably fire regular key events, but also often\n    // surrounds the effect of enter or backspace with a bunch of\n    // composition events that, when interrupted, cause text duplication\n    // or other kinds of corruption. This hack makes the editor back off\n    // from handling DOM changes for a moment when such a key is\n    // detected (via beforeinput or keydown), and then tries to flush\n    // them or, if that has no effect, dispatches the given key.\n    delayAndroidKey(key, keyCode) {\n        var _a;\n        if (!this.delayedAndroidKey) {\n            let flush = () => {\n                let key = this.delayedAndroidKey;\n                if (key) {\n                    this.clearDelayedAndroidKey();\n                    this.view.inputState.lastKeyCode = key.keyCode;\n                    this.view.inputState.lastKeyTime = Date.now();\n                    let flushed = this.flush();\n                    if (!flushed && key.force)\n                        dispatchKey(this.dom, key.key, key.keyCode);\n                }\n            };\n            this.flushingAndroidKey = this.view.win.requestAnimationFrame(flush);\n        }\n        // Since backspace beforeinput is sometimes signalled spuriously,\n        // Enter always takes precedence.\n        if (!this.delayedAndroidKey || key == \"Enter\")\n            this.delayedAndroidKey = {\n                key, keyCode,\n                // Only run the key handler when no changes are detected if\n                // this isn't coming right after another change, in which case\n                // it is probably part of a weird chain of updates, and should\n                // be ignored if it returns the DOM to its previous state.\n                force: this.lastChange < Date.now() - 50 || !!((_a = this.delayedAndroidKey) === null || _a === void 0 ? void 0 : _a.force)\n            };\n    }\n    clearDelayedAndroidKey() {\n        this.win.cancelAnimationFrame(this.flushingAndroidKey);\n        this.delayedAndroidKey = null;\n        this.flushingAndroidKey = -1;\n    }\n    flushSoon() {\n        if (this.delayedFlush < 0)\n            this.delayedFlush = this.view.win.requestAnimationFrame(() => { this.delayedFlush = -1; this.flush(); });\n    }\n    forceFlush() {\n        if (this.delayedFlush >= 0) {\n            this.view.win.cancelAnimationFrame(this.delayedFlush);\n            this.delayedFlush = -1;\n        }\n        this.flush();\n    }\n    pendingRecords() {\n        for (let mut of this.observer.takeRecords())\n            this.queue.push(mut);\n        return this.queue;\n    }\n    processRecords() {\n        let records = this.pendingRecords();\n        if (records.length)\n            this.queue = [];\n        let from = -1, to = -1, typeOver = false;\n        for (let record of records) {\n            let range = this.readMutation(record);\n            if (!range)\n                continue;\n            if (range.typeOver)\n                typeOver = true;\n            if (from == -1) {\n                ({ from, to } = range);\n            }\n            else {\n                from = Math.min(range.from, from);\n                to = Math.max(range.to, to);\n            }\n        }\n        return { from, to, typeOver };\n    }\n    readChange() {\n        let { from, to, typeOver } = this.processRecords();\n        let newSel = this.selectionChanged && hasSelection(this.dom, this.selectionRange);\n        if (from < 0 && !newSel)\n            return null;\n        if (from > -1)\n            this.lastChange = Date.now();\n        this.view.inputState.lastFocusTime = 0;\n        this.selectionChanged = false;\n        let change = new DOMChange(this.view, from, to, typeOver);\n        this.view.docView.domChanged = { newSel: change.newSel ? change.newSel.main : null };\n        return change;\n    }\n    // Apply pending changes, if any\n    flush(readSelection = true) {\n        // Completely hold off flushing when pending keys are set\u2014the code\n        // managing those will make sure processRecords is called and the\n        // view is resynchronized after\n        if (this.delayedFlush >= 0 || this.delayedAndroidKey)\n            return false;\n        if (readSelection)\n            this.readSelectionRange();\n        let domChange = this.readChange();\n        if (!domChange) {\n            this.view.requestMeasure();\n            return false;\n        }\n        let startState = this.view.state;\n        let handled = applyDOMChange(this.view, domChange);\n        // The view wasn't updated but DOM/selection changes were seen. Reset the view.\n        if (this.view.state == startState &&\n            (domChange.domChanged || domChange.newSel && !domChange.newSel.main.eq(this.view.state.selection.main)))\n            this.view.update([]);\n        return handled;\n    }\n    readMutation(rec) {\n        let cView = this.view.docView.nearest(rec.target);\n        if (!cView || cView.ignoreMutation(rec))\n            return null;\n        cView.markDirty(rec.type == \"attributes\");\n        if (rec.type == \"attributes\")\n            cView.flags |= 4 /* ViewFlag.AttrsDirty */;\n        if (rec.type == \"childList\") {\n            let childBefore = findChild(cView, rec.previousSibling || rec.target.previousSibling, -1);\n            let childAfter = findChild(cView, rec.nextSibling || rec.target.nextSibling, 1);\n            return { from: childBefore ? cView.posAfter(childBefore) : cView.posAtStart,\n                to: childAfter ? cView.posBefore(childAfter) : cView.posAtEnd, typeOver: false };\n        }\n        else if (rec.type == \"characterData\") {\n            return { from: cView.posAtStart, to: cView.posAtEnd, typeOver: rec.target.nodeValue == rec.oldValue };\n        }\n        else {\n            return null;\n        }\n    }\n    setWindow(win) {\n        if (win != this.win) {\n            this.removeWindowListeners(this.win);\n            this.win = win;\n            this.addWindowListeners(this.win);\n        }\n    }\n    addWindowListeners(win) {\n        win.addEventListener(\"resize\", this.onResize);\n        if (this.printQuery) {\n            if (this.printQuery.addEventListener)\n                this.printQuery.addEventListener(\"change\", this.onPrint);\n            else\n                this.printQuery.addListener(this.onPrint);\n        }\n        else\n            win.addEventListener(\"beforeprint\", this.onPrint);\n        win.addEventListener(\"scroll\", this.onScroll);\n        win.document.addEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    removeWindowListeners(win) {\n        win.removeEventListener(\"scroll\", this.onScroll);\n        win.removeEventListener(\"resize\", this.onResize);\n        if (this.printQuery) {\n            if (this.printQuery.removeEventListener)\n                this.printQuery.removeEventListener(\"change\", this.onPrint);\n            else\n                this.printQuery.removeListener(this.onPrint);\n        }\n        else\n            win.removeEventListener(\"beforeprint\", this.onPrint);\n        win.document.removeEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    update(update) {\n        if (this.editContext) {\n            this.editContext.update(update);\n            if (update.startState.facet(editable) != update.state.facet(editable))\n                update.view.contentDOM.editContext = update.state.facet(editable) ? this.editContext.editContext : null;\n        }\n    }\n    destroy() {\n        var _a, _b, _c;\n        this.stop();\n        (_a = this.intersection) === null || _a === void 0 ? void 0 : _a.disconnect();\n        (_b = this.gapIntersection) === null || _b === void 0 ? void 0 : _b.disconnect();\n        (_c = this.resizeScroll) === null || _c === void 0 ? void 0 : _c.disconnect();\n        for (let dom of this.scrollTargets)\n            dom.removeEventListener(\"scroll\", this.onScroll);\n        this.removeWindowListeners(this.win);\n        clearTimeout(this.parentCheck);\n        clearTimeout(this.resizeTimeout);\n        this.win.cancelAnimationFrame(this.delayedFlush);\n        this.win.cancelAnimationFrame(this.flushingAndroidKey);\n        if (this.editContext) {\n            this.view.contentDOM.editContext = null;\n            this.editContext.destroy();\n        }\n    }\n}\nfunction findChild(cView, dom, dir) {\n    while (dom) {\n        let curView = ContentView.get(dom);\n        if (curView && curView.parent == cView)\n            return curView;\n        let parent = dom.parentNode;\n        dom = parent != cView.dom ? parent : dir > 0 ? dom.nextSibling : dom.previousSibling;\n    }\n    return null;\n}\nfunction buildSelectionRangeFromRange(view, range) {\n    let anchorNode = range.startContainer, anchorOffset = range.startOffset;\n    let focusNode = range.endContainer, focusOffset = range.endOffset;\n    let curAnchor = view.docView.domAtPos(view.state.selection.main.anchor);\n    // Since such a range doesn't distinguish between anchor and head,\n    // use a heuristic that flips it around if its end matches the\n    // current anchor.\n    if (isEquivalentPosition(curAnchor.node, curAnchor.offset, focusNode, focusOffset))\n        [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n    return { anchorNode, anchorOffset, focusNode, focusOffset };\n}\n// Used to work around a Safari Selection/shadow DOM bug (#414)\nfunction safariSelectionRangeHack(view, selection) {\n    if (selection.getComposedRanges) {\n        let range = selection.getComposedRanges(view.root)[0];\n        if (range)\n            return buildSelectionRangeFromRange(view, range);\n    }\n    let found = null;\n    // Because Safari (at least in 2018-2021) doesn't provide regular\n    // access to the selection inside a shadowroot, we have to perform a\n    // ridiculous hack to get at it\u2014using `execCommand` to trigger a\n    // `beforeInput` event so that we can read the target range from the\n    // event.\n    function read(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        found = event.getTargetRanges()[0];\n    }\n    view.contentDOM.addEventListener(\"beforeinput\", read, true);\n    view.dom.ownerDocument.execCommand(\"indent\");\n    view.contentDOM.removeEventListener(\"beforeinput\", read, true);\n    return found ? buildSelectionRangeFromRange(view, found) : null;\n}\nclass EditContextManager {\n    constructor(view) {\n        // The document window for which the text in the context is\n        // maintained. For large documents, this may be smaller than the\n        // editor document. This window always includes the selection head.\n        this.from = 0;\n        this.to = 0;\n        // When applying a transaction, this is used to compare the change\n        // made to the context content to the change in the transaction in\n        // order to make the minimal changes to the context (since touching\n        // that sometimes breaks series of multiple edits made for a single\n        // user action on some Android keyboards)\n        this.pendingContextChange = null;\n        this.handlers = Object.create(null);\n        // Kludge to work around the fact that EditContext does not respond\n        // well to having its content updated during a composition (see #1472)\n        this.composing = null;\n        this.resetRange(view.state);\n        let context = this.editContext = new window.EditContext({\n            text: view.state.doc.sliceString(this.from, this.to),\n            selectionStart: this.toContextPos(Math.max(this.from, Math.min(this.to, view.state.selection.main.anchor))),\n            selectionEnd: this.toContextPos(view.state.selection.main.head)\n        });\n        this.handlers.textupdate = e => {\n            let main = view.state.selection.main, { anchor, head } = main;\n            let from = this.toEditorPos(e.updateRangeStart), to = this.toEditorPos(e.updateRangeEnd);\n            if (view.inputState.composing >= 0 && !this.composing)\n                this.composing = { contextBase: e.updateRangeStart, editorBase: from, drifted: false };\n            let change = { from, to, insert: Text.of(e.text.split(\"\\n\")) };\n            // If the window doesn't include the anchor, assume changes\n            // adjacent to a side go up to the anchor.\n            if (change.from == this.from && anchor < this.from)\n                change.from = anchor;\n            else if (change.to == this.to && anchor > this.to)\n                change.to = anchor;\n            // Edit contexts sometimes fire empty changes\n            if (change.from == change.to && !change.insert.length) {\n                let newSel = EditorSelection.single(this.toEditorPos(e.selectionStart), this.toEditorPos(e.selectionEnd));\n                if (!newSel.main.eq(main))\n                    view.dispatch({ selection: newSel, userEvent: \"select\" });\n                return;\n            }\n            if ((browser.mac || browser.android) && change.from == head - 1 &&\n                /^\\. ?$/.test(e.text) && view.contentDOM.getAttribute(\"autocorrect\") == \"off\")\n                change = { from, to, insert: Text.of([e.text.replace(\".\", \" \")]) };\n            this.pendingContextChange = change;\n            if (!view.state.readOnly) {\n                let newLen = this.to - this.from + (change.to - change.from + change.insert.length);\n                applyDOMChangeInner(view, change, EditorSelection.single(this.toEditorPos(e.selectionStart, newLen), this.toEditorPos(e.selectionEnd, newLen)));\n            }\n            // If the transaction didn't flush our change, revert it so\n            // that the context is in sync with the editor state again.\n            if (this.pendingContextChange) {\n                this.revertPending(view.state);\n                this.setSelection(view.state);\n            }\n        };\n        this.handlers.characterboundsupdate = e => {\n            let rects = [], prev = null;\n            for (let i = this.toEditorPos(e.rangeStart), end = this.toEditorPos(e.rangeEnd); i < end; i++) {\n                let rect = view.coordsForChar(i);\n                prev = (rect && new DOMRect(rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top))\n                    || prev || new DOMRect;\n                rects.push(prev);\n            }\n            context.updateCharacterBounds(e.rangeStart, rects);\n        };\n        this.handlers.textformatupdate = e => {\n            let deco = [];\n            for (let format of e.getTextFormats()) {\n                let lineStyle = format.underlineStyle, thickness = format.underlineThickness;\n                if (lineStyle != \"None\" && thickness != \"None\") {\n                    let from = this.toEditorPos(format.rangeStart), to = this.toEditorPos(format.rangeEnd);\n                    if (from < to) {\n                        let style = `text-decoration: underline ${lineStyle == \"Dashed\" ? \"dashed \" : lineStyle == \"Squiggle\" ? \"wavy \" : \"\"}${thickness == \"Thin\" ? 1 : 2}px`;\n                        deco.push(Decoration.mark({ attributes: { style } }).range(from, to));\n                    }\n                }\n            }\n            view.dispatch({ effects: setEditContextFormatting.of(Decoration.set(deco)) });\n        };\n        this.handlers.compositionstart = () => {\n            if (view.inputState.composing < 0) {\n                view.inputState.composing = 0;\n                view.inputState.compositionFirstChange = true;\n            }\n        };\n        this.handlers.compositionend = () => {\n            view.inputState.composing = -1;\n            view.inputState.compositionFirstChange = null;\n            if (this.composing) {\n                let { drifted } = this.composing;\n                this.composing = null;\n                if (drifted)\n                    this.reset(view.state);\n            }\n        };\n        for (let event in this.handlers)\n            context.addEventListener(event, this.handlers[event]);\n        this.measureReq = { read: view => {\n                this.editContext.updateControlBounds(view.contentDOM.getBoundingClientRect());\n                let sel = getSelection(view.root);\n                if (sel && sel.rangeCount)\n                    this.editContext.updateSelectionBounds(sel.getRangeAt(0).getBoundingClientRect());\n            } };\n    }\n    applyEdits(update) {\n        let off = 0, abort = false, pending = this.pendingContextChange;\n        update.changes.iterChanges((fromA, toA, _fromB, _toB, insert) => {\n            if (abort)\n                return;\n            let dLen = insert.length - (toA - fromA);\n            if (pending && toA >= pending.to) {\n                if (pending.from == fromA && pending.to == toA && pending.insert.eq(insert)) {\n                    pending = this.pendingContextChange = null; // Match\n                    off += dLen;\n                    this.to += dLen;\n                    return;\n                }\n                else { // Mismatch, revert\n                    pending = null;\n                    this.revertPending(update.state);\n                }\n            }\n            fromA += off;\n            toA += off;\n            if (toA <= this.from) { // Before the window\n                this.from += dLen;\n                this.to += dLen;\n            }\n            else if (fromA < this.to) { // Overlaps with window\n                if (fromA < this.from || toA > this.to || (this.to - this.from) + insert.length > 30000 /* CxVp.MaxSize */) {\n                    abort = true;\n                    return;\n                }\n                this.editContext.updateText(this.toContextPos(fromA), this.toContextPos(toA), insert.toString());\n                this.to += dLen;\n            }\n            off += dLen;\n        });\n        if (pending && !abort)\n            this.revertPending(update.state);\n        return !abort;\n    }\n    update(update) {\n        let reverted = this.pendingContextChange, startSel = update.startState.selection.main;\n        if (this.composing &&\n            (this.composing.drifted ||\n                (!update.changes.touchesRange(startSel.from, startSel.to) &&\n                    update.transactions.some(tr => !tr.isUserEvent(\"input.type\") && tr.changes.touchesRange(this.from, this.to))))) {\n            this.composing.drifted = true;\n            this.composing.editorBase = update.changes.mapPos(this.composing.editorBase);\n        }\n        else if (!this.applyEdits(update) || !this.rangeIsValid(update.state)) {\n            this.pendingContextChange = null;\n            this.reset(update.state);\n        }\n        else if (update.docChanged || update.selectionSet || reverted) {\n            this.setSelection(update.state);\n        }\n        if (update.geometryChanged || update.docChanged || update.selectionSet)\n            update.view.requestMeasure(this.measureReq);\n    }\n    resetRange(state) {\n        let { head } = state.selection.main;\n        this.from = Math.max(0, head - 10000 /* CxVp.Margin */);\n        this.to = Math.min(state.doc.length, head + 10000 /* CxVp.Margin */);\n    }\n    reset(state) {\n        this.resetRange(state);\n        this.editContext.updateText(0, this.editContext.text.length, state.doc.sliceString(this.from, this.to));\n        this.setSelection(state);\n    }\n    revertPending(state) {\n        let pending = this.pendingContextChange;\n        this.pendingContextChange = null;\n        this.editContext.updateText(this.toContextPos(pending.from), this.toContextPos(pending.from + pending.insert.length), state.doc.sliceString(pending.from, pending.to));\n    }\n    setSelection(state) {\n        let { main } = state.selection;\n        let start = this.toContextPos(Math.max(this.from, Math.min(this.to, main.anchor)));\n        let end = this.toContextPos(main.head);\n        if (this.editContext.selectionStart != start || this.editContext.selectionEnd != end)\n            this.editContext.updateSelection(start, end);\n    }\n    rangeIsValid(state) {\n        let { head } = state.selection.main;\n        return !(this.from > 0 && head - this.from < 500 /* CxVp.MinMargin */ ||\n            this.to < state.doc.length && this.to - head < 500 /* CxVp.MinMargin */ ||\n            this.to - this.from > 10000 /* CxVp.Margin */ * 3);\n    }\n    toEditorPos(contextPos, clipLen = this.to - this.from) {\n        contextPos = Math.min(contextPos, clipLen);\n        let c = this.composing;\n        return c && c.drifted ? c.editorBase + (contextPos - c.contextBase) : contextPos + this.from;\n    }\n    toContextPos(editorPos) {\n        let c = this.composing;\n        return c && c.drifted ? c.contextBase + (editorPos - c.editorBase) : editorPos - this.from;\n    }\n    destroy() {\n        for (let event in this.handlers)\n            this.editContext.removeEventListener(event, this.handlers[event]);\n    }\n}\n\n// The editor's update state machine looks something like this:\n//\n//     Idle \u2192 Updating \u21C6 Idle (unchecked) \u2192 Measuring \u2192 Idle\n//                                         \u2191      \u2193\n//                                         Updating (measure)\n//\n// The difference between 'Idle' and 'Idle (unchecked)' lies in\n// whether a layout check has been scheduled. A regular update through\n// the `update` method updates the DOM in a write-only fashion, and\n// relies on a check (scheduled with `requestAnimationFrame`) to make\n// sure everything is where it should be and the viewport covers the\n// visible code. That check continues to measure and then optionally\n// update until it reaches a coherent state.\n/**\nAn editor view represents the editor's user interface. It holds\nthe editable DOM surface, and possibly other elements such as the\nline number gutter. It handles events and dispatches state\ntransactions for editing actions.\n*/\nclass EditorView {\n    /**\n    The current editor state.\n    */\n    get state() { return this.viewState.state; }\n    /**\n    To be able to display large documents without consuming too much\n    memory or overloading the browser, CodeMirror only draws the\n    code that is visible (plus a margin around it) to the DOM. This\n    property tells you the extent of the current drawn viewport, in\n    document positions.\n    */\n    get viewport() { return this.viewState.viewport; }\n    /**\n    When there are, for example, large collapsed ranges in the\n    viewport, its size can be a lot bigger than the actual visible\n    content. Thus, if you are doing something like styling the\n    content in the viewport, it is preferable to only do so for\n    these ranges, which are the subset of the viewport that is\n    actually drawn.\n    */\n    get visibleRanges() { return this.viewState.visibleRanges; }\n    /**\n    Returns false when the editor is entirely scrolled out of view\n    or otherwise hidden.\n    */\n    get inView() { return this.viewState.inView; }\n    /**\n    Indicates whether the user is currently composing text via\n    [IME](https://en.wikipedia.org/wiki/Input_method), and at least\n    one change has been made in the current composition.\n    */\n    get composing() { return this.inputState.composing > 0; }\n    /**\n    Indicates whether the user is currently in composing state. Note\n    that on some platforms, like Android, this will be the case a\n    lot, since just putting the cursor on a word starts a\n    composition there.\n    */\n    get compositionStarted() { return this.inputState.composing >= 0; }\n    /**\n    The document or shadow root that the view lives in.\n    */\n    get root() { return this._root; }\n    /**\n    @internal\n    */\n    get win() { return this.dom.ownerDocument.defaultView || window; }\n    /**\n    Construct a new view. You'll want to either provide a `parent`\n    option, or put `view.dom` into your document after creating a\n    view, so that the user can see the editor.\n    */\n    constructor(config = {}) {\n        var _a;\n        this.plugins = [];\n        this.pluginMap = new Map;\n        this.editorAttrs = {};\n        this.contentAttrs = {};\n        this.bidiCache = [];\n        this.destroyed = false;\n        /**\n        @internal\n        */\n        this.updateState = 2 /* UpdateState.Updating */;\n        /**\n        @internal\n        */\n        this.measureScheduled = -1;\n        /**\n        @internal\n        */\n        this.measureRequests = [];\n        this.contentDOM = document.createElement(\"div\");\n        this.scrollDOM = document.createElement(\"div\");\n        this.scrollDOM.tabIndex = -1;\n        this.scrollDOM.className = \"cm-scroller\";\n        this.scrollDOM.appendChild(this.contentDOM);\n        this.announceDOM = document.createElement(\"div\");\n        this.announceDOM.className = \"cm-announced\";\n        this.announceDOM.setAttribute(\"aria-live\", \"polite\");\n        this.dom = document.createElement(\"div\");\n        this.dom.appendChild(this.announceDOM);\n        this.dom.appendChild(this.scrollDOM);\n        if (config.parent)\n            config.parent.appendChild(this.dom);\n        let { dispatch } = config;\n        this.dispatchTransactions = config.dispatchTransactions ||\n            (dispatch && ((trs) => trs.forEach(tr => dispatch(tr, this)))) ||\n            ((trs) => this.update(trs));\n        this.dispatch = this.dispatch.bind(this);\n        this._root = (config.root || getRoot(config.parent) || document);\n        this.viewState = new ViewState(config.state || EditorState.create(config));\n        if (config.scrollTo && config.scrollTo.is(scrollIntoView))\n            this.viewState.scrollTarget = config.scrollTo.value.clip(this.viewState.state);\n        this.plugins = this.state.facet(viewPlugin).map(spec => new PluginInstance(spec));\n        for (let plugin of this.plugins)\n            plugin.update(this);\n        this.observer = new DOMObserver(this);\n        this.inputState = new InputState(this);\n        this.inputState.ensureHandlers(this.plugins);\n        this.docView = new DocView(this);\n        this.mountStyles();\n        this.updateAttrs();\n        this.updateState = 0 /* UpdateState.Idle */;\n        this.requestMeasure();\n        if ((_a = document.fonts) === null || _a === void 0 ? void 0 : _a.ready)\n            document.fonts.ready.then(() => this.requestMeasure());\n    }\n    dispatch(...input) {\n        let trs = input.length == 1 && input[0] instanceof Transaction ? input\n            : input.length == 1 && Array.isArray(input[0]) ? input[0]\n                : [this.state.update(...input)];\n        this.dispatchTransactions(trs, this);\n    }\n    /**\n    Update the view for the given array of transactions. This will\n    update the visible document and selection to match the state\n    produced by the transactions, and notify view plugins of the\n    change. You should usually call\n    [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead, which uses this\n    as a primitive.\n    */\n    update(transactions) {\n        if (this.updateState != 0 /* UpdateState.Idle */)\n            throw new Error(\"Calls to EditorView.update are not allowed while an update is in progress\");\n        let redrawn = false, attrsChanged = false, update;\n        let state = this.state;\n        for (let tr of transactions) {\n            if (tr.startState != state)\n                throw new RangeError(\"Trying to update state with a transaction that doesn't start from the previous state.\");\n            state = tr.state;\n        }\n        if (this.destroyed) {\n            this.viewState.state = state;\n            return;\n        }\n        let focus = this.hasFocus, focusFlag = 0, dispatchFocus = null;\n        if (transactions.some(tr => tr.annotation(isFocusChange))) {\n            this.inputState.notifiedFocused = focus;\n            // If a focus-change transaction is being dispatched, set this update flag.\n            focusFlag = 1 /* UpdateFlag.Focus */;\n        }\n        else if (focus != this.inputState.notifiedFocused) {\n            this.inputState.notifiedFocused = focus;\n            // Schedule a separate focus transaction if necessary, otherwise\n            // add a flag to this update\n            dispatchFocus = focusChangeTransaction(state, focus);\n            if (!dispatchFocus)\n                focusFlag = 1 /* UpdateFlag.Focus */;\n        }\n        // If there was a pending DOM change, eagerly read it and try to\n        // apply it after the given transactions.\n        let pendingKey = this.observer.delayedAndroidKey, domChange = null;\n        if (pendingKey) {\n            this.observer.clearDelayedAndroidKey();\n            domChange = this.observer.readChange();\n            // Only try to apply DOM changes if the transactions didn't\n            // change the doc or selection.\n            if (domChange && !this.state.doc.eq(state.doc) || !this.state.selection.eq(state.selection))\n                domChange = null;\n        }\n        else {\n            this.observer.clear();\n        }\n        // When the phrases change, redraw the editor\n        if (state.facet(EditorState.phrases) != this.state.facet(EditorState.phrases))\n            return this.setState(state);\n        update = ViewUpdate.create(this, state, transactions);\n        update.flags |= focusFlag;\n        let scrollTarget = this.viewState.scrollTarget;\n        try {\n            this.updateState = 2 /* UpdateState.Updating */;\n            for (let tr of transactions) {\n                if (scrollTarget)\n                    scrollTarget = scrollTarget.map(tr.changes);\n                if (tr.scrollIntoView) {\n                    let { main } = tr.state.selection;\n                    scrollTarget = new ScrollTarget(main.empty ? main : EditorSelection.cursor(main.head, main.head > main.anchor ? -1 : 1));\n                }\n                for (let e of tr.effects)\n                    if (e.is(scrollIntoView))\n                        scrollTarget = e.value.clip(this.state);\n            }\n            this.viewState.update(update, scrollTarget);\n            this.bidiCache = CachedOrder.update(this.bidiCache, update.changes);\n            if (!update.empty) {\n                this.updatePlugins(update);\n                this.inputState.update(update);\n            }\n            redrawn = this.docView.update(update);\n            if (this.state.facet(styleModule) != this.styleModules)\n                this.mountStyles();\n            attrsChanged = this.updateAttrs();\n            this.showAnnouncements(transactions);\n            this.docView.updateSelection(redrawn, transactions.some(tr => tr.isUserEvent(\"select.pointer\")));\n        }\n        finally {\n            this.updateState = 0 /* UpdateState.Idle */;\n        }\n        if (update.startState.facet(theme) != update.state.facet(theme))\n            this.viewState.mustMeasureContent = true;\n        if (redrawn || attrsChanged || scrollTarget || this.viewState.mustEnforceCursorAssoc || this.viewState.mustMeasureContent)\n            this.requestMeasure();\n        if (redrawn)\n            this.docViewUpdate();\n        if (!update.empty)\n            for (let listener of this.state.facet(updateListener)) {\n                try {\n                    listener(update);\n                }\n                catch (e) {\n                    logException(this.state, e, \"update listener\");\n                }\n            }\n        if (dispatchFocus || domChange)\n            Promise.resolve().then(() => {\n                if (dispatchFocus && this.state == dispatchFocus.startState)\n                    this.dispatch(dispatchFocus);\n                if (domChange) {\n                    if (!applyDOMChange(this, domChange) && pendingKey.force)\n                        dispatchKey(this.contentDOM, pendingKey.key, pendingKey.keyCode);\n                }\n            });\n    }\n    /**\n    Reset the view to the given state. (This will cause the entire\n    document to be redrawn and all view plugins to be reinitialized,\n    so you should probably only use it when the new state isn't\n    derived from the old state. Otherwise, use\n    [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead.)\n    */\n    setState(newState) {\n        if (this.updateState != 0 /* UpdateState.Idle */)\n            throw new Error(\"Calls to EditorView.setState are not allowed while an update is in progress\");\n        if (this.destroyed) {\n            this.viewState.state = newState;\n            return;\n        }\n        this.updateState = 2 /* UpdateState.Updating */;\n        let hadFocus = this.hasFocus;\n        try {\n            for (let plugin of this.plugins)\n                plugin.destroy(this);\n            this.viewState = new ViewState(newState);\n            this.plugins = newState.facet(viewPlugin).map(spec => new PluginInstance(spec));\n            this.pluginMap.clear();\n            for (let plugin of this.plugins)\n                plugin.update(this);\n            this.docView.destroy();\n            this.docView = new DocView(this);\n            this.inputState.ensureHandlers(this.plugins);\n            this.mountStyles();\n            this.updateAttrs();\n            this.bidiCache = [];\n        }\n        finally {\n            this.updateState = 0 /* UpdateState.Idle */;\n        }\n        if (hadFocus)\n            this.focus();\n        this.requestMeasure();\n    }\n    updatePlugins(update) {\n        let prevSpecs = update.startState.facet(viewPlugin), specs = update.state.facet(viewPlugin);\n        if (prevSpecs != specs) {\n            let newPlugins = [];\n            for (let spec of specs) {\n                let found = prevSpecs.indexOf(spec);\n                if (found < 0) {\n                    newPlugins.push(new PluginInstance(spec));\n                }\n                else {\n                    let plugin = this.plugins[found];\n                    plugin.mustUpdate = update;\n                    newPlugins.push(plugin);\n                }\n            }\n            for (let plugin of this.plugins)\n                if (plugin.mustUpdate != update)\n                    plugin.destroy(this);\n            this.plugins = newPlugins;\n            this.pluginMap.clear();\n        }\n        else {\n            for (let p of this.plugins)\n                p.mustUpdate = update;\n        }\n        for (let i = 0; i < this.plugins.length; i++)\n            this.plugins[i].update(this);\n        if (prevSpecs != specs)\n            this.inputState.ensureHandlers(this.plugins);\n    }\n    docViewUpdate() {\n        for (let plugin of this.plugins) {\n            let val = plugin.value;\n            if (val && val.docViewUpdate) {\n                try {\n                    val.docViewUpdate(this);\n                }\n                catch (e) {\n                    logException(this.state, e, \"doc view update listener\");\n                }\n            }\n        }\n    }\n    /**\n    @internal\n    */\n    measure(flush = true) {\n        if (this.destroyed)\n            return;\n        if (this.measureScheduled > -1)\n            this.win.cancelAnimationFrame(this.measureScheduled);\n        if (this.observer.delayedAndroidKey) {\n            this.measureScheduled = -1;\n            this.requestMeasure();\n            return;\n        }\n        this.measureScheduled = 0; // Prevent requestMeasure calls from scheduling another animation frame\n        if (flush)\n            this.observer.forceFlush();\n        let updated = null;\n        let sDOM = this.scrollDOM, scrollTop = sDOM.scrollTop * this.scaleY;\n        let { scrollAnchorPos, scrollAnchorHeight } = this.viewState;\n        if (Math.abs(scrollTop - this.viewState.scrollTop) > 1)\n            scrollAnchorHeight = -1;\n        this.viewState.scrollAnchorHeight = -1;\n        try {\n            for (let i = 0;; i++) {\n                if (scrollAnchorHeight < 0) {\n                    if (isScrolledToBottom(sDOM)) {\n                        scrollAnchorPos = -1;\n                        scrollAnchorHeight = this.viewState.heightMap.height;\n                    }\n                    else {\n                        let block = this.viewState.scrollAnchorAt(scrollTop);\n                        scrollAnchorPos = block.from;\n                        scrollAnchorHeight = block.top;\n                    }\n                }\n                this.updateState = 1 /* UpdateState.Measuring */;\n                let changed = this.viewState.measure(this);\n                if (!changed && !this.measureRequests.length && this.viewState.scrollTarget == null)\n                    break;\n                if (i > 5) {\n                    console.warn(this.measureRequests.length\n                        ? \"Measure loop restarted more than 5 times\"\n                        : \"Viewport failed to stabilize\");\n                    break;\n                }\n                let measuring = [];\n                // Only run measure requests in this cycle when the viewport didn't change\n                if (!(changed & 4 /* UpdateFlag.Viewport */))\n                    [this.measureRequests, measuring] = [measuring, this.measureRequests];\n                let measured = measuring.map(m => {\n                    try {\n                        return m.read(this);\n                    }\n                    catch (e) {\n                        logException(this.state, e);\n                        return BadMeasure;\n                    }\n                });\n                let update = ViewUpdate.create(this, this.state, []), redrawn = false;\n                update.flags |= changed;\n                if (!updated)\n                    updated = update;\n                else\n                    updated.flags |= changed;\n                this.updateState = 2 /* UpdateState.Updating */;\n                if (!update.empty) {\n                    this.updatePlugins(update);\n                    this.inputState.update(update);\n                    this.updateAttrs();\n                    redrawn = this.docView.update(update);\n                    if (redrawn)\n                        this.docViewUpdate();\n                }\n                for (let i = 0; i < measuring.length; i++)\n                    if (measured[i] != BadMeasure) {\n                        try {\n                            let m = measuring[i];\n                            if (m.write)\n                                m.write(measured[i], this);\n                        }\n                        catch (e) {\n                            logException(this.state, e);\n                        }\n                    }\n                if (redrawn)\n                    this.docView.updateSelection(true);\n                if (!update.viewportChanged && this.measureRequests.length == 0) {\n                    if (this.viewState.editorHeight) {\n                        if (this.viewState.scrollTarget) {\n                            this.docView.scrollIntoView(this.viewState.scrollTarget);\n                            this.viewState.scrollTarget = null;\n                            scrollAnchorHeight = -1;\n                            continue;\n                        }\n                        else {\n                            let newAnchorHeight = scrollAnchorPos < 0 ? this.viewState.heightMap.height :\n                                this.viewState.lineBlockAt(scrollAnchorPos).top;\n                            let diff = newAnchorHeight - scrollAnchorHeight;\n                            if (diff > 1 || diff < -1) {\n                                scrollTop = scrollTop + diff;\n                                sDOM.scrollTop = scrollTop / this.scaleY;\n                                scrollAnchorHeight = -1;\n                                continue;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n        finally {\n            this.updateState = 0 /* UpdateState.Idle */;\n            this.measureScheduled = -1;\n        }\n        if (updated && !updated.empty)\n            for (let listener of this.state.facet(updateListener))\n                listener(updated);\n    }\n    /**\n    Get the CSS classes for the currently active editor themes.\n    */\n    get themeClasses() {\n        return baseThemeID + \" \" +\n            (this.state.facet(darkTheme) ? baseDarkID : baseLightID) + \" \" +\n            this.state.facet(theme);\n    }\n    updateAttrs() {\n        let editorAttrs = attrsFromFacet(this, editorAttributes, {\n            class: \"cm-editor\" + (this.hasFocus ? \" cm-focused \" : \" \") + this.themeClasses\n        });\n        let contentAttrs = {\n            spellcheck: \"false\",\n            autocorrect: \"off\",\n            autocapitalize: \"off\",\n            writingsuggestions: \"false\",\n            translate: \"no\",\n            contenteditable: !this.state.facet(editable) ? \"false\" : \"true\",\n            class: \"cm-content\",\n            style: `${browser.tabSize}: ${this.state.tabSize}`,\n            role: \"textbox\",\n            \"aria-multiline\": \"true\"\n        };\n        if (this.state.readOnly)\n            contentAttrs[\"aria-readonly\"] = \"true\";\n        attrsFromFacet(this, contentAttributes, contentAttrs);\n        let changed = this.observer.ignore(() => {\n            let changedContent = updateAttrs(this.contentDOM, this.contentAttrs, contentAttrs);\n            let changedEditor = updateAttrs(this.dom, this.editorAttrs, editorAttrs);\n            return changedContent || changedEditor;\n        });\n        this.editorAttrs = editorAttrs;\n        this.contentAttrs = contentAttrs;\n        return changed;\n    }\n    showAnnouncements(trs) {\n        let first = true;\n        for (let tr of trs)\n            for (let effect of tr.effects)\n                if (effect.is(EditorView.announce)) {\n                    if (first)\n                        this.announceDOM.textContent = \"\";\n                    first = false;\n                    let div = this.announceDOM.appendChild(document.createElement(\"div\"));\n                    div.textContent = effect.value;\n                }\n    }\n    mountStyles() {\n        this.styleModules = this.state.facet(styleModule);\n        let nonce = this.state.facet(EditorView.cspNonce);\n        StyleModule.mount(this.root, this.styleModules.concat(baseTheme$1).reverse(), nonce ? { nonce } : undefined);\n    }\n    readMeasured() {\n        if (this.updateState == 2 /* UpdateState.Updating */)\n            throw new Error(\"Reading the editor layout isn't allowed during an update\");\n        if (this.updateState == 0 /* UpdateState.Idle */ && this.measureScheduled > -1)\n            this.measure(false);\n    }\n    /**\n    Schedule a layout measurement, optionally providing callbacks to\n    do custom DOM measuring followed by a DOM write phase. Using\n    this is preferable reading DOM layout directly from, for\n    example, an event handler, because it'll make sure measuring and\n    drawing done by other components is synchronized, avoiding\n    unnecessary DOM layout computations.\n    */\n    requestMeasure(request) {\n        if (this.measureScheduled < 0)\n            this.measureScheduled = this.win.requestAnimationFrame(() => this.measure());\n        if (request) {\n            if (this.measureRequests.indexOf(request) > -1)\n                return;\n            if (request.key != null)\n                for (let i = 0; i < this.measureRequests.length; i++) {\n                    if (this.measureRequests[i].key === request.key) {\n                        this.measureRequests[i] = request;\n                        return;\n                    }\n                }\n            this.measureRequests.push(request);\n        }\n    }\n    /**\n    Get the value of a specific plugin, if present. Note that\n    plugins that crash can be dropped from a view, so even when you\n    know you registered a given plugin, it is recommended to check\n    the return value of this method.\n    */\n    plugin(plugin) {\n        let known = this.pluginMap.get(plugin);\n        if (known === undefined || known && known.spec != plugin)\n            this.pluginMap.set(plugin, known = this.plugins.find(p => p.spec == plugin) || null);\n        return known && known.update(this).value;\n    }\n    /**\n    The top position of the document, in screen coordinates. This\n    may be negative when the editor is scrolled down. Points\n    directly to the top of the first line, not above the padding.\n    */\n    get documentTop() {\n        return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;\n    }\n    /**\n    Reports the padding above and below the document.\n    */\n    get documentPadding() {\n        return { top: this.viewState.paddingTop, bottom: this.viewState.paddingBottom };\n    }\n    /**\n    If the editor is transformed with CSS, this provides the scale\n    along the X axis. Otherwise, it will just be 1. Note that\n    transforms other than translation and scaling are not supported.\n    */\n    get scaleX() { return this.viewState.scaleX; }\n    /**\n    Provide the CSS transformed scale along the Y axis.\n    */\n    get scaleY() { return this.viewState.scaleY; }\n    /**\n    Find the text line or block widget at the given vertical\n    position (which is interpreted as relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop)).\n    */\n    elementAtHeight(height) {\n        this.readMeasured();\n        return this.viewState.elementAtHeight(height);\n    }\n    /**\n    Find the line block (see\n    [`lineBlockAt`](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) at the given\n    height, again interpreted relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop).\n    */\n    lineBlockAtHeight(height) {\n        this.readMeasured();\n        return this.viewState.lineBlockAtHeight(height);\n    }\n    /**\n    Get the extent and vertical position of all [line\n    blocks](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) in the viewport. Positions\n    are relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop);\n    */\n    get viewportLineBlocks() {\n        return this.viewState.viewportLines;\n    }\n    /**\n    Find the line block around the given document position. A line\n    block is a range delimited on both sides by either a\n    non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^replace) line break, or the\n    start/end of the document. It will usually just hold a line of\n    text, but may be broken into multiple textblocks by block\n    widgets.\n    */\n    lineBlockAt(pos) {\n        return this.viewState.lineBlockAt(pos);\n    }\n    /**\n    The editor's total content height.\n    */\n    get contentHeight() {\n        return this.viewState.contentHeight;\n    }\n    /**\n    Move a cursor position by [grapheme\n    cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak). `forward` determines whether\n    the motion is away from the line start, or towards it. In\n    bidirectional text, the line is traversed in visual order, using\n    the editor's [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).\n    When the start position was the last one on the line, the\n    returned position will be across the line break. If there is no\n    further line, the original position is returned.\n    \n    By default, this method moves over a single cluster. The\n    optional `by` argument can be used to move across more. It will\n    be called with the first cluster as argument, and should return\n    a predicate that determines, for each subsequent cluster,\n    whether it should also be moved over.\n    */\n    moveByChar(start, forward, by) {\n        return skipAtoms(this, start, moveByChar(this, start, forward, by));\n    }\n    /**\n    Move a cursor position across the next group of either\n    [letters](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) or non-letter\n    non-whitespace characters.\n    */\n    moveByGroup(start, forward) {\n        return skipAtoms(this, start, moveByChar(this, start, forward, initial => byGroup(this, start.head, initial)));\n    }\n    /**\n    Get the cursor position visually at the start or end of a line.\n    Note that this may differ from the _logical_ position at its\n    start or end (which is simply at `line.from`/`line.to`) if text\n    at the start or end goes against the line's base text direction.\n    */\n    visualLineSide(line, end) {\n        let order = this.bidiSpans(line), dir = this.textDirectionAt(line.from);\n        let span = order[end ? order.length - 1 : 0];\n        return EditorSelection.cursor(span.side(end, dir) + line.from, span.forward(!end, dir) ? 1 : -1);\n    }\n    /**\n    Move to the next line boundary in the given direction. If\n    `includeWrap` is true, line wrapping is on, and there is a\n    further wrap point on the current line, the wrap point will be\n    returned. Otherwise this function will return the start or end\n    of the line.\n    */\n    moveToLineBoundary(start, forward, includeWrap = true) {\n        return moveToLineBoundary(this, start, forward, includeWrap);\n    }\n    /**\n    Move a cursor position vertically. When `distance` isn't given,\n    it defaults to moving to the next line (including wrapped\n    lines). Otherwise, `distance` should provide a positive distance\n    in pixels.\n    \n    When `start` has a\n    [`goalColumn`](https://codemirror.net/6/docs/ref/#state.SelectionRange.goalColumn), the vertical\n    motion will use that as a target horizontal position. Otherwise,\n    the cursor's own horizontal position is used. The returned\n    cursor will have its goal column set to whichever column was\n    used.\n    */\n    moveVertically(start, forward, distance) {\n        return skipAtoms(this, start, moveVertically(this, start, forward, distance));\n    }\n    /**\n    Find the DOM parent node and offset (child offset if `node` is\n    an element, character offset when it is a text node) at the\n    given document position.\n    \n    Note that for positions that aren't currently in\n    `visibleRanges`, the resulting DOM position isn't necessarily\n    meaningful (it may just point before or after a placeholder\n    element).\n    */\n    domAtPos(pos) {\n        return this.docView.domAtPos(pos);\n    }\n    /**\n    Find the document position at the given DOM node. Can be useful\n    for associating positions with DOM events. Will raise an error\n    when `node` isn't part of the editor content.\n    */\n    posAtDOM(node, offset = 0) {\n        return this.docView.posFromDOM(node, offset);\n    }\n    posAtCoords(coords, precise = true) {\n        this.readMeasured();\n        return posAtCoords(this, coords, precise);\n    }\n    /**\n    Get the screen coordinates at the given document position.\n    `side` determines whether the coordinates are based on the\n    element before (-1) or after (1) the position (if no element is\n    available on the given side, the method will transparently use\n    another strategy to get reasonable coordinates).\n    */\n    coordsAtPos(pos, side = 1) {\n        this.readMeasured();\n        let rect = this.docView.coordsAt(pos, side);\n        if (!rect || rect.left == rect.right)\n            return rect;\n        let line = this.state.doc.lineAt(pos), order = this.bidiSpans(line);\n        let span = order[BidiSpan.find(order, pos - line.from, -1, side)];\n        return flattenRect(rect, (span.dir == Direction.LTR) == (side > 0));\n    }\n    /**\n    Return the rectangle around a given character. If `pos` does not\n    point in front of a character that is in the viewport and\n    rendered (i.e. not replaced, not a line break), this will return\n    null. For space characters that are a line wrap point, this will\n    return the position before the line break.\n    */\n    coordsForChar(pos) {\n        this.readMeasured();\n        return this.docView.coordsForChar(pos);\n    }\n    /**\n    The default width of a character in the editor. May not\n    accurately reflect the width of all characters (given variable\n    width fonts or styling of invididual ranges).\n    */\n    get defaultCharacterWidth() { return this.viewState.heightOracle.charWidth; }\n    /**\n    The default height of a line in the editor. May not be accurate\n    for all lines.\n    */\n    get defaultLineHeight() { return this.viewState.heightOracle.lineHeight; }\n    /**\n    The text direction\n    ([`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction)\n    CSS property) of the editor's content element.\n    */\n    get textDirection() { return this.viewState.defaultTextDirection; }\n    /**\n    Find the text direction of the block at the given position, as\n    assigned by CSS. If\n    [`perLineTextDirection`](https://codemirror.net/6/docs/ref/#view.EditorView^perLineTextDirection)\n    isn't enabled, or the given position is outside of the viewport,\n    this will always return the same as\n    [`textDirection`](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection). Note that\n    this may trigger a DOM layout.\n    */\n    textDirectionAt(pos) {\n        let perLine = this.state.facet(perLineTextDirection);\n        if (!perLine || pos < this.viewport.from || pos > this.viewport.to)\n            return this.textDirection;\n        this.readMeasured();\n        return this.docView.textDirectionAt(pos);\n    }\n    /**\n    Whether this editor [wraps lines](https://codemirror.net/6/docs/ref/#view.EditorView.lineWrapping)\n    (as determined by the\n    [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)\n    CSS property of its content element).\n    */\n    get lineWrapping() { return this.viewState.heightOracle.lineWrapping; }\n    /**\n    Returns the bidirectional text structure of the given line\n    (which should be in the current document) as an array of span\n    objects. The order of these spans matches the [text\n    direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection)\u2014if that is\n    left-to-right, the leftmost spans come first, otherwise the\n    rightmost spans come first.\n    */\n    bidiSpans(line) {\n        if (line.length > MaxBidiLine)\n            return trivialOrder(line.length);\n        let dir = this.textDirectionAt(line.from), isolates;\n        for (let entry of this.bidiCache) {\n            if (entry.from == line.from && entry.dir == dir &&\n                (entry.fresh || isolatesEq(entry.isolates, isolates = getIsolatedRanges(this, line))))\n                return entry.order;\n        }\n        if (!isolates)\n            isolates = getIsolatedRanges(this, line);\n        let order = computeOrder(line.text, dir, isolates);\n        this.bidiCache.push(new CachedOrder(line.from, line.to, dir, isolates, true, order));\n        return order;\n    }\n    /**\n    Check whether the editor has focus.\n    */\n    get hasFocus() {\n        var _a;\n        // Safari return false for hasFocus when the context menu is open\n        // or closing, which leads us to ignore selection changes from the\n        // context menu because it looks like the editor isn't focused.\n        // This kludges around that.\n        return (this.dom.ownerDocument.hasFocus() || browser.safari && ((_a = this.inputState) === null || _a === void 0 ? void 0 : _a.lastContextMenu) > Date.now() - 3e4) &&\n            this.root.activeElement == this.contentDOM;\n    }\n    /**\n    Put focus on the editor.\n    */\n    focus() {\n        this.observer.ignore(() => {\n            focusPreventScroll(this.contentDOM);\n            this.docView.updateSelection();\n        });\n    }\n    /**\n    Update the [root](https://codemirror.net/6/docs/ref/##view.EditorViewConfig.root) in which the editor lives. This is only\n    necessary when moving the editor's existing DOM to a new window or shadow root.\n    */\n    setRoot(root) {\n        if (this._root != root) {\n            this._root = root;\n            this.observer.setWindow((root.nodeType == 9 ? root : root.ownerDocument).defaultView || window);\n            this.mountStyles();\n        }\n    }\n    /**\n    Clean up this editor view, removing its element from the\n    document, unregistering event handlers, and notifying\n    plugins. The view instance can no longer be used after\n    calling this.\n    */\n    destroy() {\n        if (this.root.activeElement == this.contentDOM)\n            this.contentDOM.blur();\n        for (let plugin of this.plugins)\n            plugin.destroy(this);\n        this.plugins = [];\n        this.inputState.destroy();\n        this.docView.destroy();\n        this.dom.remove();\n        this.observer.destroy();\n        if (this.measureScheduled > -1)\n            this.win.cancelAnimationFrame(this.measureScheduled);\n        this.destroyed = true;\n    }\n    /**\n    Returns an effect that can be\n    [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a transaction to\n    cause it to scroll the given position or range into view.\n    */\n    static scrollIntoView(pos, options = {}) {\n        return scrollIntoView.of(new ScrollTarget(typeof pos == \"number\" ? EditorSelection.cursor(pos) : pos, options.y, options.x, options.yMargin, options.xMargin));\n    }\n    /**\n    Return an effect that resets the editor to its current (at the\n    time this method was called) scroll position. Note that this\n    only affects the editor's own scrollable element, not parents.\n    See also\n    [`EditorViewConfig.scrollTo`](https://codemirror.net/6/docs/ref/#view.EditorViewConfig.scrollTo).\n    \n    The effect should be used with a document identical to the one\n    it was created for. Failing to do so is not an error, but may\n    not scroll to the expected position. You can\n    [map](https://codemirror.net/6/docs/ref/#state.StateEffect.map) the effect to account for changes.\n    */\n    scrollSnapshot() {\n        let { scrollTop, scrollLeft } = this.scrollDOM;\n        let ref = this.viewState.scrollAnchorAt(scrollTop);\n        return scrollIntoView.of(new ScrollTarget(EditorSelection.cursor(ref.from), \"start\", \"start\", ref.top - scrollTop, scrollLeft, true));\n    }\n    /**\n    Enable or disable tab-focus mode, which disables key bindings\n    for Tab and Shift-Tab, letting the browser's default\n    focus-changing behavior go through instead. This is useful to\n    prevent trapping keyboard users in your editor.\n    \n    Without argument, this toggles the mode. With a boolean, it\n    enables (true) or disables it (false). Given a number, it\n    temporarily enables the mode until that number of milliseconds\n    have passed or another non-Tab key is pressed.\n    */\n    setTabFocusMode(to) {\n        if (to == null)\n            this.inputState.tabFocusMode = this.inputState.tabFocusMode < 0 ? 0 : -1;\n        else if (typeof to == \"boolean\")\n            this.inputState.tabFocusMode = to ? 0 : -1;\n        else if (this.inputState.tabFocusMode != 0)\n            this.inputState.tabFocusMode = Date.now() + to;\n    }\n    /**\n    Returns an extension that can be used to add DOM event handlers.\n    The value should be an object mapping event names to handler\n    functions. For any given event, such functions are ordered by\n    extension precedence, and the first handler to return true will\n    be assumed to have handled that event, and no other handlers or\n    built-in behavior will be activated for it. These are registered\n    on the [content element](https://codemirror.net/6/docs/ref/#view.EditorView.contentDOM), except\n    for `scroll` handlers, which will be called any time the\n    editor's [scroll element](https://codemirror.net/6/docs/ref/#view.EditorView.scrollDOM) or one of\n    its parent nodes is scrolled.\n    */\n    static domEventHandlers(handlers) {\n        return ViewPlugin.define(() => ({}), { eventHandlers: handlers });\n    }\n    /**\n    Create an extension that registers DOM event observers. Contrary\n    to event [handlers](https://codemirror.net/6/docs/ref/#view.EditorView^domEventHandlers),\n    observers can't be prevented from running by a higher-precedence\n    handler returning true. They also don't prevent other handlers\n    and observers from running when they return true, and should not\n    call `preventDefault`.\n    */\n    static domEventObservers(observers) {\n        return ViewPlugin.define(() => ({}), { eventObservers: observers });\n    }\n    /**\n    Create a theme extension. The first argument can be a\n    [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n    style spec providing the styles for the theme. These will be\n    prefixed with a generated class for the style.\n    \n    Because the selectors will be prefixed with a scope class, rule\n    that directly match the editor's [wrapper\n    element](https://codemirror.net/6/docs/ref/#view.EditorView.dom)\u2014to which the scope class will be\n    added\u2014need to be explicitly differentiated by adding an `&` to\n    the selector for that element\u2014for example\n    `&.cm-focused`.\n    \n    When `dark` is set to true, the theme will be marked as dark,\n    which will cause the `&dark` rules from [base\n    themes](https://codemirror.net/6/docs/ref/#view.EditorView^baseTheme) to be used (as opposed to\n    `&light` when a light theme is active).\n    */\n    static theme(spec, options) {\n        let prefix = StyleModule.newName();\n        let result = [theme.of(prefix), styleModule.of(buildTheme(`.${prefix}`, spec))];\n        if (options && options.dark)\n            result.push(darkTheme.of(true));\n        return result;\n    }\n    /**\n    Create an extension that adds styles to the base theme. Like\n    with [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme), use `&` to indicate the\n    place of the editor wrapper element when directly targeting\n    that. You can also use `&dark` or `&light` instead to only\n    target editors with a dark or light theme.\n    */\n    static baseTheme(spec) {\n        return Prec.lowest(styleModule.of(buildTheme(\".\" + baseThemeID, spec, lightDarkIDs)));\n    }\n    /**\n    Retrieve an editor view instance from the view's DOM\n    representation.\n    */\n    static findFromDOM(dom) {\n        var _a;\n        let content = dom.querySelector(\".cm-content\");\n        let cView = content && ContentView.get(content) || ContentView.get(dom);\n        return ((_a = cView === null || cView === void 0 ? void 0 : cView.rootView) === null || _a === void 0 ? void 0 : _a.view) || null;\n    }\n}\n/**\nFacet to add a [style\nmodule](https://github.com/marijnh/style-mod#documentation) to\nan editor view. The view will ensure that the module is\nmounted in its [document\nroot](https://codemirror.net/6/docs/ref/#view.EditorView.constructor^config.root).\n*/\nEditorView.styleModule = styleModule;\n/**\nAn input handler can override the way changes to the editable\nDOM content are handled. Handlers are passed the document\npositions between which the change was found, and the new\ncontent. When one returns true, no further input handlers are\ncalled and the default behavior is prevented.\n\nThe `insert` argument can be used to get the default transaction\nthat would be applied for this input. This can be useful when\ndispatching the custom behavior as a separate transaction.\n*/\nEditorView.inputHandler = inputHandler;\n/**\nFunctions provided in this facet will be used to transform text\npasted or dropped into the editor.\n*/\nEditorView.clipboardInputFilter = clipboardInputFilter;\n/**\nTransform text copied or dragged from the editor.\n*/\nEditorView.clipboardOutputFilter = clipboardOutputFilter;\n/**\nScroll handlers can override how things are scrolled into view.\nIf they return `true`, no further handling happens for the\nscrolling. If they return false, the default scroll behavior is\napplied. Scroll handlers should never initiate editor updates.\n*/\nEditorView.scrollHandler = scrollHandler;\n/**\nThis facet can be used to provide functions that create effects\nto be dispatched when the editor's focus state changes.\n*/\nEditorView.focusChangeEffect = focusChangeEffect;\n/**\nBy default, the editor assumes all its content has the same\n[text direction](https://codemirror.net/6/docs/ref/#view.Direction). Configure this with a `true`\nvalue to make it read the text direction of every (rendered)\nline separately.\n*/\nEditorView.perLineTextDirection = perLineTextDirection;\n/**\nAllows you to provide a function that should be called when the\nlibrary catches an exception from an extension (mostly from view\nplugins, but may be used by other extensions to route exceptions\nfrom user-code-provided callbacks). This is mostly useful for\ndebugging and logging. See [`logException`](https://codemirror.net/6/docs/ref/#view.logException).\n*/\nEditorView.exceptionSink = exceptionSink;\n/**\nA facet that can be used to register a function to be called\nevery time the view updates.\n*/\nEditorView.updateListener = updateListener;\n/**\nFacet that controls whether the editor content DOM is editable.\nWhen its highest-precedence value is `false`, the element will\nnot have its `contenteditable` attribute set. (Note that this\ndoesn't affect API calls that change the editor content, even\nwhen those are bound to keys or buttons. See the\n[`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) facet for that.)\n*/\nEditorView.editable = editable;\n/**\nAllows you to influence the way mouse selection happens. The\nfunctions in this facet will be called for a `mousedown` event\non the editor, and can return an object that overrides the way a\nselection is computed from that mouse click or drag.\n*/\nEditorView.mouseSelectionStyle = mouseSelectionStyle;\n/**\nFacet used to configure whether a given selection drag event\nshould move or copy the selection. The given predicate will be\ncalled with the `mousedown` event, and can return `true` when\nthe drag should move the content.\n*/\nEditorView.dragMovesSelection = dragMovesSelection$1;\n/**\nFacet used to configure whether a given selecting click adds a\nnew range to the existing selection or replaces it entirely. The\ndefault behavior is to check `event.metaKey` on macOS, and\n`event.ctrlKey` elsewhere.\n*/\nEditorView.clickAddsSelectionRange = clickAddsSelectionRange;\n/**\nA facet that determines which [decorations](https://codemirror.net/6/docs/ref/#view.Decoration)\nare shown in the view. Decorations can be provided in two\nways\u2014directly, or via a function that takes an editor view.\n\nOnly decoration sets provided directly are allowed to influence\nthe editor's vertical layout structure. The ones provided as\nfunctions are called _after_ the new viewport has been computed,\nand thus **must not** introduce block widgets or replacing\ndecorations that cover line breaks.\n\nIf you want decorated ranges to behave like atomic units for\ncursor motion and deletion purposes, also provide the range set\ncontaining the decorations to\n[`EditorView.atomicRanges`](https://codemirror.net/6/docs/ref/#view.EditorView^atomicRanges).\n*/\nEditorView.decorations = decorations;\n/**\nFacet that works much like\n[`decorations`](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), but puts its\ninputs at the very bottom of the precedence stack, meaning mark\ndecorations provided here will only be split by other, partially\noverlapping \\`outerDecorations\\` ranges, and wrap around all\nregular decorations. Use this for mark elements that should, as\nmuch as possible, remain in one piece.\n*/\nEditorView.outerDecorations = outerDecorations;\n/**\nUsed to provide ranges that should be treated as atoms as far as\ncursor motion is concerned. This causes methods like\n[`moveByChar`](https://codemirror.net/6/docs/ref/#view.EditorView.moveByChar) and\n[`moveVertically`](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) (and the\ncommands built on top of them) to skip across such regions when\na selection endpoint would enter them. This does _not_ prevent\ndirect programmatic [selection\nupdates](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) from moving into such\nregions.\n*/\nEditorView.atomicRanges = atomicRanges;\n/**\nWhen range decorations add a `unicode-bidi: isolate` style, they\nshould also include a\n[`bidiIsolate`](https://codemirror.net/6/docs/ref/#view.MarkDecorationSpec.bidiIsolate) property\nin their decoration spec, and be exposed through this facet, so\nthat the editor can compute the proper text order. (Other values\nfor `unicode-bidi`, except of course `normal`, are not\nsupported.)\n*/\nEditorView.bidiIsolatedRanges = bidiIsolatedRanges;\n/**\nFacet that allows extensions to provide additional scroll\nmargins (space around the sides of the scrolling element that\nshould be considered invisible). This can be useful when the\nplugin introduces elements that cover part of that element (for\nexample a horizontally fixed gutter).\n*/\nEditorView.scrollMargins = scrollMargins;\n/**\nThis facet records whether a dark theme is active. The extension\nreturned by [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme) automatically\nincludes an instance of this when the `dark` option is set to\ntrue.\n*/\nEditorView.darkTheme = darkTheme;\n/**\nProvides a Content Security Policy nonce to use when creating\nthe style sheets for the editor. Holds the empty string when no\nnonce has been provided.\n*/\nEditorView.cspNonce = /*@__PURE__*/Facet.define({ combine: values => values.length ? values[0] : \"\" });\n/**\nFacet that provides additional DOM attributes for the editor's\neditable DOM element.\n*/\nEditorView.contentAttributes = contentAttributes;\n/**\nFacet that provides DOM attributes for the editor's outer\nelement.\n*/\nEditorView.editorAttributes = editorAttributes;\n/**\nAn extension that enables line wrapping in the editor (by\nsetting CSS `white-space` to `pre-wrap` in the content).\n*/\nEditorView.lineWrapping = /*@__PURE__*/EditorView.contentAttributes.of({ \"class\": \"cm-lineWrapping\" });\n/**\nState effect used to include screen reader announcements in a\ntransaction. These will be added to the DOM in a visually hidden\nelement with `aria-live=\"polite\"` set, and should be used to\ndescribe effects that are visually obvious but may not be\nnoticed by screen reader users (such as moving to the next\nsearch match).\n*/\nEditorView.announce = /*@__PURE__*/StateEffect.define();\n// Maximum line length for which we compute accurate bidi info\nconst MaxBidiLine = 4096;\nconst BadMeasure = {};\nclass CachedOrder {\n    constructor(from, to, dir, isolates, fresh, order) {\n        this.from = from;\n        this.to = to;\n        this.dir = dir;\n        this.isolates = isolates;\n        this.fresh = fresh;\n        this.order = order;\n    }\n    static update(cache, changes) {\n        if (changes.empty && !cache.some(c => c.fresh))\n            return cache;\n        let result = [], lastDir = cache.length ? cache[cache.length - 1].dir : Direction.LTR;\n        for (let i = Math.max(0, cache.length - 10); i < cache.length; i++) {\n            let entry = cache[i];\n            if (entry.dir == lastDir && !changes.touchesRange(entry.from, entry.to))\n                result.push(new CachedOrder(changes.mapPos(entry.from, 1), changes.mapPos(entry.to, -1), entry.dir, entry.isolates, false, entry.order));\n        }\n        return result;\n    }\n}\nfunction attrsFromFacet(view, facet, base) {\n    for (let sources = view.state.facet(facet), i = sources.length - 1; i >= 0; i--) {\n        let source = sources[i], value = typeof source == \"function\" ? source(view) : source;\n        if (value)\n            combineAttrs(value, base);\n    }\n    return base;\n}\n\nconst currentPlatform = browser.mac ? \"mac\" : browser.windows ? \"win\" : browser.linux ? \"linux\" : \"key\";\nfunction normalizeKeyName(name, platform) {\n    const parts = name.split(/-(?!$)/);\n    let result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; ++i) {\n        const mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (platform == \"mac\")\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction modifiers(name, event, shift) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift !== false && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\nconst handleKeyEvents = /*@__PURE__*/Prec.default(/*@__PURE__*/EditorView.domEventHandlers({\n    keydown(event, view) {\n        return runHandlers(getKeymap(view.state), event, view, \"editor\");\n    }\n}));\n/**\nFacet used for registering keymaps.\n\nYou can add multiple keymaps to an editor. Their priorities\ndetermine their precedence (the ones specified early or with high\npriority get checked first). When a handler has returned `true`\nfor a given key, no further handlers are called.\n*/\nconst keymap = /*@__PURE__*/Facet.define({ enables: handleKeyEvents });\nconst Keymaps = /*@__PURE__*/new WeakMap();\n// This is hidden behind an indirection, rather than directly computed\n// by the facet, to keep internal types out of the facet's type.\nfunction getKeymap(state) {\n    let bindings = state.facet(keymap);\n    let map = Keymaps.get(bindings);\n    if (!map)\n        Keymaps.set(bindings, map = buildKeymap(bindings.reduce((a, b) => a.concat(b), [])));\n    return map;\n}\n/**\nRun the key handlers registered for a given scope. The event\nobject should be a `\"keydown\"` event. Returns true if any of the\nhandlers handled it.\n*/\nfunction runScopeHandlers(view, event, scope) {\n    return runHandlers(getKeymap(view.state), event, view, scope);\n}\nlet storedPrefix = null;\nconst PrefixTimeout = 4000;\nfunction buildKeymap(bindings, platform = currentPlatform) {\n    let bound = Object.create(null);\n    let isPrefix = Object.create(null);\n    let checkPrefix = (name, is) => {\n        let current = isPrefix[name];\n        if (current == null)\n            isPrefix[name] = is;\n        else if (current != is)\n            throw new Error(\"Key binding \" + name + \" is used both as a regular binding and as a multi-stroke prefix\");\n    };\n    let add = (scope, key, command, preventDefault, stopPropagation) => {\n        var _a, _b;\n        let scopeObj = bound[scope] || (bound[scope] = Object.create(null));\n        let parts = key.split(/ (?!$)/).map(k => normalizeKeyName(k, platform));\n        for (let i = 1; i < parts.length; i++) {\n            let prefix = parts.slice(0, i).join(\" \");\n            checkPrefix(prefix, true);\n            if (!scopeObj[prefix])\n                scopeObj[prefix] = {\n                    preventDefault: true,\n                    stopPropagation: false,\n                    run: [(view) => {\n                            let ourObj = storedPrefix = { view, prefix, scope };\n                            setTimeout(() => { if (storedPrefix == ourObj)\n                                storedPrefix = null; }, PrefixTimeout);\n                            return true;\n                        }]\n                };\n        }\n        let full = parts.join(\" \");\n        checkPrefix(full, false);\n        let binding = scopeObj[full] || (scopeObj[full] = {\n            preventDefault: false,\n            stopPropagation: false,\n            run: ((_b = (_a = scopeObj._any) === null || _a === void 0 ? void 0 : _a.run) === null || _b === void 0 ? void 0 : _b.slice()) || []\n        });\n        if (command)\n            binding.run.push(command);\n        if (preventDefault)\n            binding.preventDefault = true;\n        if (stopPropagation)\n            binding.stopPropagation = true;\n    };\n    for (let b of bindings) {\n        let scopes = b.scope ? b.scope.split(\" \") : [\"editor\"];\n        if (b.any)\n            for (let scope of scopes) {\n                let scopeObj = bound[scope] || (bound[scope] = Object.create(null));\n                if (!scopeObj._any)\n                    scopeObj._any = { preventDefault: false, stopPropagation: false, run: [] };\n                let { any } = b;\n                for (let key in scopeObj)\n                    scopeObj[key].run.push(view => any(view, currentKeyEvent));\n            }\n        let name = b[platform] || b.key;\n        if (!name)\n            continue;\n        for (let scope of scopes) {\n            add(scope, name, b.run, b.preventDefault, b.stopPropagation);\n            if (b.shift)\n                add(scope, \"Shift-\" + name, b.shift, b.preventDefault, b.stopPropagation);\n        }\n    }\n    return bound;\n}\nlet currentKeyEvent = null;\nfunction runHandlers(map, event, view, scope) {\n    currentKeyEvent = event;\n    let name = keyName(event);\n    let charCode = codePointAt(name, 0), isChar = codePointSize(charCode) == name.length && name != \" \";\n    let prefix = \"\", handled = false, prevented = false, stopPropagation = false;\n    if (storedPrefix && storedPrefix.view == view && storedPrefix.scope == scope) {\n        prefix = storedPrefix.prefix + \" \";\n        if (modifierCodes.indexOf(event.keyCode) < 0) {\n            prevented = true;\n            storedPrefix = null;\n        }\n    }\n    let ran = new Set;\n    let runFor = (binding) => {\n        if (binding) {\n            for (let cmd of binding.run)\n                if (!ran.has(cmd)) {\n                    ran.add(cmd);\n                    if (cmd(view)) {\n                        if (binding.stopPropagation)\n                            stopPropagation = true;\n                        return true;\n                    }\n                }\n            if (binding.preventDefault) {\n                if (binding.stopPropagation)\n                    stopPropagation = true;\n                prevented = true;\n            }\n        }\n        return false;\n    };\n    let scopeObj = map[scope], baseName, shiftName;\n    if (scopeObj) {\n        if (runFor(scopeObj[prefix + modifiers(name, event, !isChar)])) {\n            handled = true;\n        }\n        else if (isChar && (event.altKey || event.metaKey || event.ctrlKey) &&\n            // Ctrl-Alt may be used for AltGr on Windows\n            !(browser.windows && event.ctrlKey && event.altKey) &&\n            (baseName = base[event.keyCode]) && baseName != name) {\n            if (runFor(scopeObj[prefix + modifiers(baseName, event, true)])) {\n                handled = true;\n            }\n            else if (event.shiftKey && (shiftName = shift[event.keyCode]) != name && shiftName != baseName &&\n                runFor(scopeObj[prefix + modifiers(shiftName, event, false)])) {\n                handled = true;\n            }\n        }\n        else if (isChar && event.shiftKey &&\n            runFor(scopeObj[prefix + modifiers(name, event, true)])) {\n            handled = true;\n        }\n        if (!handled && runFor(scopeObj._any))\n            handled = true;\n    }\n    if (prevented)\n        handled = true;\n    if (handled && stopPropagation)\n        event.stopPropagation();\n    currentKeyEvent = null;\n    return handled;\n}\n\n/**\nImplementation of [`LayerMarker`](https://codemirror.net/6/docs/ref/#view.LayerMarker) that creates\na rectangle at a given set of coordinates.\n*/\nclass RectangleMarker {\n    /**\n    Create a marker with the given class and dimensions. If `width`\n    is null, the DOM element will get no width style.\n    */\n    constructor(className, \n    /**\n    The left position of the marker (in pixels, document-relative).\n    */\n    left, \n    /**\n    The top position of the marker.\n    */\n    top, \n    /**\n    The width of the marker, or null if it shouldn't get a width assigned.\n    */\n    width, \n    /**\n    The height of the marker.\n    */\n    height) {\n        this.className = className;\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n    }\n    draw() {\n        let elt = document.createElement(\"div\");\n        elt.className = this.className;\n        this.adjust(elt);\n        return elt;\n    }\n    update(elt, prev) {\n        if (prev.className != this.className)\n            return false;\n        this.adjust(elt);\n        return true;\n    }\n    adjust(elt) {\n        elt.style.left = this.left + \"px\";\n        elt.style.top = this.top + \"px\";\n        if (this.width != null)\n            elt.style.width = this.width + \"px\";\n        elt.style.height = this.height + \"px\";\n    }\n    eq(p) {\n        return this.left == p.left && this.top == p.top && this.width == p.width && this.height == p.height &&\n            this.className == p.className;\n    }\n    /**\n    Create a set of rectangles for the given selection range,\n    assigning them theclass`className`. Will create a single\n    rectangle for empty ranges, and a set of selection-style\n    rectangles covering the range's content (in a bidi-aware\n    way) for non-empty ones.\n    */\n    static forRange(view, className, range) {\n        if (range.empty) {\n            let pos = view.coordsAtPos(range.head, range.assoc || 1);\n            if (!pos)\n                return [];\n            let base = getBase(view);\n            return [new RectangleMarker(className, pos.left - base.left, pos.top - base.top, null, pos.bottom - pos.top)];\n        }\n        else {\n            return rectanglesForRange(view, className, range);\n        }\n    }\n}\nfunction getBase(view) {\n    let rect = view.scrollDOM.getBoundingClientRect();\n    let left = view.textDirection == Direction.LTR ? rect.left : rect.right - view.scrollDOM.clientWidth * view.scaleX;\n    return { left: left - view.scrollDOM.scrollLeft * view.scaleX, top: rect.top - view.scrollDOM.scrollTop * view.scaleY };\n}\nfunction wrappedLine(view, pos, side, inside) {\n    let coords = view.coordsAtPos(pos, side * 2);\n    if (!coords)\n        return inside;\n    let editorRect = view.dom.getBoundingClientRect();\n    let y = (coords.top + coords.bottom) / 2;\n    let left = view.posAtCoords({ x: editorRect.left + 1, y });\n    let right = view.posAtCoords({ x: editorRect.right - 1, y });\n    if (left == null || right == null)\n        return inside;\n    return { from: Math.max(inside.from, Math.min(left, right)), to: Math.min(inside.to, Math.max(left, right)) };\n}\nfunction rectanglesForRange(view, className, range) {\n    if (range.to <= view.viewport.from || range.from >= view.viewport.to)\n        return [];\n    let from = Math.max(range.from, view.viewport.from), to = Math.min(range.to, view.viewport.to);\n    let ltr = view.textDirection == Direction.LTR;\n    let content = view.contentDOM, contentRect = content.getBoundingClientRect(), base = getBase(view);\n    let lineElt = content.querySelector(\".cm-line\"), lineStyle = lineElt && window.getComputedStyle(lineElt);\n    let leftSide = contentRect.left +\n        (lineStyle ? parseInt(lineStyle.paddingLeft) + Math.min(0, parseInt(lineStyle.textIndent)) : 0);\n    let rightSide = contentRect.right - (lineStyle ? parseInt(lineStyle.paddingRight) : 0);\n    let startBlock = blockAt(view, from), endBlock = blockAt(view, to);\n    let visualStart = startBlock.type == BlockType.Text ? startBlock : null;\n    let visualEnd = endBlock.type == BlockType.Text ? endBlock : null;\n    if (visualStart && (view.lineWrapping || startBlock.widgetLineBreaks))\n        visualStart = wrappedLine(view, from, 1, visualStart);\n    if (visualEnd && (view.lineWrapping || endBlock.widgetLineBreaks))\n        visualEnd = wrappedLine(view, to, -1, visualEnd);\n    if (visualStart && visualEnd && visualStart.from == visualEnd.from && visualStart.to == visualEnd.to) {\n        return pieces(drawForLine(range.from, range.to, visualStart));\n    }\n    else {\n        let top = visualStart ? drawForLine(range.from, null, visualStart) : drawForWidget(startBlock, false);\n        let bottom = visualEnd ? drawForLine(null, range.to, visualEnd) : drawForWidget(endBlock, true);\n        let between = [];\n        if ((visualStart || startBlock).to < (visualEnd || endBlock).from - (visualStart && visualEnd ? 1 : 0) ||\n            startBlock.widgetLineBreaks > 1 && top.bottom + view.defaultLineHeight / 2 < bottom.top)\n            between.push(piece(leftSide, top.bottom, rightSide, bottom.top));\n        else if (top.bottom < bottom.top && view.elementAtHeight((top.bottom + bottom.top) / 2).type == BlockType.Text)\n            top.bottom = bottom.top = (top.bottom + bottom.top) / 2;\n        return pieces(top).concat(between).concat(pieces(bottom));\n    }\n    function piece(left, top, right, bottom) {\n        return new RectangleMarker(className, left - base.left, top - base.top, right - left, bottom - top);\n    }\n    function pieces({ top, bottom, horizontal }) {\n        let pieces = [];\n        for (let i = 0; i < horizontal.length; i += 2)\n            pieces.push(piece(horizontal[i], top, horizontal[i + 1], bottom));\n        return pieces;\n    }\n    // Gets passed from/to in line-local positions\n    function drawForLine(from, to, line) {\n        let top = 1e9, bottom = -1e9, horizontal = [];\n        function addSpan(from, fromOpen, to, toOpen, dir) {\n            // Passing 2/-2 is a kludge to force the view to return\n            // coordinates on the proper side of block widgets, since\n            // normalizing the side there, though appropriate for most\n            // coordsAtPos queries, would break selection drawing.\n            let fromCoords = view.coordsAtPos(from, (from == line.to ? -2 : 2));\n            let toCoords = view.coordsAtPos(to, (to == line.from ? 2 : -2));\n            if (!fromCoords || !toCoords)\n                return;\n            top = Math.min(fromCoords.top, toCoords.top, top);\n            bottom = Math.max(fromCoords.bottom, toCoords.bottom, bottom);\n            if (dir == Direction.LTR)\n                horizontal.push(ltr && fromOpen ? leftSide : fromCoords.left, ltr && toOpen ? rightSide : toCoords.right);\n            else\n                horizontal.push(!ltr && toOpen ? leftSide : toCoords.left, !ltr && fromOpen ? rightSide : fromCoords.right);\n        }\n        let start = from !== null && from !== void 0 ? from : line.from, end = to !== null && to !== void 0 ? to : line.to;\n        // Split the range by visible range and document line\n        for (let r of view.visibleRanges)\n            if (r.to > start && r.from < end) {\n                for (let pos = Math.max(r.from, start), endPos = Math.min(r.to, end);;) {\n                    let docLine = view.state.doc.lineAt(pos);\n                    for (let span of view.bidiSpans(docLine)) {\n                        let spanFrom = span.from + docLine.from, spanTo = span.to + docLine.from;\n                        if (spanFrom >= endPos)\n                            break;\n                        if (spanTo > pos)\n                            addSpan(Math.max(spanFrom, pos), from == null && spanFrom <= start, Math.min(spanTo, endPos), to == null && spanTo >= end, span.dir);\n                    }\n                    pos = docLine.to + 1;\n                    if (pos >= endPos)\n                        break;\n                }\n            }\n        if (horizontal.length == 0)\n            addSpan(start, from == null, end, to == null, view.textDirection);\n        return { top, bottom, horizontal };\n    }\n    function drawForWidget(block, top) {\n        let y = contentRect.top + (top ? block.top : block.bottom);\n        return { top: y, bottom: y, horizontal: [] };\n    }\n}\nfunction sameMarker(a, b) {\n    return a.constructor == b.constructor && a.eq(b);\n}\nclass LayerView {\n    constructor(view, layer) {\n        this.view = view;\n        this.layer = layer;\n        this.drawn = [];\n        this.scaleX = 1;\n        this.scaleY = 1;\n        this.measureReq = { read: this.measure.bind(this), write: this.draw.bind(this) };\n        this.dom = view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.dom.classList.add(\"cm-layer\");\n        if (layer.above)\n            this.dom.classList.add(\"cm-layer-above\");\n        if (layer.class)\n            this.dom.classList.add(layer.class);\n        this.scale();\n        this.dom.setAttribute(\"aria-hidden\", \"true\");\n        this.setOrder(view.state);\n        view.requestMeasure(this.measureReq);\n        if (layer.mount)\n            layer.mount(this.dom, view);\n    }\n    update(update) {\n        if (update.startState.facet(layerOrder) != update.state.facet(layerOrder))\n            this.setOrder(update.state);\n        if (this.layer.update(update, this.dom) || update.geometryChanged) {\n            this.scale();\n            update.view.requestMeasure(this.measureReq);\n        }\n    }\n    docViewUpdate(view) {\n        if (this.layer.updateOnDocViewUpdate !== false)\n            view.requestMeasure(this.measureReq);\n    }\n    setOrder(state) {\n        let pos = 0, order = state.facet(layerOrder);\n        while (pos < order.length && order[pos] != this.layer)\n            pos++;\n        this.dom.style.zIndex = String((this.layer.above ? 150 : -1) - pos);\n    }\n    measure() {\n        return this.layer.markers(this.view);\n    }\n    scale() {\n        let { scaleX, scaleY } = this.view;\n        if (scaleX != this.scaleX || scaleY != this.scaleY) {\n            this.scaleX = scaleX;\n            this.scaleY = scaleY;\n            this.dom.style.transform = `scale(${1 / scaleX}, ${1 / scaleY})`;\n        }\n    }\n    draw(markers) {\n        if (markers.length != this.drawn.length || markers.some((p, i) => !sameMarker(p, this.drawn[i]))) {\n            let old = this.dom.firstChild, oldI = 0;\n            for (let marker of markers) {\n                if (marker.update && old && marker.constructor && this.drawn[oldI].constructor &&\n                    marker.update(old, this.drawn[oldI])) {\n                    old = old.nextSibling;\n                    oldI++;\n                }\n                else {\n                    this.dom.insertBefore(marker.draw(), old);\n                }\n            }\n            while (old) {\n                let next = old.nextSibling;\n                old.remove();\n                old = next;\n            }\n            this.drawn = markers;\n        }\n    }\n    destroy() {\n        if (this.layer.destroy)\n            this.layer.destroy(this.dom, this.view);\n        this.dom.remove();\n    }\n}\nconst layerOrder = /*@__PURE__*/Facet.define();\n/**\nDefine a layer.\n*/\nfunction layer(config) {\n    return [\n        ViewPlugin.define(v => new LayerView(v, config)),\n        layerOrder.of(config)\n    ];\n}\n\nconst CanHidePrimary = !(browser.ios && browser.webkit && browser.webkit_version < 534);\nconst selectionConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            cursorBlinkRate: 1200,\n            drawRangeCursor: true\n        }, {\n            cursorBlinkRate: (a, b) => Math.min(a, b),\n            drawRangeCursor: (a, b) => a || b\n        });\n    }\n});\n/**\nReturns an extension that hides the browser's native selection and\ncursor, replacing the selection with a background behind the text\n(with the `cm-selectionBackground` class), and the\ncursors with elements overlaid over the code (using\n`cm-cursor-primary` and `cm-cursor-secondary`).\n\nThis allows the editor to display secondary selection ranges, and\ntends to produce a type of selection more in line with that users\nexpect in a text editor (the native selection styling will often\nleave gaps between lines and won't fill the horizontal space after\na line when the selection continues past it).\n\nIt does have a performance cost, in that it requires an extra DOM\nlayout cycle for many updates (the selection is drawn based on DOM\nlayout information that's only available after laying out the\ncontent).\n*/\nfunction drawSelection(config = {}) {\n    return [\n        selectionConfig.of(config),\n        cursorLayer,\n        selectionLayer,\n        hideNativeSelection,\n        nativeSelectionHidden.of(true)\n    ];\n}\n/**\nRetrieve the [`drawSelection`](https://codemirror.net/6/docs/ref/#view.drawSelection) configuration\nfor this state. (Note that this will return a set of defaults even\nif `drawSelection` isn't enabled.)\n*/\nfunction getDrawSelectionConfig(state) {\n    return state.facet(selectionConfig);\n}\nfunction configChanged(update) {\n    return update.startState.facet(selectionConfig) != update.state.facet(selectionConfig);\n}\nconst cursorLayer = /*@__PURE__*/layer({\n    above: true,\n    markers(view) {\n        let { state } = view, conf = state.facet(selectionConfig);\n        let cursors = [];\n        for (let r of state.selection.ranges) {\n            let prim = r == state.selection.main;\n            if (r.empty ? !prim || CanHidePrimary : conf.drawRangeCursor) {\n                let className = prim ? \"cm-cursor cm-cursor-primary\" : \"cm-cursor cm-cursor-secondary\";\n                let cursor = r.empty ? r : EditorSelection.cursor(r.head, r.head > r.anchor ? -1 : 1);\n                for (let piece of RectangleMarker.forRange(view, className, cursor))\n                    cursors.push(piece);\n            }\n        }\n        return cursors;\n    },\n    update(update, dom) {\n        if (update.transactions.some(tr => tr.selection))\n            dom.style.animationName = dom.style.animationName == \"cm-blink\" ? \"cm-blink2\" : \"cm-blink\";\n        let confChange = configChanged(update);\n        if (confChange)\n            setBlinkRate(update.state, dom);\n        return update.docChanged || update.selectionSet || confChange;\n    },\n    mount(dom, view) {\n        setBlinkRate(view.state, dom);\n    },\n    class: \"cm-cursorLayer\"\n});\nfunction setBlinkRate(state, dom) {\n    dom.style.animationDuration = state.facet(selectionConfig).cursorBlinkRate + \"ms\";\n}\nconst selectionLayer = /*@__PURE__*/layer({\n    above: false,\n    markers(view) {\n        return view.state.selection.ranges.map(r => r.empty ? [] : RectangleMarker.forRange(view, \"cm-selectionBackground\", r))\n            .reduce((a, b) => a.concat(b));\n    },\n    update(update, dom) {\n        return update.docChanged || update.selectionSet || update.viewportChanged || configChanged(update);\n    },\n    class: \"cm-selectionLayer\"\n});\nconst themeSpec = {\n    \".cm-line\": {\n        \"& ::selection, &::selection\": { backgroundColor: \"transparent !important\" },\n    },\n    \".cm-content\": {\n        \"& :focus\": {\n            caretColor: \"initial !important\",\n            \"&::selection, & ::selection\": {\n                backgroundColor: \"Highlight !important\"\n            }\n        }\n    }\n};\nif (CanHidePrimary)\n    themeSpec[\".cm-line\"].caretColor = themeSpec[\".cm-content\"].caretColor = \"transparent !important\";\nconst hideNativeSelection = /*@__PURE__*/Prec.highest(/*@__PURE__*/EditorView.theme(themeSpec));\n\nconst setDropCursorPos = /*@__PURE__*/StateEffect.define({\n    map(pos, mapping) { return pos == null ? null : mapping.mapPos(pos); }\n});\nconst dropCursorPos = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(pos, tr) {\n        if (pos != null)\n            pos = tr.changes.mapPos(pos);\n        return tr.effects.reduce((pos, e) => e.is(setDropCursorPos) ? e.value : pos, pos);\n    }\n});\nconst drawDropCursor = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.cursor = null;\n        this.measureReq = { read: this.readPos.bind(this), write: this.drawCursor.bind(this) };\n    }\n    update(update) {\n        var _a;\n        let cursorPos = update.state.field(dropCursorPos);\n        if (cursorPos == null) {\n            if (this.cursor != null) {\n                (_a = this.cursor) === null || _a === void 0 ? void 0 : _a.remove();\n                this.cursor = null;\n            }\n        }\n        else {\n            if (!this.cursor) {\n                this.cursor = this.view.scrollDOM.appendChild(document.createElement(\"div\"));\n                this.cursor.className = \"cm-dropCursor\";\n            }\n            if (update.startState.field(dropCursorPos) != cursorPos || update.docChanged || update.geometryChanged)\n                this.view.requestMeasure(this.measureReq);\n        }\n    }\n    readPos() {\n        let { view } = this;\n        let pos = view.state.field(dropCursorPos);\n        let rect = pos != null && view.coordsAtPos(pos);\n        if (!rect)\n            return null;\n        let outer = view.scrollDOM.getBoundingClientRect();\n        return {\n            left: rect.left - outer.left + view.scrollDOM.scrollLeft * view.scaleX,\n            top: rect.top - outer.top + view.scrollDOM.scrollTop * view.scaleY,\n            height: rect.bottom - rect.top\n        };\n    }\n    drawCursor(pos) {\n        if (this.cursor) {\n            let { scaleX, scaleY } = this.view;\n            if (pos) {\n                this.cursor.style.left = pos.left / scaleX + \"px\";\n                this.cursor.style.top = pos.top / scaleY + \"px\";\n                this.cursor.style.height = pos.height / scaleY + \"px\";\n            }\n            else {\n                this.cursor.style.left = \"-100000px\";\n            }\n        }\n    }\n    destroy() {\n        if (this.cursor)\n            this.cursor.remove();\n    }\n    setDropPos(pos) {\n        if (this.view.state.field(dropCursorPos) != pos)\n            this.view.dispatch({ effects: setDropCursorPos.of(pos) });\n    }\n}, {\n    eventObservers: {\n        dragover(event) {\n            this.setDropPos(this.view.posAtCoords({ x: event.clientX, y: event.clientY }));\n        },\n        dragleave(event) {\n            if (event.target == this.view.contentDOM || !this.view.contentDOM.contains(event.relatedTarget))\n                this.setDropPos(null);\n        },\n        dragend() {\n            this.setDropPos(null);\n        },\n        drop() {\n            this.setDropPos(null);\n        }\n    }\n});\n/**\nDraws a cursor at the current drop position when something is\ndragged over the editor.\n*/\nfunction dropCursor() {\n    return [dropCursorPos, drawDropCursor];\n}\n\nfunction iterMatches(doc, re, from, to, f) {\n    re.lastIndex = 0;\n    for (let cursor = doc.iterRange(from, to), pos = from, m; !cursor.next().done; pos += cursor.value.length) {\n        if (!cursor.lineBreak)\n            while (m = re.exec(cursor.value))\n                f(pos + m.index, m);\n    }\n}\nfunction matchRanges(view, maxLength) {\n    let visible = view.visibleRanges;\n    if (visible.length == 1 && visible[0].from == view.viewport.from &&\n        visible[0].to == view.viewport.to)\n        return visible;\n    let result = [];\n    for (let { from, to } of visible) {\n        from = Math.max(view.state.doc.lineAt(from).from, from - maxLength);\n        to = Math.min(view.state.doc.lineAt(to).to, to + maxLength);\n        if (result.length && result[result.length - 1].to >= from)\n            result[result.length - 1].to = to;\n        else\n            result.push({ from, to });\n    }\n    return result;\n}\n/**\nHelper class used to make it easier to maintain decorations on\nvisible code that matches a given regular expression. To be used\nin a [view plugin](https://codemirror.net/6/docs/ref/#view.ViewPlugin). Instances of this object\nrepresent a matching configuration.\n*/\nclass MatchDecorator {\n    /**\n    Create a decorator.\n    */\n    constructor(config) {\n        const { regexp, decoration, decorate, boundary, maxLength = 1000 } = config;\n        if (!regexp.global)\n            throw new RangeError(\"The regular expression given to MatchDecorator should have its 'g' flag set\");\n        this.regexp = regexp;\n        if (decorate) {\n            this.addMatch = (match, view, from, add) => decorate(add, from, from + match[0].length, match, view);\n        }\n        else if (typeof decoration == \"function\") {\n            this.addMatch = (match, view, from, add) => {\n                let deco = decoration(match, view, from);\n                if (deco)\n                    add(from, from + match[0].length, deco);\n            };\n        }\n        else if (decoration) {\n            this.addMatch = (match, _view, from, add) => add(from, from + match[0].length, decoration);\n        }\n        else {\n            throw new RangeError(\"Either 'decorate' or 'decoration' should be provided to MatchDecorator\");\n        }\n        this.boundary = boundary;\n        this.maxLength = maxLength;\n    }\n    /**\n    Compute the full set of decorations for matches in the given\n    view's viewport. You'll want to call this when initializing your\n    plugin.\n    */\n    createDeco(view) {\n        let build = new RangeSetBuilder(), add = build.add.bind(build);\n        for (let { from, to } of matchRanges(view, this.maxLength))\n            iterMatches(view.state.doc, this.regexp, from, to, (from, m) => this.addMatch(m, view, from, add));\n        return build.finish();\n    }\n    /**\n    Update a set of decorations for a view update. `deco` _must_ be\n    the set of decorations produced by _this_ `MatchDecorator` for\n    the view state before the update.\n    */\n    updateDeco(update, deco) {\n        let changeFrom = 1e9, changeTo = -1;\n        if (update.docChanged)\n            update.changes.iterChanges((_f, _t, from, to) => {\n                if (to >= update.view.viewport.from && from <= update.view.viewport.to) {\n                    changeFrom = Math.min(from, changeFrom);\n                    changeTo = Math.max(to, changeTo);\n                }\n            });\n        if (update.viewportMoved || changeTo - changeFrom > 1000)\n            return this.createDeco(update.view);\n        if (changeTo > -1)\n            return this.updateRange(update.view, deco.map(update.changes), changeFrom, changeTo);\n        return deco;\n    }\n    updateRange(view, deco, updateFrom, updateTo) {\n        for (let r of view.visibleRanges) {\n            let from = Math.max(r.from, updateFrom), to = Math.min(r.to, updateTo);\n            if (to > from) {\n                let fromLine = view.state.doc.lineAt(from), toLine = fromLine.to < to ? view.state.doc.lineAt(to) : fromLine;\n                let start = Math.max(r.from, fromLine.from), end = Math.min(r.to, toLine.to);\n                if (this.boundary) {\n                    for (; from > fromLine.from; from--)\n                        if (this.boundary.test(fromLine.text[from - 1 - fromLine.from])) {\n                            start = from;\n                            break;\n                        }\n                    for (; to < toLine.to; to++)\n                        if (this.boundary.test(toLine.text[to - toLine.from])) {\n                            end = to;\n                            break;\n                        }\n                }\n                let ranges = [], m;\n                let add = (from, to, deco) => ranges.push(deco.range(from, to));\n                if (fromLine == toLine) {\n                    this.regexp.lastIndex = start - fromLine.from;\n                    while ((m = this.regexp.exec(fromLine.text)) && m.index < end - fromLine.from)\n                        this.addMatch(m, view, m.index + fromLine.from, add);\n                }\n                else {\n                    iterMatches(view.state.doc, this.regexp, start, end, (from, m) => this.addMatch(m, view, from, add));\n                }\n                deco = deco.update({ filterFrom: start, filterTo: end, filter: (from, to) => from < start || to > end, add: ranges });\n            }\n        }\n        return deco;\n    }\n}\n\nconst UnicodeRegexpSupport = /x/.unicode != null ? \"gu\" : \"g\";\nconst Specials = /*@__PURE__*/new RegExp(\"[\\u0000-\\u0008\\u000a-\\u001f\\u007f-\\u009f\\u00ad\\u061c\\u200b\\u200e\\u200f\\u2028\\u2029\\u202d\\u202e\\u2066\\u2067\\u2069\\ufeff\\ufff9-\\ufffc]\", UnicodeRegexpSupport);\nconst Names = {\n    0: \"null\",\n    7: \"bell\",\n    8: \"backspace\",\n    10: \"newline\",\n    11: \"vertical tab\",\n    13: \"carriage return\",\n    27: \"escape\",\n    8203: \"zero width space\",\n    8204: \"zero width non-joiner\",\n    8205: \"zero width joiner\",\n    8206: \"left-to-right mark\",\n    8207: \"right-to-left mark\",\n    8232: \"line separator\",\n    8237: \"left-to-right override\",\n    8238: \"right-to-left override\",\n    8294: \"left-to-right isolate\",\n    8295: \"right-to-left isolate\",\n    8297: \"pop directional isolate\",\n    8233: \"paragraph separator\",\n    65279: \"zero width no-break space\",\n    65532: \"object replacement\"\n};\nlet _supportsTabSize = null;\nfunction supportsTabSize() {\n    var _a;\n    if (_supportsTabSize == null && typeof document != \"undefined\" && document.body) {\n        let styles = document.body.style;\n        _supportsTabSize = ((_a = styles.tabSize) !== null && _a !== void 0 ? _a : styles.MozTabSize) != null;\n    }\n    return _supportsTabSize || false;\n}\nconst specialCharConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        let config = combineConfig(configs, {\n            render: null,\n            specialChars: Specials,\n            addSpecialChars: null\n        });\n        if (config.replaceTabs = !supportsTabSize())\n            config.specialChars = new RegExp(\"\\t|\" + config.specialChars.source, UnicodeRegexpSupport);\n        if (config.addSpecialChars)\n            config.specialChars = new RegExp(config.specialChars.source + \"|\" + config.addSpecialChars.source, UnicodeRegexpSupport);\n        return config;\n    }\n});\n/**\nReturns an extension that installs highlighting of special\ncharacters.\n*/\nfunction highlightSpecialChars(\n/**\nConfiguration options.\n*/\nconfig = {}) {\n    return [specialCharConfig.of(config), specialCharPlugin()];\n}\nlet _plugin = null;\nfunction specialCharPlugin() {\n    return _plugin || (_plugin = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.decorations = Decoration.none;\n            this.decorationCache = Object.create(null);\n            this.decorator = this.makeDecorator(view.state.facet(specialCharConfig));\n            this.decorations = this.decorator.createDeco(view);\n        }\n        makeDecorator(conf) {\n            return new MatchDecorator({\n                regexp: conf.specialChars,\n                decoration: (m, view, pos) => {\n                    let { doc } = view.state;\n                    let code = codePointAt(m[0], 0);\n                    if (code == 9) {\n                        let line = doc.lineAt(pos);\n                        let size = view.state.tabSize, col = countColumn(line.text, size, pos - line.from);\n                        return Decoration.replace({\n                            widget: new TabWidget((size - (col % size)) * this.view.defaultCharacterWidth / this.view.scaleX)\n                        });\n                    }\n                    return this.decorationCache[code] ||\n                        (this.decorationCache[code] = Decoration.replace({ widget: new SpecialCharWidget(conf, code) }));\n                },\n                boundary: conf.replaceTabs ? undefined : /[^]/\n            });\n        }\n        update(update) {\n            let conf = update.state.facet(specialCharConfig);\n            if (update.startState.facet(specialCharConfig) != conf) {\n                this.decorator = this.makeDecorator(conf);\n                this.decorations = this.decorator.createDeco(update.view);\n            }\n            else {\n                this.decorations = this.decorator.updateDeco(update, this.decorations);\n            }\n        }\n    }, {\n        decorations: v => v.decorations\n    }));\n}\nconst DefaultPlaceholder = \"\\u2022\";\n// Assigns placeholder characters from the Control Pictures block to\n// ASCII control characters\nfunction placeholder$1(code) {\n    if (code >= 32)\n        return DefaultPlaceholder;\n    if (code == 10)\n        return \"\\u2424\";\n    return String.fromCharCode(9216 + code);\n}\nclass SpecialCharWidget extends WidgetType {\n    constructor(options, code) {\n        super();\n        this.options = options;\n        this.code = code;\n    }\n    eq(other) { return other.code == this.code; }\n    toDOM(view) {\n        let ph = placeholder$1(this.code);\n        let desc = view.state.phrase(\"Control character\") + \" \" + (Names[this.code] || \"0x\" + this.code.toString(16));\n        let custom = this.options.render && this.options.render(this.code, desc, ph);\n        if (custom)\n            return custom;\n        let span = document.createElement(\"span\");\n        span.textContent = ph;\n        span.title = desc;\n        span.setAttribute(\"aria-label\", desc);\n        span.className = \"cm-specialChar\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\nclass TabWidget extends WidgetType {\n    constructor(width) {\n        super();\n        this.width = width;\n    }\n    eq(other) { return other.width == this.width; }\n    toDOM() {\n        let span = document.createElement(\"span\");\n        span.textContent = \"\\t\";\n        span.className = \"cm-tab\";\n        span.style.width = this.width + \"px\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\n\nconst plugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor() {\n        this.height = 1000;\n        this.attrs = { style: \"padding-bottom: 1000px\" };\n    }\n    update(update) {\n        let { view } = update;\n        let height = view.viewState.editorHeight -\n            view.defaultLineHeight - view.documentPadding.top - 0.5;\n        if (height >= 0 && height != this.height) {\n            this.height = height;\n            this.attrs = { style: `padding-bottom: ${height}px` };\n        }\n    }\n});\n/**\nReturns an extension that makes sure the content has a bottom\nmargin equivalent to the height of the editor, minus one line\nheight, so that every line in the document can be scrolled to the\ntop of the editor.\n\nThis is only meaningful when the editor is scrollable, and should\nnot be enabled in editors that take the size of their content.\n*/\nfunction scrollPastEnd() {\n    return [plugin, contentAttributes.of(view => { var _a; return ((_a = view.plugin(plugin)) === null || _a === void 0 ? void 0 : _a.attrs) || null; })];\n}\n\n/**\nMark lines that have a cursor on them with the `\"cm-activeLine\"`\nDOM class.\n*/\nfunction highlightActiveLine() {\n    return activeLineHighlighter;\n}\nconst lineDeco = /*@__PURE__*/Decoration.line({ class: \"cm-activeLine\" });\nconst activeLineHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.docChanged || update.selectionSet)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let lastLineStart = -1, deco = [];\n        for (let r of view.state.selection.ranges) {\n            let line = view.lineBlockAt(r.head);\n            if (line.from > lastLineStart) {\n                deco.push(lineDeco.range(line.from));\n                lastLineStart = line.from;\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\n\nclass Placeholder extends WidgetType {\n    constructor(content) {\n        super();\n        this.content = content;\n    }\n    toDOM(view) {\n        let wrap = document.createElement(\"span\");\n        wrap.className = \"cm-placeholder\";\n        wrap.style.pointerEvents = \"none\";\n        wrap.appendChild(typeof this.content == \"string\" ? document.createTextNode(this.content) :\n            typeof this.content == \"function\" ? this.content(view) :\n                this.content.cloneNode(true));\n        if (typeof this.content == \"string\")\n            wrap.setAttribute(\"aria-label\", \"placeholder \" + this.content);\n        else\n            wrap.setAttribute(\"aria-hidden\", \"true\");\n        return wrap;\n    }\n    coordsAt(dom) {\n        let rects = dom.firstChild ? clientRectsFor(dom.firstChild) : [];\n        if (!rects.length)\n            return null;\n        let style = window.getComputedStyle(dom.parentNode);\n        let rect = flattenRect(rects[0], style.direction != \"rtl\");\n        let lineHeight = parseInt(style.lineHeight);\n        if (rect.bottom - rect.top > lineHeight * 1.5)\n            return { left: rect.left, right: rect.right, top: rect.top, bottom: rect.top + lineHeight };\n        return rect;\n    }\n    ignoreEvent() { return false; }\n}\n/**\nExtension that enables a placeholder\u2014a piece of example content\nto show when the editor is empty.\n*/\nfunction placeholder(content) {\n    return ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.placeholder = content\n                ? Decoration.set([Decoration.widget({ widget: new Placeholder(content), side: 1 }).range(0)])\n                : Decoration.none;\n        }\n        get decorations() { return this.view.state.doc.length ? Decoration.none : this.placeholder; }\n    }, { decorations: v => v.decorations });\n}\n\n// Don't compute precise column positions for line offsets above this\n// (since it could get expensive). Assume offset==column for them.\nconst MaxOff = 2000;\nfunction rectangleFor(state, a, b) {\n    let startLine = Math.min(a.line, b.line), endLine = Math.max(a.line, b.line);\n    let ranges = [];\n    if (a.off > MaxOff || b.off > MaxOff || a.col < 0 || b.col < 0) {\n        let startOff = Math.min(a.off, b.off), endOff = Math.max(a.off, b.off);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i);\n            if (line.length <= endOff)\n                ranges.push(EditorSelection.range(line.from + startOff, line.to + endOff));\n        }\n    }\n    else {\n        let startCol = Math.min(a.col, b.col), endCol = Math.max(a.col, b.col);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i);\n            let start = findColumn(line.text, startCol, state.tabSize, true);\n            if (start < 0) {\n                ranges.push(EditorSelection.cursor(line.to));\n            }\n            else {\n                let end = findColumn(line.text, endCol, state.tabSize);\n                ranges.push(EditorSelection.range(line.from + start, line.from + end));\n            }\n        }\n    }\n    return ranges;\n}\nfunction absoluteColumn(view, x) {\n    let ref = view.coordsAtPos(view.viewport.from);\n    return ref ? Math.round(Math.abs((ref.left - x) / view.defaultCharacterWidth)) : -1;\n}\nfunction getPos(view, event) {\n    let offset = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    let line = view.state.doc.lineAt(offset), off = offset - line.from;\n    let col = off > MaxOff ? -1\n        : off == line.length ? absoluteColumn(view, event.clientX)\n            : countColumn(line.text, view.state.tabSize, offset - line.from);\n    return { line: line.number, col, off };\n}\nfunction rectangleSelectionStyle(view, event) {\n    let start = getPos(view, event), startSel = view.state.selection;\n    if (!start)\n        return null;\n    return {\n        update(update) {\n            if (update.docChanged) {\n                let newStart = update.changes.mapPos(update.startState.doc.line(start.line).from);\n                let newLine = update.state.doc.lineAt(newStart);\n                start = { line: newLine.number, col: start.col, off: Math.min(start.off, newLine.length) };\n                startSel = startSel.map(update.changes);\n            }\n        },\n        get(event, _extend, multiple) {\n            let cur = getPos(view, event);\n            if (!cur)\n                return startSel;\n            let ranges = rectangleFor(view.state, start, cur);\n            if (!ranges.length)\n                return startSel;\n            if (multiple)\n                return EditorSelection.create(ranges.concat(startSel.ranges));\n            else\n                return EditorSelection.create(ranges);\n        }\n    };\n}\n/**\nCreate an extension that enables rectangular selections. By\ndefault, it will react to left mouse drag with the Alt key held\ndown. When such a selection occurs, the text within the rectangle\nthat was dragged over will be selected, as one selection\n[range](https://codemirror.net/6/docs/ref/#state.SelectionRange) per line.\n*/\nfunction rectangularSelection(options) {\n    let filter = (options === null || options === void 0 ? void 0 : options.eventFilter) || (e => e.altKey && e.button == 0);\n    return EditorView.mouseSelectionStyle.of((view, event) => filter(event) ? rectangleSelectionStyle(view, event) : null);\n}\nconst keys = {\n    Alt: [18, e => !!e.altKey],\n    Control: [17, e => !!e.ctrlKey],\n    Shift: [16, e => !!e.shiftKey],\n    Meta: [91, e => !!e.metaKey]\n};\nconst showCrosshair = { style: \"cursor: crosshair\" };\n/**\nReturns an extension that turns the pointer cursor into a\ncrosshair when a given modifier key, defaulting to Alt, is held\ndown. Can serve as a visual hint that rectangular selection is\ngoing to happen when paired with\n[`rectangularSelection`](https://codemirror.net/6/docs/ref/#view.rectangularSelection).\n*/\nfunction crosshairCursor(options = {}) {\n    let [code, getter] = keys[options.key || \"Alt\"];\n    let plugin = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.isDown = false;\n        }\n        set(isDown) {\n            if (this.isDown != isDown) {\n                this.isDown = isDown;\n                this.view.update([]);\n            }\n        }\n    }, {\n        eventObservers: {\n            keydown(e) {\n                this.set(e.keyCode == code || getter(e));\n            },\n            keyup(e) {\n                if (e.keyCode == code || !getter(e))\n                    this.set(false);\n            },\n            mousemove(e) {\n                this.set(getter(e));\n            }\n        }\n    });\n    return [\n        plugin,\n        EditorView.contentAttributes.of(view => { var _a; return ((_a = view.plugin(plugin)) === null || _a === void 0 ? void 0 : _a.isDown) ? showCrosshair : null; })\n    ];\n}\n\nconst Outside = \"-10000px\";\nclass TooltipViewManager {\n    constructor(view, facet, createTooltipView, removeTooltipView) {\n        this.facet = facet;\n        this.createTooltipView = createTooltipView;\n        this.removeTooltipView = removeTooltipView;\n        this.input = view.state.facet(facet);\n        this.tooltips = this.input.filter(t => t);\n        let prev = null;\n        this.tooltipViews = this.tooltips.map(t => prev = createTooltipView(t, prev));\n    }\n    update(update, above) {\n        var _a;\n        let input = update.state.facet(this.facet);\n        let tooltips = input.filter(x => x);\n        if (input === this.input) {\n            for (let t of this.tooltipViews)\n                if (t.update)\n                    t.update(update);\n            return false;\n        }\n        let tooltipViews = [], newAbove = above ? [] : null;\n        for (let i = 0; i < tooltips.length; i++) {\n            let tip = tooltips[i], known = -1;\n            if (!tip)\n                continue;\n            for (let i = 0; i < this.tooltips.length; i++) {\n                let other = this.tooltips[i];\n                if (other && other.create == tip.create)\n                    known = i;\n            }\n            if (known < 0) {\n                tooltipViews[i] = this.createTooltipView(tip, i ? tooltipViews[i - 1] : null);\n                if (newAbove)\n                    newAbove[i] = !!tip.above;\n            }\n            else {\n                let tooltipView = tooltipViews[i] = this.tooltipViews[known];\n                if (newAbove)\n                    newAbove[i] = above[known];\n                if (tooltipView.update)\n                    tooltipView.update(update);\n            }\n        }\n        for (let t of this.tooltipViews)\n            if (tooltipViews.indexOf(t) < 0) {\n                this.removeTooltipView(t);\n                (_a = t.destroy) === null || _a === void 0 ? void 0 : _a.call(t);\n            }\n        if (above) {\n            newAbove.forEach((val, i) => above[i] = val);\n            above.length = newAbove.length;\n        }\n        this.input = input;\n        this.tooltips = tooltips;\n        this.tooltipViews = tooltipViews;\n        return true;\n    }\n}\n/**\nCreates an extension that configures tooltip behavior.\n*/\nfunction tooltips(config = {}) {\n    return tooltipConfig.of(config);\n}\nfunction windowSpace(view) {\n    let docElt = view.dom.ownerDocument.documentElement;\n    return { top: 0, left: 0, bottom: docElt.clientHeight, right: docElt.clientWidth };\n}\nconst tooltipConfig = /*@__PURE__*/Facet.define({\n    combine: values => {\n        var _a, _b, _c;\n        return ({\n            position: browser.ios ? \"absolute\" : ((_a = values.find(conf => conf.position)) === null || _a === void 0 ? void 0 : _a.position) || \"fixed\",\n            parent: ((_b = values.find(conf => conf.parent)) === null || _b === void 0 ? void 0 : _b.parent) || null,\n            tooltipSpace: ((_c = values.find(conf => conf.tooltipSpace)) === null || _c === void 0 ? void 0 : _c.tooltipSpace) || windowSpace,\n        });\n    }\n});\nconst knownHeight = /*@__PURE__*/new WeakMap();\nconst tooltipPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.above = [];\n        this.inView = true;\n        this.madeAbsolute = false;\n        this.lastTransaction = 0;\n        this.measureTimeout = -1;\n        let config = view.state.facet(tooltipConfig);\n        this.position = config.position;\n        this.parent = config.parent;\n        this.classes = view.themeClasses;\n        this.createContainer();\n        this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this };\n        this.resizeObserver = typeof ResizeObserver == \"function\" ? new ResizeObserver(() => this.measureSoon()) : null;\n        this.manager = new TooltipViewManager(view, showTooltip, (t, p) => this.createTooltip(t, p), t => {\n            if (this.resizeObserver)\n                this.resizeObserver.unobserve(t.dom);\n            t.dom.remove();\n        });\n        this.above = this.manager.tooltips.map(t => !!t.above);\n        this.intersectionObserver = typeof IntersectionObserver == \"function\" ? new IntersectionObserver(entries => {\n            if (Date.now() > this.lastTransaction - 50 &&\n                entries.length > 0 && entries[entries.length - 1].intersectionRatio < 1)\n                this.measureSoon();\n        }, { threshold: [1] }) : null;\n        this.observeIntersection();\n        view.win.addEventListener(\"resize\", this.measureSoon = this.measureSoon.bind(this));\n        this.maybeMeasure();\n    }\n    createContainer() {\n        if (this.parent) {\n            this.container = document.createElement(\"div\");\n            this.container.style.position = \"relative\";\n            this.container.className = this.view.themeClasses;\n            this.parent.appendChild(this.container);\n        }\n        else {\n            this.container = this.view.dom;\n        }\n    }\n    observeIntersection() {\n        if (this.intersectionObserver) {\n            this.intersectionObserver.disconnect();\n            for (let tooltip of this.manager.tooltipViews)\n                this.intersectionObserver.observe(tooltip.dom);\n        }\n    }\n    measureSoon() {\n        if (this.measureTimeout < 0)\n            this.measureTimeout = setTimeout(() => {\n                this.measureTimeout = -1;\n                this.maybeMeasure();\n            }, 50);\n    }\n    update(update) {\n        if (update.transactions.length)\n            this.lastTransaction = Date.now();\n        let updated = this.manager.update(update, this.above);\n        if (updated)\n            this.observeIntersection();\n        let shouldMeasure = updated || update.geometryChanged;\n        let newConfig = update.state.facet(tooltipConfig);\n        if (newConfig.position != this.position && !this.madeAbsolute) {\n            this.position = newConfig.position;\n            for (let t of this.manager.tooltipViews)\n                t.dom.style.position = this.position;\n            shouldMeasure = true;\n        }\n        if (newConfig.parent != this.parent) {\n            if (this.parent)\n                this.container.remove();\n            this.parent = newConfig.parent;\n            this.createContainer();\n            for (let t of this.manager.tooltipViews)\n                this.container.appendChild(t.dom);\n            shouldMeasure = true;\n        }\n        else if (this.parent && this.view.themeClasses != this.classes) {\n            this.classes = this.container.className = this.view.themeClasses;\n        }\n        if (shouldMeasure)\n            this.maybeMeasure();\n    }\n    createTooltip(tooltip, prev) {\n        let tooltipView = tooltip.create(this.view);\n        let before = prev ? prev.dom : null;\n        tooltipView.dom.classList.add(\"cm-tooltip\");\n        if (tooltip.arrow && !tooltipView.dom.querySelector(\".cm-tooltip > .cm-tooltip-arrow\")) {\n            let arrow = document.createElement(\"div\");\n            arrow.className = \"cm-tooltip-arrow\";\n            tooltipView.dom.appendChild(arrow);\n        }\n        tooltipView.dom.style.position = this.position;\n        tooltipView.dom.style.top = Outside;\n        tooltipView.dom.style.left = \"0px\";\n        this.container.insertBefore(tooltipView.dom, before);\n        if (tooltipView.mount)\n            tooltipView.mount(this.view);\n        if (this.resizeObserver)\n            this.resizeObserver.observe(tooltipView.dom);\n        return tooltipView;\n    }\n    destroy() {\n        var _a, _b, _c;\n        this.view.win.removeEventListener(\"resize\", this.measureSoon);\n        for (let tooltipView of this.manager.tooltipViews) {\n            tooltipView.dom.remove();\n            (_a = tooltipView.destroy) === null || _a === void 0 ? void 0 : _a.call(tooltipView);\n        }\n        if (this.parent)\n            this.container.remove();\n        (_b = this.resizeObserver) === null || _b === void 0 ? void 0 : _b.disconnect();\n        (_c = this.intersectionObserver) === null || _c === void 0 ? void 0 : _c.disconnect();\n        clearTimeout(this.measureTimeout);\n    }\n    readMeasure() {\n        let scaleX = 1, scaleY = 1, makeAbsolute = false;\n        if (this.position == \"fixed\" && this.manager.tooltipViews.length) {\n            let { dom } = this.manager.tooltipViews[0];\n            if (browser.gecko) {\n                // Firefox sets the element's `offsetParent` to the\n                // transformed element when a transform interferes with fixed\n                // positioning.\n                makeAbsolute = dom.offsetParent != this.container.ownerDocument.body;\n            }\n            else if (dom.style.top == Outside && dom.style.left == \"0px\") {\n                // On other browsers, we have to awkwardly try and use other\n                // information to detect a transform.\n                let rect = dom.getBoundingClientRect();\n                makeAbsolute = Math.abs(rect.top + 10000) > 1 || Math.abs(rect.left) > 1;\n            }\n        }\n        if (makeAbsolute || this.position == \"absolute\") {\n            if (this.parent) {\n                let rect = this.parent.getBoundingClientRect();\n                if (rect.width && rect.height) {\n                    scaleX = rect.width / this.parent.offsetWidth;\n                    scaleY = rect.height / this.parent.offsetHeight;\n                }\n            }\n            else {\n                ({ scaleX, scaleY } = this.view.viewState);\n            }\n        }\n        let visible = this.view.scrollDOM.getBoundingClientRect(), margins = getScrollMargins(this.view);\n        return {\n            visible: {\n                left: visible.left + margins.left, top: visible.top + margins.top,\n                right: visible.right - margins.right, bottom: visible.bottom - margins.bottom\n            },\n            parent: this.parent ? this.container.getBoundingClientRect() : this.view.dom.getBoundingClientRect(),\n            pos: this.manager.tooltips.map((t, i) => {\n                let tv = this.manager.tooltipViews[i];\n                return tv.getCoords ? tv.getCoords(t.pos) : this.view.coordsAtPos(t.pos);\n            }),\n            size: this.manager.tooltipViews.map(({ dom }) => dom.getBoundingClientRect()),\n            space: this.view.state.facet(tooltipConfig).tooltipSpace(this.view),\n            scaleX, scaleY, makeAbsolute\n        };\n    }\n    writeMeasure(measured) {\n        var _a;\n        if (measured.makeAbsolute) {\n            this.madeAbsolute = true;\n            this.position = \"absolute\";\n            for (let t of this.manager.tooltipViews)\n                t.dom.style.position = \"absolute\";\n        }\n        let { visible, space, scaleX, scaleY } = measured;\n        let others = [];\n        for (let i = 0; i < this.manager.tooltips.length; i++) {\n            let tooltip = this.manager.tooltips[i], tView = this.manager.tooltipViews[i], { dom } = tView;\n            let pos = measured.pos[i], size = measured.size[i];\n            // Hide tooltips that are outside of the editor.\n            if (!pos || tooltip.clip !== false && (pos.bottom <= Math.max(visible.top, space.top) ||\n                pos.top >= Math.min(visible.bottom, space.bottom) ||\n                pos.right < Math.max(visible.left, space.left) - .1 ||\n                pos.left > Math.min(visible.right, space.right) + .1)) {\n                dom.style.top = Outside;\n                continue;\n            }\n            let arrow = tooltip.arrow ? tView.dom.querySelector(\".cm-tooltip-arrow\") : null;\n            let arrowHeight = arrow ? 7 /* Arrow.Size */ : 0;\n            let width = size.right - size.left, height = (_a = knownHeight.get(tView)) !== null && _a !== void 0 ? _a : size.bottom - size.top;\n            let offset = tView.offset || noOffset, ltr = this.view.textDirection == Direction.LTR;\n            let left = size.width > space.right - space.left\n                ? (ltr ? space.left : space.right - size.width)\n                : ltr ? Math.max(space.left, Math.min(pos.left - (arrow ? 14 /* Arrow.Offset */ : 0) + offset.x, space.right - width))\n                    : Math.min(Math.max(space.left, pos.left - width + (arrow ? 14 /* Arrow.Offset */ : 0) - offset.x), space.right - width);\n            let above = this.above[i];\n            if (!tooltip.strictSide && (above\n                ? pos.top - height - arrowHeight - offset.y < space.top\n                : pos.bottom + height + arrowHeight + offset.y > space.bottom) &&\n                above == (space.bottom - pos.bottom > pos.top - space.top))\n                above = this.above[i] = !above;\n            let spaceVert = (above ? pos.top - space.top : space.bottom - pos.bottom) - arrowHeight;\n            if (spaceVert < height && tView.resize !== false) {\n                if (spaceVert < this.view.defaultLineHeight) {\n                    dom.style.top = Outside;\n                    continue;\n                }\n                knownHeight.set(tView, height);\n                dom.style.height = (height = spaceVert) / scaleY + \"px\";\n            }\n            else if (dom.style.height) {\n                dom.style.height = \"\";\n            }\n            let top = above ? pos.top - height - arrowHeight - offset.y : pos.bottom + arrowHeight + offset.y;\n            let right = left + width;\n            if (tView.overlap !== true)\n                for (let r of others)\n                    if (r.left < right && r.right > left && r.top < top + height && r.bottom > top)\n                        top = above ? r.top - height - 2 - arrowHeight : r.bottom + arrowHeight + 2;\n            if (this.position == \"absolute\") {\n                dom.style.top = (top - measured.parent.top) / scaleY + \"px\";\n                setLeftStyle(dom, (left - measured.parent.left) / scaleX);\n            }\n            else {\n                dom.style.top = top / scaleY + \"px\";\n                setLeftStyle(dom, left / scaleX);\n            }\n            if (arrow) {\n                let arrowLeft = pos.left + (ltr ? offset.x : -offset.x) - (left + 14 /* Arrow.Offset */ - 7 /* Arrow.Size */);\n                arrow.style.left = arrowLeft / scaleX + \"px\";\n            }\n            if (tView.overlap !== true)\n                others.push({ left, top, right, bottom: top + height });\n            dom.classList.toggle(\"cm-tooltip-above\", above);\n            dom.classList.toggle(\"cm-tooltip-below\", !above);\n            if (tView.positioned)\n                tView.positioned(measured.space);\n        }\n    }\n    maybeMeasure() {\n        if (this.manager.tooltips.length) {\n            if (this.view.inView)\n                this.view.requestMeasure(this.measureReq);\n            if (this.inView != this.view.inView) {\n                this.inView = this.view.inView;\n                if (!this.inView)\n                    for (let tv of this.manager.tooltipViews)\n                        tv.dom.style.top = Outside;\n            }\n        }\n    }\n}, {\n    eventObservers: {\n        scroll() { this.maybeMeasure(); }\n    }\n});\nfunction setLeftStyle(elt, value) {\n    let current = parseInt(elt.style.left, 10);\n    if (isNaN(current) || Math.abs(value - current) > 1)\n        elt.style.left = value + \"px\";\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-tooltip\": {\n        zIndex: 500,\n        boxSizing: \"border-box\"\n    },\n    \"&light .cm-tooltip\": {\n        border: \"1px solid #bbb\",\n        backgroundColor: \"#f5f5f5\"\n    },\n    \"&light .cm-tooltip-section:not(:first-child)\": {\n        borderTop: \"1px solid #bbb\",\n    },\n    \"&dark .cm-tooltip\": {\n        backgroundColor: \"#333338\",\n        color: \"white\"\n    },\n    \".cm-tooltip-arrow\": {\n        height: `${7 /* Arrow.Size */}px`,\n        width: `${7 /* Arrow.Size */ * 2}px`,\n        position: \"absolute\",\n        zIndex: -1,\n        overflow: \"hidden\",\n        \"&:before, &:after\": {\n            content: \"''\",\n            position: \"absolute\",\n            width: 0,\n            height: 0,\n            borderLeft: `${7 /* Arrow.Size */}px solid transparent`,\n            borderRight: `${7 /* Arrow.Size */}px solid transparent`,\n        },\n        \".cm-tooltip-above &\": {\n            bottom: `-${7 /* Arrow.Size */}px`,\n            \"&:before\": {\n                borderTop: `${7 /* Arrow.Size */}px solid #bbb`,\n            },\n            \"&:after\": {\n                borderTop: `${7 /* Arrow.Size */}px solid #f5f5f5`,\n                bottom: \"1px\"\n            }\n        },\n        \".cm-tooltip-below &\": {\n            top: `-${7 /* Arrow.Size */}px`,\n            \"&:before\": {\n                borderBottom: `${7 /* Arrow.Size */}px solid #bbb`,\n            },\n            \"&:after\": {\n                borderBottom: `${7 /* Arrow.Size */}px solid #f5f5f5`,\n                top: \"1px\"\n            }\n        },\n    },\n    \"&dark .cm-tooltip .cm-tooltip-arrow\": {\n        \"&:before\": {\n            borderTopColor: \"#333338\",\n            borderBottomColor: \"#333338\"\n        },\n        \"&:after\": {\n            borderTopColor: \"transparent\",\n            borderBottomColor: \"transparent\"\n        }\n    }\n});\nconst noOffset = { x: 0, y: 0 };\n/**\nFacet to which an extension can add a value to show a tooltip.\n*/\nconst showTooltip = /*@__PURE__*/Facet.define({\n    enables: [tooltipPlugin, baseTheme]\n});\nconst showHoverTooltip = /*@__PURE__*/Facet.define({\n    combine: inputs => inputs.reduce((a, i) => a.concat(i), [])\n});\nclass HoverTooltipHost {\n    // Needs to be static so that host tooltip instances always match\n    static create(view) {\n        return new HoverTooltipHost(view);\n    }\n    constructor(view) {\n        this.view = view;\n        this.mounted = false;\n        this.dom = document.createElement(\"div\");\n        this.dom.classList.add(\"cm-tooltip-hover\");\n        this.manager = new TooltipViewManager(view, showHoverTooltip, (t, p) => this.createHostedView(t, p), t => t.dom.remove());\n    }\n    createHostedView(tooltip, prev) {\n        let hostedView = tooltip.create(this.view);\n        hostedView.dom.classList.add(\"cm-tooltip-section\");\n        this.dom.insertBefore(hostedView.dom, prev ? prev.dom.nextSibling : this.dom.firstChild);\n        if (this.mounted && hostedView.mount)\n            hostedView.mount(this.view);\n        return hostedView;\n    }\n    mount(view) {\n        for (let hostedView of this.manager.tooltipViews) {\n            if (hostedView.mount)\n                hostedView.mount(view);\n        }\n        this.mounted = true;\n    }\n    positioned(space) {\n        for (let hostedView of this.manager.tooltipViews) {\n            if (hostedView.positioned)\n                hostedView.positioned(space);\n        }\n    }\n    update(update) {\n        this.manager.update(update);\n    }\n    destroy() {\n        var _a;\n        for (let t of this.manager.tooltipViews)\n            (_a = t.destroy) === null || _a === void 0 ? void 0 : _a.call(t);\n    }\n    passProp(name) {\n        let value = undefined;\n        for (let view of this.manager.tooltipViews) {\n            let given = view[name];\n            if (given !== undefined) {\n                if (value === undefined)\n                    value = given;\n                else if (value !== given)\n                    return undefined;\n            }\n        }\n        return value;\n    }\n    get offset() { return this.passProp(\"offset\"); }\n    get getCoords() { return this.passProp(\"getCoords\"); }\n    get overlap() { return this.passProp(\"overlap\"); }\n    get resize() { return this.passProp(\"resize\"); }\n}\nconst showHoverTooltipHost = /*@__PURE__*/showTooltip.compute([showHoverTooltip], state => {\n    let tooltips = state.facet(showHoverTooltip);\n    if (tooltips.length === 0)\n        return null;\n    return {\n        pos: Math.min(...tooltips.map(t => t.pos)),\n        end: Math.max(...tooltips.map(t => { var _a; return (_a = t.end) !== null && _a !== void 0 ? _a : t.pos; })),\n        create: HoverTooltipHost.create,\n        above: tooltips[0].above,\n        arrow: tooltips.some(t => t.arrow),\n    };\n});\nclass HoverPlugin {\n    constructor(view, source, field, setHover, hoverTime) {\n        this.view = view;\n        this.source = source;\n        this.field = field;\n        this.setHover = setHover;\n        this.hoverTime = hoverTime;\n        this.hoverTimeout = -1;\n        this.restartTimeout = -1;\n        this.pending = null;\n        this.lastMove = { x: 0, y: 0, target: view.dom, time: 0 };\n        this.checkHover = this.checkHover.bind(this);\n        view.dom.addEventListener(\"mouseleave\", this.mouseleave = this.mouseleave.bind(this));\n        view.dom.addEventListener(\"mousemove\", this.mousemove = this.mousemove.bind(this));\n    }\n    update() {\n        if (this.pending) {\n            this.pending = null;\n            clearTimeout(this.restartTimeout);\n            this.restartTimeout = setTimeout(() => this.startHover(), 20);\n        }\n    }\n    get active() {\n        return this.view.state.field(this.field);\n    }\n    checkHover() {\n        this.hoverTimeout = -1;\n        if (this.active.length)\n            return;\n        let hovered = Date.now() - this.lastMove.time;\n        if (hovered < this.hoverTime)\n            this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - hovered);\n        else\n            this.startHover();\n    }\n    startHover() {\n        clearTimeout(this.restartTimeout);\n        let { view, lastMove } = this;\n        let desc = view.docView.nearest(lastMove.target);\n        if (!desc)\n            return;\n        let pos, side = 1;\n        if (desc instanceof WidgetView) {\n            pos = desc.posAtStart;\n        }\n        else {\n            pos = view.posAtCoords(lastMove);\n            if (pos == null)\n                return;\n            let posCoords = view.coordsAtPos(pos);\n            if (!posCoords ||\n                lastMove.y < posCoords.top || lastMove.y > posCoords.bottom ||\n                lastMove.x < posCoords.left - view.defaultCharacterWidth ||\n                lastMove.x > posCoords.right + view.defaultCharacterWidth)\n                return;\n            let bidi = view.bidiSpans(view.state.doc.lineAt(pos)).find(s => s.from <= pos && s.to >= pos);\n            let rtl = bidi && bidi.dir == Direction.RTL ? -1 : 1;\n            side = (lastMove.x < posCoords.left ? -rtl : rtl);\n        }\n        let open = this.source(view, pos, side);\n        if (open === null || open === void 0 ? void 0 : open.then) {\n            let pending = this.pending = { pos };\n            open.then(result => {\n                if (this.pending == pending) {\n                    this.pending = null;\n                    if (result && !(Array.isArray(result) && !result.length))\n                        view.dispatch({ effects: this.setHover.of(Array.isArray(result) ? result : [result]) });\n                }\n            }, e => logException(view.state, e, \"hover tooltip\"));\n        }\n        else if (open && !(Array.isArray(open) && !open.length)) {\n            view.dispatch({ effects: this.setHover.of(Array.isArray(open) ? open : [open]) });\n        }\n    }\n    get tooltip() {\n        let plugin = this.view.plugin(tooltipPlugin);\n        let index = plugin ? plugin.manager.tooltips.findIndex(t => t.create == HoverTooltipHost.create) : -1;\n        return index > -1 ? plugin.manager.tooltipViews[index] : null;\n    }\n    mousemove(event) {\n        var _a, _b;\n        this.lastMove = { x: event.clientX, y: event.clientY, target: event.target, time: Date.now() };\n        if (this.hoverTimeout < 0)\n            this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime);\n        let { active, tooltip } = this;\n        if (active.length && tooltip && !isInTooltip(tooltip.dom, event) || this.pending) {\n            let { pos } = active[0] || this.pending, end = (_b = (_a = active[0]) === null || _a === void 0 ? void 0 : _a.end) !== null && _b !== void 0 ? _b : pos;\n            if ((pos == end ? this.view.posAtCoords(this.lastMove) != pos\n                : !isOverRange(this.view, pos, end, event.clientX, event.clientY))) {\n                this.view.dispatch({ effects: this.setHover.of([]) });\n                this.pending = null;\n            }\n        }\n    }\n    mouseleave(event) {\n        clearTimeout(this.hoverTimeout);\n        this.hoverTimeout = -1;\n        let { active } = this;\n        if (active.length) {\n            let { tooltip } = this;\n            let inTooltip = tooltip && tooltip.dom.contains(event.relatedTarget);\n            if (!inTooltip)\n                this.view.dispatch({ effects: this.setHover.of([]) });\n            else\n                this.watchTooltipLeave(tooltip.dom);\n        }\n    }\n    watchTooltipLeave(tooltip) {\n        let watch = (event) => {\n            tooltip.removeEventListener(\"mouseleave\", watch);\n            if (this.active.length && !this.view.dom.contains(event.relatedTarget))\n                this.view.dispatch({ effects: this.setHover.of([]) });\n        };\n        tooltip.addEventListener(\"mouseleave\", watch);\n    }\n    destroy() {\n        clearTimeout(this.hoverTimeout);\n        this.view.dom.removeEventListener(\"mouseleave\", this.mouseleave);\n        this.view.dom.removeEventListener(\"mousemove\", this.mousemove);\n    }\n}\nconst tooltipMargin = 4;\nfunction isInTooltip(tooltip, event) {\n    let { left, right, top, bottom } = tooltip.getBoundingClientRect(), arrow;\n    if (arrow = tooltip.querySelector(\".cm-tooltip-arrow\")) {\n        let arrowRect = arrow.getBoundingClientRect();\n        top = Math.min(arrowRect.top, top);\n        bottom = Math.max(arrowRect.bottom, bottom);\n    }\n    return event.clientX >= left - tooltipMargin && event.clientX <= right + tooltipMargin &&\n        event.clientY >= top - tooltipMargin && event.clientY <= bottom + tooltipMargin;\n}\nfunction isOverRange(view, from, to, x, y, margin) {\n    let rect = view.scrollDOM.getBoundingClientRect();\n    let docBottom = view.documentTop + view.documentPadding.top + view.contentHeight;\n    if (rect.left > x || rect.right < x || rect.top > y || Math.min(rect.bottom, docBottom) < y)\n        return false;\n    let pos = view.posAtCoords({ x, y }, false);\n    return pos >= from && pos <= to;\n}\n/**\nSet up a hover tooltip, which shows up when the pointer hovers\nover ranges of text. The callback is called when the mouse hovers\nover the document text. It should, if there is a tooltip\nassociated with position `pos`, return the tooltip description\n(either directly or in a promise). The `side` argument indicates\non which side of the position the pointer is\u2014it will be -1 if the\npointer is before the position, 1 if after the position.\n\nNote that all hover tooltips are hosted within a single tooltip\ncontainer element. This allows multiple tooltips over the same\nrange to be \"merged\" together without overlapping.\n\nThe return value is a valid [editor extension](https://codemirror.net/6/docs/ref/#state.Extension)\nbut also provides an `active` property holding a state field that\ncan be used to read the currently active tooltips produced by this\nextension.\n*/\nfunction hoverTooltip(source, options = {}) {\n    let setHover = StateEffect.define();\n    let hoverState = StateField.define({\n        create() { return []; },\n        update(value, tr) {\n            if (value.length) {\n                if (options.hideOnChange && (tr.docChanged || tr.selection))\n                    value = [];\n                else if (options.hideOn)\n                    value = value.filter(v => !options.hideOn(tr, v));\n                if (tr.docChanged) {\n                    let mapped = [];\n                    for (let tooltip of value) {\n                        let newPos = tr.changes.mapPos(tooltip.pos, -1, MapMode.TrackDel);\n                        if (newPos != null) {\n                            let copy = Object.assign(Object.create(null), tooltip);\n                            copy.pos = newPos;\n                            if (copy.end != null)\n                                copy.end = tr.changes.mapPos(copy.end);\n                            mapped.push(copy);\n                        }\n                    }\n                    value = mapped;\n                }\n            }\n            for (let effect of tr.effects) {\n                if (effect.is(setHover))\n                    value = effect.value;\n                if (effect.is(closeHoverTooltipEffect))\n                    value = [];\n            }\n            return value;\n        },\n        provide: f => showHoverTooltip.from(f)\n    });\n    return {\n        active: hoverState,\n        extension: [\n            hoverState,\n            ViewPlugin.define(view => new HoverPlugin(view, source, hoverState, setHover, options.hoverTime || 300 /* Hover.Time */)),\n            showHoverTooltipHost\n        ]\n    };\n}\n/**\nGet the active tooltip view for a given tooltip, if available.\n*/\nfunction getTooltip(view, tooltip) {\n    let plugin = view.plugin(tooltipPlugin);\n    if (!plugin)\n        return null;\n    let found = plugin.manager.tooltips.indexOf(tooltip);\n    return found < 0 ? null : plugin.manager.tooltipViews[found];\n}\n/**\nReturns true if any hover tooltips are currently active.\n*/\nfunction hasHoverTooltips(state) {\n    return state.facet(showHoverTooltip).some(x => x);\n}\nconst closeHoverTooltipEffect = /*@__PURE__*/StateEffect.define();\n/**\nTransaction effect that closes all hover tooltips.\n*/\nconst closeHoverTooltips = /*@__PURE__*/closeHoverTooltipEffect.of(null);\n/**\nTell the tooltip extension to recompute the position of the active\ntooltips. This can be useful when something happens (such as a\nre-positioning or CSS change affecting the editor) that could\ninvalidate the existing tooltip positions.\n*/\nfunction repositionTooltips(view) {\n    let plugin = view.plugin(tooltipPlugin);\n    if (plugin)\n        plugin.maybeMeasure();\n}\n\nconst panelConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        let topContainer, bottomContainer;\n        for (let c of configs) {\n            topContainer = topContainer || c.topContainer;\n            bottomContainer = bottomContainer || c.bottomContainer;\n        }\n        return { topContainer, bottomContainer };\n    }\n});\n/**\nConfigures the panel-managing extension.\n*/\nfunction panels(config) {\n    return config ? [panelConfig.of(config)] : [];\n}\n/**\nGet the active panel created by the given constructor, if any.\nThis can be useful when you need access to your panels' DOM\nstructure.\n*/\nfunction getPanel(view, panel) {\n    let plugin = view.plugin(panelPlugin);\n    let index = plugin ? plugin.specs.indexOf(panel) : -1;\n    return index > -1 ? plugin.panels[index] : null;\n}\nconst panelPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.input = view.state.facet(showPanel);\n        this.specs = this.input.filter(s => s);\n        this.panels = this.specs.map(spec => spec(view));\n        let conf = view.state.facet(panelConfig);\n        this.top = new PanelGroup(view, true, conf.topContainer);\n        this.bottom = new PanelGroup(view, false, conf.bottomContainer);\n        this.top.sync(this.panels.filter(p => p.top));\n        this.bottom.sync(this.panels.filter(p => !p.top));\n        for (let p of this.panels) {\n            p.dom.classList.add(\"cm-panel\");\n            if (p.mount)\n                p.mount();\n        }\n    }\n    update(update) {\n        let conf = update.state.facet(panelConfig);\n        if (this.top.container != conf.topContainer) {\n            this.top.sync([]);\n            this.top = new PanelGroup(update.view, true, conf.topContainer);\n        }\n        if (this.bottom.container != conf.bottomContainer) {\n            this.bottom.sync([]);\n            this.bottom = new PanelGroup(update.view, false, conf.bottomContainer);\n        }\n        this.top.syncClasses();\n        this.bottom.syncClasses();\n        let input = update.state.facet(showPanel);\n        if (input != this.input) {\n            let specs = input.filter(x => x);\n            let panels = [], top = [], bottom = [], mount = [];\n            for (let spec of specs) {\n                let known = this.specs.indexOf(spec), panel;\n                if (known < 0) {\n                    panel = spec(update.view);\n                    mount.push(panel);\n                }\n                else {\n                    panel = this.panels[known];\n                    if (panel.update)\n                        panel.update(update);\n                }\n                panels.push(panel);\n                (panel.top ? top : bottom).push(panel);\n            }\n            this.specs = specs;\n            this.panels = panels;\n            this.top.sync(top);\n            this.bottom.sync(bottom);\n            for (let p of mount) {\n                p.dom.classList.add(\"cm-panel\");\n                if (p.mount)\n                    p.mount();\n            }\n        }\n        else {\n            for (let p of this.panels)\n                if (p.update)\n                    p.update(update);\n        }\n    }\n    destroy() {\n        this.top.sync([]);\n        this.bottom.sync([]);\n    }\n}, {\n    provide: plugin => EditorView.scrollMargins.of(view => {\n        let value = view.plugin(plugin);\n        return value && { top: value.top.scrollMargin(), bottom: value.bottom.scrollMargin() };\n    })\n});\nclass PanelGroup {\n    constructor(view, top, container) {\n        this.view = view;\n        this.top = top;\n        this.container = container;\n        this.dom = undefined;\n        this.classes = \"\";\n        this.panels = [];\n        this.syncClasses();\n    }\n    sync(panels) {\n        for (let p of this.panels)\n            if (p.destroy && panels.indexOf(p) < 0)\n                p.destroy();\n        this.panels = panels;\n        this.syncDOM();\n    }\n    syncDOM() {\n        if (this.panels.length == 0) {\n            if (this.dom) {\n                this.dom.remove();\n                this.dom = undefined;\n            }\n            return;\n        }\n        if (!this.dom) {\n            this.dom = document.createElement(\"div\");\n            this.dom.className = this.top ? \"cm-panels cm-panels-top\" : \"cm-panels cm-panels-bottom\";\n            this.dom.style[this.top ? \"top\" : \"bottom\"] = \"0\";\n            let parent = this.container || this.view.dom;\n            parent.insertBefore(this.dom, this.top ? parent.firstChild : null);\n        }\n        let curDOM = this.dom.firstChild;\n        for (let panel of this.panels) {\n            if (panel.dom.parentNode == this.dom) {\n                while (curDOM != panel.dom)\n                    curDOM = rm(curDOM);\n                curDOM = curDOM.nextSibling;\n            }\n            else {\n                this.dom.insertBefore(panel.dom, curDOM);\n            }\n        }\n        while (curDOM)\n            curDOM = rm(curDOM);\n    }\n    scrollMargin() {\n        return !this.dom || this.container ? 0\n            : Math.max(0, this.top ?\n                this.dom.getBoundingClientRect().bottom - Math.max(0, this.view.scrollDOM.getBoundingClientRect().top) :\n                Math.min(innerHeight, this.view.scrollDOM.getBoundingClientRect().bottom) - this.dom.getBoundingClientRect().top);\n    }\n    syncClasses() {\n        if (!this.container || this.classes == this.view.themeClasses)\n            return;\n        for (let cls of this.classes.split(\" \"))\n            if (cls)\n                this.container.classList.remove(cls);\n        for (let cls of (this.classes = this.view.themeClasses).split(\" \"))\n            if (cls)\n                this.container.classList.add(cls);\n    }\n}\nfunction rm(node) {\n    let next = node.nextSibling;\n    node.remove();\n    return next;\n}\n/**\nOpening a panel is done by providing a constructor function for\nthe panel through this facet. (The panel is closed again when its\nconstructor is no longer provided.) Values of `null` are ignored.\n*/\nconst showPanel = /*@__PURE__*/Facet.define({\n    enables: panelPlugin\n});\n\n/**\nA gutter marker represents a bit of information attached to a line\nin a specific gutter. Your own custom markers have to extend this\nclass.\n*/\nclass GutterMarker extends RangeValue {\n    /**\n    @internal\n    */\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /**\n    Compare this marker to another marker of the same type.\n    */\n    eq(other) { return false; }\n    /**\n    Called if the marker has a `toDOM` method and its representation\n    was removed from a gutter.\n    */\n    destroy(dom) { }\n}\nGutterMarker.prototype.elementClass = \"\";\nGutterMarker.prototype.toDOM = undefined;\nGutterMarker.prototype.mapMode = MapMode.TrackBefore;\nGutterMarker.prototype.startSide = GutterMarker.prototype.endSide = -1;\nGutterMarker.prototype.point = true;\n/**\nFacet used to add a class to all gutter elements for a given line.\nMarkers given to this facet should _only_ define an\n[`elementclass`](https://codemirror.net/6/docs/ref/#view.GutterMarker.elementClass), not a\n[`toDOM`](https://codemirror.net/6/docs/ref/#view.GutterMarker.toDOM) (or the marker will appear\nin all gutters for the line).\n*/\nconst gutterLineClass = /*@__PURE__*/Facet.define();\n/**\nFacet used to add a class to all gutter elements next to a widget.\nShould not provide widgets with a `toDOM` method.\n*/\nconst gutterWidgetClass = /*@__PURE__*/Facet.define();\nconst defaults = {\n    class: \"\",\n    renderEmptyElements: false,\n    elementStyle: \"\",\n    markers: () => RangeSet.empty,\n    lineMarker: () => null,\n    widgetMarker: () => null,\n    lineMarkerChange: null,\n    initialSpacer: null,\n    updateSpacer: null,\n    domEventHandlers: {}\n};\nconst activeGutters = /*@__PURE__*/Facet.define();\n/**\nDefine an editor gutter. The order in which the gutters appear is\ndetermined by their extension priority.\n*/\nfunction gutter(config) {\n    return [gutters(), activeGutters.of(Object.assign(Object.assign({}, defaults), config))];\n}\nconst unfixGutters = /*@__PURE__*/Facet.define({\n    combine: values => values.some(x => x)\n});\n/**\nThe gutter-drawing plugin is automatically enabled when you add a\ngutter, but you can use this function to explicitly configure it.\n\nUnless `fixed` is explicitly set to `false`, the gutters are\nfixed, meaning they don't scroll along with the content\nhorizontally (except on Internet Explorer, which doesn't support\nCSS [`position:\nsticky`](https://developer.mozilla.org/en-US/docs/Web/CSS/position#sticky)).\n*/\nfunction gutters(config) {\n    let result = [\n        gutterView,\n    ];\n    if (config && config.fixed === false)\n        result.push(unfixGutters.of(true));\n    return result;\n}\nconst gutterView = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.prevViewport = view.viewport;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutters\";\n        this.dom.setAttribute(\"aria-hidden\", \"true\");\n        this.dom.style.minHeight = (this.view.contentHeight / this.view.scaleY) + \"px\";\n        this.gutters = view.state.facet(activeGutters).map(conf => new SingleGutterView(view, conf));\n        for (let gutter of this.gutters)\n            this.dom.appendChild(gutter.dom);\n        this.fixed = !view.state.facet(unfixGutters);\n        if (this.fixed) {\n            // FIXME IE11 fallback, which doesn't support position: sticky,\n            // by using position: relative + event handlers that realign the\n            // gutter (or just force fixed=false on IE11?)\n            this.dom.style.position = \"sticky\";\n        }\n        this.syncGutters(false);\n        view.scrollDOM.insertBefore(this.dom, view.contentDOM);\n    }\n    update(update) {\n        if (this.updateGutters(update)) {\n            // Detach during sync when the viewport changed significantly\n            // (such as during scrolling), since for large updates that is\n            // faster.\n            let vpA = this.prevViewport, vpB = update.view.viewport;\n            let vpOverlap = Math.min(vpA.to, vpB.to) - Math.max(vpA.from, vpB.from);\n            this.syncGutters(vpOverlap < (vpB.to - vpB.from) * 0.8);\n        }\n        if (update.geometryChanged) {\n            this.dom.style.minHeight = (this.view.contentHeight / this.view.scaleY) + \"px\";\n        }\n        if (this.view.state.facet(unfixGutters) != !this.fixed) {\n            this.fixed = !this.fixed;\n            this.dom.style.position = this.fixed ? \"sticky\" : \"\";\n        }\n        this.prevViewport = update.view.viewport;\n    }\n    syncGutters(detach) {\n        let after = this.dom.nextSibling;\n        if (detach)\n            this.dom.remove();\n        let lineClasses = RangeSet.iter(this.view.state.facet(gutterLineClass), this.view.viewport.from);\n        let classSet = [];\n        let contexts = this.gutters.map(gutter => new UpdateContext(gutter, this.view.viewport, -this.view.documentPadding.top));\n        for (let line of this.view.viewportLineBlocks) {\n            if (classSet.length)\n                classSet = [];\n            if (Array.isArray(line.type)) {\n                let first = true;\n                for (let b of line.type) {\n                    if (b.type == BlockType.Text && first) {\n                        advanceCursor(lineClasses, classSet, b.from);\n                        for (let cx of contexts)\n                            cx.line(this.view, b, classSet);\n                        first = false;\n                    }\n                    else if (b.widget) {\n                        for (let cx of contexts)\n                            cx.widget(this.view, b);\n                    }\n                }\n            }\n            else if (line.type == BlockType.Text) {\n                advanceCursor(lineClasses, classSet, line.from);\n                for (let cx of contexts)\n                    cx.line(this.view, line, classSet);\n            }\n            else if (line.widget) {\n                for (let cx of contexts)\n                    cx.widget(this.view, line);\n            }\n        }\n        for (let cx of contexts)\n            cx.finish();\n        if (detach)\n            this.view.scrollDOM.insertBefore(this.dom, after);\n    }\n    updateGutters(update) {\n        let prev = update.startState.facet(activeGutters), cur = update.state.facet(activeGutters);\n        let change = update.docChanged || update.heightChanged || update.viewportChanged ||\n            !RangeSet.eq(update.startState.facet(gutterLineClass), update.state.facet(gutterLineClass), update.view.viewport.from, update.view.viewport.to);\n        if (prev == cur) {\n            for (let gutter of this.gutters)\n                if (gutter.update(update))\n                    change = true;\n        }\n        else {\n            change = true;\n            let gutters = [];\n            for (let conf of cur) {\n                let known = prev.indexOf(conf);\n                if (known < 0) {\n                    gutters.push(new SingleGutterView(this.view, conf));\n                }\n                else {\n                    this.gutters[known].update(update);\n                    gutters.push(this.gutters[known]);\n                }\n            }\n            for (let g of this.gutters) {\n                g.dom.remove();\n                if (gutters.indexOf(g) < 0)\n                    g.destroy();\n            }\n            for (let g of gutters)\n                this.dom.appendChild(g.dom);\n            this.gutters = gutters;\n        }\n        return change;\n    }\n    destroy() {\n        for (let view of this.gutters)\n            view.destroy();\n        this.dom.remove();\n    }\n}, {\n    provide: plugin => EditorView.scrollMargins.of(view => {\n        let value = view.plugin(plugin);\n        if (!value || value.gutters.length == 0 || !value.fixed)\n            return null;\n        return view.textDirection == Direction.LTR\n            ? { left: value.dom.offsetWidth * view.scaleX }\n            : { right: value.dom.offsetWidth * view.scaleX };\n    })\n});\nfunction asArray(val) { return (Array.isArray(val) ? val : [val]); }\nfunction advanceCursor(cursor, collect, pos) {\n    while (cursor.value && cursor.from <= pos) {\n        if (cursor.from == pos)\n            collect.push(cursor.value);\n        cursor.next();\n    }\n}\nclass UpdateContext {\n    constructor(gutter, viewport, height) {\n        this.gutter = gutter;\n        this.height = height;\n        this.i = 0;\n        this.cursor = RangeSet.iter(gutter.markers, viewport.from);\n    }\n    addElement(view, block, markers) {\n        let { gutter } = this, above = (block.top - this.height) / view.scaleY, height = block.height / view.scaleY;\n        if (this.i == gutter.elements.length) {\n            let newElt = new GutterElement(view, height, above, markers);\n            gutter.elements.push(newElt);\n            gutter.dom.appendChild(newElt.dom);\n        }\n        else {\n            gutter.elements[this.i].update(view, height, above, markers);\n        }\n        this.height = block.bottom;\n        this.i++;\n    }\n    line(view, line, extraMarkers) {\n        let localMarkers = [];\n        advanceCursor(this.cursor, localMarkers, line.from);\n        if (extraMarkers.length)\n            localMarkers = localMarkers.concat(extraMarkers);\n        let forLine = this.gutter.config.lineMarker(view, line, localMarkers);\n        if (forLine)\n            localMarkers.unshift(forLine);\n        let gutter = this.gutter;\n        if (localMarkers.length == 0 && !gutter.config.renderEmptyElements)\n            return;\n        this.addElement(view, line, localMarkers);\n    }\n    widget(view, block) {\n        let marker = this.gutter.config.widgetMarker(view, block.widget, block), markers = marker ? [marker] : null;\n        for (let cls of view.state.facet(gutterWidgetClass)) {\n            let marker = cls(view, block.widget, block);\n            if (marker)\n                (markers || (markers = [])).push(marker);\n        }\n        if (markers)\n            this.addElement(view, block, markers);\n    }\n    finish() {\n        let gutter = this.gutter;\n        while (gutter.elements.length > this.i) {\n            let last = gutter.elements.pop();\n            gutter.dom.removeChild(last.dom);\n            last.destroy();\n        }\n    }\n}\nclass SingleGutterView {\n    constructor(view, config) {\n        this.view = view;\n        this.config = config;\n        this.elements = [];\n        this.spacer = null;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutter\" + (this.config.class ? \" \" + this.config.class : \"\");\n        for (let prop in config.domEventHandlers) {\n            this.dom.addEventListener(prop, (event) => {\n                let target = event.target, y;\n                if (target != this.dom && this.dom.contains(target)) {\n                    while (target.parentNode != this.dom)\n                        target = target.parentNode;\n                    let rect = target.getBoundingClientRect();\n                    y = (rect.top + rect.bottom) / 2;\n                }\n                else {\n                    y = event.clientY;\n                }\n                let line = view.lineBlockAtHeight(y - view.documentTop);\n                if (config.domEventHandlers[prop](view, line, event))\n                    event.preventDefault();\n            });\n        }\n        this.markers = asArray(config.markers(view));\n        if (config.initialSpacer) {\n            this.spacer = new GutterElement(view, 0, 0, [config.initialSpacer(view)]);\n            this.dom.appendChild(this.spacer.dom);\n            this.spacer.dom.style.cssText += \"visibility: hidden; pointer-events: none\";\n        }\n    }\n    update(update) {\n        let prevMarkers = this.markers;\n        this.markers = asArray(this.config.markers(update.view));\n        if (this.spacer && this.config.updateSpacer) {\n            let updated = this.config.updateSpacer(this.spacer.markers[0], update);\n            if (updated != this.spacer.markers[0])\n                this.spacer.update(update.view, 0, 0, [updated]);\n        }\n        let vp = update.view.viewport;\n        return !RangeSet.eq(this.markers, prevMarkers, vp.from, vp.to) ||\n            (this.config.lineMarkerChange ? this.config.lineMarkerChange(update) : false);\n    }\n    destroy() {\n        for (let elt of this.elements)\n            elt.destroy();\n    }\n}\nclass GutterElement {\n    constructor(view, height, above, markers) {\n        this.height = -1;\n        this.above = 0;\n        this.markers = [];\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutterElement\";\n        this.update(view, height, above, markers);\n    }\n    update(view, height, above, markers) {\n        if (this.height != height) {\n            this.height = height;\n            this.dom.style.height = height + \"px\";\n        }\n        if (this.above != above)\n            this.dom.style.marginTop = (this.above = above) ? above + \"px\" : \"\";\n        if (!sameMarkers(this.markers, markers))\n            this.setMarkers(view, markers);\n    }\n    setMarkers(view, markers) {\n        let cls = \"cm-gutterElement\", domPos = this.dom.firstChild;\n        for (let iNew = 0, iOld = 0;;) {\n            let skipTo = iOld, marker = iNew < markers.length ? markers[iNew++] : null, matched = false;\n            if (marker) {\n                let c = marker.elementClass;\n                if (c)\n                    cls += \" \" + c;\n                for (let i = iOld; i < this.markers.length; i++)\n                    if (this.markers[i].compare(marker)) {\n                        skipTo = i;\n                        matched = true;\n                        break;\n                    }\n            }\n            else {\n                skipTo = this.markers.length;\n            }\n            while (iOld < skipTo) {\n                let next = this.markers[iOld++];\n                if (next.toDOM) {\n                    next.destroy(domPos);\n                    let after = domPos.nextSibling;\n                    domPos.remove();\n                    domPos = after;\n                }\n            }\n            if (!marker)\n                break;\n            if (marker.toDOM) {\n                if (matched)\n                    domPos = domPos.nextSibling;\n                else\n                    this.dom.insertBefore(marker.toDOM(view), domPos);\n            }\n            if (matched)\n                iOld++;\n        }\n        this.dom.className = cls;\n        this.markers = markers;\n    }\n    destroy() {\n        this.setMarkers(null, []); // First argument not used unless creating markers\n    }\n}\nfunction sameMarkers(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].compare(b[i]))\n            return false;\n    return true;\n}\n/**\nFacet used to provide markers to the line number gutter.\n*/\nconst lineNumberMarkers = /*@__PURE__*/Facet.define();\n/**\nFacet used to create markers in the line number gutter next to widgets.\n*/\nconst lineNumberWidgetMarker = /*@__PURE__*/Facet.define();\nconst lineNumberConfig = /*@__PURE__*/Facet.define({\n    combine(values) {\n        return combineConfig(values, { formatNumber: String, domEventHandlers: {} }, {\n            domEventHandlers(a, b) {\n                let result = Object.assign({}, a);\n                for (let event in b) {\n                    let exists = result[event], add = b[event];\n                    result[event] = exists ? (view, line, event) => exists(view, line, event) || add(view, line, event) : add;\n                }\n                return result;\n            }\n        });\n    }\n});\nclass NumberMarker extends GutterMarker {\n    constructor(number) {\n        super();\n        this.number = number;\n    }\n    eq(other) { return this.number == other.number; }\n    toDOM() { return document.createTextNode(this.number); }\n}\nfunction formatNumber(view, number) {\n    return view.state.facet(lineNumberConfig).formatNumber(number, view.state);\n}\nconst lineNumberGutter = /*@__PURE__*/activeGutters.compute([lineNumberConfig], state => ({\n    class: \"cm-lineNumbers\",\n    renderEmptyElements: false,\n    markers(view) { return view.state.facet(lineNumberMarkers); },\n    lineMarker(view, line, others) {\n        if (others.some(m => m.toDOM))\n            return null;\n        return new NumberMarker(formatNumber(view, view.state.doc.lineAt(line.from).number));\n    },\n    widgetMarker: (view, widget, block) => {\n        for (let m of view.state.facet(lineNumberWidgetMarker)) {\n            let result = m(view, widget, block);\n            if (result)\n                return result;\n        }\n        return null;\n    },\n    lineMarkerChange: update => update.startState.facet(lineNumberConfig) != update.state.facet(lineNumberConfig),\n    initialSpacer(view) {\n        return new NumberMarker(formatNumber(view, maxLineNumber(view.state.doc.lines)));\n    },\n    updateSpacer(spacer, update) {\n        let max = formatNumber(update.view, maxLineNumber(update.view.state.doc.lines));\n        return max == spacer.number ? spacer : new NumberMarker(max);\n    },\n    domEventHandlers: state.facet(lineNumberConfig).domEventHandlers\n}));\n/**\nCreate a line number gutter extension.\n*/\nfunction lineNumbers(config = {}) {\n    return [\n        lineNumberConfig.of(config),\n        gutters(),\n        lineNumberGutter\n    ];\n}\nfunction maxLineNumber(lines) {\n    let last = 9;\n    while (last < lines)\n        last = last * 10 + 9;\n    return last;\n}\nconst activeLineGutterMarker = /*@__PURE__*/new class extends GutterMarker {\n    constructor() {\n        super(...arguments);\n        this.elementClass = \"cm-activeLineGutter\";\n    }\n};\nconst activeLineGutterHighlighter = /*@__PURE__*/gutterLineClass.compute([\"selection\"], state => {\n    let marks = [], last = -1;\n    for (let range of state.selection.ranges) {\n        let linePos = state.doc.lineAt(range.head).from;\n        if (linePos > last) {\n            last = linePos;\n            marks.push(activeLineGutterMarker.range(linePos));\n        }\n    }\n    return RangeSet.of(marks);\n});\n/**\nReturns an extension that adds a `cm-activeLineGutter` class to\nall gutter elements on the [active\nline](https://codemirror.net/6/docs/ref/#view.highlightActiveLine).\n*/\nfunction highlightActiveLineGutter() {\n    return activeLineGutterHighlighter;\n}\n\nfunction matcher(decorator) {\n    return ViewPlugin.define(view => ({\n        decorations: decorator.createDeco(view),\n        update(u) {\n            this.decorations = decorator.updateDeco(u, this.decorations);\n        },\n    }), {\n        decorations: v => v.decorations\n    });\n}\nconst tabDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-highlightTab\" });\nconst spaceDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-highlightSpace\" });\nconst whitespaceHighlighter = /*@__PURE__*/matcher(/*@__PURE__*/new MatchDecorator({\n    regexp: /\\t| /g,\n    decoration: match => match[0] == \"\\t\" ? tabDeco : spaceDeco,\n    boundary: /\\S/,\n}));\n/**\nReturns an extension that highlights whitespace, adding a\n`cm-highlightSpace` class to stretches of spaces, and a\n`cm-highlightTab` class to individual tab characters. By default,\nthe former are shown as faint dots, and the latter as arrows.\n*/\nfunction highlightWhitespace() {\n    return whitespaceHighlighter;\n}\nconst trailingHighlighter = /*@__PURE__*/matcher(/*@__PURE__*/new MatchDecorator({\n    regexp: /\\s+$/g,\n    decoration: /*@__PURE__*/Decoration.mark({ class: \"cm-trailingSpace\" }),\n    boundary: /\\S/,\n}));\n/**\nReturns an extension that adds a `cm-trailingSpace` class to all\ntrailing whitespace.\n*/\nfunction highlightTrailingWhitespace() {\n    return trailingHighlighter;\n}\n\n/**\n@internal\n*/\nconst __test = { HeightMap, HeightOracle, MeasuredHeights, QueryType, ChangedRange, computeOrder,\n    moveVisually, clearHeightChangeFlag, getHeightChangeFlag: () => heightChangeFlag };\n\nexport { BidiSpan, BlockInfo, BlockType, Decoration, Direction, EditorView, GutterMarker, MatchDecorator, RectangleMarker, ViewPlugin, ViewUpdate, WidgetType, __test, closeHoverTooltips, crosshairCursor, drawSelection, dropCursor, getDrawSelectionConfig, getPanel, getTooltip, gutter, gutterLineClass, gutterWidgetClass, gutters, hasHoverTooltips, highlightActiveLine, highlightActiveLineGutter, highlightSpecialChars, highlightTrailingWhitespace, highlightWhitespace, hoverTooltip, keymap, layer, lineNumberMarkers, lineNumberWidgetMarker, lineNumbers, logException, panels, placeholder, rectangularSelection, repositionTooltips, runScopeHandlers, scrollPastEnd, showPanel, showTooltip, tooltips };\n", "/**\nThe default maximum length of a `TreeBuffer` node.\n*/\nconst DefaultBufferLength = 1024;\nlet nextPropID = 0;\nclass Range {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\n/**\nEach [node type](#common.NodeType) or [individual tree](#common.Tree)\ncan have metadata associated with it in props. Instances of this\nclass represent prop names.\n*/\nclass NodeProp {\n    /**\n    Create a new node prop type.\n    */\n    constructor(config = {}) {\n        this.id = nextPropID++;\n        this.perNode = !!config.perNode;\n        this.deserialize = config.deserialize || (() => {\n            throw new Error(\"This node type doesn't define a deserialize function\");\n        });\n    }\n    /**\n    This is meant to be used with\n    [`NodeSet.extend`](#common.NodeSet.extend) or\n    [`LRParser.configure`](#lr.ParserConfig.props) to compute\n    prop values for each node type in the set. Takes a [match\n    object](#common.NodeType^match) or function that returns undefined\n    if the node type doesn't get this prop, and the prop's value if\n    it does.\n    */\n    add(match) {\n        if (this.perNode)\n            throw new RangeError(\"Can't add per-node props to node types\");\n        if (typeof match != \"function\")\n            match = NodeType.match(match);\n        return (type) => {\n            let result = match(type);\n            return result === undefined ? null : [this, result];\n        };\n    }\n}\n/**\nProp that is used to describe matching delimiters. For opening\ndelimiters, this holds an array of node names (written as a\nspace-separated string when declaring this prop in a grammar)\nfor the node types of closing delimiters that match it.\n*/\nNodeProp.closedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nThe inverse of [`closedBy`](#common.NodeProp^closedBy). This is\nattached to closing delimiters, holding an array of node names\nof types of matching opening delimiters.\n*/\nNodeProp.openedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nUsed to assign node types to groups (for example, all node\ntypes that represent an expression could be tagged with an\n`\"Expression\"` group).\n*/\nNodeProp.group = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nAttached to nodes to indicate these should be\n[displayed](https://codemirror.net/docs/ref/#language.syntaxTree)\nin a bidirectional text isolate, so that direction-neutral\ncharacters on their sides don't incorrectly get associated with\nsurrounding text. You'll generally want to set this for nodes\nthat contain arbitrary text, like strings and comments, and for\nnodes that appear _inside_ arbitrary text, like HTML tags. When\nnot given a value, in a grammar declaration, defaults to\n`\"auto\"`.\n*/\nNodeProp.isolate = new NodeProp({ deserialize: value => {\n        if (value && value != \"rtl\" && value != \"ltr\" && value != \"auto\")\n            throw new RangeError(\"Invalid value for isolate: \" + value);\n        return value || \"auto\";\n    } });\n/**\nThe hash of the [context](#lr.ContextTracker.constructor)\nthat the node was parsed in, if any. Used to limit reuse of\ncontextual nodes.\n*/\nNodeProp.contextHash = new NodeProp({ perNode: true });\n/**\nThe distance beyond the end of the node that the tokenizer\nlooked ahead for any of the tokens inside the node. (The LR\nparser only stores this when it is larger than 25, for\nefficiency reasons.)\n*/\nNodeProp.lookAhead = new NodeProp({ perNode: true });\n/**\nThis per-node prop is used to replace a given node, or part of a\nnode, with another tree. This is useful to include trees from\ndifferent languages in mixed-language parsers.\n*/\nNodeProp.mounted = new NodeProp({ perNode: true });\n/**\nA mounted tree, which can be [stored](#common.NodeProp^mounted) on\na tree node to indicate that parts of its content are\nrepresented by another tree.\n*/\nclass MountedTree {\n    constructor(\n    /**\n    The inner tree.\n    */\n    tree, \n    /**\n    If this is null, this tree replaces the entire node (it will\n    be included in the regular iteration instead of its host\n    node). If not, only the given ranges are considered to be\n    covered by this tree. This is used for trees that are mixed in\n    a way that isn't strictly hierarchical. Such mounted trees are\n    only entered by [`resolveInner`](#common.Tree.resolveInner)\n    and [`enter`](#common.SyntaxNode.enter).\n    */\n    overlay, \n    /**\n    The parser used to create this subtree.\n    */\n    parser) {\n        this.tree = tree;\n        this.overlay = overlay;\n        this.parser = parser;\n    }\n    /**\n    @internal\n    */\n    static get(tree) {\n        return tree && tree.props && tree.props[NodeProp.mounted.id];\n    }\n}\nconst noProps = Object.create(null);\n/**\nEach node in a syntax tree has a node type associated with it.\n*/\nclass NodeType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name of the node type. Not necessarily unique, but if the\n    grammar was written properly, different node types with the\n    same name within a node set should play the same semantic\n    role.\n    */\n    name, \n    /**\n    @internal\n    */\n    props, \n    /**\n    The id of this node in its set. Corresponds to the term ids\n    used in the parser.\n    */\n    id, \n    /**\n    @internal\n    */\n    flags = 0) {\n        this.name = name;\n        this.props = props;\n        this.id = id;\n        this.flags = flags;\n    }\n    /**\n    Define a node type.\n    */\n    static define(spec) {\n        let props = spec.props && spec.props.length ? Object.create(null) : noProps;\n        let flags = (spec.top ? 1 /* NodeFlag.Top */ : 0) | (spec.skipped ? 2 /* NodeFlag.Skipped */ : 0) |\n            (spec.error ? 4 /* NodeFlag.Error */ : 0) | (spec.name == null ? 8 /* NodeFlag.Anonymous */ : 0);\n        let type = new NodeType(spec.name || \"\", props, spec.id, flags);\n        if (spec.props)\n            for (let src of spec.props) {\n                if (!Array.isArray(src))\n                    src = src(type);\n                if (src) {\n                    if (src[0].perNode)\n                        throw new RangeError(\"Can't store a per-node prop on a node type\");\n                    props[src[0].id] = src[1];\n                }\n            }\n        return type;\n    }\n    /**\n    Retrieves a node prop for this type. Will return `undefined` if\n    the prop isn't present on this node.\n    */\n    prop(prop) { return this.props[prop.id]; }\n    /**\n    True when this is the top node of a grammar.\n    */\n    get isTop() { return (this.flags & 1 /* NodeFlag.Top */) > 0; }\n    /**\n    True when this node is produced by a skip rule.\n    */\n    get isSkipped() { return (this.flags & 2 /* NodeFlag.Skipped */) > 0; }\n    /**\n    Indicates whether this is an error node.\n    */\n    get isError() { return (this.flags & 4 /* NodeFlag.Error */) > 0; }\n    /**\n    When true, this node type doesn't correspond to a user-declared\n    named node, for example because it is used to cache repetition.\n    */\n    get isAnonymous() { return (this.flags & 8 /* NodeFlag.Anonymous */) > 0; }\n    /**\n    Returns true when this node's name or one of its\n    [groups](#common.NodeProp^group) matches the given string.\n    */\n    is(name) {\n        if (typeof name == 'string') {\n            if (this.name == name)\n                return true;\n            let group = this.prop(NodeProp.group);\n            return group ? group.indexOf(name) > -1 : false;\n        }\n        return this.id == name;\n    }\n    /**\n    Create a function from node types to arbitrary values by\n    specifying an object whose property names are node or\n    [group](#common.NodeProp^group) names. Often useful with\n    [`NodeProp.add`](#common.NodeProp.add). You can put multiple\n    names, separated by spaces, in a single property name to map\n    multiple node names to a single value.\n    */\n    static match(map) {\n        let direct = Object.create(null);\n        for (let prop in map)\n            for (let name of prop.split(\" \"))\n                direct[name] = map[prop];\n        return (node) => {\n            for (let groups = node.prop(NodeProp.group), i = -1; i < (groups ? groups.length : 0); i++) {\n                let found = direct[i < 0 ? node.name : groups[i]];\n                if (found)\n                    return found;\n            }\n        };\n    }\n}\n/**\nAn empty dummy node type to use when no actual type is available.\n*/\nNodeType.none = new NodeType(\"\", Object.create(null), 0, 8 /* NodeFlag.Anonymous */);\n/**\nA node set holds a collection of node types. It is used to\ncompactly represent trees by storing their type ids, rather than a\nfull pointer to the type object, in a numeric array. Each parser\n[has](#lr.LRParser.nodeSet) a node set, and [tree\nbuffers](#common.TreeBuffer) can only store collections of nodes\nfrom the same set. A set can have a maximum of 2**16 (65536) node\ntypes in it, so that the ids fit into 16-bit typed array slots.\n*/\nclass NodeSet {\n    /**\n    Create a set with the given types. The `id` property of each\n    type should correspond to its position within the array.\n    */\n    constructor(\n    /**\n    The node types in this set, by id.\n    */\n    types) {\n        this.types = types;\n        for (let i = 0; i < types.length; i++)\n            if (types[i].id != i)\n                throw new RangeError(\"Node type ids should correspond to array positions when creating a node set\");\n    }\n    /**\n    Create a copy of this set with some node properties added. The\n    arguments to this method can be created with\n    [`NodeProp.add`](#common.NodeProp.add).\n    */\n    extend(...props) {\n        let newTypes = [];\n        for (let type of this.types) {\n            let newProps = null;\n            for (let source of props) {\n                let add = source(type);\n                if (add) {\n                    if (!newProps)\n                        newProps = Object.assign({}, type.props);\n                    newProps[add[0].id] = add[1];\n                }\n            }\n            newTypes.push(newProps ? new NodeType(type.name, newProps, type.id, type.flags) : type);\n        }\n        return new NodeSet(newTypes);\n    }\n}\nconst CachedNode = new WeakMap(), CachedInnerNode = new WeakMap();\n/**\nOptions that control iteration. Can be combined with the `|`\noperator to enable multiple ones.\n*/\nvar IterMode;\n(function (IterMode) {\n    /**\n    When enabled, iteration will only visit [`Tree`](#common.Tree)\n    objects, not nodes packed into\n    [`TreeBuffer`](#common.TreeBuffer)s.\n    */\n    IterMode[IterMode[\"ExcludeBuffers\"] = 1] = \"ExcludeBuffers\";\n    /**\n    Enable this to make iteration include anonymous nodes (such as\n    the nodes that wrap repeated grammar constructs into a balanced\n    tree).\n    */\n    IterMode[IterMode[\"IncludeAnonymous\"] = 2] = \"IncludeAnonymous\";\n    /**\n    By default, regular [mounted](#common.NodeProp^mounted) nodes\n    replace their base node in iteration. Enable this to ignore them\n    instead.\n    */\n    IterMode[IterMode[\"IgnoreMounts\"] = 4] = \"IgnoreMounts\";\n    /**\n    This option only applies in\n    [`enter`](#common.SyntaxNode.enter)-style methods. It tells the\n    library to not enter mounted overlays if one covers the given\n    position.\n    */\n    IterMode[IterMode[\"IgnoreOverlays\"] = 8] = \"IgnoreOverlays\";\n})(IterMode || (IterMode = {}));\n/**\nA piece of syntax tree. There are two ways to approach these\ntrees: the way they are actually stored in memory, and the\nconvenient way.\n\nSyntax trees are stored as a tree of `Tree` and `TreeBuffer`\nobjects. By packing detail information into `TreeBuffer` leaf\nnodes, the representation is made a lot more memory-efficient.\n\nHowever, when you want to actually work with tree nodes, this\nrepresentation is very awkward, so most client code will want to\nuse the [`TreeCursor`](#common.TreeCursor) or\n[`SyntaxNode`](#common.SyntaxNode) interface instead, which provides\na view on some part of this data structure, and can be used to\nmove around to adjacent nodes.\n*/\nclass Tree {\n    /**\n    Construct a new tree. See also [`Tree.build`](#common.Tree^build).\n    */\n    constructor(\n    /**\n    The type of the top node.\n    */\n    type, \n    /**\n    This node's child nodes.\n    */\n    children, \n    /**\n    The positions (offsets relative to the start of this tree) of\n    the children.\n    */\n    positions, \n    /**\n    The total length of this tree\n    */\n    length, \n    /**\n    Per-node [node props](#common.NodeProp) to associate with this node.\n    */\n    props) {\n        this.type = type;\n        this.children = children;\n        this.positions = positions;\n        this.length = length;\n        /**\n        @internal\n        */\n        this.props = null;\n        if (props && props.length) {\n            this.props = Object.create(null);\n            for (let [prop, value] of props)\n                this.props[typeof prop == \"number\" ? prop : prop.id] = value;\n        }\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let mounted = MountedTree.get(this);\n        if (mounted && !mounted.overlay)\n            return mounted.tree.toString();\n        let children = \"\";\n        for (let ch of this.children) {\n            let str = ch.toString();\n            if (str) {\n                if (children)\n                    children += \",\";\n                children += str;\n            }\n        }\n        return !this.type.name ? children :\n            (/\\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) +\n                (children.length ? \"(\" + children + \")\" : \"\");\n    }\n    /**\n    Get a [tree cursor](#common.TreeCursor) positioned at the top of\n    the tree. Mode can be used to [control](#common.IterMode) which\n    nodes the cursor visits.\n    */\n    cursor(mode = 0) {\n        return new TreeCursor(this.topNode, mode);\n    }\n    /**\n    Get a [tree cursor](#common.TreeCursor) pointing into this tree\n    at the given position and side (see\n    [`moveTo`](#common.TreeCursor.moveTo).\n    */\n    cursorAt(pos, side = 0, mode = 0) {\n        let scope = CachedNode.get(this) || this.topNode;\n        let cursor = new TreeCursor(scope);\n        cursor.moveTo(pos, side);\n        CachedNode.set(this, cursor._tree);\n        return cursor;\n    }\n    /**\n    Get a [syntax node](#common.SyntaxNode) object for the top of the\n    tree.\n    */\n    get topNode() {\n        return new TreeNode(this, 0, 0, null);\n    }\n    /**\n    Get the [syntax node](#common.SyntaxNode) at the given position.\n    If `side` is -1, this will move into nodes that end at the\n    position. If 1, it'll move into nodes that start at the\n    position. With 0, it'll only enter nodes that cover the position\n    from both sides.\n    \n    Note that this will not enter\n    [overlays](#common.MountedTree.overlay), and you often want\n    [`resolveInner`](#common.Tree.resolveInner) instead.\n    */\n    resolve(pos, side = 0) {\n        let node = resolveNode(CachedNode.get(this) || this.topNode, pos, side, false);\n        CachedNode.set(this, node);\n        return node;\n    }\n    /**\n    Like [`resolve`](#common.Tree.resolve), but will enter\n    [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node\n    pointing into the innermost overlaid tree at the given position\n    (with parent links going through all parent structure, including\n    the host trees).\n    */\n    resolveInner(pos, side = 0) {\n        let node = resolveNode(CachedInnerNode.get(this) || this.topNode, pos, side, true);\n        CachedInnerNode.set(this, node);\n        return node;\n    }\n    /**\n    In some situations, it can be useful to iterate through all\n    nodes around a position, including those in overlays that don't\n    directly cover the position. This method gives you an iterator\n    that will produce all nodes, from small to big, around the given\n    position.\n    */\n    resolveStack(pos, side = 0) {\n        return stackIterator(this, pos, side);\n    }\n    /**\n    Iterate over the tree and its children, calling `enter` for any\n    node that touches the `from`/`to` region (if given) before\n    running over such a node's children, and `leave` (if given) when\n    leaving the node. When `enter` returns `false`, that node will\n    not have its children iterated over (or `leave` called).\n    */\n    iterate(spec) {\n        let { enter, leave, from = 0, to = this.length } = spec;\n        let mode = spec.mode || 0, anon = (mode & IterMode.IncludeAnonymous) > 0;\n        for (let c = this.cursor(mode | IterMode.IncludeAnonymous);;) {\n            let entered = false;\n            if (c.from <= to && c.to >= from && (!anon && c.type.isAnonymous || enter(c) !== false)) {\n                if (c.firstChild())\n                    continue;\n                entered = true;\n            }\n            for (;;) {\n                if (entered && leave && (anon || !c.type.isAnonymous))\n                    leave(c);\n                if (c.nextSibling())\n                    break;\n                if (!c.parent())\n                    return;\n                entered = true;\n            }\n        }\n    }\n    /**\n    Get the value of the given [node prop](#common.NodeProp) for this\n    node. Works with both per-node and per-type props.\n    */\n    prop(prop) {\n        return !prop.perNode ? this.type.prop(prop) : this.props ? this.props[prop.id] : undefined;\n    }\n    /**\n    Returns the node's [per-node props](#common.NodeProp.perNode) in a\n    format that can be passed to the [`Tree`](#common.Tree)\n    constructor.\n    */\n    get propValues() {\n        let result = [];\n        if (this.props)\n            for (let id in this.props)\n                result.push([+id, this.props[id]]);\n        return result;\n    }\n    /**\n    Balance the direct children of this tree, producing a copy of\n    which may have children grouped into subtrees with type\n    [`NodeType.none`](#common.NodeType^none).\n    */\n    balance(config = {}) {\n        return this.children.length <= 8 /* Balance.BranchFactor */ ? this :\n            balanceRange(NodeType.none, this.children, this.positions, 0, this.children.length, 0, this.length, (children, positions, length) => new Tree(this.type, children, positions, length, this.propValues), config.makeTree || ((children, positions, length) => new Tree(NodeType.none, children, positions, length)));\n    }\n    /**\n    Build a tree from a postfix-ordered buffer of node information,\n    or a cursor over such a buffer.\n    */\n    static build(data) { return buildTree(data); }\n}\n/**\nThe empty tree\n*/\nTree.empty = new Tree(NodeType.none, [], [], 0);\nclass FlatBufferCursor {\n    constructor(buffer, index) {\n        this.buffer = buffer;\n        this.index = index;\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    get pos() { return this.index; }\n    next() { this.index -= 4; }\n    fork() { return new FlatBufferCursor(this.buffer, this.index); }\n}\n/**\nTree buffers contain (type, start, end, endIndex) quads for each\nnode. In such a buffer, nodes are stored in prefix order (parents\nbefore children, with the endIndex of the parent indicating which\nchildren belong to it).\n*/\nclass TreeBuffer {\n    /**\n    Create a tree buffer.\n    */\n    constructor(\n    /**\n    The buffer's content.\n    */\n    buffer, \n    /**\n    The total length of the group of nodes in the buffer.\n    */\n    length, \n    /**\n    The node set used in this buffer.\n    */\n    set) {\n        this.buffer = buffer;\n        this.length = length;\n        this.set = set;\n    }\n    /**\n    @internal\n    */\n    get type() { return NodeType.none; }\n    /**\n    @internal\n    */\n    toString() {\n        let result = [];\n        for (let index = 0; index < this.buffer.length;) {\n            result.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result.join(\",\");\n    }\n    /**\n    @internal\n    */\n    childString(index) {\n        let id = this.buffer[index], endIndex = this.buffer[index + 3];\n        let type = this.set.types[id], result = type.name;\n        if (/\\W/.test(result) && !type.isError)\n            result = JSON.stringify(result);\n        index += 4;\n        if (endIndex == index)\n            return result;\n        let children = [];\n        while (index < endIndex) {\n            children.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result + \"(\" + children.join(\",\") + \")\";\n    }\n    /**\n    @internal\n    */\n    findChild(startIndex, endIndex, dir, pos, side) {\n        let { buffer } = this, pick = -1;\n        for (let i = startIndex; i != endIndex; i = buffer[i + 3]) {\n            if (checkSide(side, pos, buffer[i + 1], buffer[i + 2])) {\n                pick = i;\n                if (dir > 0)\n                    break;\n            }\n        }\n        return pick;\n    }\n    /**\n    @internal\n    */\n    slice(startI, endI, from) {\n        let b = this.buffer;\n        let copy = new Uint16Array(endI - startI), len = 0;\n        for (let i = startI, j = 0; i < endI;) {\n            copy[j++] = b[i++];\n            copy[j++] = b[i++] - from;\n            let to = copy[j++] = b[i++] - from;\n            copy[j++] = b[i++] - startI;\n            len = Math.max(len, to);\n        }\n        return new TreeBuffer(copy, len, this.set);\n    }\n}\nfunction checkSide(side, pos, from, to) {\n    switch (side) {\n        case -2 /* Side.Before */: return from < pos;\n        case -1 /* Side.AtOrBefore */: return to >= pos && from < pos;\n        case 0 /* Side.Around */: return from < pos && to > pos;\n        case 1 /* Side.AtOrAfter */: return from <= pos && to > pos;\n        case 2 /* Side.After */: return to > pos;\n        case 4 /* Side.DontCare */: return true;\n    }\n}\nfunction resolveNode(node, pos, side, overlays) {\n    var _a;\n    // Move up to a node that actually holds the position, if possible\n    while (node.from == node.to ||\n        (side < 1 ? node.from >= pos : node.from > pos) ||\n        (side > -1 ? node.to <= pos : node.to < pos)) {\n        let parent = !overlays && node instanceof TreeNode && node.index < 0 ? null : node.parent;\n        if (!parent)\n            return node;\n        node = parent;\n    }\n    let mode = overlays ? 0 : IterMode.IgnoreOverlays;\n    // Must go up out of overlays when those do not overlap with pos\n    if (overlays)\n        for (let scan = node, parent = scan.parent; parent; scan = parent, parent = scan.parent) {\n            if (scan instanceof TreeNode && scan.index < 0 && ((_a = parent.enter(pos, side, mode)) === null || _a === void 0 ? void 0 : _a.from) != scan.from)\n                node = parent;\n        }\n    for (;;) {\n        let inner = node.enter(pos, side, mode);\n        if (!inner)\n            return node;\n        node = inner;\n    }\n}\nclass BaseNode {\n    cursor(mode = 0) { return new TreeCursor(this, mode); }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n    resolve(pos, side = 0) {\n        return resolveNode(this, pos, side, false);\n    }\n    resolveInner(pos, side = 0) {\n        return resolveNode(this, pos, side, true);\n    }\n    matchContext(context) {\n        return matchNodeContext(this.parent, context);\n    }\n    enterUnfinishedNodesBefore(pos) {\n        let scan = this.childBefore(pos), node = this;\n        while (scan) {\n            let last = scan.lastChild;\n            if (!last || last.to != scan.to)\n                break;\n            if (last.type.isError && last.from == last.to) {\n                node = scan;\n                scan = last.prevSibling;\n            }\n            else {\n                scan = last;\n            }\n        }\n        return node;\n    }\n    get node() { return this; }\n    get next() { return this.parent; }\n}\nclass TreeNode extends BaseNode {\n    constructor(_tree, from, \n    // Index in parent node, set to -1 if the node is not a direct child of _parent.node (overlay)\n    index, _parent) {\n        super();\n        this._tree = _tree;\n        this.from = from;\n        this.index = index;\n        this._parent = _parent;\n    }\n    get type() { return this._tree.type; }\n    get name() { return this._tree.type.name; }\n    get to() { return this.from + this._tree.length; }\n    nextChild(i, dir, pos, side, mode = 0) {\n        for (let parent = this;;) {\n            for (let { children, positions } = parent._tree, e = dir > 0 ? children.length : -1; i != e; i += dir) {\n                let next = children[i], start = positions[i] + parent.from;\n                if (!checkSide(side, pos, start, start + next.length))\n                    continue;\n                if (next instanceof TreeBuffer) {\n                    if (mode & IterMode.ExcludeBuffers)\n                        continue;\n                    let index = next.findChild(0, next.buffer.length, dir, pos - start, side);\n                    if (index > -1)\n                        return new BufferNode(new BufferContext(parent, next, i, start), null, index);\n                }\n                else if ((mode & IterMode.IncludeAnonymous) || (!next.type.isAnonymous || hasChild(next))) {\n                    let mounted;\n                    if (!(mode & IterMode.IgnoreMounts) && (mounted = MountedTree.get(next)) && !mounted.overlay)\n                        return new TreeNode(mounted.tree, start, i, parent);\n                    let inner = new TreeNode(next, start, i, parent);\n                    return (mode & IterMode.IncludeAnonymous) || !inner.type.isAnonymous ? inner\n                        : inner.nextChild(dir < 0 ? next.children.length - 1 : 0, dir, pos, side);\n                }\n            }\n            if ((mode & IterMode.IncludeAnonymous) || !parent.type.isAnonymous)\n                return null;\n            if (parent.index >= 0)\n                i = parent.index + dir;\n            else\n                i = dir < 0 ? -1 : parent._parent._tree.children.length;\n            parent = parent._parent;\n            if (!parent)\n                return null;\n        }\n    }\n    get firstChild() { return this.nextChild(0, 1, 0, 4 /* Side.DontCare */); }\n    get lastChild() { return this.nextChild(this._tree.children.length - 1, -1, 0, 4 /* Side.DontCare */); }\n    childAfter(pos) { return this.nextChild(0, 1, pos, 2 /* Side.After */); }\n    childBefore(pos) { return this.nextChild(this._tree.children.length - 1, -1, pos, -2 /* Side.Before */); }\n    enter(pos, side, mode = 0) {\n        let mounted;\n        if (!(mode & IterMode.IgnoreOverlays) && (mounted = MountedTree.get(this._tree)) && mounted.overlay) {\n            let rPos = pos - this.from;\n            for (let { from, to } of mounted.overlay) {\n                if ((side > 0 ? from <= rPos : from < rPos) &&\n                    (side < 0 ? to >= rPos : to > rPos))\n                    return new TreeNode(mounted.tree, mounted.overlay[0].from + this.from, -1, this);\n            }\n        }\n        return this.nextChild(0, 1, pos, side, mode);\n    }\n    nextSignificantParent() {\n        let val = this;\n        while (val.type.isAnonymous && val._parent)\n            val = val._parent;\n        return val;\n    }\n    get parent() {\n        return this._parent ? this._parent.nextSignificantParent() : null;\n    }\n    get nextSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index + 1, 1, 0, 4 /* Side.DontCare */) : null;\n    }\n    get prevSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index - 1, -1, 0, 4 /* Side.DontCare */) : null;\n    }\n    get tree() { return this._tree; }\n    toTree() { return this._tree; }\n    /**\n    @internal\n    */\n    toString() { return this._tree.toString(); }\n}\nfunction getChildren(node, type, before, after) {\n    let cur = node.cursor(), result = [];\n    if (!cur.firstChild())\n        return result;\n    if (before != null)\n        for (let found = false; !found;) {\n            found = cur.type.is(before);\n            if (!cur.nextSibling())\n                return result;\n        }\n    for (;;) {\n        if (after != null && cur.type.is(after))\n            return result;\n        if (cur.type.is(type))\n            result.push(cur.node);\n        if (!cur.nextSibling())\n            return after == null ? result : [];\n    }\n}\nfunction matchNodeContext(node, context, i = context.length - 1) {\n    for (let p = node; i >= 0; p = p.parent) {\n        if (!p)\n            return false;\n        if (!p.type.isAnonymous) {\n            if (context[i] && context[i] != p.name)\n                return false;\n            i--;\n        }\n    }\n    return true;\n}\nclass BufferContext {\n    constructor(parent, buffer, index, start) {\n        this.parent = parent;\n        this.buffer = buffer;\n        this.index = index;\n        this.start = start;\n    }\n}\nclass BufferNode extends BaseNode {\n    get name() { return this.type.name; }\n    get from() { return this.context.start + this.context.buffer.buffer[this.index + 1]; }\n    get to() { return this.context.start + this.context.buffer.buffer[this.index + 2]; }\n    constructor(context, _parent, index) {\n        super();\n        this.context = context;\n        this._parent = _parent;\n        this.index = index;\n        this.type = context.buffer.set.types[context.buffer.buffer[index]];\n    }\n    child(dir, pos, side) {\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get firstChild() { return this.child(1, 0, 4 /* Side.DontCare */); }\n    get lastChild() { return this.child(-1, 0, 4 /* Side.DontCare */); }\n    childAfter(pos) { return this.child(1, pos, 2 /* Side.After */); }\n    childBefore(pos) { return this.child(-1, pos, -2 /* Side.Before */); }\n    enter(pos, side, mode = 0) {\n        if (mode & IterMode.ExcludeBuffers)\n            return null;\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], side > 0 ? 1 : -1, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get parent() {\n        return this._parent || this.context.parent.nextSignificantParent();\n    }\n    externalSibling(dir) {\n        return this._parent ? null : this.context.parent.nextChild(this.context.index + dir, dir, 0, 4 /* Side.DontCare */);\n    }\n    get nextSibling() {\n        let { buffer } = this.context;\n        let after = buffer.buffer[this.index + 3];\n        if (after < (this._parent ? buffer.buffer[this._parent.index + 3] : buffer.buffer.length))\n            return new BufferNode(this.context, this._parent, after);\n        return this.externalSibling(1);\n    }\n    get prevSibling() {\n        let { buffer } = this.context;\n        let parentStart = this._parent ? this._parent.index + 4 : 0;\n        if (this.index == parentStart)\n            return this.externalSibling(-1);\n        return new BufferNode(this.context, this._parent, buffer.findChild(parentStart, this.index, -1, 0, 4 /* Side.DontCare */));\n    }\n    get tree() { return null; }\n    toTree() {\n        let children = [], positions = [];\n        let { buffer } = this.context;\n        let startI = this.index + 4, endI = buffer.buffer[this.index + 3];\n        if (endI > startI) {\n            let from = buffer.buffer[this.index + 1];\n            children.push(buffer.slice(startI, endI, from));\n            positions.push(0);\n        }\n        return new Tree(this.type, children, positions, this.to - this.from);\n    }\n    /**\n    @internal\n    */\n    toString() { return this.context.buffer.childString(this.index); }\n}\nfunction iterStack(heads) {\n    if (!heads.length)\n        return null;\n    let pick = 0, picked = heads[0];\n    for (let i = 1; i < heads.length; i++) {\n        let node = heads[i];\n        if (node.from > picked.from || node.to < picked.to) {\n            picked = node;\n            pick = i;\n        }\n    }\n    let next = picked instanceof TreeNode && picked.index < 0 ? null : picked.parent;\n    let newHeads = heads.slice();\n    if (next)\n        newHeads[pick] = next;\n    else\n        newHeads.splice(pick, 1);\n    return new StackIterator(newHeads, picked);\n}\nclass StackIterator {\n    constructor(heads, node) {\n        this.heads = heads;\n        this.node = node;\n    }\n    get next() { return iterStack(this.heads); }\n}\nfunction stackIterator(tree, pos, side) {\n    let inner = tree.resolveInner(pos, side), layers = null;\n    for (let scan = inner instanceof TreeNode ? inner : inner.context.parent; scan; scan = scan.parent) {\n        if (scan.index < 0) { // This is an overlay root\n            let parent = scan.parent;\n            (layers || (layers = [inner])).push(parent.resolve(pos, side));\n            scan = parent;\n        }\n        else {\n            let mount = MountedTree.get(scan.tree);\n            // Relevant overlay branching off\n            if (mount && mount.overlay && mount.overlay[0].from <= pos && mount.overlay[mount.overlay.length - 1].to >= pos) {\n                let root = new TreeNode(mount.tree, mount.overlay[0].from + scan.from, -1, scan);\n                (layers || (layers = [inner])).push(resolveNode(root, pos, side, false));\n            }\n        }\n    }\n    return layers ? iterStack(layers) : inner;\n}\n/**\nA tree cursor object focuses on a given node in a syntax tree, and\nallows you to move to adjacent nodes.\n*/\nclass TreeCursor {\n    /**\n    Shorthand for `.type.name`.\n    */\n    get name() { return this.type.name; }\n    /**\n    @internal\n    */\n    constructor(node, \n    /**\n    @internal\n    */\n    mode = 0) {\n        this.mode = mode;\n        /**\n        @internal\n        */\n        this.buffer = null;\n        this.stack = [];\n        /**\n        @internal\n        */\n        this.index = 0;\n        this.bufferNode = null;\n        if (node instanceof TreeNode) {\n            this.yieldNode(node);\n        }\n        else {\n            this._tree = node.context.parent;\n            this.buffer = node.context;\n            for (let n = node._parent; n; n = n._parent)\n                this.stack.unshift(n.index);\n            this.bufferNode = node;\n            this.yieldBuf(node.index);\n        }\n    }\n    yieldNode(node) {\n        if (!node)\n            return false;\n        this._tree = node;\n        this.type = node.type;\n        this.from = node.from;\n        this.to = node.to;\n        return true;\n    }\n    yieldBuf(index, type) {\n        this.index = index;\n        let { start, buffer } = this.buffer;\n        this.type = type || buffer.set.types[buffer.buffer[index]];\n        this.from = start + buffer.buffer[index + 1];\n        this.to = start + buffer.buffer[index + 2];\n        return true;\n    }\n    /**\n    @internal\n    */\n    yield(node) {\n        if (!node)\n            return false;\n        if (node instanceof TreeNode) {\n            this.buffer = null;\n            return this.yieldNode(node);\n        }\n        this.buffer = node.context;\n        return this.yieldBuf(node.index, node.type);\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();\n    }\n    /**\n    @internal\n    */\n    enterChild(dir, pos, side) {\n        if (!this.buffer)\n            return this.yield(this._tree.nextChild(dir < 0 ? this._tree._tree.children.length - 1 : 0, dir, pos, side, this.mode));\n        let { buffer } = this.buffer;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.buffer.start, side);\n        if (index < 0)\n            return false;\n        this.stack.push(this.index);\n        return this.yieldBuf(index);\n    }\n    /**\n    Move the cursor to this node's first child. When this returns\n    false, the node has no child, and the cursor has not been moved.\n    */\n    firstChild() { return this.enterChild(1, 0, 4 /* Side.DontCare */); }\n    /**\n    Move the cursor to this node's last child.\n    */\n    lastChild() { return this.enterChild(-1, 0, 4 /* Side.DontCare */); }\n    /**\n    Move the cursor to the first child that ends after `pos`.\n    */\n    childAfter(pos) { return this.enterChild(1, pos, 2 /* Side.After */); }\n    /**\n    Move to the last child that starts before `pos`.\n    */\n    childBefore(pos) { return this.enterChild(-1, pos, -2 /* Side.Before */); }\n    /**\n    Move the cursor to the child around `pos`. If side is -1 the\n    child may end at that position, when 1 it may start there. This\n    will also enter [overlaid](#common.MountedTree.overlay)\n    [mounted](#common.NodeProp^mounted) trees unless `overlays` is\n    set to false.\n    */\n    enter(pos, side, mode = this.mode) {\n        if (!this.buffer)\n            return this.yield(this._tree.enter(pos, side, mode));\n        return mode & IterMode.ExcludeBuffers ? false : this.enterChild(1, pos, side);\n    }\n    /**\n    Move to the node's parent node, if this isn't the top node.\n    */\n    parent() {\n        if (!this.buffer)\n            return this.yieldNode((this.mode & IterMode.IncludeAnonymous) ? this._tree._parent : this._tree.parent);\n        if (this.stack.length)\n            return this.yieldBuf(this.stack.pop());\n        let parent = (this.mode & IterMode.IncludeAnonymous) ? this.buffer.parent : this.buffer.parent.nextSignificantParent();\n        this.buffer = null;\n        return this.yieldNode(parent);\n    }\n    /**\n    @internal\n    */\n    sibling(dir) {\n        if (!this.buffer)\n            return !this._tree._parent ? false\n                : this.yield(this._tree.index < 0 ? null\n                    : this._tree._parent.nextChild(this._tree.index + dir, dir, 0, 4 /* Side.DontCare */, this.mode));\n        let { buffer } = this.buffer, d = this.stack.length - 1;\n        if (dir < 0) {\n            let parentStart = d < 0 ? 0 : this.stack[d] + 4;\n            if (this.index != parentStart)\n                return this.yieldBuf(buffer.findChild(parentStart, this.index, -1, 0, 4 /* Side.DontCare */));\n        }\n        else {\n            let after = buffer.buffer[this.index + 3];\n            if (after < (d < 0 ? buffer.buffer.length : buffer.buffer[this.stack[d] + 3]))\n                return this.yieldBuf(after);\n        }\n        return d < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + dir, dir, 0, 4 /* Side.DontCare */, this.mode)) : false;\n    }\n    /**\n    Move to this node's next sibling, if any.\n    */\n    nextSibling() { return this.sibling(1); }\n    /**\n    Move to this node's previous sibling, if any.\n    */\n    prevSibling() { return this.sibling(-1); }\n    atLastNode(dir) {\n        let index, parent, { buffer } = this;\n        if (buffer) {\n            if (dir > 0) {\n                if (this.index < buffer.buffer.buffer.length)\n                    return false;\n            }\n            else {\n                for (let i = 0; i < this.index; i++)\n                    if (buffer.buffer.buffer[i + 3] < this.index)\n                        return false;\n            }\n            ({ index, parent } = buffer);\n        }\n        else {\n            ({ index, _parent: parent } = this._tree);\n        }\n        for (; parent; { index, _parent: parent } = parent) {\n            if (index > -1)\n                for (let i = index + dir, e = dir < 0 ? -1 : parent._tree.children.length; i != e; i += dir) {\n                    let child = parent._tree.children[i];\n                    if ((this.mode & IterMode.IncludeAnonymous) ||\n                        child instanceof TreeBuffer ||\n                        !child.type.isAnonymous ||\n                        hasChild(child))\n                        return false;\n                }\n        }\n        return true;\n    }\n    move(dir, enter) {\n        if (enter && this.enterChild(dir, 0, 4 /* Side.DontCare */))\n            return true;\n        for (;;) {\n            if (this.sibling(dir))\n                return true;\n            if (this.atLastNode(dir) || !this.parent())\n                return false;\n        }\n    }\n    /**\n    Move to the next node in a\n    [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR)\n    traversal, going from a node to its first child or, if the\n    current node is empty or `enter` is false, its next sibling or\n    the next sibling of the first parent node that has one.\n    */\n    next(enter = true) { return this.move(1, enter); }\n    /**\n    Move to the next node in a last-to-first pre-order traversal. A\n    node is followed by its last child or, if it has none, its\n    previous sibling or the previous sibling of the first parent\n    node that has one.\n    */\n    prev(enter = true) { return this.move(-1, enter); }\n    /**\n    Move the cursor to the innermost node that covers `pos`. If\n    `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n    it will enter nodes that start at `pos`.\n    */\n    moveTo(pos, side = 0) {\n        // Move up to a node that actually holds the position, if possible\n        while (this.from == this.to ||\n            (side < 1 ? this.from >= pos : this.from > pos) ||\n            (side > -1 ? this.to <= pos : this.to < pos))\n            if (!this.parent())\n                break;\n        // Then scan down into child nodes as far as possible\n        while (this.enterChild(1, pos, side)) { }\n        return this;\n    }\n    /**\n    Get a [syntax node](#common.SyntaxNode) at the cursor's current\n    position.\n    */\n    get node() {\n        if (!this.buffer)\n            return this._tree;\n        let cache = this.bufferNode, result = null, depth = 0;\n        if (cache && cache.context == this.buffer) {\n            scan: for (let index = this.index, d = this.stack.length; d >= 0;) {\n                for (let c = cache; c; c = c._parent)\n                    if (c.index == index) {\n                        if (index == this.index)\n                            return c;\n                        result = c;\n                        depth = d + 1;\n                        break scan;\n                    }\n                index = this.stack[--d];\n            }\n        }\n        for (let i = depth; i < this.stack.length; i++)\n            result = new BufferNode(this.buffer, result, this.stack[i]);\n        return this.bufferNode = new BufferNode(this.buffer, result, this.index);\n    }\n    /**\n    Get the [tree](#common.Tree) that represents the current node, if\n    any. Will return null when the node is in a [tree\n    buffer](#common.TreeBuffer).\n    */\n    get tree() {\n        return this.buffer ? null : this._tree._tree;\n    }\n    /**\n    Iterate over the current node and all its descendants, calling\n    `enter` when entering a node and `leave`, if given, when leaving\n    one. When `enter` returns `false`, any children of that node are\n    skipped, and `leave` isn't called for it.\n    */\n    iterate(enter, leave) {\n        for (let depth = 0;;) {\n            let mustLeave = false;\n            if (this.type.isAnonymous || enter(this) !== false) {\n                if (this.firstChild()) {\n                    depth++;\n                    continue;\n                }\n                if (!this.type.isAnonymous)\n                    mustLeave = true;\n            }\n            for (;;) {\n                if (mustLeave && leave)\n                    leave(this);\n                mustLeave = this.type.isAnonymous;\n                if (!depth)\n                    return;\n                if (this.nextSibling())\n                    break;\n                this.parent();\n                depth--;\n                mustLeave = true;\n            }\n        }\n    }\n    /**\n    Test whether the current node matches a given context\u2014a sequence\n    of direct parent node names. Empty strings in the context array\n    are treated as wildcards.\n    */\n    matchContext(context) {\n        if (!this.buffer)\n            return matchNodeContext(this.node.parent, context);\n        let { buffer } = this.buffer, { types } = buffer.set;\n        for (let i = context.length - 1, d = this.stack.length - 1; i >= 0; d--) {\n            if (d < 0)\n                return matchNodeContext(this._tree, context, i);\n            let type = types[buffer.buffer[this.stack[d]]];\n            if (!type.isAnonymous) {\n                if (context[i] && context[i] != type.name)\n                    return false;\n                i--;\n            }\n        }\n        return true;\n    }\n}\nfunction hasChild(tree) {\n    return tree.children.some(ch => ch instanceof TreeBuffer || !ch.type.isAnonymous || hasChild(ch));\n}\nfunction buildTree(data) {\n    var _a;\n    let { buffer, nodeSet, maxBufferLength = DefaultBufferLength, reused = [], minRepeatType = nodeSet.types.length } = data;\n    let cursor = Array.isArray(buffer) ? new FlatBufferCursor(buffer, buffer.length) : buffer;\n    let types = nodeSet.types;\n    let contextHash = 0, lookAhead = 0;\n    function takeNode(parentStart, minPos, children, positions, inRepeat, depth) {\n        let { id, start, end, size } = cursor;\n        let lookAheadAtStart = lookAhead, contextAtStart = contextHash;\n        while (size < 0) {\n            cursor.next();\n            if (size == -1 /* SpecialRecord.Reuse */) {\n                let node = reused[id];\n                children.push(node);\n                positions.push(start - parentStart);\n                return;\n            }\n            else if (size == -3 /* SpecialRecord.ContextChange */) { // Context change\n                contextHash = id;\n                return;\n            }\n            else if (size == -4 /* SpecialRecord.LookAhead */) {\n                lookAhead = id;\n                return;\n            }\n            else {\n                throw new RangeError(`Unrecognized record size: ${size}`);\n            }\n        }\n        let type = types[id], node, buffer;\n        let startPos = start - parentStart;\n        if (end - start <= maxBufferLength && (buffer = findBufferSize(cursor.pos - minPos, inRepeat))) {\n            // Small enough for a buffer, and no reused nodes inside\n            let data = new Uint16Array(buffer.size - buffer.skip);\n            let endPos = cursor.pos - buffer.size, index = data.length;\n            while (cursor.pos > endPos)\n                index = copyToBuffer(buffer.start, data, index);\n            node = new TreeBuffer(data, end - buffer.start, nodeSet);\n            startPos = buffer.start - parentStart;\n        }\n        else { // Make it a node\n            let endPos = cursor.pos - size;\n            cursor.next();\n            let localChildren = [], localPositions = [];\n            let localInRepeat = id >= minRepeatType ? id : -1;\n            let lastGroup = 0, lastEnd = end;\n            while (cursor.pos > endPos) {\n                if (localInRepeat >= 0 && cursor.id == localInRepeat && cursor.size >= 0) {\n                    if (cursor.end <= lastEnd - maxBufferLength) {\n                        makeRepeatLeaf(localChildren, localPositions, start, lastGroup, cursor.end, lastEnd, localInRepeat, lookAheadAtStart, contextAtStart);\n                        lastGroup = localChildren.length;\n                        lastEnd = cursor.end;\n                    }\n                    cursor.next();\n                }\n                else if (depth > 2500 /* CutOff.Depth */) {\n                    takeFlatNode(start, endPos, localChildren, localPositions);\n                }\n                else {\n                    takeNode(start, endPos, localChildren, localPositions, localInRepeat, depth + 1);\n                }\n            }\n            if (localInRepeat >= 0 && lastGroup > 0 && lastGroup < localChildren.length)\n                makeRepeatLeaf(localChildren, localPositions, start, lastGroup, start, lastEnd, localInRepeat, lookAheadAtStart, contextAtStart);\n            localChildren.reverse();\n            localPositions.reverse();\n            if (localInRepeat > -1 && lastGroup > 0) {\n                let make = makeBalanced(type, contextAtStart);\n                node = balanceRange(type, localChildren, localPositions, 0, localChildren.length, 0, end - start, make, make);\n            }\n            else {\n                node = makeTree(type, localChildren, localPositions, end - start, lookAheadAtStart - end, contextAtStart);\n            }\n        }\n        children.push(node);\n        positions.push(startPos);\n    }\n    function takeFlatNode(parentStart, minPos, children, positions) {\n        let nodes = []; // Temporary, inverted array of leaf nodes found, with absolute positions\n        let nodeCount = 0, stopAt = -1;\n        while (cursor.pos > minPos) {\n            let { id, start, end, size } = cursor;\n            if (size > 4) { // Not a leaf\n                cursor.next();\n            }\n            else if (stopAt > -1 && start < stopAt) {\n                break;\n            }\n            else {\n                if (stopAt < 0)\n                    stopAt = end - maxBufferLength;\n                nodes.push(id, start, end);\n                nodeCount++;\n                cursor.next();\n            }\n        }\n        if (nodeCount) {\n            let buffer = new Uint16Array(nodeCount * 4);\n            let start = nodes[nodes.length - 2];\n            for (let i = nodes.length - 3, j = 0; i >= 0; i -= 3) {\n                buffer[j++] = nodes[i];\n                buffer[j++] = nodes[i + 1] - start;\n                buffer[j++] = nodes[i + 2] - start;\n                buffer[j++] = j;\n            }\n            children.push(new TreeBuffer(buffer, nodes[2] - start, nodeSet));\n            positions.push(start - parentStart);\n        }\n    }\n    function makeBalanced(type, contextHash) {\n        return (children, positions, length) => {\n            let lookAhead = 0, lastI = children.length - 1, last, lookAheadProp;\n            if (lastI >= 0 && (last = children[lastI]) instanceof Tree) {\n                if (!lastI && last.type == type && last.length == length)\n                    return last;\n                if (lookAheadProp = last.prop(NodeProp.lookAhead))\n                    lookAhead = positions[lastI] + last.length + lookAheadProp;\n            }\n            return makeTree(type, children, positions, length, lookAhead, contextHash);\n        };\n    }\n    function makeRepeatLeaf(children, positions, base, i, from, to, type, lookAhead, contextHash) {\n        let localChildren = [], localPositions = [];\n        while (children.length > i) {\n            localChildren.push(children.pop());\n            localPositions.push(positions.pop() + base - from);\n        }\n        children.push(makeTree(nodeSet.types[type], localChildren, localPositions, to - from, lookAhead - to, contextHash));\n        positions.push(from - base);\n    }\n    function makeTree(type, children, positions, length, lookAhead, contextHash, props) {\n        if (contextHash) {\n            let pair = [NodeProp.contextHash, contextHash];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        if (lookAhead > 25) {\n            let pair = [NodeProp.lookAhead, lookAhead];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        return new Tree(type, children, positions, length, props);\n    }\n    function findBufferSize(maxSize, inRepeat) {\n        // Scan through the buffer to find previous siblings that fit\n        // together in a TreeBuffer, and don't contain any reused nodes\n        // (which can't be stored in a buffer).\n        // If `inRepeat` is > -1, ignore node boundaries of that type for\n        // nesting, but make sure the end falls either at the start\n        // (`maxSize`) or before such a node.\n        let fork = cursor.fork();\n        let size = 0, start = 0, skip = 0, minStart = fork.end - maxBufferLength;\n        let result = { size: 0, start: 0, skip: 0 };\n        scan: for (let minPos = fork.pos - maxSize; fork.pos > minPos;) {\n            let nodeSize = fork.size;\n            // Pretend nested repeat nodes of the same type don't exist\n            if (fork.id == inRepeat && nodeSize >= 0) {\n                // Except that we store the current state as a valid return\n                // value.\n                result.size = size;\n                result.start = start;\n                result.skip = skip;\n                skip += 4;\n                size += 4;\n                fork.next();\n                continue;\n            }\n            let startPos = fork.pos - nodeSize;\n            if (nodeSize < 0 || startPos < minPos || fork.start < minStart)\n                break;\n            let localSkipped = fork.id >= minRepeatType ? 4 : 0;\n            let nodeStart = fork.start;\n            fork.next();\n            while (fork.pos > startPos) {\n                if (fork.size < 0) {\n                    if (fork.size == -3 /* SpecialRecord.ContextChange */)\n                        localSkipped += 4;\n                    else\n                        break scan;\n                }\n                else if (fork.id >= minRepeatType) {\n                    localSkipped += 4;\n                }\n                fork.next();\n            }\n            start = nodeStart;\n            size += nodeSize;\n            skip += localSkipped;\n        }\n        if (inRepeat < 0 || size == maxSize) {\n            result.size = size;\n            result.start = start;\n            result.skip = skip;\n        }\n        return result.size > 4 ? result : undefined;\n    }\n    function copyToBuffer(bufferStart, buffer, index) {\n        let { id, start, end, size } = cursor;\n        cursor.next();\n        if (size >= 0 && id < minRepeatType) {\n            let startIndex = index;\n            if (size > 4) {\n                let endPos = cursor.pos - (size - 4);\n                while (cursor.pos > endPos)\n                    index = copyToBuffer(bufferStart, buffer, index);\n            }\n            buffer[--index] = startIndex;\n            buffer[--index] = end - bufferStart;\n            buffer[--index] = start - bufferStart;\n            buffer[--index] = id;\n        }\n        else if (size == -3 /* SpecialRecord.ContextChange */) {\n            contextHash = id;\n        }\n        else if (size == -4 /* SpecialRecord.LookAhead */) {\n            lookAhead = id;\n        }\n        return index;\n    }\n    let children = [], positions = [];\n    while (cursor.pos > 0)\n        takeNode(data.start || 0, data.bufferStart || 0, children, positions, -1, 0);\n    let length = (_a = data.length) !== null && _a !== void 0 ? _a : (children.length ? positions[0] + children[0].length : 0);\n    return new Tree(types[data.topID], children.reverse(), positions.reverse(), length);\n}\nconst nodeSizeCache = new WeakMap;\nfunction nodeSize(balanceType, node) {\n    if (!balanceType.isAnonymous || node instanceof TreeBuffer || node.type != balanceType)\n        return 1;\n    let size = nodeSizeCache.get(node);\n    if (size == null) {\n        size = 1;\n        for (let child of node.children) {\n            if (child.type != balanceType || !(child instanceof Tree)) {\n                size = 1;\n                break;\n            }\n            size += nodeSize(balanceType, child);\n        }\n        nodeSizeCache.set(node, size);\n    }\n    return size;\n}\nfunction balanceRange(\n// The type the balanced tree's inner nodes.\nbalanceType, \n// The direct children and their positions\nchildren, positions, \n// The index range in children/positions to use\nfrom, to, \n// The start position of the nodes, relative to their parent.\nstart, \n// Length of the outer node\nlength, \n// Function to build the top node of the balanced tree\nmkTop, \n// Function to build internal nodes for the balanced tree\nmkTree) {\n    let total = 0;\n    for (let i = from; i < to; i++)\n        total += nodeSize(balanceType, children[i]);\n    let maxChild = Math.ceil((total * 1.5) / 8 /* Balance.BranchFactor */);\n    let localChildren = [], localPositions = [];\n    function divide(children, positions, from, to, offset) {\n        for (let i = from; i < to;) {\n            let groupFrom = i, groupStart = positions[i], groupSize = nodeSize(balanceType, children[i]);\n            i++;\n            for (; i < to; i++) {\n                let nextSize = nodeSize(balanceType, children[i]);\n                if (groupSize + nextSize >= maxChild)\n                    break;\n                groupSize += nextSize;\n            }\n            if (i == groupFrom + 1) {\n                if (groupSize > maxChild) {\n                    let only = children[groupFrom]; // Only trees can have a size > 1\n                    divide(only.children, only.positions, 0, only.children.length, positions[groupFrom] + offset);\n                    continue;\n                }\n                localChildren.push(children[groupFrom]);\n            }\n            else {\n                let length = positions[i - 1] + children[i - 1].length - groupStart;\n                localChildren.push(balanceRange(balanceType, children, positions, groupFrom, i, groupStart, length, null, mkTree));\n            }\n            localPositions.push(groupStart + offset - start);\n        }\n    }\n    divide(children, positions, from, to, 0);\n    return (mkTop || mkTree)(localChildren, localPositions, length);\n}\n/**\nProvides a way to associate values with pieces of trees. As long\nas that part of the tree is reused, the associated values can be\nretrieved from an updated tree.\n*/\nclass NodeWeakMap {\n    constructor() {\n        this.map = new WeakMap();\n    }\n    setBuffer(buffer, index, value) {\n        let inner = this.map.get(buffer);\n        if (!inner)\n            this.map.set(buffer, inner = new Map);\n        inner.set(index, value);\n    }\n    getBuffer(buffer, index) {\n        let inner = this.map.get(buffer);\n        return inner && inner.get(index);\n    }\n    /**\n    Set the value for this syntax node.\n    */\n    set(node, value) {\n        if (node instanceof BufferNode)\n            this.setBuffer(node.context.buffer, node.index, value);\n        else if (node instanceof TreeNode)\n            this.map.set(node.tree, value);\n    }\n    /**\n    Retrieve value for this syntax node, if it exists in the map.\n    */\n    get(node) {\n        return node instanceof BufferNode ? this.getBuffer(node.context.buffer, node.index)\n            : node instanceof TreeNode ? this.map.get(node.tree) : undefined;\n    }\n    /**\n    Set the value for the node that a cursor currently points to.\n    */\n    cursorSet(cursor, value) {\n        if (cursor.buffer)\n            this.setBuffer(cursor.buffer.buffer, cursor.index, value);\n        else\n            this.map.set(cursor.tree, value);\n    }\n    /**\n    Retrieve the value for the node that a cursor currently points\n    to.\n    */\n    cursorGet(cursor) {\n        return cursor.buffer ? this.getBuffer(cursor.buffer.buffer, cursor.index) : this.map.get(cursor.tree);\n    }\n}\n\n/**\nTree fragments are used during [incremental\nparsing](#common.Parser.startParse) to track parts of old trees\nthat can be reused in a new parse. An array of fragments is used\nto track regions of an old tree whose nodes might be reused in new\nparses. Use the static\n[`applyChanges`](#common.TreeFragment^applyChanges) method to\nupdate fragments for document changes.\n*/\nclass TreeFragment {\n    /**\n    Construct a tree fragment. You'll usually want to use\n    [`addTree`](#common.TreeFragment^addTree) and\n    [`applyChanges`](#common.TreeFragment^applyChanges) instead of\n    calling this directly.\n    */\n    constructor(\n    /**\n    The start of the unchanged range pointed to by this fragment.\n    This refers to an offset in the _updated_ document (as opposed\n    to the original tree).\n    */\n    from, \n    /**\n    The end of the unchanged range.\n    */\n    to, \n    /**\n    The tree that this fragment is based on.\n    */\n    tree, \n    /**\n    The offset between the fragment's tree and the document that\n    this fragment can be used against. Add this when going from\n    document to tree positions, subtract it to go from tree to\n    document positions.\n    */\n    offset, openStart = false, openEnd = false) {\n        this.from = from;\n        this.to = to;\n        this.tree = tree;\n        this.offset = offset;\n        this.open = (openStart ? 1 /* Open.Start */ : 0) | (openEnd ? 2 /* Open.End */ : 0);\n    }\n    /**\n    Whether the start of the fragment represents the start of a\n    parse, or the end of a change. (In the second case, it may not\n    be safe to reuse some nodes at the start, depending on the\n    parsing algorithm.)\n    */\n    get openStart() { return (this.open & 1 /* Open.Start */) > 0; }\n    /**\n    Whether the end of the fragment represents the end of a\n    full-document parse, or the start of a change.\n    */\n    get openEnd() { return (this.open & 2 /* Open.End */) > 0; }\n    /**\n    Create a set of fragments from a freshly parsed tree, or update\n    an existing set of fragments by replacing the ones that overlap\n    with a tree with content from the new tree. When `partial` is\n    true, the parse is treated as incomplete, and the resulting\n    fragment has [`openEnd`](#common.TreeFragment.openEnd) set to\n    true.\n    */\n    static addTree(tree, fragments = [], partial = false) {\n        let result = [new TreeFragment(0, tree.length, tree, 0, false, partial)];\n        for (let f of fragments)\n            if (f.to > tree.length)\n                result.push(f);\n        return result;\n    }\n    /**\n    Apply a set of edits to an array of fragments, removing or\n    splitting fragments as necessary to remove edited ranges, and\n    adjusting offsets for fragments that moved.\n    */\n    static applyChanges(fragments, changes, minGap = 128) {\n        if (!changes.length)\n            return fragments;\n        let result = [];\n        let fI = 1, nextF = fragments.length ? fragments[0] : null;\n        for (let cI = 0, pos = 0, off = 0;; cI++) {\n            let nextC = cI < changes.length ? changes[cI] : null;\n            let nextPos = nextC ? nextC.fromA : 1e9;\n            if (nextPos - pos >= minGap)\n                while (nextF && nextF.from < nextPos) {\n                    let cut = nextF;\n                    if (pos >= cut.from || nextPos <= cut.to || off) {\n                        let fFrom = Math.max(cut.from, pos) - off, fTo = Math.min(cut.to, nextPos) - off;\n                        cut = fFrom >= fTo ? null : new TreeFragment(fFrom, fTo, cut.tree, cut.offset + off, cI > 0, !!nextC);\n                    }\n                    if (cut)\n                        result.push(cut);\n                    if (nextF.to > nextPos)\n                        break;\n                    nextF = fI < fragments.length ? fragments[fI++] : null;\n                }\n            if (!nextC)\n                break;\n            pos = nextC.toA;\n            off = nextC.toA - nextC.toB;\n        }\n        return result;\n    }\n}\n/**\nA superclass that parsers should extend.\n*/\nclass Parser {\n    /**\n    Start a parse, returning a [partial parse](#common.PartialParse)\n    object. [`fragments`](#common.TreeFragment) can be passed in to\n    make the parse incremental.\n    \n    By default, the entire input is parsed. You can pass `ranges`,\n    which should be a sorted array of non-empty, non-overlapping\n    ranges, to parse only those ranges. The tree returned in that\n    case will start at `ranges[0].from`.\n    */\n    startParse(input, fragments, ranges) {\n        if (typeof input == \"string\")\n            input = new StringInput(input);\n        ranges = !ranges ? [new Range(0, input.length)] : ranges.length ? ranges.map(r => new Range(r.from, r.to)) : [new Range(0, 0)];\n        return this.createParse(input, fragments || [], ranges);\n    }\n    /**\n    Run a full parse, returning the resulting tree.\n    */\n    parse(input, fragments, ranges) {\n        let parse = this.startParse(input, fragments, ranges);\n        for (;;) {\n            let done = parse.advance();\n            if (done)\n                return done;\n        }\n    }\n}\nclass StringInput {\n    constructor(string) {\n        this.string = string;\n    }\n    get length() { return this.string.length; }\n    chunk(from) { return this.string.slice(from); }\n    get lineChunks() { return false; }\n    read(from, to) { return this.string.slice(from, to); }\n}\n\n/**\nCreate a parse wrapper that, after the inner parse completes,\nscans its tree for mixed language regions with the `nest`\nfunction, runs the resulting [inner parses](#common.NestedParse),\nand then [mounts](#common.NodeProp^mounted) their results onto the\ntree.\n*/\nfunction parseMixed(nest) {\n    return (parse, input, fragments, ranges) => new MixedParse(parse, nest, input, fragments, ranges);\n}\nclass InnerParse {\n    constructor(parser, parse, overlay, target, from) {\n        this.parser = parser;\n        this.parse = parse;\n        this.overlay = overlay;\n        this.target = target;\n        this.from = from;\n    }\n}\nfunction checkRanges(ranges) {\n    if (!ranges.length || ranges.some(r => r.from >= r.to))\n        throw new RangeError(\"Invalid inner parse ranges given: \" + JSON.stringify(ranges));\n}\nclass ActiveOverlay {\n    constructor(parser, predicate, mounts, index, start, target, prev) {\n        this.parser = parser;\n        this.predicate = predicate;\n        this.mounts = mounts;\n        this.index = index;\n        this.start = start;\n        this.target = target;\n        this.prev = prev;\n        this.depth = 0;\n        this.ranges = [];\n    }\n}\nconst stoppedInner = new NodeProp({ perNode: true });\nclass MixedParse {\n    constructor(base, nest, input, fragments, ranges) {\n        this.nest = nest;\n        this.input = input;\n        this.fragments = fragments;\n        this.ranges = ranges;\n        this.inner = [];\n        this.innerDone = 0;\n        this.baseTree = null;\n        this.stoppedAt = null;\n        this.baseParse = base;\n    }\n    advance() {\n        if (this.baseParse) {\n            let done = this.baseParse.advance();\n            if (!done)\n                return null;\n            this.baseParse = null;\n            this.baseTree = done;\n            this.startInner();\n            if (this.stoppedAt != null)\n                for (let inner of this.inner)\n                    inner.parse.stopAt(this.stoppedAt);\n        }\n        if (this.innerDone == this.inner.length) {\n            let result = this.baseTree;\n            if (this.stoppedAt != null)\n                result = new Tree(result.type, result.children, result.positions, result.length, result.propValues.concat([[stoppedInner, this.stoppedAt]]));\n            return result;\n        }\n        let inner = this.inner[this.innerDone], done = inner.parse.advance();\n        if (done) {\n            this.innerDone++;\n            // This is a somewhat dodgy but super helpful hack where we\n            // patch up nodes created by the inner parse (and thus\n            // presumably not aliased anywhere else) to hold the information\n            // about the inner parse.\n            let props = Object.assign(Object.create(null), inner.target.props);\n            props[NodeProp.mounted.id] = new MountedTree(done, inner.overlay, inner.parser);\n            inner.target.props = props;\n        }\n        return null;\n    }\n    get parsedPos() {\n        if (this.baseParse)\n            return 0;\n        let pos = this.input.length;\n        for (let i = this.innerDone; i < this.inner.length; i++) {\n            if (this.inner[i].from < pos)\n                pos = Math.min(pos, this.inner[i].parse.parsedPos);\n        }\n        return pos;\n    }\n    stopAt(pos) {\n        this.stoppedAt = pos;\n        if (this.baseParse)\n            this.baseParse.stopAt(pos);\n        else\n            for (let i = this.innerDone; i < this.inner.length; i++)\n                this.inner[i].parse.stopAt(pos);\n    }\n    startInner() {\n        let fragmentCursor = new FragmentCursor(this.fragments);\n        let overlay = null;\n        let covered = null;\n        let cursor = new TreeCursor(new TreeNode(this.baseTree, this.ranges[0].from, 0, null), IterMode.IncludeAnonymous | IterMode.IgnoreMounts);\n        scan: for (let nest, isCovered;;) {\n            let enter = true, range;\n            if (this.stoppedAt != null && cursor.from >= this.stoppedAt) {\n                enter = false;\n            }\n            else if (fragmentCursor.hasNode(cursor)) {\n                if (overlay) {\n                    let match = overlay.mounts.find(m => m.frag.from <= cursor.from && m.frag.to >= cursor.to && m.mount.overlay);\n                    if (match)\n                        for (let r of match.mount.overlay) {\n                            let from = r.from + match.pos, to = r.to + match.pos;\n                            if (from >= cursor.from && to <= cursor.to && !overlay.ranges.some(r => r.from < to && r.to > from))\n                                overlay.ranges.push({ from, to });\n                        }\n                }\n                enter = false;\n            }\n            else if (covered && (isCovered = checkCover(covered.ranges, cursor.from, cursor.to))) {\n                enter = isCovered != 2 /* Cover.Full */;\n            }\n            else if (!cursor.type.isAnonymous && (nest = this.nest(cursor, this.input)) &&\n                (cursor.from < cursor.to || !nest.overlay)) {\n                if (!cursor.tree)\n                    materialize(cursor);\n                let oldMounts = fragmentCursor.findMounts(cursor.from, nest.parser);\n                if (typeof nest.overlay == \"function\") {\n                    overlay = new ActiveOverlay(nest.parser, nest.overlay, oldMounts, this.inner.length, cursor.from, cursor.tree, overlay);\n                }\n                else {\n                    let ranges = punchRanges(this.ranges, nest.overlay ||\n                        (cursor.from < cursor.to ? [new Range(cursor.from, cursor.to)] : []));\n                    if (ranges.length)\n                        checkRanges(ranges);\n                    if (ranges.length || !nest.overlay)\n                        this.inner.push(new InnerParse(nest.parser, ranges.length ? nest.parser.startParse(this.input, enterFragments(oldMounts, ranges), ranges)\n                            : nest.parser.startParse(\"\"), nest.overlay ? nest.overlay.map(r => new Range(r.from - cursor.from, r.to - cursor.from)) : null, cursor.tree, ranges.length ? ranges[0].from : cursor.from));\n                    if (!nest.overlay)\n                        enter = false;\n                    else if (ranges.length)\n                        covered = { ranges, depth: 0, prev: covered };\n                }\n            }\n            else if (overlay && (range = overlay.predicate(cursor))) {\n                if (range === true)\n                    range = new Range(cursor.from, cursor.to);\n                if (range.from < range.to) {\n                    let last = overlay.ranges.length - 1;\n                    if (last >= 0 && overlay.ranges[last].to == range.from)\n                        overlay.ranges[last] = { from: overlay.ranges[last].from, to: range.to };\n                    else\n                        overlay.ranges.push(range);\n                }\n            }\n            if (enter && cursor.firstChild()) {\n                if (overlay)\n                    overlay.depth++;\n                if (covered)\n                    covered.depth++;\n            }\n            else {\n                for (;;) {\n                    if (cursor.nextSibling())\n                        break;\n                    if (!cursor.parent())\n                        break scan;\n                    if (overlay && !--overlay.depth) {\n                        let ranges = punchRanges(this.ranges, overlay.ranges);\n                        if (ranges.length) {\n                            checkRanges(ranges);\n                            this.inner.splice(overlay.index, 0, new InnerParse(overlay.parser, overlay.parser.startParse(this.input, enterFragments(overlay.mounts, ranges), ranges), overlay.ranges.map(r => new Range(r.from - overlay.start, r.to - overlay.start)), overlay.target, ranges[0].from));\n                        }\n                        overlay = overlay.prev;\n                    }\n                    if (covered && !--covered.depth)\n                        covered = covered.prev;\n                }\n            }\n        }\n    }\n}\nfunction checkCover(covered, from, to) {\n    for (let range of covered) {\n        if (range.from >= to)\n            break;\n        if (range.to > from)\n            return range.from <= from && range.to >= to ? 2 /* Cover.Full */ : 1 /* Cover.Partial */;\n    }\n    return 0 /* Cover.None */;\n}\n// Take a piece of buffer and convert it into a stand-alone\n// TreeBuffer.\nfunction sliceBuf(buf, startI, endI, nodes, positions, off) {\n    if (startI < endI) {\n        let from = buf.buffer[startI + 1];\n        nodes.push(buf.slice(startI, endI, from));\n        positions.push(from - off);\n    }\n}\n// This function takes a node that's in a buffer, and converts it, and\n// its parent buffer nodes, into a Tree. This is again acting on the\n// assumption that the trees and buffers have been constructed by the\n// parse that was ran via the mix parser, and thus aren't shared with\n// any other code, making violations of the immutability safe.\nfunction materialize(cursor) {\n    let { node } = cursor, stack = [];\n    let buffer = node.context.buffer;\n    // Scan up to the nearest tree\n    do {\n        stack.push(cursor.index);\n        cursor.parent();\n    } while (!cursor.tree);\n    // Find the index of the buffer in that tree\n    let base = cursor.tree, i = base.children.indexOf(buffer);\n    let buf = base.children[i], b = buf.buffer, newStack = [i];\n    // Split a level in the buffer, putting the nodes before and after\n    // the child that contains `node` into new buffers.\n    function split(startI, endI, type, innerOffset, length, stackPos) {\n        let targetI = stack[stackPos];\n        let children = [], positions = [];\n        sliceBuf(buf, startI, targetI, children, positions, innerOffset);\n        let from = b[targetI + 1], to = b[targetI + 2];\n        newStack.push(children.length);\n        let child = stackPos\n            ? split(targetI + 4, b[targetI + 3], buf.set.types[b[targetI]], from, to - from, stackPos - 1)\n            : node.toTree();\n        children.push(child);\n        positions.push(from - innerOffset);\n        sliceBuf(buf, b[targetI + 3], endI, children, positions, innerOffset);\n        return new Tree(type, children, positions, length);\n    }\n    base.children[i] = split(0, b.length, NodeType.none, 0, buf.length, stack.length - 1);\n    // Move the cursor back to the target node\n    for (let index of newStack) {\n        let tree = cursor.tree.children[index], pos = cursor.tree.positions[index];\n        cursor.yield(new TreeNode(tree, pos + cursor.from, index, cursor._tree));\n    }\n}\nclass StructureCursor {\n    constructor(root, offset) {\n        this.offset = offset;\n        this.done = false;\n        this.cursor = root.cursor(IterMode.IncludeAnonymous | IterMode.IgnoreMounts);\n    }\n    // Move to the first node (in pre-order) that starts at or after `pos`.\n    moveTo(pos) {\n        let { cursor } = this, p = pos - this.offset;\n        while (!this.done && cursor.from < p) {\n            if (cursor.to >= pos && cursor.enter(p, 1, IterMode.IgnoreOverlays | IterMode.ExcludeBuffers)) ;\n            else if (!cursor.next(false))\n                this.done = true;\n        }\n    }\n    hasNode(cursor) {\n        this.moveTo(cursor.from);\n        if (!this.done && this.cursor.from + this.offset == cursor.from && this.cursor.tree) {\n            for (let tree = this.cursor.tree;;) {\n                if (tree == cursor.tree)\n                    return true;\n                if (tree.children.length && tree.positions[0] == 0 && tree.children[0] instanceof Tree)\n                    tree = tree.children[0];\n                else\n                    break;\n            }\n        }\n        return false;\n    }\n}\nclass FragmentCursor {\n    constructor(fragments) {\n        var _a;\n        this.fragments = fragments;\n        this.curTo = 0;\n        this.fragI = 0;\n        if (fragments.length) {\n            let first = this.curFrag = fragments[0];\n            this.curTo = (_a = first.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : first.to;\n            this.inner = new StructureCursor(first.tree, -first.offset);\n        }\n        else {\n            this.curFrag = this.inner = null;\n        }\n    }\n    hasNode(node) {\n        while (this.curFrag && node.from >= this.curTo)\n            this.nextFrag();\n        return this.curFrag && this.curFrag.from <= node.from && this.curTo >= node.to && this.inner.hasNode(node);\n    }\n    nextFrag() {\n        var _a;\n        this.fragI++;\n        if (this.fragI == this.fragments.length) {\n            this.curFrag = this.inner = null;\n        }\n        else {\n            let frag = this.curFrag = this.fragments[this.fragI];\n            this.curTo = (_a = frag.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : frag.to;\n            this.inner = new StructureCursor(frag.tree, -frag.offset);\n        }\n    }\n    findMounts(pos, parser) {\n        var _a;\n        let result = [];\n        if (this.inner) {\n            this.inner.cursor.moveTo(pos, 1);\n            for (let pos = this.inner.cursor.node; pos; pos = pos.parent) {\n                let mount = (_a = pos.tree) === null || _a === void 0 ? void 0 : _a.prop(NodeProp.mounted);\n                if (mount && mount.parser == parser) {\n                    for (let i = this.fragI; i < this.fragments.length; i++) {\n                        let frag = this.fragments[i];\n                        if (frag.from >= pos.to)\n                            break;\n                        if (frag.tree == this.curFrag.tree)\n                            result.push({\n                                frag,\n                                pos: pos.from - frag.offset,\n                                mount\n                            });\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}\nfunction punchRanges(outer, ranges) {\n    let copy = null, current = ranges;\n    for (let i = 1, j = 0; i < outer.length; i++) {\n        let gapFrom = outer[i - 1].to, gapTo = outer[i].from;\n        for (; j < current.length; j++) {\n            let r = current[j];\n            if (r.from >= gapTo)\n                break;\n            if (r.to <= gapFrom)\n                continue;\n            if (!copy)\n                current = copy = ranges.slice();\n            if (r.from < gapFrom) {\n                copy[j] = new Range(r.from, gapFrom);\n                if (r.to > gapTo)\n                    copy.splice(j + 1, 0, new Range(gapTo, r.to));\n            }\n            else if (r.to > gapTo) {\n                copy[j--] = new Range(gapTo, r.to);\n            }\n            else {\n                copy.splice(j--, 1);\n            }\n        }\n    }\n    return current;\n}\nfunction findCoverChanges(a, b, from, to) {\n    let iA = 0, iB = 0, inA = false, inB = false, pos = -1e9;\n    let result = [];\n    for (;;) {\n        let nextA = iA == a.length ? 1e9 : inA ? a[iA].to : a[iA].from;\n        let nextB = iB == b.length ? 1e9 : inB ? b[iB].to : b[iB].from;\n        if (inA != inB) {\n            let start = Math.max(pos, from), end = Math.min(nextA, nextB, to);\n            if (start < end)\n                result.push(new Range(start, end));\n        }\n        pos = Math.min(nextA, nextB);\n        if (pos == 1e9)\n            break;\n        if (nextA == pos) {\n            if (!inA)\n                inA = true;\n            else {\n                inA = false;\n                iA++;\n            }\n        }\n        if (nextB == pos) {\n            if (!inB)\n                inB = true;\n            else {\n                inB = false;\n                iB++;\n            }\n        }\n    }\n    return result;\n}\n// Given a number of fragments for the outer tree, and a set of ranges\n// to parse, find fragments for inner trees mounted around those\n// ranges, if any.\nfunction enterFragments(mounts, ranges) {\n    let result = [];\n    for (let { pos, mount, frag } of mounts) {\n        let startPos = pos + (mount.overlay ? mount.overlay[0].from : 0), endPos = startPos + mount.tree.length;\n        let from = Math.max(frag.from, startPos), to = Math.min(frag.to, endPos);\n        if (mount.overlay) {\n            let overlay = mount.overlay.map(r => new Range(r.from + pos, r.to + pos));\n            let changes = findCoverChanges(ranges, overlay, from, to);\n            for (let i = 0, pos = from;; i++) {\n                let last = i == changes.length, end = last ? to : changes[i].from;\n                if (end > pos)\n                    result.push(new TreeFragment(pos, end, mount.tree, -startPos, frag.from >= pos || frag.openStart, frag.to <= end || frag.openEnd));\n                if (last)\n                    break;\n                pos = changes[i].to;\n            }\n        }\n        else {\n            result.push(new TreeFragment(from, to, mount.tree, -startPos, frag.from >= startPos || frag.openStart, frag.to <= endPos || frag.openEnd));\n        }\n    }\n    return result;\n}\n\nexport { DefaultBufferLength, IterMode, MountedTree, NodeProp, NodeSet, NodeType, NodeWeakMap, Parser, Tree, TreeBuffer, TreeCursor, TreeFragment, parseMixed };\n", "import { NodeProp } from '@lezer/common';\n\nlet nextTagID = 0;\n/**\nHighlighting tags are markers that denote a highlighting category.\nThey are [associated](#highlight.styleTags) with parts of a syntax\ntree by a language mode, and then mapped to an actual CSS style by\na [highlighter](#highlight.Highlighter).\n\nBecause syntax tree node types and highlight styles have to be\nable to talk the same language, CodeMirror uses a mostly _closed_\n[vocabulary](#highlight.tags) of syntax tags (as opposed to\ntraditional open string-based systems, which make it hard for\nhighlighting themes to cover all the tokens produced by the\nvarious languages).\n\nIt _is_ possible to [define](#highlight.Tag^define) your own\nhighlighting tags for system-internal use (where you control both\nthe language package and the highlighter), but such tags will not\nbe picked up by regular highlighters (though you can derive them\nfrom standard tags to allow highlighters to fall back to those).\n*/\nclass Tag {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The optional name of the base tag @internal\n    */\n    name, \n    /**\n    The set of this tag and all its parent tags, starting with\n    this one itself and sorted in order of decreasing specificity.\n    */\n    set, \n    /**\n    The base unmodified tag that this one is based on, if it's\n    modified @internal\n    */\n    base, \n    /**\n    The modifiers applied to this.base @internal\n    */\n    modified) {\n        this.name = name;\n        this.set = set;\n        this.base = base;\n        this.modified = modified;\n        /**\n        @internal\n        */\n        this.id = nextTagID++;\n    }\n    toString() {\n        let { name } = this;\n        for (let mod of this.modified)\n            if (mod.name)\n                name = `${mod.name}(${name})`;\n        return name;\n    }\n    static define(nameOrParent, parent) {\n        let name = typeof nameOrParent == \"string\" ? nameOrParent : \"?\";\n        if (nameOrParent instanceof Tag)\n            parent = nameOrParent;\n        if (parent === null || parent === void 0 ? void 0 : parent.base)\n            throw new Error(\"Can not derive from a modified tag\");\n        let tag = new Tag(name, [], null, []);\n        tag.set.push(tag);\n        if (parent)\n            for (let t of parent.set)\n                tag.set.push(t);\n        return tag;\n    }\n    /**\n    Define a tag _modifier_, which is a function that, given a tag,\n    will return a tag that is a subtag of the original. Applying the\n    same modifier to a twice tag will return the same value (`m1(t1)\n    == m1(t1)`) and applying multiple modifiers will, regardless or\n    order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).\n    \n    When multiple modifiers are applied to a given base tag, each\n    smaller set of modifiers is registered as a parent, so that for\n    example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,\n    `m1(m3(t1)`, and so on.\n    */\n    static defineModifier(name) {\n        let mod = new Modifier(name);\n        return (tag) => {\n            if (tag.modified.indexOf(mod) > -1)\n                return tag;\n            return Modifier.get(tag.base || tag, tag.modified.concat(mod).sort((a, b) => a.id - b.id));\n        };\n    }\n}\nlet nextModifierID = 0;\nclass Modifier {\n    constructor(name) {\n        this.name = name;\n        this.instances = [];\n        this.id = nextModifierID++;\n    }\n    static get(base, mods) {\n        if (!mods.length)\n            return base;\n        let exists = mods[0].instances.find(t => t.base == base && sameArray(mods, t.modified));\n        if (exists)\n            return exists;\n        let set = [], tag = new Tag(base.name, set, base, mods);\n        for (let m of mods)\n            m.instances.push(tag);\n        let configs = powerSet(mods);\n        for (let parent of base.set)\n            if (!parent.modified.length)\n                for (let config of configs)\n                    set.push(Modifier.get(parent, config));\n        return tag;\n    }\n}\nfunction sameArray(a, b) {\n    return a.length == b.length && a.every((x, i) => x == b[i]);\n}\nfunction powerSet(array) {\n    let sets = [[]];\n    for (let i = 0; i < array.length; i++) {\n        for (let j = 0, e = sets.length; j < e; j++) {\n            sets.push(sets[j].concat(array[i]));\n        }\n    }\n    return sets.sort((a, b) => b.length - a.length);\n}\n/**\nThis function is used to add a set of tags to a language syntax\nvia [`NodeSet.extend`](#common.NodeSet.extend) or\n[`LRParser.configure`](#lr.LRParser.configure).\n\nThe argument object maps node selectors to [highlighting\ntags](#highlight.Tag) or arrays of tags.\n\nNode selectors may hold one or more (space-separated) node paths.\nSuch a path can be a [node name](#common.NodeType.name), or\nmultiple node names (or `*` wildcards) separated by slash\ncharacters, as in `\"Block/Declaration/VariableName\"`. Such a path\nmatches the final node but only if its direct parent nodes are the\nother nodes mentioned. A `*` in such a path matches any parent,\nbut only a single level\u2014wildcards that match multiple parents\naren't supported, both for efficiency reasons and because Lezer\ntrees make it rather hard to reason about what they would match.)\n\nA path can be ended with `/...` to indicate that the tag assigned\nto the node should also apply to all child nodes, even if they\nmatch their own style (by default, only the innermost style is\nused).\n\nWhen a path ends in `!`, as in `Attribute!`, no further matching\nhappens for the node's child nodes, and the entire node gets the\ngiven style.\n\nIn this notation, node names that contain `/`, `!`, `*`, or `...`\nmust be quoted as JSON strings.\n\nFor example:\n\n```javascript\nparser.withProps(\n  styleTags({\n    // Style Number and BigNumber nodes\n    \"Number BigNumber\": tags.number,\n    // Style Escape nodes whose parent is String\n    \"String/Escape\": tags.escape,\n    // Style anything inside Attributes nodes\n    \"Attributes!\": tags.meta,\n    // Add a style to all content inside Italic nodes\n    \"Italic/...\": tags.emphasis,\n    // Style InvalidString nodes as both `string` and `invalid`\n    \"InvalidString\": [tags.string, tags.invalid],\n    // Style the node named \"/\" as punctuation\n    '\"/\"': tags.punctuation\n  })\n)\n```\n*/\nfunction styleTags(spec) {\n    let byName = Object.create(null);\n    for (let prop in spec) {\n        let tags = spec[prop];\n        if (!Array.isArray(tags))\n            tags = [tags];\n        for (let part of prop.split(\" \"))\n            if (part) {\n                let pieces = [], mode = 2 /* Mode.Normal */, rest = part;\n                for (let pos = 0;;) {\n                    if (rest == \"...\" && pos > 0 && pos + 3 == part.length) {\n                        mode = 1 /* Mode.Inherit */;\n                        break;\n                    }\n                    let m = /^\"(?:[^\"\\\\]|\\\\.)*?\"|[^\\/!]+/.exec(rest);\n                    if (!m)\n                        throw new RangeError(\"Invalid path: \" + part);\n                    pieces.push(m[0] == \"*\" ? \"\" : m[0][0] == '\"' ? JSON.parse(m[0]) : m[0]);\n                    pos += m[0].length;\n                    if (pos == part.length)\n                        break;\n                    let next = part[pos++];\n                    if (pos == part.length && next == \"!\") {\n                        mode = 0 /* Mode.Opaque */;\n                        break;\n                    }\n                    if (next != \"/\")\n                        throw new RangeError(\"Invalid path: \" + part);\n                    rest = part.slice(pos);\n                }\n                let last = pieces.length - 1, inner = pieces[last];\n                if (!inner)\n                    throw new RangeError(\"Invalid path: \" + part);\n                let rule = new Rule(tags, mode, last > 0 ? pieces.slice(0, last) : null);\n                byName[inner] = rule.sort(byName[inner]);\n            }\n    }\n    return ruleNodeProp.add(byName);\n}\nconst ruleNodeProp = new NodeProp();\nclass Rule {\n    constructor(tags, mode, context, next) {\n        this.tags = tags;\n        this.mode = mode;\n        this.context = context;\n        this.next = next;\n    }\n    get opaque() { return this.mode == 0 /* Mode.Opaque */; }\n    get inherit() { return this.mode == 1 /* Mode.Inherit */; }\n    sort(other) {\n        if (!other || other.depth < this.depth) {\n            this.next = other;\n            return this;\n        }\n        other.next = this.sort(other.next);\n        return other;\n    }\n    get depth() { return this.context ? this.context.length : 0; }\n}\nRule.empty = new Rule([], 2 /* Mode.Normal */, null);\n/**\nDefine a [highlighter](#highlight.Highlighter) from an array of\ntag/class pairs. Classes associated with more specific tags will\ntake precedence.\n*/\nfunction tagHighlighter(tags, options) {\n    let map = Object.create(null);\n    for (let style of tags) {\n        if (!Array.isArray(style.tag))\n            map[style.tag.id] = style.class;\n        else\n            for (let tag of style.tag)\n                map[tag.id] = style.class;\n    }\n    let { scope, all = null } = options || {};\n    return {\n        style: (tags) => {\n            let cls = all;\n            for (let tag of tags) {\n                for (let sub of tag.set) {\n                    let tagClass = map[sub.id];\n                    if (tagClass) {\n                        cls = cls ? cls + \" \" + tagClass : tagClass;\n                        break;\n                    }\n                }\n            }\n            return cls;\n        },\n        scope\n    };\n}\nfunction highlightTags(highlighters, tags) {\n    let result = null;\n    for (let highlighter of highlighters) {\n        let value = highlighter.style(tags);\n        if (value)\n            result = result ? result + \" \" + value : value;\n    }\n    return result;\n}\n/**\nHighlight the given [tree](#common.Tree) with the given\n[highlighter](#highlight.Highlighter). Often, the higher-level\n[`highlightCode`](#highlight.highlightCode) function is easier to\nuse.\n*/\nfunction highlightTree(tree, highlighter, \n/**\nAssign styling to a region of the text. Will be called, in order\nof position, for any ranges where more than zero classes apply.\n`classes` is a space separated string of CSS classes.\n*/\nputStyle, \n/**\nThe start of the range to highlight.\n*/\nfrom = 0, \n/**\nThe end of the range.\n*/\nto = tree.length) {\n    let builder = new HighlightBuilder(from, Array.isArray(highlighter) ? highlighter : [highlighter], putStyle);\n    builder.highlightRange(tree.cursor(), from, to, \"\", builder.highlighters);\n    builder.flush(to);\n}\n/**\nHighlight the given tree with the given highlighter, calling\n`putText` for every piece of text, either with a set of classes or\nwith the empty string when unstyled, and `putBreak` for every line\nbreak.\n*/\nfunction highlightCode(code, tree, highlighter, putText, putBreak, from = 0, to = code.length) {\n    let pos = from;\n    function writeTo(p, classes) {\n        if (p <= pos)\n            return;\n        for (let text = code.slice(pos, p), i = 0;;) {\n            let nextBreak = text.indexOf(\"\\n\", i);\n            let upto = nextBreak < 0 ? text.length : nextBreak;\n            if (upto > i)\n                putText(text.slice(i, upto), classes);\n            if (nextBreak < 0)\n                break;\n            putBreak();\n            i = nextBreak + 1;\n        }\n        pos = p;\n    }\n    highlightTree(tree, highlighter, (from, to, classes) => {\n        writeTo(from, \"\");\n        writeTo(to, classes);\n    }, from, to);\n    writeTo(to, \"\");\n}\nclass HighlightBuilder {\n    constructor(at, highlighters, span) {\n        this.at = at;\n        this.highlighters = highlighters;\n        this.span = span;\n        this.class = \"\";\n    }\n    startSpan(at, cls) {\n        if (cls != this.class) {\n            this.flush(at);\n            if (at > this.at)\n                this.at = at;\n            this.class = cls;\n        }\n    }\n    flush(to) {\n        if (to > this.at && this.class)\n            this.span(this.at, to, this.class);\n    }\n    highlightRange(cursor, from, to, inheritedClass, highlighters) {\n        let { type, from: start, to: end } = cursor;\n        if (start >= to || end <= from)\n            return;\n        if (type.isTop)\n            highlighters = this.highlighters.filter(h => !h.scope || h.scope(type));\n        let cls = inheritedClass;\n        let rule = getStyleTags(cursor) || Rule.empty;\n        let tagCls = highlightTags(highlighters, rule.tags);\n        if (tagCls) {\n            if (cls)\n                cls += \" \";\n            cls += tagCls;\n            if (rule.mode == 1 /* Mode.Inherit */)\n                inheritedClass += (inheritedClass ? \" \" : \"\") + tagCls;\n        }\n        this.startSpan(Math.max(from, start), cls);\n        if (rule.opaque)\n            return;\n        let mounted = cursor.tree && cursor.tree.prop(NodeProp.mounted);\n        if (mounted && mounted.overlay) {\n            let inner = cursor.node.enter(mounted.overlay[0].from + start, 1);\n            let innerHighlighters = this.highlighters.filter(h => !h.scope || h.scope(mounted.tree.type));\n            let hasChild = cursor.firstChild();\n            for (let i = 0, pos = start;; i++) {\n                let next = i < mounted.overlay.length ? mounted.overlay[i] : null;\n                let nextPos = next ? next.from + start : end;\n                let rangeFrom = Math.max(from, pos), rangeTo = Math.min(to, nextPos);\n                if (rangeFrom < rangeTo && hasChild) {\n                    while (cursor.from < rangeTo) {\n                        this.highlightRange(cursor, rangeFrom, rangeTo, inheritedClass, highlighters);\n                        this.startSpan(Math.min(rangeTo, cursor.to), cls);\n                        if (cursor.to >= nextPos || !cursor.nextSibling())\n                            break;\n                    }\n                }\n                if (!next || nextPos > to)\n                    break;\n                pos = next.to + start;\n                if (pos > from) {\n                    this.highlightRange(inner.cursor(), Math.max(from, next.from + start), Math.min(to, pos), \"\", innerHighlighters);\n                    this.startSpan(Math.min(to, pos), cls);\n                }\n            }\n            if (hasChild)\n                cursor.parent();\n        }\n        else if (cursor.firstChild()) {\n            if (mounted)\n                inheritedClass = \"\";\n            do {\n                if (cursor.to <= from)\n                    continue;\n                if (cursor.from >= to)\n                    break;\n                this.highlightRange(cursor, from, to, inheritedClass, highlighters);\n                this.startSpan(Math.min(to, cursor.to), cls);\n            } while (cursor.nextSibling());\n            cursor.parent();\n        }\n    }\n}\n/**\nMatch a syntax node's [highlight rules](#highlight.styleTags). If\nthere's a match, return its set of tags, and whether it is\nopaque (uses a `!`) or applies to all child nodes (`/...`).\n*/\nfunction getStyleTags(node) {\n    let rule = node.type.prop(ruleNodeProp);\n    while (rule && rule.context && !node.matchContext(rule.context))\n        rule = rule.next;\n    return rule || null;\n}\nconst t = Tag.define;\nconst comment = t(), name = t(), typeName = t(name), propertyName = t(name), literal = t(), string = t(literal), number = t(literal), content = t(), heading = t(content), keyword = t(), operator = t(), punctuation = t(), bracket = t(punctuation), meta = t();\n/**\nThe default set of highlighting [tags](#highlight.Tag).\n\nThis collection is heavily biased towards programming languages,\nand necessarily incomplete. A full ontology of syntactic\nconstructs would fill a stack of books, and be impractical to\nwrite themes for. So try to make do with this set. If all else\nfails, [open an\nissue](https://github.com/codemirror/codemirror.next) to propose a\nnew tag, or [define](#highlight.Tag^define) a local custom tag for\nyour use case.\n\nNote that it is not obligatory to always attach the most specific\ntag possible to an element\u2014if your grammar can't easily\ndistinguish a certain type of element (such as a local variable),\nit is okay to style it as its more general variant (a variable).\n\nFor tags that extend some parent tag, the documentation links to\nthe parent.\n*/\nconst tags = {\n    /**\n    A comment.\n    */\n    comment,\n    /**\n    A line [comment](#highlight.tags.comment).\n    */\n    lineComment: t(comment),\n    /**\n    A block [comment](#highlight.tags.comment).\n    */\n    blockComment: t(comment),\n    /**\n    A documentation [comment](#highlight.tags.comment).\n    */\n    docComment: t(comment),\n    /**\n    Any kind of identifier.\n    */\n    name,\n    /**\n    The [name](#highlight.tags.name) of a variable.\n    */\n    variableName: t(name),\n    /**\n    A type [name](#highlight.tags.name).\n    */\n    typeName: typeName,\n    /**\n    A tag name (subtag of [`typeName`](#highlight.tags.typeName)).\n    */\n    tagName: t(typeName),\n    /**\n    A property or field [name](#highlight.tags.name).\n    */\n    propertyName: propertyName,\n    /**\n    An attribute name (subtag of [`propertyName`](#highlight.tags.propertyName)).\n    */\n    attributeName: t(propertyName),\n    /**\n    The [name](#highlight.tags.name) of a class.\n    */\n    className: t(name),\n    /**\n    A label [name](#highlight.tags.name).\n    */\n    labelName: t(name),\n    /**\n    A namespace [name](#highlight.tags.name).\n    */\n    namespace: t(name),\n    /**\n    The [name](#highlight.tags.name) of a macro.\n    */\n    macroName: t(name),\n    /**\n    A literal value.\n    */\n    literal,\n    /**\n    A string [literal](#highlight.tags.literal).\n    */\n    string,\n    /**\n    A documentation [string](#highlight.tags.string).\n    */\n    docString: t(string),\n    /**\n    A character literal (subtag of [string](#highlight.tags.string)).\n    */\n    character: t(string),\n    /**\n    An attribute value (subtag of [string](#highlight.tags.string)).\n    */\n    attributeValue: t(string),\n    /**\n    A number [literal](#highlight.tags.literal).\n    */\n    number,\n    /**\n    An integer [number](#highlight.tags.number) literal.\n    */\n    integer: t(number),\n    /**\n    A floating-point [number](#highlight.tags.number) literal.\n    */\n    float: t(number),\n    /**\n    A boolean [literal](#highlight.tags.literal).\n    */\n    bool: t(literal),\n    /**\n    Regular expression [literal](#highlight.tags.literal).\n    */\n    regexp: t(literal),\n    /**\n    An escape [literal](#highlight.tags.literal), for example a\n    backslash escape in a string.\n    */\n    escape: t(literal),\n    /**\n    A color [literal](#highlight.tags.literal).\n    */\n    color: t(literal),\n    /**\n    A URL [literal](#highlight.tags.literal).\n    */\n    url: t(literal),\n    /**\n    A language keyword.\n    */\n    keyword,\n    /**\n    The [keyword](#highlight.tags.keyword) for the self or this\n    object.\n    */\n    self: t(keyword),\n    /**\n    The [keyword](#highlight.tags.keyword) for null.\n    */\n    null: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) denoting some atomic value.\n    */\n    atom: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that represents a unit.\n    */\n    unit: t(keyword),\n    /**\n    A modifier [keyword](#highlight.tags.keyword).\n    */\n    modifier: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that acts as an operator.\n    */\n    operatorKeyword: t(keyword),\n    /**\n    A control-flow related [keyword](#highlight.tags.keyword).\n    */\n    controlKeyword: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that defines something.\n    */\n    definitionKeyword: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) related to defining or\n    interfacing with modules.\n    */\n    moduleKeyword: t(keyword),\n    /**\n    An operator.\n    */\n    operator,\n    /**\n    An [operator](#highlight.tags.operator) that dereferences something.\n    */\n    derefOperator: t(operator),\n    /**\n    Arithmetic-related [operator](#highlight.tags.operator).\n    */\n    arithmeticOperator: t(operator),\n    /**\n    Logical [operator](#highlight.tags.operator).\n    */\n    logicOperator: t(operator),\n    /**\n    Bit [operator](#highlight.tags.operator).\n    */\n    bitwiseOperator: t(operator),\n    /**\n    Comparison [operator](#highlight.tags.operator).\n    */\n    compareOperator: t(operator),\n    /**\n    [Operator](#highlight.tags.operator) that updates its operand.\n    */\n    updateOperator: t(operator),\n    /**\n    [Operator](#highlight.tags.operator) that defines something.\n    */\n    definitionOperator: t(operator),\n    /**\n    Type-related [operator](#highlight.tags.operator).\n    */\n    typeOperator: t(operator),\n    /**\n    Control-flow [operator](#highlight.tags.operator).\n    */\n    controlOperator: t(operator),\n    /**\n    Program or markup punctuation.\n    */\n    punctuation,\n    /**\n    [Punctuation](#highlight.tags.punctuation) that separates\n    things.\n    */\n    separator: t(punctuation),\n    /**\n    Bracket-style [punctuation](#highlight.tags.punctuation).\n    */\n    bracket,\n    /**\n    Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`\n    tokens).\n    */\n    angleBracket: t(bracket),\n    /**\n    Square [brackets](#highlight.tags.bracket) (usually `[` and `]`\n    tokens).\n    */\n    squareBracket: t(bracket),\n    /**\n    Parentheses (usually `(` and `)` tokens). Subtag of\n    [bracket](#highlight.tags.bracket).\n    */\n    paren: t(bracket),\n    /**\n    Braces (usually `{` and `}` tokens). Subtag of\n    [bracket](#highlight.tags.bracket).\n    */\n    brace: t(bracket),\n    /**\n    Content, for example plain text in XML or markup documents.\n    */\n    content,\n    /**\n    [Content](#highlight.tags.content) that represents a heading.\n    */\n    heading,\n    /**\n    A level 1 [heading](#highlight.tags.heading).\n    */\n    heading1: t(heading),\n    /**\n    A level 2 [heading](#highlight.tags.heading).\n    */\n    heading2: t(heading),\n    /**\n    A level 3 [heading](#highlight.tags.heading).\n    */\n    heading3: t(heading),\n    /**\n    A level 4 [heading](#highlight.tags.heading).\n    */\n    heading4: t(heading),\n    /**\n    A level 5 [heading](#highlight.tags.heading).\n    */\n    heading5: t(heading),\n    /**\n    A level 6 [heading](#highlight.tags.heading).\n    */\n    heading6: t(heading),\n    /**\n    A prose [content](#highlight.tags.content) separator (such as a horizontal rule).\n    */\n    contentSeparator: t(content),\n    /**\n    [Content](#highlight.tags.content) that represents a list.\n    */\n    list: t(content),\n    /**\n    [Content](#highlight.tags.content) that represents a quote.\n    */\n    quote: t(content),\n    /**\n    [Content](#highlight.tags.content) that is emphasized.\n    */\n    emphasis: t(content),\n    /**\n    [Content](#highlight.tags.content) that is styled strong.\n    */\n    strong: t(content),\n    /**\n    [Content](#highlight.tags.content) that is part of a link.\n    */\n    link: t(content),\n    /**\n    [Content](#highlight.tags.content) that is styled as code or\n    monospace.\n    */\n    monospace: t(content),\n    /**\n    [Content](#highlight.tags.content) that has a strike-through\n    style.\n    */\n    strikethrough: t(content),\n    /**\n    Inserted text in a change-tracking format.\n    */\n    inserted: t(),\n    /**\n    Deleted text.\n    */\n    deleted: t(),\n    /**\n    Changed text.\n    */\n    changed: t(),\n    /**\n    An invalid or unsyntactic element.\n    */\n    invalid: t(),\n    /**\n    Metadata or meta-instruction.\n    */\n    meta,\n    /**\n    [Metadata](#highlight.tags.meta) that applies to the entire\n    document.\n    */\n    documentMeta: t(meta),\n    /**\n    [Metadata](#highlight.tags.meta) that annotates or adds\n    attributes to a given syntactic element.\n    */\n    annotation: t(meta),\n    /**\n    Processing instruction or preprocessor directive. Subtag of\n    [meta](#highlight.tags.meta).\n    */\n    processingInstruction: t(meta),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates that a\n    given element is being defined. Expected to be used with the\n    various [name](#highlight.tags.name) tags.\n    */\n    definition: Tag.defineModifier(\"definition\"),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates that\n    something is constant. Mostly expected to be used with\n    [variable names](#highlight.tags.variableName).\n    */\n    constant: Tag.defineModifier(\"constant\"),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) used to indicate that\n    a [variable](#highlight.tags.variableName) or [property\n    name](#highlight.tags.propertyName) is being called or defined\n    as a function.\n    */\n    function: Tag.defineModifier(\"function\"),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that can be applied to\n    [names](#highlight.tags.name) to indicate that they belong to\n    the language's standard environment.\n    */\n    standard: Tag.defineModifier(\"standard\"),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates a given\n    [names](#highlight.tags.name) is local to some scope.\n    */\n    local: Tag.defineModifier(\"local\"),\n    /**\n    A generic variant [modifier](#highlight.Tag^defineModifier) that\n    can be used to tag language-specific alternative variants of\n    some common tag. It is recommended for themes to define special\n    forms of at least the [string](#highlight.tags.string) and\n    [variable name](#highlight.tags.variableName) tags, since those\n    come up a lot.\n    */\n    special: Tag.defineModifier(\"special\")\n};\nfor (let name in tags) {\n    let val = tags[name];\n    if (val instanceof Tag)\n        val.name = name;\n}\n/**\nThis is a highlighter that adds stable, predictable classes to\ntokens, for styling with external CSS.\n\nThe following tags are mapped to their name prefixed with `\"tok-\"`\n(for example `\"tok-comment\"`):\n\n* [`link`](#highlight.tags.link)\n* [`heading`](#highlight.tags.heading)\n* [`emphasis`](#highlight.tags.emphasis)\n* [`strong`](#highlight.tags.strong)\n* [`keyword`](#highlight.tags.keyword)\n* [`atom`](#highlight.tags.atom)\n* [`bool`](#highlight.tags.bool)\n* [`url`](#highlight.tags.url)\n* [`labelName`](#highlight.tags.labelName)\n* [`inserted`](#highlight.tags.inserted)\n* [`deleted`](#highlight.tags.deleted)\n* [`literal`](#highlight.tags.literal)\n* [`string`](#highlight.tags.string)\n* [`number`](#highlight.tags.number)\n* [`variableName`](#highlight.tags.variableName)\n* [`typeName`](#highlight.tags.typeName)\n* [`namespace`](#highlight.tags.namespace)\n* [`className`](#highlight.tags.className)\n* [`macroName`](#highlight.tags.macroName)\n* [`propertyName`](#highlight.tags.propertyName)\n* [`operator`](#highlight.tags.operator)\n* [`comment`](#highlight.tags.comment)\n* [`meta`](#highlight.tags.meta)\n* [`punctuation`](#highlight.tags.punctuation)\n* [`invalid`](#highlight.tags.invalid)\n\nIn addition, these mappings are provided:\n\n* [`regexp`](#highlight.tags.regexp),\n  [`escape`](#highlight.tags.escape), and\n  [`special`](#highlight.tags.special)[`(string)`](#highlight.tags.string)\n  are mapped to `\"tok-string2\"`\n* [`special`](#highlight.tags.special)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName2\"`\n* [`local`](#highlight.tags.local)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName tok-local\"`\n* [`definition`](#highlight.tags.definition)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName tok-definition\"`\n* [`definition`](#highlight.tags.definition)[`(propertyName)`](#highlight.tags.propertyName)\n  to `\"tok-propertyName tok-definition\"`\n*/\nconst classHighlighter = tagHighlighter([\n    { tag: tags.link, class: \"tok-link\" },\n    { tag: tags.heading, class: \"tok-heading\" },\n    { tag: tags.emphasis, class: \"tok-emphasis\" },\n    { tag: tags.strong, class: \"tok-strong\" },\n    { tag: tags.keyword, class: \"tok-keyword\" },\n    { tag: tags.atom, class: \"tok-atom\" },\n    { tag: tags.bool, class: \"tok-bool\" },\n    { tag: tags.url, class: \"tok-url\" },\n    { tag: tags.labelName, class: \"tok-labelName\" },\n    { tag: tags.inserted, class: \"tok-inserted\" },\n    { tag: tags.deleted, class: \"tok-deleted\" },\n    { tag: tags.literal, class: \"tok-literal\" },\n    { tag: tags.string, class: \"tok-string\" },\n    { tag: tags.number, class: \"tok-number\" },\n    { tag: [tags.regexp, tags.escape, tags.special(tags.string)], class: \"tok-string2\" },\n    { tag: tags.variableName, class: \"tok-variableName\" },\n    { tag: tags.local(tags.variableName), class: \"tok-variableName tok-local\" },\n    { tag: tags.definition(tags.variableName), class: \"tok-variableName tok-definition\" },\n    { tag: tags.special(tags.variableName), class: \"tok-variableName2\" },\n    { tag: tags.definition(tags.propertyName), class: \"tok-propertyName tok-definition\" },\n    { tag: tags.typeName, class: \"tok-typeName\" },\n    { tag: tags.namespace, class: \"tok-namespace\" },\n    { tag: tags.className, class: \"tok-className\" },\n    { tag: tags.macroName, class: \"tok-macroName\" },\n    { tag: tags.propertyName, class: \"tok-propertyName\" },\n    { tag: tags.operator, class: \"tok-operator\" },\n    { tag: tags.comment, class: \"tok-comment\" },\n    { tag: tags.meta, class: \"tok-meta\" },\n    { tag: tags.invalid, class: \"tok-invalid\" },\n    { tag: tags.punctuation, class: \"tok-punctuation\" }\n]);\n\nexport { Tag, classHighlighter, getStyleTags, highlightCode, highlightTree, styleTags, tagHighlighter, tags };\n", "import { NodeProp, IterMode, Tree, TreeFragment, Parser, NodeType, NodeSet } from '@lezer/common';\nimport { StateEffect, StateField, Facet, EditorState, countColumn, combineConfig, RangeSet, RangeSetBuilder, Prec } from '@codemirror/state';\nimport { ViewPlugin, logException, EditorView, Decoration, WidgetType, gutter, GutterMarker, Direction } from '@codemirror/view';\nimport { tags, tagHighlighter, highlightTree, styleTags } from '@lezer/highlight';\nimport { StyleModule } from 'style-mod';\n\nvar _a;\n/**\nNode prop stored in a parser's top syntax node to provide the\nfacet that stores language-specific data for that language.\n*/\nconst languageDataProp = /*@__PURE__*/new NodeProp();\n/**\nHelper function to define a facet (to be added to the top syntax\nnode(s) for a language via\n[`languageDataProp`](https://codemirror.net/6/docs/ref/#language.languageDataProp)), that will be\nused to associate language data with the language. You\nprobably only need this when subclassing\n[`Language`](https://codemirror.net/6/docs/ref/#language.Language).\n*/\nfunction defineLanguageFacet(baseData) {\n    return Facet.define({\n        combine: baseData ? values => values.concat(baseData) : undefined\n    });\n}\n/**\nSyntax node prop used to register sublanguages. Should be added to\nthe top level node type for the language.\n*/\nconst sublanguageProp = /*@__PURE__*/new NodeProp();\n/**\nA language object manages parsing and per-language\n[metadata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt). Parse data is\nmanaged as a [Lezer](https://lezer.codemirror.net) tree. The class\ncan be used directly, via the [`LRLanguage`](https://codemirror.net/6/docs/ref/#language.LRLanguage)\nsubclass for [Lezer](https://lezer.codemirror.net/) LR parsers, or\nvia the [`StreamLanguage`](https://codemirror.net/6/docs/ref/#language.StreamLanguage) subclass\nfor stream parsers.\n*/\nclass Language {\n    /**\n    Construct a language object. If you need to invoke this\n    directly, first define a data facet with\n    [`defineLanguageFacet`](https://codemirror.net/6/docs/ref/#language.defineLanguageFacet), and then\n    configure your parser to [attach](https://codemirror.net/6/docs/ref/#language.languageDataProp) it\n    to the language's outer syntax node.\n    */\n    constructor(\n    /**\n    The [language data](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) facet\n    used for this language.\n    */\n    data, parser, extraExtensions = [], \n    /**\n    A language name.\n    */\n    name = \"\") {\n        this.data = data;\n        this.name = name;\n        // Kludge to define EditorState.tree as a debugging helper,\n        // without the EditorState package actually knowing about\n        // languages and lezer trees.\n        if (!EditorState.prototype.hasOwnProperty(\"tree\"))\n            Object.defineProperty(EditorState.prototype, \"tree\", { get() { return syntaxTree(this); } });\n        this.parser = parser;\n        this.extension = [\n            language.of(this),\n            EditorState.languageData.of((state, pos, side) => {\n                let top = topNodeAt(state, pos, side), data = top.type.prop(languageDataProp);\n                if (!data)\n                    return [];\n                let base = state.facet(data), sub = top.type.prop(sublanguageProp);\n                if (sub) {\n                    let innerNode = top.resolve(pos - top.from, side);\n                    for (let sublang of sub)\n                        if (sublang.test(innerNode, state)) {\n                            let data = state.facet(sublang.facet);\n                            return sublang.type == \"replace\" ? data : data.concat(base);\n                        }\n                }\n                return base;\n            })\n        ].concat(extraExtensions);\n    }\n    /**\n    Query whether this language is active at the given position.\n    */\n    isActiveAt(state, pos, side = -1) {\n        return topNodeAt(state, pos, side).type.prop(languageDataProp) == this.data;\n    }\n    /**\n    Find the document regions that were parsed using this language.\n    The returned regions will _include_ any nested languages rooted\n    in this language, when those exist.\n    */\n    findRegions(state) {\n        let lang = state.facet(language);\n        if ((lang === null || lang === void 0 ? void 0 : lang.data) == this.data)\n            return [{ from: 0, to: state.doc.length }];\n        if (!lang || !lang.allowsNesting)\n            return [];\n        let result = [];\n        let explore = (tree, from) => {\n            if (tree.prop(languageDataProp) == this.data) {\n                result.push({ from, to: from + tree.length });\n                return;\n            }\n            let mount = tree.prop(NodeProp.mounted);\n            if (mount) {\n                if (mount.tree.prop(languageDataProp) == this.data) {\n                    if (mount.overlay)\n                        for (let r of mount.overlay)\n                            result.push({ from: r.from + from, to: r.to + from });\n                    else\n                        result.push({ from: from, to: from + tree.length });\n                    return;\n                }\n                else if (mount.overlay) {\n                    let size = result.length;\n                    explore(mount.tree, mount.overlay[0].from + from);\n                    if (result.length > size)\n                        return;\n                }\n            }\n            for (let i = 0; i < tree.children.length; i++) {\n                let ch = tree.children[i];\n                if (ch instanceof Tree)\n                    explore(ch, tree.positions[i] + from);\n            }\n        };\n        explore(syntaxTree(state), 0);\n        return result;\n    }\n    /**\n    Indicates whether this language allows nested languages. The\n    default implementation returns true.\n    */\n    get allowsNesting() { return true; }\n}\n/**\n@internal\n*/\nLanguage.setState = /*@__PURE__*/StateEffect.define();\nfunction topNodeAt(state, pos, side) {\n    let topLang = state.facet(language), tree = syntaxTree(state).topNode;\n    if (!topLang || topLang.allowsNesting) {\n        for (let node = tree; node; node = node.enter(pos, side, IterMode.ExcludeBuffers))\n            if (node.type.isTop)\n                tree = node;\n    }\n    return tree;\n}\n/**\nA subclass of [`Language`](https://codemirror.net/6/docs/ref/#language.Language) for use with Lezer\n[LR parsers](https://lezer.codemirror.net/docs/ref#lr.LRParser)\nparsers.\n*/\nclass LRLanguage extends Language {\n    constructor(data, parser, name) {\n        super(data, parser, [], name);\n        this.parser = parser;\n    }\n    /**\n    Define a language from a parser.\n    */\n    static define(spec) {\n        let data = defineLanguageFacet(spec.languageData);\n        return new LRLanguage(data, spec.parser.configure({\n            props: [languageDataProp.add(type => type.isTop ? data : undefined)]\n        }), spec.name);\n    }\n    /**\n    Create a new instance of this language with a reconfigured\n    version of its parser and optionally a new name.\n    */\n    configure(options, name) {\n        return new LRLanguage(this.data, this.parser.configure(options), name || this.name);\n    }\n    get allowsNesting() { return this.parser.hasWrappers(); }\n}\n/**\nGet the syntax tree for a state, which is the current (possibly\nincomplete) parse tree of the active\n[language](https://codemirror.net/6/docs/ref/#language.Language), or the empty tree if there is no\nlanguage available.\n*/\nfunction syntaxTree(state) {\n    let field = state.field(Language.state, false);\n    return field ? field.tree : Tree.empty;\n}\n/**\nTry to get a parse tree that spans at least up to `upto`. The\nmethod will do at most `timeout` milliseconds of work to parse\nup to that point if the tree isn't already available.\n*/\nfunction ensureSyntaxTree(state, upto, timeout = 50) {\n    var _a;\n    let parse = (_a = state.field(Language.state, false)) === null || _a === void 0 ? void 0 : _a.context;\n    if (!parse)\n        return null;\n    let oldVieport = parse.viewport;\n    parse.updateViewport({ from: 0, to: upto });\n    let result = parse.isDone(upto) || parse.work(timeout, upto) ? parse.tree : null;\n    parse.updateViewport(oldVieport);\n    return result;\n}\n/**\nQueries whether there is a full syntax tree available up to the\ngiven document position. If there isn't, the background parse\nprocess _might_ still be working and update the tree further, but\nthere is no guarantee of that\u2014the parser will [stop\nworking](https://codemirror.net/6/docs/ref/#language.syntaxParserRunning) when it has spent a\ncertain amount of time or has moved beyond the visible viewport.\nAlways returns false if no language has been enabled.\n*/\nfunction syntaxTreeAvailable(state, upto = state.doc.length) {\n    var _a;\n    return ((_a = state.field(Language.state, false)) === null || _a === void 0 ? void 0 : _a.context.isDone(upto)) || false;\n}\n/**\nMove parsing forward, and update the editor state afterwards to\nreflect the new tree. Will work for at most `timeout`\nmilliseconds. Returns true if the parser managed get to the given\nposition in that time.\n*/\nfunction forceParsing(view, upto = view.viewport.to, timeout = 100) {\n    let success = ensureSyntaxTree(view.state, upto, timeout);\n    if (success != syntaxTree(view.state))\n        view.dispatch({});\n    return !!success;\n}\n/**\nTells you whether the language parser is planning to do more\nparsing work (in a `requestIdleCallback` pseudo-thread) or has\nstopped running, either because it parsed the entire document,\nbecause it spent too much time and was cut off, or because there\nis no language parser enabled.\n*/\nfunction syntaxParserRunning(view) {\n    var _a;\n    return ((_a = view.plugin(parseWorker)) === null || _a === void 0 ? void 0 : _a.isWorking()) || false;\n}\n/**\nLezer-style\n[`Input`](https://lezer.codemirror.net/docs/ref#common.Input)\nobject for a [`Text`](https://codemirror.net/6/docs/ref/#state.Text) object.\n*/\nclass DocInput {\n    /**\n    Create an input object for the given document.\n    */\n    constructor(doc) {\n        this.doc = doc;\n        this.cursorPos = 0;\n        this.string = \"\";\n        this.cursor = doc.iter();\n    }\n    get length() { return this.doc.length; }\n    syncTo(pos) {\n        this.string = this.cursor.next(pos - this.cursorPos).value;\n        this.cursorPos = pos + this.string.length;\n        return this.cursorPos - this.string.length;\n    }\n    chunk(pos) {\n        this.syncTo(pos);\n        return this.string;\n    }\n    get lineChunks() { return true; }\n    read(from, to) {\n        let stringStart = this.cursorPos - this.string.length;\n        if (from < stringStart || to >= this.cursorPos)\n            return this.doc.sliceString(from, to);\n        else\n            return this.string.slice(from - stringStart, to - stringStart);\n    }\n}\nlet currentContext = null;\n/**\nA parse context provided to parsers working on the editor content.\n*/\nclass ParseContext {\n    constructor(parser, \n    /**\n    The current editor state.\n    */\n    state, \n    /**\n    Tree fragments that can be reused by incremental re-parses.\n    */\n    fragments = [], \n    /**\n    @internal\n    */\n    tree, \n    /**\n    @internal\n    */\n    treeLen, \n    /**\n    The current editor viewport (or some overapproximation\n    thereof). Intended to be used for opportunistically avoiding\n    work (in which case\n    [`skipUntilInView`](https://codemirror.net/6/docs/ref/#language.ParseContext.skipUntilInView)\n    should be called to make sure the parser is restarted when the\n    skipped region becomes visible).\n    */\n    viewport, \n    /**\n    @internal\n    */\n    skipped, \n    /**\n    This is where skipping parsers can register a promise that,\n    when resolved, will schedule a new parse. It is cleared when\n    the parse worker picks up the promise. @internal\n    */\n    scheduleOn) {\n        this.parser = parser;\n        this.state = state;\n        this.fragments = fragments;\n        this.tree = tree;\n        this.treeLen = treeLen;\n        this.viewport = viewport;\n        this.skipped = skipped;\n        this.scheduleOn = scheduleOn;\n        this.parse = null;\n        /**\n        @internal\n        */\n        this.tempSkipped = [];\n    }\n    /**\n    @internal\n    */\n    static create(parser, state, viewport) {\n        return new ParseContext(parser, state, [], Tree.empty, 0, viewport, [], null);\n    }\n    startParse() {\n        return this.parser.startParse(new DocInput(this.state.doc), this.fragments);\n    }\n    /**\n    @internal\n    */\n    work(until, upto) {\n        if (upto != null && upto >= this.state.doc.length)\n            upto = undefined;\n        if (this.tree != Tree.empty && this.isDone(upto !== null && upto !== void 0 ? upto : this.state.doc.length)) {\n            this.takeTree();\n            return true;\n        }\n        return this.withContext(() => {\n            var _a;\n            if (typeof until == \"number\") {\n                let endTime = Date.now() + until;\n                until = () => Date.now() > endTime;\n            }\n            if (!this.parse)\n                this.parse = this.startParse();\n            if (upto != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > upto) &&\n                upto < this.state.doc.length)\n                this.parse.stopAt(upto);\n            for (;;) {\n                let done = this.parse.advance();\n                if (done) {\n                    this.fragments = this.withoutTempSkipped(TreeFragment.addTree(done, this.fragments, this.parse.stoppedAt != null));\n                    this.treeLen = (_a = this.parse.stoppedAt) !== null && _a !== void 0 ? _a : this.state.doc.length;\n                    this.tree = done;\n                    this.parse = null;\n                    if (this.treeLen < (upto !== null && upto !== void 0 ? upto : this.state.doc.length))\n                        this.parse = this.startParse();\n                    else\n                        return true;\n                }\n                if (until())\n                    return false;\n            }\n        });\n    }\n    /**\n    @internal\n    */\n    takeTree() {\n        let pos, tree;\n        if (this.parse && (pos = this.parse.parsedPos) >= this.treeLen) {\n            if (this.parse.stoppedAt == null || this.parse.stoppedAt > pos)\n                this.parse.stopAt(pos);\n            this.withContext(() => { while (!(tree = this.parse.advance())) { } });\n            this.treeLen = pos;\n            this.tree = tree;\n            this.fragments = this.withoutTempSkipped(TreeFragment.addTree(this.tree, this.fragments, true));\n            this.parse = null;\n        }\n    }\n    withContext(f) {\n        let prev = currentContext;\n        currentContext = this;\n        try {\n            return f();\n        }\n        finally {\n            currentContext = prev;\n        }\n    }\n    withoutTempSkipped(fragments) {\n        for (let r; r = this.tempSkipped.pop();)\n            fragments = cutFragments(fragments, r.from, r.to);\n        return fragments;\n    }\n    /**\n    @internal\n    */\n    changes(changes, newState) {\n        let { fragments, tree, treeLen, viewport, skipped } = this;\n        this.takeTree();\n        if (!changes.empty) {\n            let ranges = [];\n            changes.iterChangedRanges((fromA, toA, fromB, toB) => ranges.push({ fromA, toA, fromB, toB }));\n            fragments = TreeFragment.applyChanges(fragments, ranges);\n            tree = Tree.empty;\n            treeLen = 0;\n            viewport = { from: changes.mapPos(viewport.from, -1), to: changes.mapPos(viewport.to, 1) };\n            if (this.skipped.length) {\n                skipped = [];\n                for (let r of this.skipped) {\n                    let from = changes.mapPos(r.from, 1), to = changes.mapPos(r.to, -1);\n                    if (from < to)\n                        skipped.push({ from, to });\n                }\n            }\n        }\n        return new ParseContext(this.parser, newState, fragments, tree, treeLen, viewport, skipped, this.scheduleOn);\n    }\n    /**\n    @internal\n    */\n    updateViewport(viewport) {\n        if (this.viewport.from == viewport.from && this.viewport.to == viewport.to)\n            return false;\n        this.viewport = viewport;\n        let startLen = this.skipped.length;\n        for (let i = 0; i < this.skipped.length; i++) {\n            let { from, to } = this.skipped[i];\n            if (from < viewport.to && to > viewport.from) {\n                this.fragments = cutFragments(this.fragments, from, to);\n                this.skipped.splice(i--, 1);\n            }\n        }\n        if (this.skipped.length >= startLen)\n            return false;\n        this.reset();\n        return true;\n    }\n    /**\n    @internal\n    */\n    reset() {\n        if (this.parse) {\n            this.takeTree();\n            this.parse = null;\n        }\n    }\n    /**\n    Notify the parse scheduler that the given region was skipped\n    because it wasn't in view, and the parse should be restarted\n    when it comes into view.\n    */\n    skipUntilInView(from, to) {\n        this.skipped.push({ from, to });\n    }\n    /**\n    Returns a parser intended to be used as placeholder when\n    asynchronously loading a nested parser. It'll skip its input and\n    mark it as not-really-parsed, so that the next update will parse\n    it again.\n    \n    When `until` is given, a reparse will be scheduled when that\n    promise resolves.\n    */\n    static getSkippingParser(until) {\n        return new class extends Parser {\n            createParse(input, fragments, ranges) {\n                let from = ranges[0].from, to = ranges[ranges.length - 1].to;\n                let parser = {\n                    parsedPos: from,\n                    advance() {\n                        let cx = currentContext;\n                        if (cx) {\n                            for (let r of ranges)\n                                cx.tempSkipped.push(r);\n                            if (until)\n                                cx.scheduleOn = cx.scheduleOn ? Promise.all([cx.scheduleOn, until]) : until;\n                        }\n                        this.parsedPos = to;\n                        return new Tree(NodeType.none, [], [], to - from);\n                    },\n                    stoppedAt: null,\n                    stopAt() { }\n                };\n                return parser;\n            }\n        };\n    }\n    /**\n    @internal\n    */\n    isDone(upto) {\n        upto = Math.min(upto, this.state.doc.length);\n        let frags = this.fragments;\n        return this.treeLen >= upto && frags.length && frags[0].from == 0 && frags[0].to >= upto;\n    }\n    /**\n    Get the context for the current parse, or `null` if no editor\n    parse is in progress.\n    */\n    static get() { return currentContext; }\n}\nfunction cutFragments(fragments, from, to) {\n    return TreeFragment.applyChanges(fragments, [{ fromA: from, toA: to, fromB: from, toB: to }]);\n}\nclass LanguageState {\n    constructor(\n    // A mutable parse state that is used to preserve work done during\n    // the lifetime of a state when moving to the next state.\n    context) {\n        this.context = context;\n        this.tree = context.tree;\n    }\n    apply(tr) {\n        if (!tr.docChanged && this.tree == this.context.tree)\n            return this;\n        let newCx = this.context.changes(tr.changes, tr.state);\n        // If the previous parse wasn't done, go forward only up to its\n        // end position or the end of the viewport, to avoid slowing down\n        // state updates with parse work beyond the viewport.\n        let upto = this.context.treeLen == tr.startState.doc.length ? undefined\n            : Math.max(tr.changes.mapPos(this.context.treeLen), newCx.viewport.to);\n        if (!newCx.work(20 /* Work.Apply */, upto))\n            newCx.takeTree();\n        return new LanguageState(newCx);\n    }\n    static init(state) {\n        let vpTo = Math.min(3000 /* Work.InitViewport */, state.doc.length);\n        let parseState = ParseContext.create(state.facet(language).parser, state, { from: 0, to: vpTo });\n        if (!parseState.work(20 /* Work.Apply */, vpTo))\n            parseState.takeTree();\n        return new LanguageState(parseState);\n    }\n}\nLanguage.state = /*@__PURE__*/StateField.define({\n    create: LanguageState.init,\n    update(value, tr) {\n        for (let e of tr.effects)\n            if (e.is(Language.setState))\n                return e.value;\n        if (tr.startState.facet(language) != tr.state.facet(language))\n            return LanguageState.init(tr.state);\n        return value.apply(tr);\n    }\n});\nlet requestIdle = (callback) => {\n    let timeout = setTimeout(() => callback(), 500 /* Work.MaxPause */);\n    return () => clearTimeout(timeout);\n};\nif (typeof requestIdleCallback != \"undefined\")\n    requestIdle = (callback) => {\n        let idle = -1, timeout = setTimeout(() => {\n            idle = requestIdleCallback(callback, { timeout: 500 /* Work.MaxPause */ - 100 /* Work.MinPause */ });\n        }, 100 /* Work.MinPause */);\n        return () => idle < 0 ? clearTimeout(timeout) : cancelIdleCallback(idle);\n    };\nconst isInputPending = typeof navigator != \"undefined\" && ((_a = navigator.scheduling) === null || _a === void 0 ? void 0 : _a.isInputPending)\n    ? () => navigator.scheduling.isInputPending() : null;\nconst parseWorker = /*@__PURE__*/ViewPlugin.fromClass(class ParseWorker {\n    constructor(view) {\n        this.view = view;\n        this.working = null;\n        this.workScheduled = 0;\n        // End of the current time chunk\n        this.chunkEnd = -1;\n        // Milliseconds of budget left for this chunk\n        this.chunkBudget = -1;\n        this.work = this.work.bind(this);\n        this.scheduleWork();\n    }\n    update(update) {\n        let cx = this.view.state.field(Language.state).context;\n        if (cx.updateViewport(update.view.viewport) || this.view.viewport.to > cx.treeLen)\n            this.scheduleWork();\n        if (update.docChanged || update.selectionSet) {\n            if (this.view.hasFocus)\n                this.chunkBudget += 50 /* Work.ChangeBonus */;\n            this.scheduleWork();\n        }\n        this.checkAsyncSchedule(cx);\n    }\n    scheduleWork() {\n        if (this.working)\n            return;\n        let { state } = this.view, field = state.field(Language.state);\n        if (field.tree != field.context.tree || !field.context.isDone(state.doc.length))\n            this.working = requestIdle(this.work);\n    }\n    work(deadline) {\n        this.working = null;\n        let now = Date.now();\n        if (this.chunkEnd < now && (this.chunkEnd < 0 || this.view.hasFocus)) { // Start a new chunk\n            this.chunkEnd = now + 30000 /* Work.ChunkTime */;\n            this.chunkBudget = 3000 /* Work.ChunkBudget */;\n        }\n        if (this.chunkBudget <= 0)\n            return; // No more budget\n        let { state, viewport: { to: vpTo } } = this.view, field = state.field(Language.state);\n        if (field.tree == field.context.tree && field.context.isDone(vpTo + 100000 /* Work.MaxParseAhead */))\n            return;\n        let endTime = Date.now() + Math.min(this.chunkBudget, 100 /* Work.Slice */, deadline && !isInputPending ? Math.max(25 /* Work.MinSlice */, deadline.timeRemaining() - 5) : 1e9);\n        let viewportFirst = field.context.treeLen < vpTo && state.doc.length > vpTo + 1000;\n        let done = field.context.work(() => {\n            return isInputPending && isInputPending() || Date.now() > endTime;\n        }, vpTo + (viewportFirst ? 0 : 100000 /* Work.MaxParseAhead */));\n        this.chunkBudget -= Date.now() - now;\n        if (done || this.chunkBudget <= 0) {\n            field.context.takeTree();\n            this.view.dispatch({ effects: Language.setState.of(new LanguageState(field.context)) });\n        }\n        if (this.chunkBudget > 0 && !(done && !viewportFirst))\n            this.scheduleWork();\n        this.checkAsyncSchedule(field.context);\n    }\n    checkAsyncSchedule(cx) {\n        if (cx.scheduleOn) {\n            this.workScheduled++;\n            cx.scheduleOn\n                .then(() => this.scheduleWork())\n                .catch(err => logException(this.view.state, err))\n                .then(() => this.workScheduled--);\n            cx.scheduleOn = null;\n        }\n    }\n    destroy() {\n        if (this.working)\n            this.working();\n    }\n    isWorking() {\n        return !!(this.working || this.workScheduled > 0);\n    }\n}, {\n    eventHandlers: { focus() { this.scheduleWork(); } }\n});\n/**\nThe facet used to associate a language with an editor state. Used\nby `Language` object's `extension` property (so you don't need to\nmanually wrap your languages in this). Can be used to access the\ncurrent language on a state.\n*/\nconst language = /*@__PURE__*/Facet.define({\n    combine(languages) { return languages.length ? languages[0] : null; },\n    enables: language => [\n        Language.state,\n        parseWorker,\n        EditorView.contentAttributes.compute([language], state => {\n            let lang = state.facet(language);\n            return lang && lang.name ? { \"data-language\": lang.name } : {};\n        })\n    ]\n});\n/**\nThis class bundles a [language](https://codemirror.net/6/docs/ref/#language.Language) with an\noptional set of supporting extensions. Language packages are\nencouraged to export a function that optionally takes a\nconfiguration object and returns a `LanguageSupport` instance, as\nthe main way for client code to use the package.\n*/\nclass LanguageSupport {\n    /**\n    Create a language support object.\n    */\n    constructor(\n    /**\n    The language object.\n    */\n    language, \n    /**\n    An optional set of supporting extensions. When nesting a\n    language in another language, the outer language is encouraged\n    to include the supporting extensions for its inner languages\n    in its own set of support extensions.\n    */\n    support = []) {\n        this.language = language;\n        this.support = support;\n        this.extension = [language, support];\n    }\n}\n/**\nLanguage descriptions are used to store metadata about languages\nand to dynamically load them. Their main role is finding the\nappropriate language for a filename or dynamically loading nested\nparsers.\n*/\nclass LanguageDescription {\n    constructor(\n    /**\n    The name of this language.\n    */\n    name, \n    /**\n    Alternative names for the mode (lowercased, includes `this.name`).\n    */\n    alias, \n    /**\n    File extensions associated with this language.\n    */\n    extensions, \n    /**\n    Optional filename pattern that should be associated with this\n    language.\n    */\n    filename, loadFunc, \n    /**\n    If the language has been loaded, this will hold its value.\n    */\n    support = undefined) {\n        this.name = name;\n        this.alias = alias;\n        this.extensions = extensions;\n        this.filename = filename;\n        this.loadFunc = loadFunc;\n        this.support = support;\n        this.loading = null;\n    }\n    /**\n    Start loading the the language. Will return a promise that\n    resolves to a [`LanguageSupport`](https://codemirror.net/6/docs/ref/#language.LanguageSupport)\n    object when the language successfully loads.\n    */\n    load() {\n        return this.loading || (this.loading = this.loadFunc().then(support => this.support = support, err => { this.loading = null; throw err; }));\n    }\n    /**\n    Create a language description.\n    */\n    static of(spec) {\n        let { load, support } = spec;\n        if (!load) {\n            if (!support)\n                throw new RangeError(\"Must pass either 'load' or 'support' to LanguageDescription.of\");\n            load = () => Promise.resolve(support);\n        }\n        return new LanguageDescription(spec.name, (spec.alias || []).concat(spec.name).map(s => s.toLowerCase()), spec.extensions || [], spec.filename, load, support);\n    }\n    /**\n    Look for a language in the given array of descriptions that\n    matches the filename. Will first match\n    [`filename`](https://codemirror.net/6/docs/ref/#language.LanguageDescription.filename) patterns,\n    and then [extensions](https://codemirror.net/6/docs/ref/#language.LanguageDescription.extensions),\n    and return the first language that matches.\n    */\n    static matchFilename(descs, filename) {\n        for (let d of descs)\n            if (d.filename && d.filename.test(filename))\n                return d;\n        let ext = /\\.([^.]+)$/.exec(filename);\n        if (ext)\n            for (let d of descs)\n                if (d.extensions.indexOf(ext[1]) > -1)\n                    return d;\n        return null;\n    }\n    /**\n    Look for a language whose name or alias matches the the given\n    name (case-insensitively). If `fuzzy` is true, and no direct\n    matchs is found, this'll also search for a language whose name\n    or alias occurs in the string (for names shorter than three\n    characters, only when surrounded by non-word characters).\n    */\n    static matchLanguageName(descs, name, fuzzy = true) {\n        name = name.toLowerCase();\n        for (let d of descs)\n            if (d.alias.some(a => a == name))\n                return d;\n        if (fuzzy)\n            for (let d of descs)\n                for (let a of d.alias) {\n                    let found = name.indexOf(a);\n                    if (found > -1 && (a.length > 2 || !/\\w/.test(name[found - 1]) && !/\\w/.test(name[found + a.length])))\n                        return d;\n                }\n        return null;\n    }\n}\n\n/**\nFacet that defines a way to provide a function that computes the\nappropriate indentation depth, as a column number (see\n[`indentString`](https://codemirror.net/6/docs/ref/#language.indentString)), at the start of a given\nline. A return value of `null` indicates no indentation can be\ndetermined, and the line should inherit the indentation of the one\nabove it. A return value of `undefined` defers to the next indent\nservice.\n*/\nconst indentService = /*@__PURE__*/Facet.define();\n/**\nFacet for overriding the unit by which indentation happens. Should\nbe a string consisting either entirely of the same whitespace\ncharacter. When not set, this defaults to 2 spaces.\n*/\nconst indentUnit = /*@__PURE__*/Facet.define({\n    combine: values => {\n        if (!values.length)\n            return \"  \";\n        let unit = values[0];\n        if (!unit || /\\S/.test(unit) || Array.from(unit).some(e => e != unit[0]))\n            throw new Error(\"Invalid indent unit: \" + JSON.stringify(values[0]));\n        return unit;\n    }\n});\n/**\nReturn the _column width_ of an indent unit in the state.\nDetermined by the [`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit)\nfacet, and [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) when that\ncontains tabs.\n*/\nfunction getIndentUnit(state) {\n    let unit = state.facet(indentUnit);\n    return unit.charCodeAt(0) == 9 ? state.tabSize * unit.length : unit.length;\n}\n/**\nCreate an indentation string that covers columns 0 to `cols`.\nWill use tabs for as much of the columns as possible when the\n[`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit) facet contains\ntabs.\n*/\nfunction indentString(state, cols) {\n    let result = \"\", ts = state.tabSize, ch = state.facet(indentUnit)[0];\n    if (ch == \"\\t\") {\n        while (cols >= ts) {\n            result += \"\\t\";\n            cols -= ts;\n        }\n        ch = \" \";\n    }\n    for (let i = 0; i < cols; i++)\n        result += ch;\n    return result;\n}\n/**\nGet the indentation, as a column number, at the given position.\nWill first consult any [indent services](https://codemirror.net/6/docs/ref/#language.indentService)\nthat are registered, and if none of those return an indentation,\nthis will check the syntax tree for the [indent node\nprop](https://codemirror.net/6/docs/ref/#language.indentNodeProp) and use that if found. Returns a\nnumber when an indentation could be determined, and null\notherwise.\n*/\nfunction getIndentation(context, pos) {\n    if (context instanceof EditorState)\n        context = new IndentContext(context);\n    for (let service of context.state.facet(indentService)) {\n        let result = service(context, pos);\n        if (result !== undefined)\n            return result;\n    }\n    let tree = syntaxTree(context.state);\n    return tree.length >= pos ? syntaxIndentation(context, tree, pos) : null;\n}\n/**\nCreate a change set that auto-indents all lines touched by the\ngiven document range.\n*/\nfunction indentRange(state, from, to) {\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => { var _a; return (_a = updated[start]) !== null && _a !== void 0 ? _a : -1; } });\n    let changes = [];\n    for (let pos = from; pos <= to;) {\n        let line = state.doc.lineAt(pos);\n        pos = line.to + 1;\n        let indent = getIndentation(context, line.from);\n        if (indent == null)\n            continue;\n        if (!/\\S/.test(line.text))\n            indent = 0;\n        let cur = /^\\s*/.exec(line.text)[0];\n        let norm = indentString(state, indent);\n        if (cur != norm) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    }\n    return state.changes(changes);\n}\n/**\nIndentation contexts are used when calling [indentation\nservices](https://codemirror.net/6/docs/ref/#language.indentService). They provide helper utilities\nuseful in indentation logic, and can selectively override the\nindentation reported for some lines.\n*/\nclass IndentContext {\n    /**\n    Create an indent context.\n    */\n    constructor(\n    /**\n    The editor state.\n    */\n    state, \n    /**\n    @internal\n    */\n    options = {}) {\n        this.state = state;\n        this.options = options;\n        this.unit = getIndentUnit(state);\n    }\n    /**\n    Get a description of the line at the given position, taking\n    [simulated line\n    breaks](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n    into account. If there is such a break at `pos`, the `bias`\n    argument determines whether the part of the line line before or\n    after the break is used.\n    */\n    lineAt(pos, bias = 1) {\n        let line = this.state.doc.lineAt(pos);\n        let { simulateBreak, simulateDoubleBreak } = this.options;\n        if (simulateBreak != null && simulateBreak >= line.from && simulateBreak <= line.to) {\n            if (simulateDoubleBreak && simulateBreak == pos)\n                return { text: \"\", from: pos };\n            else if (bias < 0 ? simulateBreak < pos : simulateBreak <= pos)\n                return { text: line.text.slice(simulateBreak - line.from), from: simulateBreak };\n            else\n                return { text: line.text.slice(0, simulateBreak - line.from), from: line.from };\n        }\n        return line;\n    }\n    /**\n    Get the text directly after `pos`, either the entire line\n    or the next 100 characters, whichever is shorter.\n    */\n    textAfterPos(pos, bias = 1) {\n        if (this.options.simulateDoubleBreak && pos == this.options.simulateBreak)\n            return \"\";\n        let { text, from } = this.lineAt(pos, bias);\n        return text.slice(pos - from, Math.min(text.length, pos + 100 - from));\n    }\n    /**\n    Find the column for the given position.\n    */\n    column(pos, bias = 1) {\n        let { text, from } = this.lineAt(pos, bias);\n        let result = this.countColumn(text, pos - from);\n        let override = this.options.overrideIndentation ? this.options.overrideIndentation(from) : -1;\n        if (override > -1)\n            result += override - this.countColumn(text, text.search(/\\S|$/));\n        return result;\n    }\n    /**\n    Find the column position (taking tabs into account) of the given\n    position in the given string.\n    */\n    countColumn(line, pos = line.length) {\n        return countColumn(line, this.state.tabSize, pos);\n    }\n    /**\n    Find the indentation column of the line at the given point.\n    */\n    lineIndent(pos, bias = 1) {\n        let { text, from } = this.lineAt(pos, bias);\n        let override = this.options.overrideIndentation;\n        if (override) {\n            let overriden = override(from);\n            if (overriden > -1)\n                return overriden;\n        }\n        return this.countColumn(text, text.search(/\\S|$/));\n    }\n    /**\n    Returns the [simulated line\n    break](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n    for this context, if any.\n    */\n    get simulatedBreak() {\n        return this.options.simulateBreak || null;\n    }\n}\n/**\nA syntax tree node prop used to associate indentation strategies\nwith node types. Such a strategy is a function from an indentation\ncontext to a column number (see also\n[`indentString`](https://codemirror.net/6/docs/ref/#language.indentString)) or null, where null\nindicates that no definitive indentation can be determined.\n*/\nconst indentNodeProp = /*@__PURE__*/new NodeProp();\n// Compute the indentation for a given position from the syntax tree.\nfunction syntaxIndentation(cx, ast, pos) {\n    let stack = ast.resolveStack(pos);\n    let inner = ast.resolveInner(pos, -1).resolve(pos, 0).enterUnfinishedNodesBefore(pos);\n    if (inner != stack.node) {\n        let add = [];\n        for (let cur = inner; cur && !(cur.from == stack.node.from && cur.type == stack.node.type); cur = cur.parent)\n            add.push(cur);\n        for (let i = add.length - 1; i >= 0; i--)\n            stack = { node: add[i], next: stack };\n    }\n    return indentFor(stack, cx, pos);\n}\nfunction indentFor(stack, cx, pos) {\n    for (let cur = stack; cur; cur = cur.next) {\n        let strategy = indentStrategy(cur.node);\n        if (strategy)\n            return strategy(TreeIndentContext.create(cx, pos, cur));\n    }\n    return 0;\n}\nfunction ignoreClosed(cx) {\n    return cx.pos == cx.options.simulateBreak && cx.options.simulateDoubleBreak;\n}\nfunction indentStrategy(tree) {\n    let strategy = tree.type.prop(indentNodeProp);\n    if (strategy)\n        return strategy;\n    let first = tree.firstChild, close;\n    if (first && (close = first.type.prop(NodeProp.closedBy))) {\n        let last = tree.lastChild, closed = last && close.indexOf(last.name) > -1;\n        return cx => delimitedStrategy(cx, true, 1, undefined, closed && !ignoreClosed(cx) ? last.from : undefined);\n    }\n    return tree.parent == null ? topIndent : null;\n}\nfunction topIndent() { return 0; }\n/**\nObjects of this type provide context information and helper\nmethods to indentation functions registered on syntax nodes.\n*/\nclass TreeIndentContext extends IndentContext {\n    constructor(base, \n    /**\n    The position at which indentation is being computed.\n    */\n    pos, \n    /**\n    @internal\n    */\n    context) {\n        super(base.state, base.options);\n        this.base = base;\n        this.pos = pos;\n        this.context = context;\n    }\n    /**\n    The syntax tree node to which the indentation strategy\n    applies.\n    */\n    get node() { return this.context.node; }\n    /**\n    @internal\n    */\n    static create(base, pos, context) {\n        return new TreeIndentContext(base, pos, context);\n    }\n    /**\n    Get the text directly after `this.pos`, either the entire line\n    or the next 100 characters, whichever is shorter.\n    */\n    get textAfter() {\n        return this.textAfterPos(this.pos);\n    }\n    /**\n    Get the indentation at the reference line for `this.node`, which\n    is the line on which it starts, unless there is a node that is\n    _not_ a parent of this node covering the start of that line. If\n    so, the line at the start of that node is tried, again skipping\n    on if it is covered by another such node.\n    */\n    get baseIndent() {\n        return this.baseIndentFor(this.node);\n    }\n    /**\n    Get the indentation for the reference line of the given node\n    (see [`baseIndent`](https://codemirror.net/6/docs/ref/#language.TreeIndentContext.baseIndent)).\n    */\n    baseIndentFor(node) {\n        let line = this.state.doc.lineAt(node.from);\n        // Skip line starts that are covered by a sibling (or cousin, etc)\n        for (;;) {\n            let atBreak = node.resolve(line.from);\n            while (atBreak.parent && atBreak.parent.from == atBreak.from)\n                atBreak = atBreak.parent;\n            if (isParent(atBreak, node))\n                break;\n            line = this.state.doc.lineAt(atBreak.from);\n        }\n        return this.lineIndent(line.from);\n    }\n    /**\n    Continue looking for indentations in the node's parent nodes,\n    and return the result of that.\n    */\n    continue() {\n        return indentFor(this.context.next, this.base, this.pos);\n    }\n}\nfunction isParent(parent, of) {\n    for (let cur = of; cur; cur = cur.parent)\n        if (parent == cur)\n            return true;\n    return false;\n}\n// Check whether a delimited node is aligned (meaning there are\n// non-skipped nodes on the same line as the opening delimiter). And\n// if so, return the opening token.\nfunction bracketedAligned(context) {\n    let tree = context.node;\n    let openToken = tree.childAfter(tree.from), last = tree.lastChild;\n    if (!openToken)\n        return null;\n    let sim = context.options.simulateBreak;\n    let openLine = context.state.doc.lineAt(openToken.from);\n    let lineEnd = sim == null || sim <= openLine.from ? openLine.to : Math.min(openLine.to, sim);\n    for (let pos = openToken.to;;) {\n        let next = tree.childAfter(pos);\n        if (!next || next == last)\n            return null;\n        if (!next.type.isSkipped) {\n            if (next.from >= lineEnd)\n                return null;\n            let space = /^ */.exec(openLine.text.slice(openToken.to - openLine.from))[0].length;\n            return { from: openToken.from, to: openToken.to + space };\n        }\n        pos = next.to;\n    }\n}\n/**\nAn indentation strategy for delimited (usually bracketed) nodes.\nWill, by default, indent one unit more than the parent's base\nindent unless the line starts with a closing token. When `align`\nis true and there are non-skipped nodes on the node's opening\nline, the content of the node will be aligned with the end of the\nopening node, like this:\n\n    foo(bar,\n        baz)\n*/\nfunction delimitedIndent({ closing, align = true, units = 1 }) {\n    return (context) => delimitedStrategy(context, align, units, closing);\n}\nfunction delimitedStrategy(context, align, units, closing, closedAt) {\n    let after = context.textAfter, space = after.match(/^\\s*/)[0].length;\n    let closed = closing && after.slice(space, space + closing.length) == closing || closedAt == context.pos + space;\n    let aligned = align ? bracketedAligned(context) : null;\n    if (aligned)\n        return closed ? context.column(aligned.from) : context.column(aligned.to);\n    return context.baseIndent + (closed ? 0 : context.unit * units);\n}\n/**\nAn indentation strategy that aligns a node's content to its base\nindentation.\n*/\nconst flatIndent = (context) => context.baseIndent;\n/**\nCreates an indentation strategy that, by default, indents\ncontinued lines one unit more than the node's base indentation.\nYou can provide `except` to prevent indentation of lines that\nmatch a pattern (for example `/^else\\b/` in `if`/`else`\nconstructs), and you can change the amount of units used with the\n`units` option.\n*/\nfunction continuedIndent({ except, units = 1 } = {}) {\n    return (context) => {\n        let matchExcept = except && except.test(context.textAfter);\n        return context.baseIndent + (matchExcept ? 0 : units * context.unit);\n    };\n}\nconst DontIndentBeyond = 200;\n/**\nEnables reindentation on input. When a language defines an\n`indentOnInput` field in its [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt), which must hold a regular\nexpression, the line at the cursor will be reindented whenever new\ntext is typed and the input from the start of the line up to the\ncursor matches that regexp.\n\nTo avoid unneccesary reindents, it is recommended to start the\nregexp with `^` (usually followed by `\\s*`), and end it with `$`.\nFor example, `/^\\s*\\}$/` will reindent when a closing brace is\nadded at the start of a line.\n*/\nfunction indentOnInput() {\n    return EditorState.transactionFilter.of(tr => {\n        if (!tr.docChanged || !tr.isUserEvent(\"input.type\") && !tr.isUserEvent(\"input.complete\"))\n            return tr;\n        let rules = tr.startState.languageDataAt(\"indentOnInput\", tr.startState.selection.main.head);\n        if (!rules.length)\n            return tr;\n        let doc = tr.newDoc, { head } = tr.newSelection.main, line = doc.lineAt(head);\n        if (head > line.from + DontIndentBeyond)\n            return tr;\n        let lineStart = doc.sliceString(line.from, head);\n        if (!rules.some(r => r.test(lineStart)))\n            return tr;\n        let { state } = tr, last = -1, changes = [];\n        for (let { head } of state.selection.ranges) {\n            let line = state.doc.lineAt(head);\n            if (line.from == last)\n                continue;\n            last = line.from;\n            let indent = getIndentation(state, line.from);\n            if (indent == null)\n                continue;\n            let cur = /^\\s*/.exec(line.text)[0];\n            let norm = indentString(state, indent);\n            if (cur != norm)\n                changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n        return changes.length ? [tr, { changes, sequential: true }] : tr;\n    });\n}\n\n/**\nA facet that registers a code folding service. When called with\nthe extent of a line, such a function should return a foldable\nrange that starts on that line (but continues beyond it), if one\ncan be found.\n*/\nconst foldService = /*@__PURE__*/Facet.define();\n/**\nThis node prop is used to associate folding information with\nsyntax node types. Given a syntax node, it should check whether\nthat tree is foldable and return the range that can be collapsed\nwhen it is.\n*/\nconst foldNodeProp = /*@__PURE__*/new NodeProp();\n/**\n[Fold](https://codemirror.net/6/docs/ref/#language.foldNodeProp) function that folds everything but\nthe first and the last child of a syntax node. Useful for nodes\nthat start and end with delimiters.\n*/\nfunction foldInside(node) {\n    let first = node.firstChild, last = node.lastChild;\n    return first && first.to < last.from ? { from: first.to, to: last.type.isError ? node.to : last.from } : null;\n}\nfunction syntaxFolding(state, start, end) {\n    let tree = syntaxTree(state);\n    if (tree.length < end)\n        return null;\n    let stack = tree.resolveStack(end, 1);\n    let found = null;\n    for (let iter = stack; iter; iter = iter.next) {\n        let cur = iter.node;\n        if (cur.to <= end || cur.from > end)\n            continue;\n        if (found && cur.from < start)\n            break;\n        let prop = cur.type.prop(foldNodeProp);\n        if (prop && (cur.to < tree.length - 50 || tree.length == state.doc.length || !isUnfinished(cur))) {\n            let value = prop(cur, state);\n            if (value && value.from <= end && value.from >= start && value.to > end)\n                found = value;\n        }\n    }\n    return found;\n}\nfunction isUnfinished(node) {\n    let ch = node.lastChild;\n    return ch && ch.to == node.to && ch.type.isError;\n}\n/**\nCheck whether the given line is foldable. First asks any fold\nservices registered through\n[`foldService`](https://codemirror.net/6/docs/ref/#language.foldService), and if none of them return\na result, tries to query the [fold node\nprop](https://codemirror.net/6/docs/ref/#language.foldNodeProp) of syntax nodes that cover the end\nof the line.\n*/\nfunction foldable(state, lineStart, lineEnd) {\n    for (let service of state.facet(foldService)) {\n        let result = service(state, lineStart, lineEnd);\n        if (result)\n            return result;\n    }\n    return syntaxFolding(state, lineStart, lineEnd);\n}\nfunction mapRange(range, mapping) {\n    let from = mapping.mapPos(range.from, 1), to = mapping.mapPos(range.to, -1);\n    return from >= to ? undefined : { from, to };\n}\n/**\nState effect that can be attached to a transaction to fold the\ngiven range. (You probably only need this in exceptional\ncircumstances\u2014usually you'll just want to let\n[`foldCode`](https://codemirror.net/6/docs/ref/#language.foldCode) and the [fold\ngutter](https://codemirror.net/6/docs/ref/#language.foldGutter) create the transactions.)\n*/\nconst foldEffect = /*@__PURE__*/StateEffect.define({ map: mapRange });\n/**\nState effect that unfolds the given range (if it was folded).\n*/\nconst unfoldEffect = /*@__PURE__*/StateEffect.define({ map: mapRange });\nfunction selectedLines(view) {\n    let lines = [];\n    for (let { head } of view.state.selection.ranges) {\n        if (lines.some(l => l.from <= head && l.to >= head))\n            continue;\n        lines.push(view.lineBlockAt(head));\n    }\n    return lines;\n}\n/**\nThe state field that stores the folded ranges (as a [decoration\nset](https://codemirror.net/6/docs/ref/#view.DecorationSet)). Can be passed to\n[`EditorState.toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) and\n[`fromJSON`](https://codemirror.net/6/docs/ref/#state.EditorState^fromJSON) to serialize the fold\nstate.\n*/\nconst foldState = /*@__PURE__*/StateField.define({\n    create() {\n        return Decoration.none;\n    },\n    update(folded, tr) {\n        folded = folded.map(tr.changes);\n        for (let e of tr.effects) {\n            if (e.is(foldEffect) && !foldExists(folded, e.value.from, e.value.to)) {\n                let { preparePlaceholder } = tr.state.facet(foldConfig);\n                let widget = !preparePlaceholder ? foldWidget :\n                    Decoration.replace({ widget: new PreparedFoldWidget(preparePlaceholder(tr.state, e.value)) });\n                folded = folded.update({ add: [widget.range(e.value.from, e.value.to)] });\n            }\n            else if (e.is(unfoldEffect)) {\n                folded = folded.update({ filter: (from, to) => e.value.from != from || e.value.to != to,\n                    filterFrom: e.value.from, filterTo: e.value.to });\n            }\n        }\n        // Clear folded ranges that cover the selection head\n        if (tr.selection) {\n            let onSelection = false, { head } = tr.selection.main;\n            folded.between(head, head, (a, b) => { if (a < head && b > head)\n                onSelection = true; });\n            if (onSelection)\n                folded = folded.update({\n                    filterFrom: head,\n                    filterTo: head,\n                    filter: (a, b) => b <= head || a >= head\n                });\n        }\n        return folded;\n    },\n    provide: f => EditorView.decorations.from(f),\n    toJSON(folded, state) {\n        let ranges = [];\n        folded.between(0, state.doc.length, (from, to) => { ranges.push(from, to); });\n        return ranges;\n    },\n    fromJSON(value) {\n        if (!Array.isArray(value) || value.length % 2)\n            throw new RangeError(\"Invalid JSON for fold state\");\n        let ranges = [];\n        for (let i = 0; i < value.length;) {\n            let from = value[i++], to = value[i++];\n            if (typeof from != \"number\" || typeof to != \"number\")\n                throw new RangeError(\"Invalid JSON for fold state\");\n            ranges.push(foldWidget.range(from, to));\n        }\n        return Decoration.set(ranges, true);\n    }\n});\n/**\nGet a [range set](https://codemirror.net/6/docs/ref/#state.RangeSet) containing the folded ranges\nin the given state.\n*/\nfunction foldedRanges(state) {\n    return state.field(foldState, false) || RangeSet.empty;\n}\nfunction findFold(state, from, to) {\n    var _a;\n    let found = null;\n    (_a = state.field(foldState, false)) === null || _a === void 0 ? void 0 : _a.between(from, to, (from, to) => {\n        if (!found || found.from > from)\n            found = { from, to };\n    });\n    return found;\n}\nfunction foldExists(folded, from, to) {\n    let found = false;\n    folded.between(from, from, (a, b) => { if (a == from && b == to)\n        found = true; });\n    return found;\n}\nfunction maybeEnable(state, other) {\n    return state.field(foldState, false) ? other : other.concat(StateEffect.appendConfig.of(codeFolding()));\n}\n/**\nFold the lines that are selected, if possible.\n*/\nconst foldCode = view => {\n    for (let line of selectedLines(view)) {\n        let range = foldable(view.state, line.from, line.to);\n        if (range) {\n            view.dispatch({ effects: maybeEnable(view.state, [foldEffect.of(range), announceFold(view, range)]) });\n            return true;\n        }\n    }\n    return false;\n};\n/**\nUnfold folded ranges on selected lines.\n*/\nconst unfoldCode = view => {\n    if (!view.state.field(foldState, false))\n        return false;\n    let effects = [];\n    for (let line of selectedLines(view)) {\n        let folded = findFold(view.state, line.from, line.to);\n        if (folded)\n            effects.push(unfoldEffect.of(folded), announceFold(view, folded, false));\n    }\n    if (effects.length)\n        view.dispatch({ effects });\n    return effects.length > 0;\n};\nfunction announceFold(view, range, fold = true) {\n    let lineFrom = view.state.doc.lineAt(range.from).number, lineTo = view.state.doc.lineAt(range.to).number;\n    return EditorView.announce.of(`${view.state.phrase(fold ? \"Folded lines\" : \"Unfolded lines\")} ${lineFrom} ${view.state.phrase(\"to\")} ${lineTo}.`);\n}\n/**\nFold all top-level foldable ranges. Note that, in most cases,\nfolding information will depend on the [syntax\ntree](https://codemirror.net/6/docs/ref/#language.syntaxTree), and folding everything may not work\nreliably when the document hasn't been fully parsed (either\nbecause the editor state was only just initialized, or because the\ndocument is so big that the parser decided not to parse it\nentirely).\n*/\nconst foldAll = view => {\n    let { state } = view, effects = [];\n    for (let pos = 0; pos < state.doc.length;) {\n        let line = view.lineBlockAt(pos), range = foldable(state, line.from, line.to);\n        if (range)\n            effects.push(foldEffect.of(range));\n        pos = (range ? view.lineBlockAt(range.to) : line).to + 1;\n    }\n    if (effects.length)\n        view.dispatch({ effects: maybeEnable(view.state, effects) });\n    return !!effects.length;\n};\n/**\nUnfold all folded code.\n*/\nconst unfoldAll = view => {\n    let field = view.state.field(foldState, false);\n    if (!field || !field.size)\n        return false;\n    let effects = [];\n    field.between(0, view.state.doc.length, (from, to) => { effects.push(unfoldEffect.of({ from, to })); });\n    view.dispatch({ effects });\n    return true;\n};\n// Find the foldable region containing the given line, if one exists\nfunction foldableContainer(view, lineBlock) {\n    // Look backwards through line blocks until we find a foldable region that\n    // intersects with the line\n    for (let line = lineBlock;;) {\n        let foldableRegion = foldable(view.state, line.from, line.to);\n        if (foldableRegion && foldableRegion.to > lineBlock.from)\n            return foldableRegion;\n        if (!line.from)\n            return null;\n        line = view.lineBlockAt(line.from - 1);\n    }\n}\n/**\nToggle folding at cursors. Unfolds if there is an existing fold\nstarting in that line, tries to find a foldable range around it\notherwise.\n*/\nconst toggleFold = (view) => {\n    let effects = [];\n    for (let line of selectedLines(view)) {\n        let folded = findFold(view.state, line.from, line.to);\n        if (folded) {\n            effects.push(unfoldEffect.of(folded), announceFold(view, folded, false));\n        }\n        else {\n            let foldRange = foldableContainer(view, line);\n            if (foldRange)\n                effects.push(foldEffect.of(foldRange), announceFold(view, foldRange));\n        }\n    }\n    if (effects.length > 0)\n        view.dispatch({ effects: maybeEnable(view.state, effects) });\n    return !!effects.length;\n};\n/**\nDefault fold-related key bindings.\n\n - Ctrl-Shift-[ (Cmd-Alt-[ on macOS): [`foldCode`](https://codemirror.net/6/docs/ref/#language.foldCode).\n - Ctrl-Shift-] (Cmd-Alt-] on macOS): [`unfoldCode`](https://codemirror.net/6/docs/ref/#language.unfoldCode).\n - Ctrl-Alt-[: [`foldAll`](https://codemirror.net/6/docs/ref/#language.foldAll).\n - Ctrl-Alt-]: [`unfoldAll`](https://codemirror.net/6/docs/ref/#language.unfoldAll).\n*/\nconst foldKeymap = [\n    { key: \"Ctrl-Shift-[\", mac: \"Cmd-Alt-[\", run: foldCode },\n    { key: \"Ctrl-Shift-]\", mac: \"Cmd-Alt-]\", run: unfoldCode },\n    { key: \"Ctrl-Alt-[\", run: foldAll },\n    { key: \"Ctrl-Alt-]\", run: unfoldAll }\n];\nconst defaultConfig = {\n    placeholderDOM: null,\n    preparePlaceholder: null,\n    placeholderText: \"\u2026\"\n};\nconst foldConfig = /*@__PURE__*/Facet.define({\n    combine(values) { return combineConfig(values, defaultConfig); }\n});\n/**\nCreate an extension that configures code folding.\n*/\nfunction codeFolding(config) {\n    let result = [foldState, baseTheme$1];\n    if (config)\n        result.push(foldConfig.of(config));\n    return result;\n}\nfunction widgetToDOM(view, prepared) {\n    let { state } = view, conf = state.facet(foldConfig);\n    let onclick = (event) => {\n        let line = view.lineBlockAt(view.posAtDOM(event.target));\n        let folded = findFold(view.state, line.from, line.to);\n        if (folded)\n            view.dispatch({ effects: unfoldEffect.of(folded) });\n        event.preventDefault();\n    };\n    if (conf.placeholderDOM)\n        return conf.placeholderDOM(view, onclick, prepared);\n    let element = document.createElement(\"span\");\n    element.textContent = conf.placeholderText;\n    element.setAttribute(\"aria-label\", state.phrase(\"folded code\"));\n    element.title = state.phrase(\"unfold\");\n    element.className = \"cm-foldPlaceholder\";\n    element.onclick = onclick;\n    return element;\n}\nconst foldWidget = /*@__PURE__*/Decoration.replace({ widget: /*@__PURE__*/new class extends WidgetType {\n        toDOM(view) { return widgetToDOM(view, null); }\n    } });\nclass PreparedFoldWidget extends WidgetType {\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    eq(other) { return this.value == other.value; }\n    toDOM(view) { return widgetToDOM(view, this.value); }\n}\nconst foldGutterDefaults = {\n    openText: \"\u2304\",\n    closedText: \"\u203A\",\n    markerDOM: null,\n    domEventHandlers: {},\n    foldingChanged: () => false\n};\nclass FoldMarker extends GutterMarker {\n    constructor(config, open) {\n        super();\n        this.config = config;\n        this.open = open;\n    }\n    eq(other) { return this.config == other.config && this.open == other.open; }\n    toDOM(view) {\n        if (this.config.markerDOM)\n            return this.config.markerDOM(this.open);\n        let span = document.createElement(\"span\");\n        span.textContent = this.open ? this.config.openText : this.config.closedText;\n        span.title = view.state.phrase(this.open ? \"Fold line\" : \"Unfold line\");\n        return span;\n    }\n}\n/**\nCreate an extension that registers a fold gutter, which shows a\nfold status indicator before foldable lines (which can be clicked\nto fold or unfold the line).\n*/\nfunction foldGutter(config = {}) {\n    let fullConfig = Object.assign(Object.assign({}, foldGutterDefaults), config);\n    let canFold = new FoldMarker(fullConfig, true), canUnfold = new FoldMarker(fullConfig, false);\n    let markers = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.from = view.viewport.from;\n            this.markers = this.buildMarkers(view);\n        }\n        update(update) {\n            if (update.docChanged || update.viewportChanged ||\n                update.startState.facet(language) != update.state.facet(language) ||\n                update.startState.field(foldState, false) != update.state.field(foldState, false) ||\n                syntaxTree(update.startState) != syntaxTree(update.state) ||\n                fullConfig.foldingChanged(update))\n                this.markers = this.buildMarkers(update.view);\n        }\n        buildMarkers(view) {\n            let builder = new RangeSetBuilder();\n            for (let line of view.viewportLineBlocks) {\n                let mark = findFold(view.state, line.from, line.to) ? canUnfold\n                    : foldable(view.state, line.from, line.to) ? canFold : null;\n                if (mark)\n                    builder.add(line.from, line.from, mark);\n            }\n            return builder.finish();\n        }\n    });\n    let { domEventHandlers } = fullConfig;\n    return [\n        markers,\n        gutter({\n            class: \"cm-foldGutter\",\n            markers(view) { var _a; return ((_a = view.plugin(markers)) === null || _a === void 0 ? void 0 : _a.markers) || RangeSet.empty; },\n            initialSpacer() {\n                return new FoldMarker(fullConfig, false);\n            },\n            domEventHandlers: Object.assign(Object.assign({}, domEventHandlers), { click: (view, line, event) => {\n                    if (domEventHandlers.click && domEventHandlers.click(view, line, event))\n                        return true;\n                    let folded = findFold(view.state, line.from, line.to);\n                    if (folded) {\n                        view.dispatch({ effects: unfoldEffect.of(folded) });\n                        return true;\n                    }\n                    let range = foldable(view.state, line.from, line.to);\n                    if (range) {\n                        view.dispatch({ effects: foldEffect.of(range) });\n                        return true;\n                    }\n                    return false;\n                } })\n        }),\n        codeFolding()\n    ];\n}\nconst baseTheme$1 = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-foldPlaceholder\": {\n        backgroundColor: \"#eee\",\n        border: \"1px solid #ddd\",\n        color: \"#888\",\n        borderRadius: \".2em\",\n        margin: \"0 1px\",\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    },\n    \".cm-foldGutter span\": {\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    }\n});\n\n/**\nA highlight style associates CSS styles with higlighting\n[tags](https://lezer.codemirror.net/docs/ref#highlight.Tag).\n*/\nclass HighlightStyle {\n    constructor(\n    /**\n    The tag styles used to create this highlight style.\n    */\n    specs, options) {\n        this.specs = specs;\n        let modSpec;\n        function def(spec) {\n            let cls = StyleModule.newName();\n            (modSpec || (modSpec = Object.create(null)))[\".\" + cls] = spec;\n            return cls;\n        }\n        const all = typeof options.all == \"string\" ? options.all : options.all ? def(options.all) : undefined;\n        const scopeOpt = options.scope;\n        this.scope = scopeOpt instanceof Language ? (type) => type.prop(languageDataProp) == scopeOpt.data\n            : scopeOpt ? (type) => type == scopeOpt : undefined;\n        this.style = tagHighlighter(specs.map(style => ({\n            tag: style.tag,\n            class: style.class || def(Object.assign({}, style, { tag: null }))\n        })), {\n            all,\n        }).style;\n        this.module = modSpec ? new StyleModule(modSpec) : null;\n        this.themeType = options.themeType;\n    }\n    /**\n    Create a highlighter style that associates the given styles to\n    the given tags. The specs must be objects that hold a style tag\n    or array of tags in their `tag` property, and either a single\n    `class` property providing a static CSS class (for highlighter\n    that rely on external styling), or a\n    [`style-mod`](https://github.com/marijnh/style-mod#documentation)-style\n    set of CSS properties (which define the styling for those tags).\n    \n    The CSS rules created for a highlighter will be emitted in the\n    order of the spec's properties. That means that for elements that\n    have multiple tags associated with them, styles defined further\n    down in the list will have a higher CSS precedence than styles\n    defined earlier.\n    */\n    static define(specs, options) {\n        return new HighlightStyle(specs, options || {});\n    }\n}\nconst highlighterFacet = /*@__PURE__*/Facet.define();\nconst fallbackHighlighter = /*@__PURE__*/Facet.define({\n    combine(values) { return values.length ? [values[0]] : null; }\n});\nfunction getHighlighters(state) {\n    let main = state.facet(highlighterFacet);\n    return main.length ? main : state.facet(fallbackHighlighter);\n}\n/**\nWrap a highlighter in an editor extension that uses it to apply\nsyntax highlighting to the editor content.\n\nWhen multiple (non-fallback) styles are provided, the styling\napplied is the union of the classes they emit.\n*/\nfunction syntaxHighlighting(highlighter, options) {\n    let ext = [treeHighlighter], themeType;\n    if (highlighter instanceof HighlightStyle) {\n        if (highlighter.module)\n            ext.push(EditorView.styleModule.of(highlighter.module));\n        themeType = highlighter.themeType;\n    }\n    if (options === null || options === void 0 ? void 0 : options.fallback)\n        ext.push(fallbackHighlighter.of(highlighter));\n    else if (themeType)\n        ext.push(highlighterFacet.computeN([EditorView.darkTheme], state => {\n            return state.facet(EditorView.darkTheme) == (themeType == \"dark\") ? [highlighter] : [];\n        }));\n    else\n        ext.push(highlighterFacet.of(highlighter));\n    return ext;\n}\n/**\nReturns the CSS classes (if any) that the highlighters active in\nthe state would assign to the given style\n[tags](https://lezer.codemirror.net/docs/ref#highlight.Tag) and\n(optional) language\n[scope](https://codemirror.net/6/docs/ref/#language.HighlightStyle^define^options.scope).\n*/\nfunction highlightingFor(state, tags, scope) {\n    let highlighters = getHighlighters(state);\n    let result = null;\n    if (highlighters)\n        for (let highlighter of highlighters) {\n            if (!highlighter.scope || scope && highlighter.scope(scope)) {\n                let cls = highlighter.style(tags);\n                if (cls)\n                    result = result ? result + \" \" + cls : cls;\n            }\n        }\n    return result;\n}\nclass TreeHighlighter {\n    constructor(view) {\n        this.markCache = Object.create(null);\n        this.tree = syntaxTree(view.state);\n        this.decorations = this.buildDeco(view, getHighlighters(view.state));\n        this.decoratedTo = view.viewport.to;\n    }\n    update(update) {\n        let tree = syntaxTree(update.state), highlighters = getHighlighters(update.state);\n        let styleChange = highlighters != getHighlighters(update.startState);\n        let { viewport } = update.view, decoratedToMapped = update.changes.mapPos(this.decoratedTo, 1);\n        if (tree.length < viewport.to && !styleChange && tree.type == this.tree.type && decoratedToMapped >= viewport.to) {\n            this.decorations = this.decorations.map(update.changes);\n            this.decoratedTo = decoratedToMapped;\n        }\n        else if (tree != this.tree || update.viewportChanged || styleChange) {\n            this.tree = tree;\n            this.decorations = this.buildDeco(update.view, highlighters);\n            this.decoratedTo = viewport.to;\n        }\n    }\n    buildDeco(view, highlighters) {\n        if (!highlighters || !this.tree.length)\n            return Decoration.none;\n        let builder = new RangeSetBuilder();\n        for (let { from, to } of view.visibleRanges) {\n            highlightTree(this.tree, highlighters, (from, to, style) => {\n                builder.add(from, to, this.markCache[style] || (this.markCache[style] = Decoration.mark({ class: style })));\n            }, from, to);\n        }\n        return builder.finish();\n    }\n}\nconst treeHighlighter = /*@__PURE__*/Prec.high(/*@__PURE__*/ViewPlugin.fromClass(TreeHighlighter, {\n    decorations: v => v.decorations\n}));\n/**\nA default highlight style (works well with light themes).\n*/\nconst defaultHighlightStyle = /*@__PURE__*/HighlightStyle.define([\n    { tag: tags.meta,\n        color: \"#404740\" },\n    { tag: tags.link,\n        textDecoration: \"underline\" },\n    { tag: tags.heading,\n        textDecoration: \"underline\",\n        fontWeight: \"bold\" },\n    { tag: tags.emphasis,\n        fontStyle: \"italic\" },\n    { tag: tags.strong,\n        fontWeight: \"bold\" },\n    { tag: tags.strikethrough,\n        textDecoration: \"line-through\" },\n    { tag: tags.keyword,\n        color: \"#708\" },\n    { tag: [tags.atom, tags.bool, tags.url, tags.contentSeparator, tags.labelName],\n        color: \"#219\" },\n    { tag: [tags.literal, tags.inserted],\n        color: \"#164\" },\n    { tag: [tags.string, tags.deleted],\n        color: \"#a11\" },\n    { tag: [tags.regexp, tags.escape, /*@__PURE__*/tags.special(tags.string)],\n        color: \"#e40\" },\n    { tag: /*@__PURE__*/tags.definition(tags.variableName),\n        color: \"#00f\" },\n    { tag: /*@__PURE__*/tags.local(tags.variableName),\n        color: \"#30a\" },\n    { tag: [tags.typeName, tags.namespace],\n        color: \"#085\" },\n    { tag: tags.className,\n        color: \"#167\" },\n    { tag: [/*@__PURE__*/tags.special(tags.variableName), tags.macroName],\n        color: \"#256\" },\n    { tag: /*@__PURE__*/tags.definition(tags.propertyName),\n        color: \"#00c\" },\n    { tag: tags.comment,\n        color: \"#940\" },\n    { tag: tags.invalid,\n        color: \"#f00\" }\n]);\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \"&.cm-focused .cm-matchingBracket\": { backgroundColor: \"#328c8252\" },\n    \"&.cm-focused .cm-nonmatchingBracket\": { backgroundColor: \"#bb555544\" }\n});\nconst DefaultScanDist = 10000, DefaultBrackets = \"()[]{}\";\nconst bracketMatchingConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            afterCursor: true,\n            brackets: DefaultBrackets,\n            maxScanDistance: DefaultScanDist,\n            renderMatch: defaultRenderMatch\n        });\n    }\n});\nconst matchingMark = /*@__PURE__*/Decoration.mark({ class: \"cm-matchingBracket\" }), nonmatchingMark = /*@__PURE__*/Decoration.mark({ class: \"cm-nonmatchingBracket\" });\nfunction defaultRenderMatch(match) {\n    let decorations = [];\n    let mark = match.matched ? matchingMark : nonmatchingMark;\n    decorations.push(mark.range(match.start.from, match.start.to));\n    if (match.end)\n        decorations.push(mark.range(match.end.from, match.end.to));\n    return decorations;\n}\nconst bracketMatchingState = /*@__PURE__*/StateField.define({\n    create() { return Decoration.none; },\n    update(deco, tr) {\n        if (!tr.docChanged && !tr.selection)\n            return deco;\n        let decorations = [];\n        let config = tr.state.facet(bracketMatchingConfig);\n        for (let range of tr.state.selection.ranges) {\n            if (!range.empty)\n                continue;\n            let match = matchBrackets(tr.state, range.head, -1, config)\n                || (range.head > 0 && matchBrackets(tr.state, range.head - 1, 1, config))\n                || (config.afterCursor &&\n                    (matchBrackets(tr.state, range.head, 1, config) ||\n                        (range.head < tr.state.doc.length && matchBrackets(tr.state, range.head + 1, -1, config))));\n            if (match)\n                decorations = decorations.concat(config.renderMatch(match, tr.state));\n        }\n        return Decoration.set(decorations, true);\n    },\n    provide: f => EditorView.decorations.from(f)\n});\nconst bracketMatchingUnique = [\n    bracketMatchingState,\n    baseTheme\n];\n/**\nCreate an extension that enables bracket matching. Whenever the\ncursor is next to a bracket, that bracket and the one it matches\nare highlighted. Or, when no matching bracket is found, another\nhighlighting style is used to indicate this.\n*/\nfunction bracketMatching(config = {}) {\n    return [bracketMatchingConfig.of(config), bracketMatchingUnique];\n}\n/**\nWhen larger syntax nodes, such as HTML tags, are marked as\nopening/closing, it can be a bit messy to treat the whole node as\na matchable bracket. This node prop allows you to define, for such\na node, a \u2018handle\u2019\u2014the part of the node that is highlighted, and\nthat the cursor must be on to activate highlighting in the first\nplace.\n*/\nconst bracketMatchingHandle = /*@__PURE__*/new NodeProp();\nfunction matchingNodes(node, dir, brackets) {\n    let byProp = node.prop(dir < 0 ? NodeProp.openedBy : NodeProp.closedBy);\n    if (byProp)\n        return byProp;\n    if (node.name.length == 1) {\n        let index = brackets.indexOf(node.name);\n        if (index > -1 && index % 2 == (dir < 0 ? 1 : 0))\n            return [brackets[index + dir]];\n    }\n    return null;\n}\nfunction findHandle(node) {\n    let hasHandle = node.type.prop(bracketMatchingHandle);\n    return hasHandle ? hasHandle(node.node) : node;\n}\n/**\nFind the matching bracket for the token at `pos`, scanning\ndirection `dir`. Only the `brackets` and `maxScanDistance`\nproperties are used from `config`, if given. Returns null if no\nbracket was found at `pos`, or a match result otherwise.\n*/\nfunction matchBrackets(state, pos, dir, config = {}) {\n    let maxScanDistance = config.maxScanDistance || DefaultScanDist, brackets = config.brackets || DefaultBrackets;\n    let tree = syntaxTree(state), node = tree.resolveInner(pos, dir);\n    for (let cur = node; cur; cur = cur.parent) {\n        let matches = matchingNodes(cur.type, dir, brackets);\n        if (matches && cur.from < cur.to) {\n            let handle = findHandle(cur);\n            if (handle && (dir > 0 ? pos >= handle.from && pos < handle.to : pos > handle.from && pos <= handle.to))\n                return matchMarkedBrackets(state, pos, dir, cur, handle, matches, brackets);\n        }\n    }\n    return matchPlainBrackets(state, pos, dir, tree, node.type, maxScanDistance, brackets);\n}\nfunction matchMarkedBrackets(_state, _pos, dir, token, handle, matching, brackets) {\n    let parent = token.parent, firstToken = { from: handle.from, to: handle.to };\n    let depth = 0, cursor = parent === null || parent === void 0 ? void 0 : parent.cursor();\n    if (cursor && (dir < 0 ? cursor.childBefore(token.from) : cursor.childAfter(token.to)))\n        do {\n            if (dir < 0 ? cursor.to <= token.from : cursor.from >= token.to) {\n                if (depth == 0 && matching.indexOf(cursor.type.name) > -1 && cursor.from < cursor.to) {\n                    let endHandle = findHandle(cursor);\n                    return { start: firstToken, end: endHandle ? { from: endHandle.from, to: endHandle.to } : undefined, matched: true };\n                }\n                else if (matchingNodes(cursor.type, dir, brackets)) {\n                    depth++;\n                }\n                else if (matchingNodes(cursor.type, -dir, brackets)) {\n                    if (depth == 0) {\n                        let endHandle = findHandle(cursor);\n                        return {\n                            start: firstToken,\n                            end: endHandle && endHandle.from < endHandle.to ? { from: endHandle.from, to: endHandle.to } : undefined,\n                            matched: false\n                        };\n                    }\n                    depth--;\n                }\n            }\n        } while (dir < 0 ? cursor.prevSibling() : cursor.nextSibling());\n    return { start: firstToken, matched: false };\n}\nfunction matchPlainBrackets(state, pos, dir, tree, tokenType, maxScanDistance, brackets) {\n    let startCh = dir < 0 ? state.sliceDoc(pos - 1, pos) : state.sliceDoc(pos, pos + 1);\n    let bracket = brackets.indexOf(startCh);\n    if (bracket < 0 || (bracket % 2 == 0) != (dir > 0))\n        return null;\n    let startToken = { from: dir < 0 ? pos - 1 : pos, to: dir > 0 ? pos + 1 : pos };\n    let iter = state.doc.iterRange(pos, dir > 0 ? state.doc.length : 0), depth = 0;\n    for (let distance = 0; !(iter.next()).done && distance <= maxScanDistance;) {\n        let text = iter.value;\n        if (dir < 0)\n            distance += text.length;\n        let basePos = pos + distance * dir;\n        for (let pos = dir > 0 ? 0 : text.length - 1, end = dir > 0 ? text.length : -1; pos != end; pos += dir) {\n            let found = brackets.indexOf(text[pos]);\n            if (found < 0 || tree.resolveInner(basePos + pos, 1).type != tokenType)\n                continue;\n            if ((found % 2 == 0) == (dir > 0)) {\n                depth++;\n            }\n            else if (depth == 1) { // Closing\n                return { start: startToken, end: { from: basePos + pos, to: basePos + pos + 1 }, matched: (found >> 1) == (bracket >> 1) };\n            }\n            else {\n                depth--;\n            }\n        }\n        if (dir > 0)\n            distance += text.length;\n    }\n    return iter.done ? { start: startToken, matched: false } : null;\n}\n\n// Counts the column offset in a string, taking tabs into account.\n// Used mostly to find indentation.\nfunction countCol(string, end, tabSize, startIndex = 0, startValue = 0) {\n    if (end == null) {\n        end = string.search(/[^\\s\\u00a0]/);\n        if (end == -1)\n            end = string.length;\n    }\n    let n = startValue;\n    for (let i = startIndex; i < end; i++) {\n        if (string.charCodeAt(i) == 9)\n            n += tabSize - (n % tabSize);\n        else\n            n++;\n    }\n    return n;\n}\n/**\nEncapsulates a single line of input. Given to stream syntax code,\nwhich uses it to tokenize the content.\n*/\nclass StringStream {\n    /**\n    Create a stream.\n    */\n    constructor(\n    /**\n    The line.\n    */\n    string, tabSize, \n    /**\n    The current indent unit size.\n    */\n    indentUnit, overrideIndent) {\n        this.string = string;\n        this.tabSize = tabSize;\n        this.indentUnit = indentUnit;\n        this.overrideIndent = overrideIndent;\n        /**\n        The current position on the line.\n        */\n        this.pos = 0;\n        /**\n        The start position of the current token.\n        */\n        this.start = 0;\n        this.lastColumnPos = 0;\n        this.lastColumnValue = 0;\n    }\n    /**\n    True if we are at the end of the line.\n    */\n    eol() { return this.pos >= this.string.length; }\n    /**\n    True if we are at the start of the line.\n    */\n    sol() { return this.pos == 0; }\n    /**\n    Get the next code unit after the current position, or undefined\n    if we're at the end of the line.\n    */\n    peek() { return this.string.charAt(this.pos) || undefined; }\n    /**\n    Read the next code unit and advance `this.pos`.\n    */\n    next() {\n        if (this.pos < this.string.length)\n            return this.string.charAt(this.pos++);\n    }\n    /**\n    Match the next character against the given string, regular\n    expression, or predicate. Consume and return it if it matches.\n    */\n    eat(match) {\n        let ch = this.string.charAt(this.pos);\n        let ok;\n        if (typeof match == \"string\")\n            ok = ch == match;\n        else\n            ok = ch && (match instanceof RegExp ? match.test(ch) : match(ch));\n        if (ok) {\n            ++this.pos;\n            return ch;\n        }\n    }\n    /**\n    Continue matching characters that match the given string,\n    regular expression, or predicate function. Return true if any\n    characters were consumed.\n    */\n    eatWhile(match) {\n        let start = this.pos;\n        while (this.eat(match)) { }\n        return this.pos > start;\n    }\n    /**\n    Consume whitespace ahead of `this.pos`. Return true if any was\n    found.\n    */\n    eatSpace() {\n        let start = this.pos;\n        while (/[\\s\\u00a0]/.test(this.string.charAt(this.pos)))\n            ++this.pos;\n        return this.pos > start;\n    }\n    /**\n    Move to the end of the line.\n    */\n    skipToEnd() { this.pos = this.string.length; }\n    /**\n    Move to directly before the given character, if found on the\n    current line.\n    */\n    skipTo(ch) {\n        let found = this.string.indexOf(ch, this.pos);\n        if (found > -1) {\n            this.pos = found;\n            return true;\n        }\n    }\n    /**\n    Move back `n` characters.\n    */\n    backUp(n) { this.pos -= n; }\n    /**\n    Get the column position at `this.pos`.\n    */\n    column() {\n        if (this.lastColumnPos < this.start) {\n            this.lastColumnValue = countCol(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue);\n            this.lastColumnPos = this.start;\n        }\n        return this.lastColumnValue;\n    }\n    /**\n    Get the indentation column of the current line.\n    */\n    indentation() {\n        var _a;\n        return (_a = this.overrideIndent) !== null && _a !== void 0 ? _a : countCol(this.string, null, this.tabSize);\n    }\n    /**\n    Match the input against the given string or regular expression\n    (which should start with a `^`). Return true or the regexp match\n    if it matches.\n    \n    Unless `consume` is set to `false`, this will move `this.pos`\n    past the matched text.\n    \n    When matching a string `caseInsensitive` can be set to true to\n    make the match case-insensitive.\n    */\n    match(pattern, consume, caseInsensitive) {\n        if (typeof pattern == \"string\") {\n            let cased = (str) => caseInsensitive ? str.toLowerCase() : str;\n            let substr = this.string.substr(this.pos, pattern.length);\n            if (cased(substr) == cased(pattern)) {\n                if (consume !== false)\n                    this.pos += pattern.length;\n                return true;\n            }\n            else\n                return null;\n        }\n        else {\n            let match = this.string.slice(this.pos).match(pattern);\n            if (match && match.index > 0)\n                return null;\n            if (match && consume !== false)\n                this.pos += match[0].length;\n            return match;\n        }\n    }\n    /**\n    Get the current token.\n    */\n    current() { return this.string.slice(this.start, this.pos); }\n}\n\nfunction fullParser(spec) {\n    return {\n        name: spec.name || \"\",\n        token: spec.token,\n        blankLine: spec.blankLine || (() => { }),\n        startState: spec.startState || (() => true),\n        copyState: spec.copyState || defaultCopyState,\n        indent: spec.indent || (() => null),\n        languageData: spec.languageData || {},\n        tokenTable: spec.tokenTable || noTokens\n    };\n}\nfunction defaultCopyState(state) {\n    if (typeof state != \"object\")\n        return state;\n    let newState = {};\n    for (let prop in state) {\n        let val = state[prop];\n        newState[prop] = (val instanceof Array ? val.slice() : val);\n    }\n    return newState;\n}\nconst IndentedFrom = /*@__PURE__*/new WeakMap();\n/**\nA [language](https://codemirror.net/6/docs/ref/#language.Language) class based on a CodeMirror\n5-style [streaming parser](https://codemirror.net/6/docs/ref/#language.StreamParser).\n*/\nclass StreamLanguage extends Language {\n    constructor(parser) {\n        let data = defineLanguageFacet(parser.languageData);\n        let p = fullParser(parser), self;\n        let impl = new class extends Parser {\n            createParse(input, fragments, ranges) {\n                return new Parse(self, input, fragments, ranges);\n            }\n        };\n        super(data, impl, [], parser.name);\n        this.topNode = docID(data, this);\n        self = this;\n        this.streamParser = p;\n        this.stateAfter = new NodeProp({ perNode: true });\n        this.tokenTable = parser.tokenTable ? new TokenTable(p.tokenTable) : defaultTokenTable;\n    }\n    /**\n    Define a stream language.\n    */\n    static define(spec) { return new StreamLanguage(spec); }\n    /**\n    @internal\n    */\n    getIndent(cx) {\n        let from = undefined;\n        let { overrideIndentation } = cx.options;\n        if (overrideIndentation) {\n            from = IndentedFrom.get(cx.state);\n            if (from != null && from < cx.pos - 1e4)\n                from = undefined;\n        }\n        let start = findState(this, cx.node.tree, cx.node.from, cx.node.from, from !== null && from !== void 0 ? from : cx.pos), statePos, state;\n        if (start) {\n            state = start.state;\n            statePos = start.pos + 1;\n        }\n        else {\n            state = this.streamParser.startState(cx.unit);\n            statePos = cx.node.from;\n        }\n        if (cx.pos - statePos > 10000 /* C.MaxIndentScanDist */)\n            return null;\n        while (statePos < cx.pos) {\n            let line = cx.state.doc.lineAt(statePos), end = Math.min(cx.pos, line.to);\n            if (line.length) {\n                let indentation = overrideIndentation ? overrideIndentation(line.from) : -1;\n                let stream = new StringStream(line.text, cx.state.tabSize, cx.unit, indentation < 0 ? undefined : indentation);\n                while (stream.pos < end - line.from)\n                    readToken(this.streamParser.token, stream, state);\n            }\n            else {\n                this.streamParser.blankLine(state, cx.unit);\n            }\n            if (end == cx.pos)\n                break;\n            statePos = line.to + 1;\n        }\n        let line = cx.lineAt(cx.pos);\n        if (overrideIndentation && from == null)\n            IndentedFrom.set(cx.state, line.from);\n        return this.streamParser.indent(state, /^\\s*(.*)/.exec(line.text)[1], cx);\n    }\n    get allowsNesting() { return false; }\n}\nfunction findState(lang, tree, off, startPos, before) {\n    let state = off >= startPos && off + tree.length <= before && tree.prop(lang.stateAfter);\n    if (state)\n        return { state: lang.streamParser.copyState(state), pos: off + tree.length };\n    for (let i = tree.children.length - 1; i >= 0; i--) {\n        let child = tree.children[i], pos = off + tree.positions[i];\n        let found = child instanceof Tree && pos < before && findState(lang, child, pos, startPos, before);\n        if (found)\n            return found;\n    }\n    return null;\n}\nfunction cutTree(lang, tree, from, to, inside) {\n    if (inside && from <= 0 && to >= tree.length)\n        return tree;\n    if (!inside && from == 0 && tree.type == lang.topNode)\n        inside = true;\n    for (let i = tree.children.length - 1; i >= 0; i--) {\n        let pos = tree.positions[i], child = tree.children[i], inner;\n        if (pos < to && child instanceof Tree) {\n            if (!(inner = cutTree(lang, child, from - pos, to - pos, inside)))\n                break;\n            return !inside ? inner\n                : new Tree(tree.type, tree.children.slice(0, i).concat(inner), tree.positions.slice(0, i + 1), pos + inner.length);\n        }\n    }\n    return null;\n}\nfunction findStartInFragments(lang, fragments, startPos, endPos, editorState) {\n    for (let f of fragments) {\n        let from = f.from + (f.openStart ? 25 : 0), to = f.to - (f.openEnd ? 25 : 0);\n        let found = from <= startPos && to > startPos && findState(lang, f.tree, 0 - f.offset, startPos, to), tree;\n        if (found && found.pos <= endPos && (tree = cutTree(lang, f.tree, startPos + f.offset, found.pos + f.offset, false)))\n            return { state: found.state, tree };\n    }\n    return { state: lang.streamParser.startState(editorState ? getIndentUnit(editorState) : 4), tree: Tree.empty };\n}\nclass Parse {\n    constructor(lang, input, fragments, ranges) {\n        this.lang = lang;\n        this.input = input;\n        this.fragments = fragments;\n        this.ranges = ranges;\n        this.stoppedAt = null;\n        this.chunks = [];\n        this.chunkPos = [];\n        this.chunk = [];\n        this.chunkReused = undefined;\n        this.rangeIndex = 0;\n        this.to = ranges[ranges.length - 1].to;\n        let context = ParseContext.get(), from = ranges[0].from;\n        let { state, tree } = findStartInFragments(lang, fragments, from, this.to, context === null || context === void 0 ? void 0 : context.state);\n        this.state = state;\n        this.parsedPos = this.chunkStart = from + tree.length;\n        for (let i = 0; i < tree.children.length; i++) {\n            this.chunks.push(tree.children[i]);\n            this.chunkPos.push(tree.positions[i]);\n        }\n        if (context && this.parsedPos < context.viewport.from - 100000 /* C.MaxDistanceBeforeViewport */ &&\n            ranges.some(r => r.from <= context.viewport.from && r.to >= context.viewport.from)) {\n            this.state = this.lang.streamParser.startState(getIndentUnit(context.state));\n            context.skipUntilInView(this.parsedPos, context.viewport.from);\n            this.parsedPos = context.viewport.from;\n        }\n        this.moveRangeIndex();\n    }\n    advance() {\n        let context = ParseContext.get();\n        let parseEnd = this.stoppedAt == null ? this.to : Math.min(this.to, this.stoppedAt);\n        let end = Math.min(parseEnd, this.chunkStart + 2048 /* C.ChunkSize */);\n        if (context)\n            end = Math.min(end, context.viewport.to);\n        while (this.parsedPos < end)\n            this.parseLine(context);\n        if (this.chunkStart < this.parsedPos)\n            this.finishChunk();\n        if (this.parsedPos >= parseEnd)\n            return this.finish();\n        if (context && this.parsedPos >= context.viewport.to) {\n            context.skipUntilInView(this.parsedPos, parseEnd);\n            return this.finish();\n        }\n        return null;\n    }\n    stopAt(pos) {\n        this.stoppedAt = pos;\n    }\n    lineAfter(pos) {\n        let chunk = this.input.chunk(pos);\n        if (!this.input.lineChunks) {\n            let eol = chunk.indexOf(\"\\n\");\n            if (eol > -1)\n                chunk = chunk.slice(0, eol);\n        }\n        else if (chunk == \"\\n\") {\n            chunk = \"\";\n        }\n        return pos + chunk.length <= this.to ? chunk : chunk.slice(0, this.to - pos);\n    }\n    nextLine() {\n        let from = this.parsedPos, line = this.lineAfter(from), end = from + line.length;\n        for (let index = this.rangeIndex;;) {\n            let rangeEnd = this.ranges[index].to;\n            if (rangeEnd >= end)\n                break;\n            line = line.slice(0, rangeEnd - (end - line.length));\n            index++;\n            if (index == this.ranges.length)\n                break;\n            let rangeStart = this.ranges[index].from;\n            let after = this.lineAfter(rangeStart);\n            line += after;\n            end = rangeStart + after.length;\n        }\n        return { line, end };\n    }\n    skipGapsTo(pos, offset, side) {\n        for (;;) {\n            let end = this.ranges[this.rangeIndex].to, offPos = pos + offset;\n            if (side > 0 ? end > offPos : end >= offPos)\n                break;\n            let start = this.ranges[++this.rangeIndex].from;\n            offset += start - end;\n        }\n        return offset;\n    }\n    moveRangeIndex() {\n        while (this.ranges[this.rangeIndex].to < this.parsedPos)\n            this.rangeIndex++;\n    }\n    emitToken(id, from, to, offset) {\n        let size = 4;\n        if (this.ranges.length > 1) {\n            offset = this.skipGapsTo(from, offset, 1);\n            from += offset;\n            let len0 = this.chunk.length;\n            offset = this.skipGapsTo(to, offset, -1);\n            to += offset;\n            size += this.chunk.length - len0;\n        }\n        let last = this.chunk.length - 4;\n        if (size == 4 && last >= 0 && this.chunk[last] == id && this.chunk[last + 2] == from)\n            this.chunk[last + 2] = to;\n        else\n            this.chunk.push(id, from, to, size);\n        return offset;\n    }\n    parseLine(context) {\n        let { line, end } = this.nextLine(), offset = 0, { streamParser } = this.lang;\n        let stream = new StringStream(line, context ? context.state.tabSize : 4, context ? getIndentUnit(context.state) : 2);\n        if (stream.eol()) {\n            streamParser.blankLine(this.state, stream.indentUnit);\n        }\n        else {\n            while (!stream.eol()) {\n                let token = readToken(streamParser.token, stream, this.state);\n                if (token)\n                    offset = this.emitToken(this.lang.tokenTable.resolve(token), this.parsedPos + stream.start, this.parsedPos + stream.pos, offset);\n                if (stream.start > 10000 /* C.MaxLineLength */)\n                    break;\n            }\n        }\n        this.parsedPos = end;\n        this.moveRangeIndex();\n        if (this.parsedPos < this.to)\n            this.parsedPos++;\n    }\n    finishChunk() {\n        let tree = Tree.build({\n            buffer: this.chunk,\n            start: this.chunkStart,\n            length: this.parsedPos - this.chunkStart,\n            nodeSet,\n            topID: 0,\n            maxBufferLength: 2048 /* C.ChunkSize */,\n            reused: this.chunkReused\n        });\n        tree = new Tree(tree.type, tree.children, tree.positions, tree.length, [[this.lang.stateAfter, this.lang.streamParser.copyState(this.state)]]);\n        this.chunks.push(tree);\n        this.chunkPos.push(this.chunkStart - this.ranges[0].from);\n        this.chunk = [];\n        this.chunkReused = undefined;\n        this.chunkStart = this.parsedPos;\n    }\n    finish() {\n        return new Tree(this.lang.topNode, this.chunks, this.chunkPos, this.parsedPos - this.ranges[0].from).balance();\n    }\n}\nfunction readToken(token, stream, state) {\n    stream.start = stream.pos;\n    for (let i = 0; i < 10; i++) {\n        let result = token(stream, state);\n        if (stream.pos > stream.start)\n            return result;\n    }\n    throw new Error(\"Stream parser failed to advance stream.\");\n}\nconst noTokens = /*@__PURE__*/Object.create(null);\nconst typeArray = [NodeType.none];\nconst nodeSet = /*@__PURE__*/new NodeSet(typeArray);\nconst warned = [];\n// Cache of node types by name and tags\nconst byTag = /*@__PURE__*/Object.create(null);\nconst defaultTable = /*@__PURE__*/Object.create(null);\nfor (let [legacyName, name] of [\n    [\"variable\", \"variableName\"],\n    [\"variable-2\", \"variableName.special\"],\n    [\"string-2\", \"string.special\"],\n    [\"def\", \"variableName.definition\"],\n    [\"tag\", \"tagName\"],\n    [\"attribute\", \"attributeName\"],\n    [\"type\", \"typeName\"],\n    [\"builtin\", \"variableName.standard\"],\n    [\"qualifier\", \"modifier\"],\n    [\"error\", \"invalid\"],\n    [\"header\", \"heading\"],\n    [\"property\", \"propertyName\"]\n])\n    defaultTable[legacyName] = /*@__PURE__*/createTokenType(noTokens, name);\nclass TokenTable {\n    constructor(extra) {\n        this.extra = extra;\n        this.table = Object.assign(Object.create(null), defaultTable);\n    }\n    resolve(tag) {\n        return !tag ? 0 : this.table[tag] || (this.table[tag] = createTokenType(this.extra, tag));\n    }\n}\nconst defaultTokenTable = /*@__PURE__*/new TokenTable(noTokens);\nfunction warnForPart(part, msg) {\n    if (warned.indexOf(part) > -1)\n        return;\n    warned.push(part);\n    console.warn(msg);\n}\nfunction createTokenType(extra, tagStr) {\n    let tags$1 = [];\n    for (let name of tagStr.split(\" \")) {\n        let found = [];\n        for (let part of name.split(\".\")) {\n            let value = (extra[part] || tags[part]);\n            if (!value) {\n                warnForPart(part, `Unknown highlighting tag ${part}`);\n            }\n            else if (typeof value == \"function\") {\n                if (!found.length)\n                    warnForPart(part, `Modifier ${part} used at start of tag`);\n                else\n                    found = found.map(value);\n            }\n            else {\n                if (found.length)\n                    warnForPart(part, `Tag ${part} used as modifier`);\n                else\n                    found = Array.isArray(value) ? value : [value];\n            }\n        }\n        for (let tag of found)\n            tags$1.push(tag);\n    }\n    if (!tags$1.length)\n        return 0;\n    let name = tagStr.replace(/ /g, \"_\"), key = name + \" \" + tags$1.map(t => t.id);\n    let known = byTag[key];\n    if (known)\n        return known.id;\n    let type = byTag[key] = NodeType.define({\n        id: typeArray.length,\n        name,\n        props: [styleTags({ [name]: tags$1 })]\n    });\n    typeArray.push(type);\n    return type.id;\n}\nfunction docID(data, lang) {\n    let type = NodeType.define({ id: typeArray.length, name: \"Document\", props: [\n            languageDataProp.add(() => data),\n            indentNodeProp.add(() => cx => lang.getIndent(cx))\n        ], top: true });\n    typeArray.push(type);\n    return type;\n}\n\nfunction buildForLine(line) {\n    return line.length <= 4096 && /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac\\ufb50-\\ufdff]/.test(line);\n}\nfunction textHasRTL(text) {\n    for (let i = text.iter(); !i.next().done;)\n        if (buildForLine(i.value))\n            return true;\n    return false;\n}\nfunction changeAddsRTL(change) {\n    let added = false;\n    change.iterChanges((fA, tA, fB, tB, ins) => {\n        if (!added && textHasRTL(ins))\n            added = true;\n    });\n    return added;\n}\nconst alwaysIsolate = /*@__PURE__*/Facet.define({ combine: values => values.some(x => x) });\n/**\nMake sure nodes\n[marked](https://lezer.codemirror.net/docs/ref/#common.NodeProp^isolate)\nas isolating for bidirectional text are rendered in a way that\nisolates them from the surrounding text.\n*/\nfunction bidiIsolates(options = {}) {\n    let extensions = [isolateMarks];\n    if (options.alwaysIsolate)\n        extensions.push(alwaysIsolate.of(true));\n    return extensions;\n}\nconst isolateMarks = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.always = view.state.facet(alwaysIsolate) ||\n            view.textDirection != Direction.LTR ||\n            view.state.facet(EditorView.perLineTextDirection);\n        this.hasRTL = !this.always && textHasRTL(view.state.doc);\n        this.tree = syntaxTree(view.state);\n        this.decorations = this.always || this.hasRTL ? buildDeco(view, this.tree, this.always) : Decoration.none;\n    }\n    update(update) {\n        let always = update.state.facet(alwaysIsolate) ||\n            update.view.textDirection != Direction.LTR ||\n            update.state.facet(EditorView.perLineTextDirection);\n        if (!always && !this.hasRTL && changeAddsRTL(update.changes))\n            this.hasRTL = true;\n        if (!always && !this.hasRTL)\n            return;\n        let tree = syntaxTree(update.state);\n        if (always != this.always || tree != this.tree || update.docChanged || update.viewportChanged) {\n            this.tree = tree;\n            this.always = always;\n            this.decorations = buildDeco(update.view, tree, always);\n        }\n    }\n}, {\n    provide: plugin => {\n        function access(view) {\n            var _a, _b;\n            return (_b = (_a = view.plugin(plugin)) === null || _a === void 0 ? void 0 : _a.decorations) !== null && _b !== void 0 ? _b : Decoration.none;\n        }\n        return [EditorView.outerDecorations.of(access),\n            Prec.lowest(EditorView.bidiIsolatedRanges.of(access))];\n    }\n});\nfunction buildDeco(view, tree, always) {\n    let deco = new RangeSetBuilder();\n    let ranges = view.visibleRanges;\n    if (!always)\n        ranges = clipRTLLines(ranges, view.state.doc);\n    for (let { from, to } of ranges) {\n        tree.iterate({\n            enter: node => {\n                let iso = node.type.prop(NodeProp.isolate);\n                if (iso)\n                    deco.add(node.from, node.to, marks[iso]);\n            },\n            from, to\n        });\n    }\n    return deco.finish();\n}\nfunction clipRTLLines(ranges, doc) {\n    let cur = doc.iter(), pos = 0, result = [], last = null;\n    for (let { from, to } of ranges) {\n        if (last && last.to > from) {\n            from = last.to;\n            if (from >= to)\n                continue;\n        }\n        if (pos + cur.value.length < from) {\n            cur.next(from - (pos + cur.value.length));\n            pos = from;\n        }\n        for (;;) {\n            let start = pos, end = pos + cur.value.length;\n            if (!cur.lineBreak && buildForLine(cur.value)) {\n                if (last && last.to > start - 10)\n                    last.to = Math.min(to, end);\n                else\n                    result.push(last = { from: start, to: Math.min(to, end) });\n            }\n            if (end >= to)\n                break;\n            pos = end;\n            cur.next();\n        }\n    }\n    return result;\n}\nconst marks = {\n    rtl: /*@__PURE__*/Decoration.mark({ class: \"cm-iso\", inclusive: true, attributes: { dir: \"rtl\" }, bidiIsolate: Direction.RTL }),\n    ltr: /*@__PURE__*/Decoration.mark({ class: \"cm-iso\", inclusive: true, attributes: { dir: \"ltr\" }, bidiIsolate: Direction.LTR }),\n    auto: /*@__PURE__*/Decoration.mark({ class: \"cm-iso\", inclusive: true, attributes: { dir: \"auto\" }, bidiIsolate: null })\n};\n\nexport { DocInput, HighlightStyle, IndentContext, LRLanguage, Language, LanguageDescription, LanguageSupport, ParseContext, StreamLanguage, StringStream, TreeIndentContext, bidiIsolates, bracketMatching, bracketMatchingHandle, codeFolding, continuedIndent, defaultHighlightStyle, defineLanguageFacet, delimitedIndent, ensureSyntaxTree, flatIndent, foldAll, foldCode, foldEffect, foldGutter, foldInside, foldKeymap, foldNodeProp, foldService, foldState, foldable, foldedRanges, forceParsing, getIndentUnit, getIndentation, highlightingFor, indentNodeProp, indentOnInput, indentRange, indentService, indentString, indentUnit, language, languageDataProp, matchBrackets, sublanguageProp, syntaxHighlighting, syntaxParserRunning, syntaxTree, syntaxTreeAvailable, toggleFold, unfoldAll, unfoldCode, unfoldEffect };\n", "import { Annotation, Facet, combineConfig, StateField, Transaction, ChangeSet, ChangeDesc, EditorSelection, StateEffect, Text, findClusterBreak, countColumn, CharCategory } from '@codemirror/state';\nimport { EditorView, Direction } from '@codemirror/view';\nimport { IndentContext, getIndentation, indentString, matchBrackets, syntaxTree, getIndentUnit, indentUnit } from '@codemirror/language';\nimport { NodeProp } from '@lezer/common';\n\n/**\nComment or uncomment the current selection. Will use line comments\nif available, otherwise falling back to block comments.\n*/\nconst toggleComment = target => {\n    let { state } = target, line = state.doc.lineAt(state.selection.main.from), config = getConfig(target.state, line.from);\n    return config.line ? toggleLineComment(target) : config.block ? toggleBlockCommentByLine(target) : false;\n};\nfunction command(f, option) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let tr = f(option, state);\n        if (!tr)\n            return false;\n        dispatch(state.update(tr));\n        return true;\n    };\n}\n/**\nComment or uncomment the current selection using line comments.\nThe line comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleLineComment = /*@__PURE__*/command(changeLineComment, 0 /* CommentOption.Toggle */);\n/**\nComment the current selection using line comments.\n*/\nconst lineComment = /*@__PURE__*/command(changeLineComment, 1 /* CommentOption.Comment */);\n/**\nUncomment the current selection using line comments.\n*/\nconst lineUncomment = /*@__PURE__*/command(changeLineComment, 2 /* CommentOption.Uncomment */);\n/**\nComment or uncomment the current selection using block comments.\nThe block comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleBlockComment = /*@__PURE__*/command(changeBlockComment, 0 /* CommentOption.Toggle */);\n/**\nComment the current selection using block comments.\n*/\nconst blockComment = /*@__PURE__*/command(changeBlockComment, 1 /* CommentOption.Comment */);\n/**\nUncomment the current selection using block comments.\n*/\nconst blockUncomment = /*@__PURE__*/command(changeBlockComment, 2 /* CommentOption.Uncomment */);\n/**\nComment or uncomment the lines around the current selection using\nblock comments.\n*/\nconst toggleBlockCommentByLine = /*@__PURE__*/command((o, s) => changeBlockComment(o, s, selectedLineRanges(s)), 0 /* CommentOption.Toggle */);\nfunction getConfig(state, pos) {\n    let data = state.languageDataAt(\"commentTokens\", pos);\n    return data.length ? data[0] : {};\n}\nconst SearchMargin = 50;\n/**\nDetermines if the given range is block-commented in the given\nstate.\n*/\nfunction findBlockComment(state, { open, close }, from, to) {\n    let textBefore = state.sliceDoc(from - SearchMargin, from);\n    let textAfter = state.sliceDoc(to, to + SearchMargin);\n    let spaceBefore = /\\s*$/.exec(textBefore)[0].length, spaceAfter = /^\\s*/.exec(textAfter)[0].length;\n    let beforeOff = textBefore.length - spaceBefore;\n    if (textBefore.slice(beforeOff - open.length, beforeOff) == open &&\n        textAfter.slice(spaceAfter, spaceAfter + close.length) == close) {\n        return { open: { pos: from - spaceBefore, margin: spaceBefore && 1 },\n            close: { pos: to + spaceAfter, margin: spaceAfter && 1 } };\n    }\n    let startText, endText;\n    if (to - from <= 2 * SearchMargin) {\n        startText = endText = state.sliceDoc(from, to);\n    }\n    else {\n        startText = state.sliceDoc(from, from + SearchMargin);\n        endText = state.sliceDoc(to - SearchMargin, to);\n    }\n    let startSpace = /^\\s*/.exec(startText)[0].length, endSpace = /\\s*$/.exec(endText)[0].length;\n    let endOff = endText.length - endSpace - close.length;\n    if (startText.slice(startSpace, startSpace + open.length) == open &&\n        endText.slice(endOff, endOff + close.length) == close) {\n        return { open: { pos: from + startSpace + open.length,\n                margin: /\\s/.test(startText.charAt(startSpace + open.length)) ? 1 : 0 },\n            close: { pos: to - endSpace - close.length,\n                margin: /\\s/.test(endText.charAt(endOff - 1)) ? 1 : 0 } };\n    }\n    return null;\n}\nfunction selectedLineRanges(state) {\n    let ranges = [];\n    for (let r of state.selection.ranges) {\n        let fromLine = state.doc.lineAt(r.from);\n        let toLine = r.to <= fromLine.to ? fromLine : state.doc.lineAt(r.to);\n        if (toLine.from > fromLine.from && toLine.from == r.to)\n            toLine = r.to == fromLine.to + 1 ? fromLine : state.doc.lineAt(r.to - 1);\n        let last = ranges.length - 1;\n        if (last >= 0 && ranges[last].to > fromLine.from)\n            ranges[last].to = toLine.to;\n        else\n            ranges.push({ from: fromLine.from + /^\\s*/.exec(fromLine.text)[0].length, to: toLine.to });\n    }\n    return ranges;\n}\n// Performs toggle, comment and uncomment of block comments in\n// languages that support them.\nfunction changeBlockComment(option, state, ranges = state.selection.ranges) {\n    let tokens = ranges.map(r => getConfig(state, r.from).block);\n    if (!tokens.every(c => c))\n        return null;\n    let comments = ranges.map((r, i) => findBlockComment(state, tokens[i], r.from, r.to));\n    if (option != 2 /* CommentOption.Uncomment */ && !comments.every(c => c)) {\n        return { changes: state.changes(ranges.map((range, i) => {\n                if (comments[i])\n                    return [];\n                return [{ from: range.from, insert: tokens[i].open + \" \" }, { from: range.to, insert: \" \" + tokens[i].close }];\n            })) };\n    }\n    else if (option != 1 /* CommentOption.Comment */ && comments.some(c => c)) {\n        let changes = [];\n        for (let i = 0, comment; i < comments.length; i++)\n            if (comment = comments[i]) {\n                let token = tokens[i], { open, close } = comment;\n                changes.push({ from: open.pos - token.open.length, to: open.pos + open.margin }, { from: close.pos - close.margin, to: close.pos + token.close.length });\n            }\n        return { changes };\n    }\n    return null;\n}\n// Performs toggle, comment and uncomment of line comments.\nfunction changeLineComment(option, state, ranges = state.selection.ranges) {\n    let lines = [];\n    let prevLine = -1;\n    for (let { from, to } of ranges) {\n        let startI = lines.length, minIndent = 1e9;\n        let token = getConfig(state, from).line;\n        if (!token)\n            continue;\n        for (let pos = from; pos <= to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.from > prevLine && (from == to || to > line.from)) {\n                prevLine = line.from;\n                let indent = /^\\s*/.exec(line.text)[0].length;\n                let empty = indent == line.length;\n                let comment = line.text.slice(indent, indent + token.length) == token ? indent : -1;\n                if (indent < line.text.length && indent < minIndent)\n                    minIndent = indent;\n                lines.push({ line, comment, token, indent, empty, single: false });\n            }\n            pos = line.to + 1;\n        }\n        if (minIndent < 1e9)\n            for (let i = startI; i < lines.length; i++)\n                if (lines[i].indent < lines[i].line.text.length)\n                    lines[i].indent = minIndent;\n        if (lines.length == startI + 1)\n            lines[startI].single = true;\n    }\n    if (option != 2 /* CommentOption.Uncomment */ && lines.some(l => l.comment < 0 && (!l.empty || l.single))) {\n        let changes = [];\n        for (let { line, token, indent, empty, single } of lines)\n            if (single || !empty)\n                changes.push({ from: line.from + indent, insert: token + \" \" });\n        let changeSet = state.changes(changes);\n        return { changes: changeSet, selection: state.selection.map(changeSet, 1) };\n    }\n    else if (option != 1 /* CommentOption.Comment */ && lines.some(l => l.comment >= 0)) {\n        let changes = [];\n        for (let { line, comment, token } of lines)\n            if (comment >= 0) {\n                let from = line.from + comment, to = from + token.length;\n                if (line.text[to - line.from] == \" \")\n                    to++;\n                changes.push({ from, to });\n            }\n        return { changes };\n    }\n    return null;\n}\n\nconst fromHistory = /*@__PURE__*/Annotation.define();\n/**\nTransaction annotation that will prevent that transaction from\nbeing combined with other transactions in the undo history. Given\n`\"before\"`, it'll prevent merging with previous transactions. With\n`\"after\"`, subsequent transactions won't be combined with this\none. With `\"full\"`, the transaction is isolated on both sides.\n*/\nconst isolateHistory = /*@__PURE__*/Annotation.define();\n/**\nThis facet provides a way to register functions that, given a\ntransaction, provide a set of effects that the history should\nstore when inverting the transaction. This can be used to\nintegrate some kinds of effects in the history, so that they can\nbe undone (and redone again).\n*/\nconst invertedEffects = /*@__PURE__*/Facet.define();\nconst historyConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            minDepth: 100,\n            newGroupDelay: 500,\n            joinToEvent: (_t, isAdjacent) => isAdjacent,\n        }, {\n            minDepth: Math.max,\n            newGroupDelay: Math.min,\n            joinToEvent: (a, b) => (tr, adj) => a(tr, adj) || b(tr, adj)\n        });\n    }\n});\nconst historyField_ = /*@__PURE__*/StateField.define({\n    create() {\n        return HistoryState.empty;\n    },\n    update(state, tr) {\n        let config = tr.state.facet(historyConfig);\n        let fromHist = tr.annotation(fromHistory);\n        if (fromHist) {\n            let item = HistEvent.fromTransaction(tr, fromHist.selection), from = fromHist.side;\n            let other = from == 0 /* BranchName.Done */ ? state.undone : state.done;\n            if (item)\n                other = updateBranch(other, other.length, config.minDepth, item);\n            else\n                other = addSelection(other, tr.startState.selection);\n            return new HistoryState(from == 0 /* BranchName.Done */ ? fromHist.rest : other, from == 0 /* BranchName.Done */ ? other : fromHist.rest);\n        }\n        let isolate = tr.annotation(isolateHistory);\n        if (isolate == \"full\" || isolate == \"before\")\n            state = state.isolate();\n        if (tr.annotation(Transaction.addToHistory) === false)\n            return !tr.changes.empty ? state.addMapping(tr.changes.desc) : state;\n        let event = HistEvent.fromTransaction(tr);\n        let time = tr.annotation(Transaction.time), userEvent = tr.annotation(Transaction.userEvent);\n        if (event)\n            state = state.addChanges(event, time, userEvent, config, tr);\n        else if (tr.selection)\n            state = state.addSelection(tr.startState.selection, time, userEvent, config.newGroupDelay);\n        if (isolate == \"full\" || isolate == \"after\")\n            state = state.isolate();\n        return state;\n    },\n    toJSON(value) {\n        return { done: value.done.map(e => e.toJSON()), undone: value.undone.map(e => e.toJSON()) };\n    },\n    fromJSON(json) {\n        return new HistoryState(json.done.map(HistEvent.fromJSON), json.undone.map(HistEvent.fromJSON));\n    }\n});\n/**\nCreate a history extension with the given configuration.\n*/\nfunction history(config = {}) {\n    return [\n        historyField_,\n        historyConfig.of(config),\n        EditorView.domEventHandlers({\n            beforeinput(e, view) {\n                let command = e.inputType == \"historyUndo\" ? undo : e.inputType == \"historyRedo\" ? redo : null;\n                if (!command)\n                    return false;\n                e.preventDefault();\n                return command(view);\n            }\n        })\n    ];\n}\n/**\nThe state field used to store the history data. Should probably\nonly be used when you want to\n[serialize](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) or\n[deserialize](https://codemirror.net/6/docs/ref/#state.EditorState^fromJSON) state objects in a way\nthat preserves history.\n*/\nconst historyField = historyField_;\nfunction cmd(side, selection) {\n    return function ({ state, dispatch }) {\n        if (!selection && state.readOnly)\n            return false;\n        let historyState = state.field(historyField_, false);\n        if (!historyState)\n            return false;\n        let tr = historyState.pop(side, state, selection);\n        if (!tr)\n            return false;\n        dispatch(tr);\n        return true;\n    };\n}\n/**\nUndo a single group of history events. Returns false if no group\nwas available.\n*/\nconst undo = /*@__PURE__*/cmd(0 /* BranchName.Done */, false);\n/**\nRedo a group of history events. Returns false if no group was\navailable.\n*/\nconst redo = /*@__PURE__*/cmd(1 /* BranchName.Undone */, false);\n/**\nUndo a change or selection change.\n*/\nconst undoSelection = /*@__PURE__*/cmd(0 /* BranchName.Done */, true);\n/**\nRedo a change or selection change.\n*/\nconst redoSelection = /*@__PURE__*/cmd(1 /* BranchName.Undone */, true);\nfunction depth(side) {\n    return function (state) {\n        let histState = state.field(historyField_, false);\n        if (!histState)\n            return 0;\n        let branch = side == 0 /* BranchName.Done */ ? histState.done : histState.undone;\n        return branch.length - (branch.length && !branch[0].changes ? 1 : 0);\n    };\n}\n/**\nThe amount of undoable change events available in a given state.\n*/\nconst undoDepth = /*@__PURE__*/depth(0 /* BranchName.Done */);\n/**\nThe amount of redoable change events available in a given state.\n*/\nconst redoDepth = /*@__PURE__*/depth(1 /* BranchName.Undone */);\n// History events store groups of changes or effects that need to be\n// undone/redone together.\nclass HistEvent {\n    constructor(\n    // The changes in this event. Normal events hold at least one\n    // change or effect. But it may be necessary to store selection\n    // events before the first change, in which case a special type of\n    // instance is created which doesn't hold any changes, with\n    // changes == startSelection == undefined\n    changes, \n    // The effects associated with this event\n    effects, \n    // Accumulated mapping (from addToHistory==false) that should be\n    // applied to events below this one.\n    mapped, \n    // The selection before this event\n    startSelection, \n    // Stores selection changes after this event, to be used for\n    // selection undo/redo.\n    selectionsAfter) {\n        this.changes = changes;\n        this.effects = effects;\n        this.mapped = mapped;\n        this.startSelection = startSelection;\n        this.selectionsAfter = selectionsAfter;\n    }\n    setSelAfter(after) {\n        return new HistEvent(this.changes, this.effects, this.mapped, this.startSelection, after);\n    }\n    toJSON() {\n        var _a, _b, _c;\n        return {\n            changes: (_a = this.changes) === null || _a === void 0 ? void 0 : _a.toJSON(),\n            mapped: (_b = this.mapped) === null || _b === void 0 ? void 0 : _b.toJSON(),\n            startSelection: (_c = this.startSelection) === null || _c === void 0 ? void 0 : _c.toJSON(),\n            selectionsAfter: this.selectionsAfter.map(s => s.toJSON())\n        };\n    }\n    static fromJSON(json) {\n        return new HistEvent(json.changes && ChangeSet.fromJSON(json.changes), [], json.mapped && ChangeDesc.fromJSON(json.mapped), json.startSelection && EditorSelection.fromJSON(json.startSelection), json.selectionsAfter.map(EditorSelection.fromJSON));\n    }\n    // This does not check `addToHistory` and such, it assumes the\n    // transaction needs to be converted to an item. Returns null when\n    // there are no changes or effects in the transaction.\n    static fromTransaction(tr, selection) {\n        let effects = none;\n        for (let invert of tr.startState.facet(invertedEffects)) {\n            let result = invert(tr);\n            if (result.length)\n                effects = effects.concat(result);\n        }\n        if (!effects.length && tr.changes.empty)\n            return null;\n        return new HistEvent(tr.changes.invert(tr.startState.doc), effects, undefined, selection || tr.startState.selection, none);\n    }\n    static selection(selections) {\n        return new HistEvent(undefined, none, undefined, undefined, selections);\n    }\n}\nfunction updateBranch(branch, to, maxLen, newEvent) {\n    let start = to + 1 > maxLen + 20 ? to - maxLen - 1 : 0;\n    let newBranch = branch.slice(start, to);\n    newBranch.push(newEvent);\n    return newBranch;\n}\nfunction isAdjacent(a, b) {\n    let ranges = [], isAdjacent = false;\n    a.iterChangedRanges((f, t) => ranges.push(f, t));\n    b.iterChangedRanges((_f, _t, f, t) => {\n        for (let i = 0; i < ranges.length;) {\n            let from = ranges[i++], to = ranges[i++];\n            if (t >= from && f <= to)\n                isAdjacent = true;\n        }\n    });\n    return isAdjacent;\n}\nfunction eqSelectionShape(a, b) {\n    return a.ranges.length == b.ranges.length &&\n        a.ranges.filter((r, i) => r.empty != b.ranges[i].empty).length === 0;\n}\nfunction conc(a, b) {\n    return !a.length ? b : !b.length ? a : a.concat(b);\n}\nconst none = [];\nconst MaxSelectionsPerEvent = 200;\nfunction addSelection(branch, selection) {\n    if (!branch.length) {\n        return [HistEvent.selection([selection])];\n    }\n    else {\n        let lastEvent = branch[branch.length - 1];\n        let sels = lastEvent.selectionsAfter.slice(Math.max(0, lastEvent.selectionsAfter.length - MaxSelectionsPerEvent));\n        if (sels.length && sels[sels.length - 1].eq(selection))\n            return branch;\n        sels.push(selection);\n        return updateBranch(branch, branch.length - 1, 1e9, lastEvent.setSelAfter(sels));\n    }\n}\n// Assumes the top item has one or more selectionAfter values\nfunction popSelection(branch) {\n    let last = branch[branch.length - 1];\n    let newBranch = branch.slice();\n    newBranch[branch.length - 1] = last.setSelAfter(last.selectionsAfter.slice(0, last.selectionsAfter.length - 1));\n    return newBranch;\n}\n// Add a mapping to the top event in the given branch. If this maps\n// away all the changes and effects in that item, drop it and\n// propagate the mapping to the next item.\nfunction addMappingToBranch(branch, mapping) {\n    if (!branch.length)\n        return branch;\n    let length = branch.length, selections = none;\n    while (length) {\n        let event = mapEvent(branch[length - 1], mapping, selections);\n        if (event.changes && !event.changes.empty || event.effects.length) { // Event survived mapping\n            let result = branch.slice(0, length);\n            result[length - 1] = event;\n            return result;\n        }\n        else { // Drop this event, since there's no changes or effects left\n            mapping = event.mapped;\n            length--;\n            selections = event.selectionsAfter;\n        }\n    }\n    return selections.length ? [HistEvent.selection(selections)] : none;\n}\nfunction mapEvent(event, mapping, extraSelections) {\n    let selections = conc(event.selectionsAfter.length ? event.selectionsAfter.map(s => s.map(mapping)) : none, extraSelections);\n    // Change-less events don't store mappings (they are always the last event in a branch)\n    if (!event.changes)\n        return HistEvent.selection(selections);\n    let mappedChanges = event.changes.map(mapping), before = mapping.mapDesc(event.changes, true);\n    let fullMapping = event.mapped ? event.mapped.composeDesc(before) : before;\n    return new HistEvent(mappedChanges, StateEffect.mapEffects(event.effects, mapping), fullMapping, event.startSelection.map(before), selections);\n}\nconst joinableUserEvent = /^(input\\.type|delete)($|\\.)/;\nclass HistoryState {\n    constructor(done, undone, prevTime = 0, prevUserEvent = undefined) {\n        this.done = done;\n        this.undone = undone;\n        this.prevTime = prevTime;\n        this.prevUserEvent = prevUserEvent;\n    }\n    isolate() {\n        return this.prevTime ? new HistoryState(this.done, this.undone) : this;\n    }\n    addChanges(event, time, userEvent, config, tr) {\n        let done = this.done, lastEvent = done[done.length - 1];\n        if (lastEvent && lastEvent.changes && !lastEvent.changes.empty && event.changes &&\n            (!userEvent || joinableUserEvent.test(userEvent)) &&\n            ((!lastEvent.selectionsAfter.length &&\n                time - this.prevTime < config.newGroupDelay &&\n                config.joinToEvent(tr, isAdjacent(lastEvent.changes, event.changes))) ||\n                // For compose (but not compose.start) events, always join with previous event\n                userEvent == \"input.type.compose\")) {\n            done = updateBranch(done, done.length - 1, config.minDepth, new HistEvent(event.changes.compose(lastEvent.changes), conc(StateEffect.mapEffects(event.effects, lastEvent.changes), lastEvent.effects), lastEvent.mapped, lastEvent.startSelection, none));\n        }\n        else {\n            done = updateBranch(done, done.length, config.minDepth, event);\n        }\n        return new HistoryState(done, none, time, userEvent);\n    }\n    addSelection(selection, time, userEvent, newGroupDelay) {\n        let last = this.done.length ? this.done[this.done.length - 1].selectionsAfter : none;\n        if (last.length > 0 &&\n            time - this.prevTime < newGroupDelay &&\n            userEvent == this.prevUserEvent && userEvent && /^select($|\\.)/.test(userEvent) &&\n            eqSelectionShape(last[last.length - 1], selection))\n            return this;\n        return new HistoryState(addSelection(this.done, selection), this.undone, time, userEvent);\n    }\n    addMapping(mapping) {\n        return new HistoryState(addMappingToBranch(this.done, mapping), addMappingToBranch(this.undone, mapping), this.prevTime, this.prevUserEvent);\n    }\n    pop(side, state, onlySelection) {\n        let branch = side == 0 /* BranchName.Done */ ? this.done : this.undone;\n        if (branch.length == 0)\n            return null;\n        let event = branch[branch.length - 1], selection = event.selectionsAfter[0] || state.selection;\n        if (onlySelection && event.selectionsAfter.length) {\n            return state.update({\n                selection: event.selectionsAfter[event.selectionsAfter.length - 1],\n                annotations: fromHistory.of({ side, rest: popSelection(branch), selection }),\n                userEvent: side == 0 /* BranchName.Done */ ? \"select.undo\" : \"select.redo\",\n                scrollIntoView: true\n            });\n        }\n        else if (!event.changes) {\n            return null;\n        }\n        else {\n            let rest = branch.length == 1 ? none : branch.slice(0, branch.length - 1);\n            if (event.mapped)\n                rest = addMappingToBranch(rest, event.mapped);\n            return state.update({\n                changes: event.changes,\n                selection: event.startSelection,\n                effects: event.effects,\n                annotations: fromHistory.of({ side, rest, selection }),\n                filter: false,\n                userEvent: side == 0 /* BranchName.Done */ ? \"undo\" : \"redo\",\n                scrollIntoView: true\n            });\n        }\n    }\n}\nHistoryState.empty = /*@__PURE__*/new HistoryState(none, none);\n/**\nDefault key bindings for the undo history.\n\n- Mod-z: [`undo`](https://codemirror.net/6/docs/ref/#commands.undo).\n- Mod-y (Mod-Shift-z on macOS) + Ctrl-Shift-z on Linux: [`redo`](https://codemirror.net/6/docs/ref/#commands.redo).\n- Mod-u: [`undoSelection`](https://codemirror.net/6/docs/ref/#commands.undoSelection).\n- Alt-u (Mod-Shift-u on macOS): [`redoSelection`](https://codemirror.net/6/docs/ref/#commands.redoSelection).\n*/\nconst historyKeymap = [\n    { key: \"Mod-z\", run: undo, preventDefault: true },\n    { key: \"Mod-y\", mac: \"Mod-Shift-z\", run: redo, preventDefault: true },\n    { linux: \"Ctrl-Shift-z\", run: redo, preventDefault: true },\n    { key: \"Mod-u\", run: undoSelection, preventDefault: true },\n    { key: \"Alt-u\", mac: \"Mod-Shift-u\", run: redoSelection, preventDefault: true }\n];\n\nfunction updateSel(sel, by) {\n    return EditorSelection.create(sel.ranges.map(by), sel.mainIndex);\n}\nfunction setSel(state, selection) {\n    return state.update({ selection, scrollIntoView: true, userEvent: \"select\" });\n}\nfunction moveSel({ state, dispatch }, how) {\n    let selection = updateSel(state.selection, how);\n    if (selection.eq(state.selection, true))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\nfunction rangeEnd(range, forward) {\n    return EditorSelection.cursor(forward ? range.to : range.from);\n}\nfunction cursorByChar(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByChar(range, forward) : rangeEnd(range, forward));\n}\nfunction ltrAtCursor(view) {\n    return view.textDirectionAt(view.state.selection.main.head) == Direction.LTR;\n}\n/**\nMove the selection one character to the left (which is backward in\nleft-to-right text, forward in right-to-left text).\n*/\nconst cursorCharLeft = view => cursorByChar(view, !ltrAtCursor(view));\n/**\nMove the selection one character to the right.\n*/\nconst cursorCharRight = view => cursorByChar(view, ltrAtCursor(view));\n/**\nMove the selection one character forward.\n*/\nconst cursorCharForward = view => cursorByChar(view, true);\n/**\nMove the selection one character backward.\n*/\nconst cursorCharBackward = view => cursorByChar(view, false);\nfunction byCharLogical(state, range, forward) {\n    let pos = range.head, line = state.doc.lineAt(pos);\n    if (pos == (forward ? line.to : line.from))\n        pos = forward ? Math.min(state.doc.length, line.to + 1) : Math.max(0, line.from - 1);\n    else\n        pos = line.from + findClusterBreak(line.text, pos - line.from, forward);\n    return EditorSelection.cursor(pos, forward ? -1 : 1);\n}\nfunction moveByCharLogical(target, forward) {\n    return moveSel(target, range => range.empty ? byCharLogical(target.state, range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection one character forward, in logical\n(non-text-direction-aware) string index order.\n*/\nconst cursorCharForwardLogical = target => moveByCharLogical(target, true);\n/**\nMove the selection one character backward, in logical string index\norder.\n*/\nconst cursorCharBackwardLogical = target => moveByCharLogical(target, false);\nfunction cursorByGroup(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByGroup(range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection to the left across one group of word or\nnon-word (but also non-space) characters.\n*/\nconst cursorGroupLeft = view => cursorByGroup(view, !ltrAtCursor(view));\n/**\nMove the selection one group to the right.\n*/\nconst cursorGroupRight = view => cursorByGroup(view, ltrAtCursor(view));\n/**\nMove the selection one group forward.\n*/\nconst cursorGroupForward = view => cursorByGroup(view, true);\n/**\nMove the selection one group backward.\n*/\nconst cursorGroupBackward = view => cursorByGroup(view, false);\nfunction toGroupStart(view, pos, start) {\n    let categorize = view.state.charCategorizer(pos);\n    let cat = categorize(start), initial = cat != CharCategory.Space;\n    return (next) => {\n        let nextCat = categorize(next);\n        if (nextCat != CharCategory.Space)\n            return initial && nextCat == cat;\n        initial = false;\n        return true;\n    };\n}\n/**\nMove the cursor one group forward in the default Windows style,\nwhere it moves to the start of the next group.\n*/\nconst cursorGroupForwardWin = view => {\n    return moveSel(view, range => range.empty\n        ? view.moveByChar(range, true, start => toGroupStart(view, range.head, start))\n        : rangeEnd(range, true));\n};\nconst segmenter = typeof Intl != \"undefined\" && Intl.Segmenter ?\n    /*@__PURE__*/new (Intl.Segmenter)(undefined, { granularity: \"word\" }) : null;\nfunction moveBySubword(view, range, forward) {\n    let categorize = view.state.charCategorizer(range.from);\n    let cat = CharCategory.Space, pos = range.from, steps = 0;\n    let done = false, sawUpper = false, sawLower = false;\n    let step = (next) => {\n        if (done)\n            return false;\n        pos += forward ? next.length : -next.length;\n        let nextCat = categorize(next), ahead;\n        if (nextCat == CharCategory.Word && next.charCodeAt(0) < 128 && /[\\W_]/.test(next))\n            nextCat = -1; // Treat word punctuation specially\n        if (cat == CharCategory.Space)\n            cat = nextCat;\n        if (cat != nextCat)\n            return false;\n        if (cat == CharCategory.Word) {\n            if (next.toLowerCase() == next) {\n                if (!forward && sawUpper)\n                    return false;\n                sawLower = true;\n            }\n            else if (sawLower) {\n                if (forward)\n                    return false;\n                done = true;\n            }\n            else {\n                if (sawUpper && forward && categorize(ahead = view.state.sliceDoc(pos, pos + 1)) == CharCategory.Word &&\n                    ahead.toLowerCase() == ahead)\n                    return false;\n                sawUpper = true;\n            }\n        }\n        steps++;\n        return true;\n    };\n    let end = view.moveByChar(range, forward, start => {\n        step(start);\n        return step;\n    });\n    if (segmenter && cat == CharCategory.Word && end.from == range.from + steps * (forward ? 1 : -1)) {\n        let from = Math.min(range.head, end.head), to = Math.max(range.head, end.head);\n        let skipped = view.state.sliceDoc(from, to);\n        if (skipped.length > 1 && /[\\u4E00-\\uffff]/.test(skipped)) {\n            let segments = Array.from(segmenter.segment(skipped));\n            if (segments.length > 1) {\n                if (forward)\n                    return EditorSelection.cursor(range.head + segments[1].index, -1);\n                return EditorSelection.cursor(end.head + segments[segments.length - 1].index, 1);\n            }\n        }\n    }\n    return end;\n}\nfunction cursorBySubword(view, forward) {\n    return moveSel(view, range => range.empty ? moveBySubword(view, range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection one group or camel-case subword forward.\n*/\nconst cursorSubwordForward = view => cursorBySubword(view, true);\n/**\nMove the selection one group or camel-case subword backward.\n*/\nconst cursorSubwordBackward = view => cursorBySubword(view, false);\nfunction interestingNode(state, node, bracketProp) {\n    if (node.type.prop(bracketProp))\n        return true;\n    let len = node.to - node.from;\n    return len && (len > 2 || /[^\\s,.;:]/.test(state.sliceDoc(node.from, node.to))) || node.firstChild;\n}\nfunction moveBySyntax(state, start, forward) {\n    let pos = syntaxTree(state).resolveInner(start.head);\n    let bracketProp = forward ? NodeProp.closedBy : NodeProp.openedBy;\n    // Scan forward through child nodes to see if there's an interesting\n    // node ahead.\n    for (let at = start.head;;) {\n        let next = forward ? pos.childAfter(at) : pos.childBefore(at);\n        if (!next)\n            break;\n        if (interestingNode(state, next, bracketProp))\n            pos = next;\n        else\n            at = forward ? next.to : next.from;\n    }\n    let bracket = pos.type.prop(bracketProp), match, newPos;\n    if (bracket && (match = forward ? matchBrackets(state, pos.from, 1) : matchBrackets(state, pos.to, -1)) && match.matched)\n        newPos = forward ? match.end.to : match.end.from;\n    else\n        newPos = forward ? pos.to : pos.from;\n    return EditorSelection.cursor(newPos, forward ? -1 : 1);\n}\n/**\nMove the cursor over the next syntactic element to the left.\n*/\nconst cursorSyntaxLeft = view => moveSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));\n/**\nMove the cursor over the next syntactic element to the right.\n*/\nconst cursorSyntaxRight = view => moveSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));\nfunction cursorByLine(view, forward) {\n    return moveSel(view, range => {\n        if (!range.empty)\n            return rangeEnd(range, forward);\n        let moved = view.moveVertically(range, forward);\n        return moved.head != range.head ? moved : view.moveToLineBoundary(range, forward);\n    });\n}\n/**\nMove the selection one line up.\n*/\nconst cursorLineUp = view => cursorByLine(view, false);\n/**\nMove the selection one line down.\n*/\nconst cursorLineDown = view => cursorByLine(view, true);\nfunction pageInfo(view) {\n    let selfScroll = view.scrollDOM.clientHeight < view.scrollDOM.scrollHeight - 2;\n    let marginTop = 0, marginBottom = 0, height;\n    if (selfScroll) {\n        for (let source of view.state.facet(EditorView.scrollMargins)) {\n            let margins = source(view);\n            if (margins === null || margins === void 0 ? void 0 : margins.top)\n                marginTop = Math.max(margins === null || margins === void 0 ? void 0 : margins.top, marginTop);\n            if (margins === null || margins === void 0 ? void 0 : margins.bottom)\n                marginBottom = Math.max(margins === null || margins === void 0 ? void 0 : margins.bottom, marginBottom);\n        }\n        height = view.scrollDOM.clientHeight - marginTop - marginBottom;\n    }\n    else {\n        height = (view.dom.ownerDocument.defaultView || window).innerHeight;\n    }\n    return { marginTop, marginBottom, selfScroll,\n        height: Math.max(view.defaultLineHeight, height - 5) };\n}\nfunction cursorByPage(view, forward) {\n    let page = pageInfo(view);\n    let { state } = view, selection = updateSel(state.selection, range => {\n        return range.empty ? view.moveVertically(range, forward, page.height)\n            : rangeEnd(range, forward);\n    });\n    if (selection.eq(state.selection))\n        return false;\n    let effect;\n    if (page.selfScroll) {\n        let startPos = view.coordsAtPos(state.selection.main.head);\n        let scrollRect = view.scrollDOM.getBoundingClientRect();\n        let scrollTop = scrollRect.top + page.marginTop, scrollBottom = scrollRect.bottom - page.marginBottom;\n        if (startPos && startPos.top > scrollTop && startPos.bottom < scrollBottom)\n            effect = EditorView.scrollIntoView(selection.main.head, { y: \"start\", yMargin: startPos.top - scrollTop });\n    }\n    view.dispatch(setSel(state, selection), { effects: effect });\n    return true;\n}\n/**\nMove the selection one page up.\n*/\nconst cursorPageUp = view => cursorByPage(view, false);\n/**\nMove the selection one page down.\n*/\nconst cursorPageDown = view => cursorByPage(view, true);\nfunction moveByLineBoundary(view, start, forward) {\n    let line = view.lineBlockAt(start.head), moved = view.moveToLineBoundary(start, forward);\n    if (moved.head == start.head && moved.head != (forward ? line.to : line.from))\n        moved = view.moveToLineBoundary(start, forward, false);\n    if (!forward && moved.head == line.from && line.length) {\n        let space = /^\\s*/.exec(view.state.sliceDoc(line.from, Math.min(line.from + 100, line.to)))[0].length;\n        if (space && start.head != line.from + space)\n            moved = EditorSelection.cursor(line.from + space);\n    }\n    return moved;\n}\n/**\nMove the selection to the next line wrap point, or to the end of\nthe line if there isn't one left on this line.\n*/\nconst cursorLineBoundaryForward = view => moveSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection to previous line wrap point, or failing that to\nthe start of the line. If the line is indented, and the cursor\nisn't already at the end of the indentation, this will move to the\nend of the indentation instead of the start of the line.\n*/\nconst cursorLineBoundaryBackward = view => moveSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection one line wrap point to the left.\n*/\nconst cursorLineBoundaryLeft = view => moveSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));\n/**\nMove the selection one line wrap point to the right.\n*/\nconst cursorLineBoundaryRight = view => moveSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));\n/**\nMove the selection to the start of the line.\n*/\nconst cursorLineStart = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from, 1));\n/**\nMove the selection to the end of the line.\n*/\nconst cursorLineEnd = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to, -1));\nfunction toMatchingBracket(state, dispatch, extend) {\n    let found = false, selection = updateSel(state.selection, range => {\n        let matching = matchBrackets(state, range.head, -1)\n            || matchBrackets(state, range.head, 1)\n            || (range.head > 0 && matchBrackets(state, range.head - 1, 1))\n            || (range.head < state.doc.length && matchBrackets(state, range.head + 1, -1));\n        if (!matching || !matching.end)\n            return range;\n        found = true;\n        let head = matching.start.from == range.head ? matching.end.to : matching.end.from;\n        return extend ? EditorSelection.range(range.anchor, head) : EditorSelection.cursor(head);\n    });\n    if (!found)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\n/**\nMove the selection to the bracket matching the one it is currently\non, if any.\n*/\nconst cursorMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, false);\n/**\nExtend the selection to the bracket matching the one the selection\nhead is currently on, if any.\n*/\nconst selectMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, true);\nfunction extendSel(target, how) {\n    let selection = updateSel(target.state.selection, range => {\n        let head = how(range);\n        return EditorSelection.range(range.anchor, head.head, head.goalColumn, head.bidiLevel || undefined);\n    });\n    if (selection.eq(target.state.selection))\n        return false;\n    target.dispatch(setSel(target.state, selection));\n    return true;\n}\nfunction selectByChar(view, forward) {\n    return extendSel(view, range => view.moveByChar(range, forward));\n}\n/**\nMove the selection head one character to the left, while leaving\nthe anchor in place.\n*/\nconst selectCharLeft = view => selectByChar(view, !ltrAtCursor(view));\n/**\nMove the selection head one character to the right.\n*/\nconst selectCharRight = view => selectByChar(view, ltrAtCursor(view));\n/**\nMove the selection head one character forward.\n*/\nconst selectCharForward = view => selectByChar(view, true);\n/**\nMove the selection head one character backward.\n*/\nconst selectCharBackward = view => selectByChar(view, false);\n/**\nMove the selection head one character forward by logical\n(non-direction aware) string index order.\n*/\nconst selectCharForwardLogical = target => extendSel(target, range => byCharLogical(target.state, range, true));\n/**\nMove the selection head one character backward by logical string\nindex order.\n*/\nconst selectCharBackwardLogical = target => extendSel(target, range => byCharLogical(target.state, range, false));\nfunction selectByGroup(view, forward) {\n    return extendSel(view, range => view.moveByGroup(range, forward));\n}\n/**\nMove the selection head one [group](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) to\nthe left.\n*/\nconst selectGroupLeft = view => selectByGroup(view, !ltrAtCursor(view));\n/**\nMove the selection head one group to the right.\n*/\nconst selectGroupRight = view => selectByGroup(view, ltrAtCursor(view));\n/**\nMove the selection head one group forward.\n*/\nconst selectGroupForward = view => selectByGroup(view, true);\n/**\nMove the selection head one group backward.\n*/\nconst selectGroupBackward = view => selectByGroup(view, false);\n/**\nMove the selection head one group forward in the default Windows\nstyle, skipping to the start of the next group.\n*/\nconst selectGroupForwardWin = view => {\n    return extendSel(view, range => view.moveByChar(range, true, start => toGroupStart(view, range.head, start)));\n};\nfunction selectBySubword(view, forward) {\n    return extendSel(view, range => moveBySubword(view, range, forward));\n}\n/**\nMove the selection head one group or camel-case subword forward.\n*/\nconst selectSubwordForward = view => selectBySubword(view, true);\n/**\nMove the selection head one group or subword backward.\n*/\nconst selectSubwordBackward = view => selectBySubword(view, false);\n/**\nMove the selection head over the next syntactic element to the left.\n*/\nconst selectSyntaxLeft = view => extendSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));\n/**\nMove the selection head over the next syntactic element to the right.\n*/\nconst selectSyntaxRight = view => extendSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));\nfunction selectByLine(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward));\n}\n/**\nMove the selection head one line up.\n*/\nconst selectLineUp = view => selectByLine(view, false);\n/**\nMove the selection head one line down.\n*/\nconst selectLineDown = view => selectByLine(view, true);\nfunction selectByPage(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward, pageInfo(view).height));\n}\n/**\nMove the selection head one page up.\n*/\nconst selectPageUp = view => selectByPage(view, false);\n/**\nMove the selection head one page down.\n*/\nconst selectPageDown = view => selectByPage(view, true);\n/**\nMove the selection head to the next line boundary.\n*/\nconst selectLineBoundaryForward = view => extendSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection head to the previous line boundary.\n*/\nconst selectLineBoundaryBackward = view => extendSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection head one line boundary to the left.\n*/\nconst selectLineBoundaryLeft = view => extendSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));\n/**\nMove the selection head one line boundary to the right.\n*/\nconst selectLineBoundaryRight = view => extendSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));\n/**\nMove the selection head to the start of the line.\n*/\nconst selectLineStart = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from));\n/**\nMove the selection head to the end of the line.\n*/\nconst selectLineEnd = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to));\n/**\nMove the selection to the start of the document.\n*/\nconst cursorDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: 0 }));\n    return true;\n};\n/**\nMove the selection to the end of the document.\n*/\nconst cursorDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.doc.length }));\n    return true;\n};\n/**\nMove the selection head to the start of the document.\n*/\nconst selectDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: 0 }));\n    return true;\n};\n/**\nMove the selection head to the end of the document.\n*/\nconst selectDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: state.doc.length }));\n    return true;\n};\n/**\nSelect the entire document.\n*/\nconst selectAll = ({ state, dispatch }) => {\n    dispatch(state.update({ selection: { anchor: 0, head: state.doc.length }, userEvent: \"select\" }));\n    return true;\n};\n/**\nExpand the selection to cover entire lines.\n*/\nconst selectLine = ({ state, dispatch }) => {\n    let ranges = selectedLineBlocks(state).map(({ from, to }) => EditorSelection.range(from, Math.min(to + 1, state.doc.length)));\n    dispatch(state.update({ selection: EditorSelection.create(ranges), userEvent: \"select\" }));\n    return true;\n};\n/**\nSelect the next syntactic construct that is larger than the\nselection. Note that this will only work insofar as the language\n[provider](https://codemirror.net/6/docs/ref/#language.language) you use builds up a full\nsyntax tree.\n*/\nconst selectParentSyntax = ({ state, dispatch }) => {\n    let selection = updateSel(state.selection, range => {\n        let tree = syntaxTree(state), stack = tree.resolveStack(range.from, 1);\n        if (range.empty) {\n            let stackBefore = tree.resolveStack(range.from, -1);\n            if (stackBefore.node.from >= stack.node.from && stackBefore.node.to <= stack.node.to)\n                stack = stackBefore;\n        }\n        for (let cur = stack; cur; cur = cur.next) {\n            let { node } = cur;\n            if (((node.from < range.from && node.to >= range.to) ||\n                (node.to > range.to && node.from <= range.from)) &&\n                cur.next)\n                return EditorSelection.range(node.to, node.from);\n        }\n        return range;\n    });\n    if (selection.eq(state.selection))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\n/**\nSimplify the current selection. When multiple ranges are selected,\nreduce it to its main range. Otherwise, if the selection is\nnon-empty, convert it to a cursor selection.\n*/\nconst simplifySelection = ({ state, dispatch }) => {\n    let cur = state.selection, selection = null;\n    if (cur.ranges.length > 1)\n        selection = EditorSelection.create([cur.main]);\n    else if (!cur.main.empty)\n        selection = EditorSelection.create([EditorSelection.cursor(cur.main.head)]);\n    if (!selection)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\nfunction deleteBy(target, by) {\n    if (target.state.readOnly)\n        return false;\n    let event = \"delete.selection\", { state } = target;\n    let changes = state.changeByRange(range => {\n        let { from, to } = range;\n        if (from == to) {\n            let towards = by(range);\n            if (towards < from) {\n                event = \"delete.backward\";\n                towards = skipAtomic(target, towards, false);\n            }\n            else if (towards > from) {\n                event = \"delete.forward\";\n                towards = skipAtomic(target, towards, true);\n            }\n            from = Math.min(from, towards);\n            to = Math.max(to, towards);\n        }\n        else {\n            from = skipAtomic(target, from, false);\n            to = skipAtomic(target, to, true);\n        }\n        return from == to ? { range } : { changes: { from, to }, range: EditorSelection.cursor(from, from < range.head ? -1 : 1) };\n    });\n    if (changes.changes.empty)\n        return false;\n    target.dispatch(state.update(changes, {\n        scrollIntoView: true,\n        userEvent: event,\n        effects: event == \"delete.selection\" ? EditorView.announce.of(state.phrase(\"Selection deleted\")) : undefined\n    }));\n    return true;\n}\nfunction skipAtomic(target, pos, forward) {\n    if (target instanceof EditorView)\n        for (let ranges of target.state.facet(EditorView.atomicRanges).map(f => f(target)))\n            ranges.between(pos, pos, (from, to) => {\n                if (from < pos && to > pos)\n                    pos = forward ? to : from;\n            });\n    return pos;\n}\nconst deleteByChar = (target, forward, byIndentUnit) => deleteBy(target, range => {\n    let pos = range.from, { state } = target, line = state.doc.lineAt(pos), before, targetPos;\n    if (byIndentUnit && !forward && pos > line.from && pos < line.from + 200 &&\n        !/[^ \\t]/.test(before = line.text.slice(0, pos - line.from))) {\n        if (before[before.length - 1] == \"\\t\")\n            return pos - 1;\n        let col = countColumn(before, state.tabSize), drop = col % getIndentUnit(state) || getIndentUnit(state);\n        for (let i = 0; i < drop && before[before.length - 1 - i] == \" \"; i++)\n            pos--;\n        targetPos = pos;\n    }\n    else {\n        targetPos = findClusterBreak(line.text, pos - line.from, forward, forward) + line.from;\n        if (targetPos == pos && line.number != (forward ? state.doc.lines : 1))\n            targetPos += forward ? 1 : -1;\n        else if (!forward && /[\\ufe00-\\ufe0f]/.test(line.text.slice(targetPos - line.from, pos - line.from)))\n            targetPos = findClusterBreak(line.text, targetPos - line.from, false, false) + line.from;\n    }\n    return targetPos;\n});\n/**\nDelete the selection, or, for cursor selections, the character or\nindentation unit before the cursor.\n*/\nconst deleteCharBackward = view => deleteByChar(view, false, true);\n/**\nDelete the selection or the character before the cursor. Does not\nimplement any extended behavior like deleting whole indentation\nunits in one go.\n*/\nconst deleteCharBackwardStrict = view => deleteByChar(view, false, false);\n/**\nDelete the selection or the character after the cursor.\n*/\nconst deleteCharForward = view => deleteByChar(view, true, false);\nconst deleteByGroup = (target, forward) => deleteBy(target, range => {\n    let pos = range.head, { state } = target, line = state.doc.lineAt(pos);\n    let categorize = state.charCategorizer(pos);\n    for (let cat = null;;) {\n        if (pos == (forward ? line.to : line.from)) {\n            if (pos == range.head && line.number != (forward ? state.doc.lines : 1))\n                pos += forward ? 1 : -1;\n            break;\n        }\n        let next = findClusterBreak(line.text, pos - line.from, forward) + line.from;\n        let nextChar = line.text.slice(Math.min(pos, next) - line.from, Math.max(pos, next) - line.from);\n        let nextCat = categorize(nextChar);\n        if (cat != null && nextCat != cat)\n            break;\n        if (nextChar != \" \" || pos != range.head)\n            cat = nextCat;\n        pos = next;\n    }\n    return pos;\n});\n/**\nDelete the selection or backward until the end of the next\n[group](https://codemirror.net/6/docs/ref/#view.EditorView.moveByGroup), only skipping groups of\nwhitespace when they consist of a single space.\n*/\nconst deleteGroupBackward = target => deleteByGroup(target, false);\n/**\nDelete the selection or forward until the end of the next group.\n*/\nconst deleteGroupForward = target => deleteByGroup(target, true);\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe end of the line. If the cursor is directly at the end of the\nline, delete the line break after it.\n*/\nconst deleteToLineEnd = view => deleteBy(view, range => {\n    let lineEnd = view.lineBlockAt(range.head).to;\n    return range.head < lineEnd ? lineEnd : Math.min(view.state.doc.length, range.head + 1);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe start of the line. If the cursor is directly at the start of the\nline, delete the line break before it.\n*/\nconst deleteToLineStart = view => deleteBy(view, range => {\n    let lineStart = view.lineBlockAt(range.head).from;\n    return range.head > lineStart ? lineStart : Math.max(0, range.head - 1);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe start of the line or the next line wrap before the cursor.\n*/\nconst deleteLineBoundaryBackward = view => deleteBy(view, range => {\n    let lineStart = view.moveToLineBoundary(range, false).head;\n    return range.head > lineStart ? lineStart : Math.max(0, range.head - 1);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe end of the line or the next line wrap after the cursor.\n*/\nconst deleteLineBoundaryForward = view => deleteBy(view, range => {\n    let lineStart = view.moveToLineBoundary(range, true).head;\n    return range.head < lineStart ? lineStart : Math.min(view.state.doc.length, range.head + 1);\n});\n/**\nDelete all whitespace directly before a line end from the\ndocument.\n*/\nconst deleteTrailingWhitespace = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let pos = 0, prev = \"\", iter = state.doc.iter();;) {\n        iter.next();\n        if (iter.lineBreak || iter.done) {\n            let trailing = prev.search(/\\s+$/);\n            if (trailing > -1)\n                changes.push({ from: pos - (prev.length - trailing), to: pos });\n            if (iter.done)\n                break;\n            prev = \"\";\n        }\n        else {\n            prev = iter.value;\n        }\n        pos += iter.value.length;\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({ changes, userEvent: \"delete\" }));\n    return true;\n};\n/**\nReplace each selection range with a line break, leaving the cursor\non the line before the break.\n*/\nconst splitLine = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        return { changes: { from: range.from, to: range.to, insert: Text.of([\"\", \"\"]) },\n            range: EditorSelection.cursor(range.from) };\n    });\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nFlip the characters before and after the cursor(s).\n*/\nconst transposeChars = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        if (!range.empty || range.from == 0 || range.from == state.doc.length)\n            return { range };\n        let pos = range.from, line = state.doc.lineAt(pos);\n        let from = pos == line.from ? pos - 1 : findClusterBreak(line.text, pos - line.from, false) + line.from;\n        let to = pos == line.to ? pos + 1 : findClusterBreak(line.text, pos - line.from, true) + line.from;\n        return { changes: { from, to, insert: state.doc.slice(pos, to).append(state.doc.slice(from, pos)) },\n            range: EditorSelection.cursor(to) };\n    });\n    if (changes.changes.empty)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"move.character\" }));\n    return true;\n};\nfunction selectedLineBlocks(state) {\n    let blocks = [], upto = -1;\n    for (let range of state.selection.ranges) {\n        let startLine = state.doc.lineAt(range.from), endLine = state.doc.lineAt(range.to);\n        if (!range.empty && range.to == endLine.from)\n            endLine = state.doc.lineAt(range.to - 1);\n        if (upto >= startLine.number) {\n            let prev = blocks[blocks.length - 1];\n            prev.to = endLine.to;\n            prev.ranges.push(range);\n        }\n        else {\n            blocks.push({ from: startLine.from, to: endLine.to, ranges: [range] });\n        }\n        upto = endLine.number + 1;\n    }\n    return blocks;\n}\nfunction moveLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [], ranges = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward ? block.to == state.doc.length : block.from == 0)\n            continue;\n        let nextLine = state.doc.lineAt(forward ? block.to + 1 : block.from - 1);\n        let size = nextLine.length + 1;\n        if (forward) {\n            changes.push({ from: block.to, to: nextLine.to }, { from: block.from, insert: nextLine.text + state.lineBreak });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(Math.min(state.doc.length, r.anchor + size), Math.min(state.doc.length, r.head + size)));\n        }\n        else {\n            changes.push({ from: nextLine.from, to: block.from }, { from: block.to, insert: state.lineBreak + nextLine.text });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(r.anchor - size, r.head - size));\n        }\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({\n        changes,\n        scrollIntoView: true,\n        selection: EditorSelection.create(ranges, state.selection.mainIndex),\n        userEvent: \"move.line\"\n    }));\n    return true;\n}\n/**\nMove the selected lines up one line.\n*/\nconst moveLineUp = ({ state, dispatch }) => moveLine(state, dispatch, false);\n/**\nMove the selected lines down one line.\n*/\nconst moveLineDown = ({ state, dispatch }) => moveLine(state, dispatch, true);\nfunction copyLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward)\n            changes.push({ from: block.from, insert: state.doc.slice(block.from, block.to) + state.lineBreak });\n        else\n            changes.push({ from: block.to, insert: state.lineBreak + state.doc.slice(block.from, block.to) });\n    }\n    dispatch(state.update({ changes, scrollIntoView: true, userEvent: \"input.copyline\" }));\n    return true;\n}\n/**\nCreate a copy of the selected lines. Keep the selection in the top copy.\n*/\nconst copyLineUp = ({ state, dispatch }) => copyLine(state, dispatch, false);\n/**\nCreate a copy of the selected lines. Keep the selection in the bottom copy.\n*/\nconst copyLineDown = ({ state, dispatch }) => copyLine(state, dispatch, true);\n/**\nDelete selected lines.\n*/\nconst deleteLine = view => {\n    if (view.state.readOnly)\n        return false;\n    let { state } = view, changes = state.changes(selectedLineBlocks(state).map(({ from, to }) => {\n        if (from > 0)\n            from--;\n        else if (to < state.doc.length)\n            to++;\n        return { from, to };\n    }));\n    let selection = updateSel(state.selection, range => {\n        let dist = undefined;\n        if (view.lineWrapping) {\n            let block = view.lineBlockAt(range.head), pos = view.coordsAtPos(range.head, range.assoc || 1);\n            if (pos)\n                dist = (block.bottom + view.documentTop) - pos.bottom + view.defaultLineHeight / 2;\n        }\n        return view.moveVertically(range, true, dist);\n    }).map(changes);\n    view.dispatch({ changes, selection, scrollIntoView: true, userEvent: \"delete.line\" });\n    return true;\n};\n/**\nReplace the selection with a newline.\n*/\nconst insertNewline = ({ state, dispatch }) => {\n    dispatch(state.update(state.replaceSelection(state.lineBreak), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nReplace the selection with a newline and the same amount of\nindentation as the line above.\n*/\nconst insertNewlineKeepIndent = ({ state, dispatch }) => {\n    dispatch(state.update(state.changeByRange(range => {\n        let indent = /^\\s*/.exec(state.doc.lineAt(range.from).text)[0];\n        return {\n            changes: { from: range.from, to: range.to, insert: state.lineBreak + indent },\n            range: EditorSelection.cursor(range.from + indent.length + 1)\n        };\n    }), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\nfunction isBetweenBrackets(state, pos) {\n    if (/\\(\\)|\\[\\]|\\{\\}/.test(state.sliceDoc(pos - 1, pos + 1)))\n        return { from: pos, to: pos };\n    let context = syntaxTree(state).resolveInner(pos);\n    let before = context.childBefore(pos), after = context.childAfter(pos), closedBy;\n    if (before && after && before.to <= pos && after.from >= pos &&\n        (closedBy = before.type.prop(NodeProp.closedBy)) && closedBy.indexOf(after.name) > -1 &&\n        state.doc.lineAt(before.to).from == state.doc.lineAt(after.from).from &&\n        !/\\S/.test(state.sliceDoc(before.to, after.from)))\n        return { from: before.to, to: after.from };\n    return null;\n}\n/**\nReplace the selection with a newline and indent the newly created\nline(s). If the current line consists only of whitespace, this\nwill also delete that whitespace. When the cursor is between\nmatching brackets, an additional newline will be inserted after\nthe cursor.\n*/\nconst insertNewlineAndIndent = /*@__PURE__*/newlineAndIndent(false);\n/**\nCreate a blank, indented line below the current line.\n*/\nconst insertBlankLine = /*@__PURE__*/newlineAndIndent(true);\nfunction newlineAndIndent(atEof) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let changes = state.changeByRange(range => {\n            let { from, to } = range, line = state.doc.lineAt(from);\n            let explode = !atEof && from == to && isBetweenBrackets(state, from);\n            if (atEof)\n                from = to = (to <= line.to ? line : state.doc.lineAt(to)).to;\n            let cx = new IndentContext(state, { simulateBreak: from, simulateDoubleBreak: !!explode });\n            let indent = getIndentation(cx, from);\n            if (indent == null)\n                indent = countColumn(/^\\s*/.exec(state.doc.lineAt(from).text)[0], state.tabSize);\n            while (to < line.to && /\\s/.test(line.text[to - line.from]))\n                to++;\n            if (explode)\n                ({ from, to } = explode);\n            else if (from > line.from && from < line.from + 100 && !/\\S/.test(line.text.slice(0, from)))\n                from = line.from;\n            let insert = [\"\", indentString(state, indent)];\n            if (explode)\n                insert.push(indentString(state, cx.lineIndent(line.from, -1)));\n            return { changes: { from, to, insert: Text.of(insert) },\n                range: EditorSelection.cursor(from + 1 + insert[1].length) };\n        });\n        dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n        return true;\n    };\n}\nfunction changeBySelectedLine(state, f) {\n    let atLine = -1;\n    return state.changeByRange(range => {\n        let changes = [];\n        for (let pos = range.from; pos <= range.to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.number > atLine && (range.empty || range.to > line.from)) {\n                f(line, changes, range);\n                atLine = line.number;\n            }\n            pos = line.to + 1;\n        }\n        let changeSet = state.changes(changes);\n        return { changes,\n            range: EditorSelection.range(changeSet.mapPos(range.anchor, 1), changeSet.mapPos(range.head, 1)) };\n    });\n}\n/**\nAuto-indent the selected lines. This uses the [indentation service\nfacet](https://codemirror.net/6/docs/ref/#language.indentService) as source for auto-indent\ninformation.\n*/\nconst indentSelection = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => {\n            let found = updated[start];\n            return found == null ? -1 : found;\n        } });\n    let changes = changeBySelectedLine(state, (line, changes, range) => {\n        let indent = getIndentation(context, line.from);\n        if (indent == null)\n            return;\n        if (!/\\S/.test(line.text))\n            indent = 0;\n        let cur = /^\\s*/.exec(line.text)[0];\n        let norm = indentString(state, indent);\n        if (cur != norm || range.from < line.from + cur.length) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    });\n    if (!changes.changes.empty)\n        dispatch(state.update(changes, { userEvent: \"indent\" }));\n    return true;\n};\n/**\nAdd a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation to all selected\nlines.\n*/\nconst indentMore = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        changes.push({ from: line.from, insert: state.facet(indentUnit) });\n    }), { userEvent: \"input.indent\" }));\n    return true;\n};\n/**\nRemove a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation from all\nselected lines.\n*/\nconst indentLess = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        let space = /^\\s*/.exec(line.text)[0];\n        if (!space)\n            return;\n        let col = countColumn(space, state.tabSize), keep = 0;\n        let insert = indentString(state, Math.max(0, col - getIndentUnit(state)));\n        while (keep < space.length && keep < insert.length && space.charCodeAt(keep) == insert.charCodeAt(keep))\n            keep++;\n        changes.push({ from: line.from + keep, to: line.from + space.length, insert: insert.slice(keep) });\n    }), { userEvent: \"delete.dedent\" }));\n    return true;\n};\n/**\nEnables or disables\n[tab-focus mode](https://codemirror.net/6/docs/ref/#view.EditorView.setTabFocusMode). While on, this\nprevents the editor's key bindings from capturing Tab or\nShift-Tab, making it possible for the user to move focus out of\nthe editor with the keyboard.\n*/\nconst toggleTabFocusMode = view => {\n    view.setTabFocusMode();\n    return true;\n};\n/**\nTemporarily enables [tab-focus\nmode](https://codemirror.net/6/docs/ref/#view.EditorView.setTabFocusMode) for two seconds or until\nanother key is pressed.\n*/\nconst temporarilySetTabFocusMode = view => {\n    view.setTabFocusMode(2000);\n    return true;\n};\n/**\nInsert a tab character at the cursor or, if something is selected,\nuse [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) to indent the entire\nselection.\n*/\nconst insertTab = ({ state, dispatch }) => {\n    if (state.selection.ranges.some(r => !r.empty))\n        return indentMore({ state, dispatch });\n    dispatch(state.update(state.replaceSelection(\"\\t\"), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nArray of key bindings containing the Emacs-style bindings that are\navailable on macOS by default.\n\n - Ctrl-b: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - Ctrl-f: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-p: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - Ctrl-n: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Ctrl-a: [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Ctrl-e: [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - Ctrl-d: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-h: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Ctrl-k: [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd)\n - Ctrl-Alt-h: [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-o: [`splitLine`](https://codemirror.net/6/docs/ref/#commands.splitLine)\n - Ctrl-t: [`transposeChars`](https://codemirror.net/6/docs/ref/#commands.transposeChars)\n - Ctrl-v: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown)\n - Alt-v: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp)\n*/\nconst emacsStyleKeymap = [\n    { key: \"Ctrl-b\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Ctrl-f\", run: cursorCharRight, shift: selectCharRight },\n    { key: \"Ctrl-p\", run: cursorLineUp, shift: selectLineUp },\n    { key: \"Ctrl-n\", run: cursorLineDown, shift: selectLineDown },\n    { key: \"Ctrl-a\", run: cursorLineStart, shift: selectLineStart },\n    { key: \"Ctrl-e\", run: cursorLineEnd, shift: selectLineEnd },\n    { key: \"Ctrl-d\", run: deleteCharForward },\n    { key: \"Ctrl-h\", run: deleteCharBackward },\n    { key: \"Ctrl-k\", run: deleteToLineEnd },\n    { key: \"Ctrl-Alt-h\", run: deleteGroupBackward },\n    { key: \"Ctrl-o\", run: splitLine },\n    { key: \"Ctrl-t\", run: transposeChars },\n    { key: \"Ctrl-v\", run: cursorPageDown },\n];\n/**\nAn array of key bindings closely sticking to platform-standard or\nwidely used bindings. (This includes the bindings from\n[`emacsStyleKeymap`](https://codemirror.net/6/docs/ref/#commands.emacsStyleKeymap), with their `key`\nproperty changed to `mac`.)\n\n - ArrowLeft: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - ArrowRight: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-ArrowLeft (Alt-ArrowLeft on macOS): [`cursorGroupLeft`](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) ([`selectGroupLeft`](https://codemirror.net/6/docs/ref/#commands.selectGroupLeft) with Shift)\n - Ctrl-ArrowRight (Alt-ArrowRight on macOS): [`cursorGroupRight`](https://codemirror.net/6/docs/ref/#commands.cursorGroupRight) ([`selectGroupRight`](https://codemirror.net/6/docs/ref/#commands.selectGroupRight) with Shift)\n - Cmd-ArrowLeft (on macOS): [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Cmd-ArrowRight (on macOS): [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - ArrowUp: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - ArrowDown: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Cmd-ArrowUp (on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Cmd-ArrowDown (on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Ctrl-ArrowUp (on macOS): [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - Ctrl-ArrowDown (on macOS): [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - PageUp: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - PageDown: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - Home: [`cursorLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryBackward) ([`selectLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryBackward) with Shift)\n - End: [`cursorLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryForward) ([`selectLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryForward) with Shift)\n - Ctrl-Home (Cmd-Home on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Ctrl-End (Cmd-Home on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Enter and Shift-Enter: [`insertNewlineAndIndent`](https://codemirror.net/6/docs/ref/#commands.insertNewlineAndIndent)\n - Ctrl-a (Cmd-a on macOS): [`selectAll`](https://codemirror.net/6/docs/ref/#commands.selectAll)\n - Backspace: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Delete: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-Backspace (Alt-Backspace on macOS): [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-Delete (Alt-Delete on macOS): [`deleteGroupForward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupForward)\n - Cmd-Backspace (macOS): [`deleteLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.deleteLineBoundaryBackward).\n - Cmd-Delete (macOS): [`deleteLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.deleteLineBoundaryForward).\n*/\nconst standardKeymap = /*@__PURE__*/[\n    { key: \"ArrowLeft\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Mod-ArrowLeft\", mac: \"Alt-ArrowLeft\", run: cursorGroupLeft, shift: selectGroupLeft, preventDefault: true },\n    { mac: \"Cmd-ArrowLeft\", run: cursorLineBoundaryLeft, shift: selectLineBoundaryLeft, preventDefault: true },\n    { key: \"ArrowRight\", run: cursorCharRight, shift: selectCharRight, preventDefault: true },\n    { key: \"Mod-ArrowRight\", mac: \"Alt-ArrowRight\", run: cursorGroupRight, shift: selectGroupRight, preventDefault: true },\n    { mac: \"Cmd-ArrowRight\", run: cursorLineBoundaryRight, shift: selectLineBoundaryRight, preventDefault: true },\n    { key: \"ArrowUp\", run: cursorLineUp, shift: selectLineUp, preventDefault: true },\n    { mac: \"Cmd-ArrowUp\", run: cursorDocStart, shift: selectDocStart },\n    { mac: \"Ctrl-ArrowUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"ArrowDown\", run: cursorLineDown, shift: selectLineDown, preventDefault: true },\n    { mac: \"Cmd-ArrowDown\", run: cursorDocEnd, shift: selectDocEnd },\n    { mac: \"Ctrl-ArrowDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"PageUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"PageDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"Home\", run: cursorLineBoundaryBackward, shift: selectLineBoundaryBackward, preventDefault: true },\n    { key: \"Mod-Home\", run: cursorDocStart, shift: selectDocStart },\n    { key: \"End\", run: cursorLineBoundaryForward, shift: selectLineBoundaryForward, preventDefault: true },\n    { key: \"Mod-End\", run: cursorDocEnd, shift: selectDocEnd },\n    { key: \"Enter\", run: insertNewlineAndIndent, shift: insertNewlineAndIndent },\n    { key: \"Mod-a\", run: selectAll },\n    { key: \"Backspace\", run: deleteCharBackward, shift: deleteCharBackward },\n    { key: \"Delete\", run: deleteCharForward },\n    { key: \"Mod-Backspace\", mac: \"Alt-Backspace\", run: deleteGroupBackward },\n    { key: \"Mod-Delete\", mac: \"Alt-Delete\", run: deleteGroupForward },\n    { mac: \"Mod-Backspace\", run: deleteLineBoundaryBackward },\n    { mac: \"Mod-Delete\", run: deleteLineBoundaryForward }\n].concat(/*@__PURE__*/emacsStyleKeymap.map(b => ({ mac: b.key, run: b.run, shift: b.shift })));\n/**\nThe default keymap. Includes all bindings from\n[`standardKeymap`](https://codemirror.net/6/docs/ref/#commands.standardKeymap) plus the following:\n\n- Alt-ArrowLeft (Ctrl-ArrowLeft on macOS): [`cursorSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxLeft) ([`selectSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxLeft) with Shift)\n- Alt-ArrowRight (Ctrl-ArrowRight on macOS): [`cursorSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxRight) ([`selectSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxRight) with Shift)\n- Alt-ArrowUp: [`moveLineUp`](https://codemirror.net/6/docs/ref/#commands.moveLineUp)\n- Alt-ArrowDown: [`moveLineDown`](https://codemirror.net/6/docs/ref/#commands.moveLineDown)\n- Shift-Alt-ArrowUp: [`copyLineUp`](https://codemirror.net/6/docs/ref/#commands.copyLineUp)\n- Shift-Alt-ArrowDown: [`copyLineDown`](https://codemirror.net/6/docs/ref/#commands.copyLineDown)\n- Escape: [`simplifySelection`](https://codemirror.net/6/docs/ref/#commands.simplifySelection)\n- Ctrl-Enter (Cmd-Enter on macOS): [`insertBlankLine`](https://codemirror.net/6/docs/ref/#commands.insertBlankLine)\n- Alt-l (Ctrl-l on macOS): [`selectLine`](https://codemirror.net/6/docs/ref/#commands.selectLine)\n- Ctrl-i (Cmd-i on macOS): [`selectParentSyntax`](https://codemirror.net/6/docs/ref/#commands.selectParentSyntax)\n- Ctrl-[ (Cmd-[ on macOS): [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess)\n- Ctrl-] (Cmd-] on macOS): [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore)\n- Ctrl-Alt-\\\\ (Cmd-Alt-\\\\ on macOS): [`indentSelection`](https://codemirror.net/6/docs/ref/#commands.indentSelection)\n- Shift-Ctrl-k (Shift-Cmd-k on macOS): [`deleteLine`](https://codemirror.net/6/docs/ref/#commands.deleteLine)\n- Shift-Ctrl-\\\\ (Shift-Cmd-\\\\ on macOS): [`cursorMatchingBracket`](https://codemirror.net/6/docs/ref/#commands.cursorMatchingBracket)\n- Ctrl-/ (Cmd-/ on macOS): [`toggleComment`](https://codemirror.net/6/docs/ref/#commands.toggleComment).\n- Shift-Alt-a: [`toggleBlockComment`](https://codemirror.net/6/docs/ref/#commands.toggleBlockComment).\n- Ctrl-m (Alt-Shift-m on macOS): [`toggleTabFocusMode`](https://codemirror.net/6/docs/ref/#commands.toggleTabFocusMode).\n*/\nconst defaultKeymap = /*@__PURE__*/[\n    { key: \"Alt-ArrowLeft\", mac: \"Ctrl-ArrowLeft\", run: cursorSyntaxLeft, shift: selectSyntaxLeft },\n    { key: \"Alt-ArrowRight\", mac: \"Ctrl-ArrowRight\", run: cursorSyntaxRight, shift: selectSyntaxRight },\n    { key: \"Alt-ArrowUp\", run: moveLineUp },\n    { key: \"Shift-Alt-ArrowUp\", run: copyLineUp },\n    { key: \"Alt-ArrowDown\", run: moveLineDown },\n    { key: \"Shift-Alt-ArrowDown\", run: copyLineDown },\n    { key: \"Escape\", run: simplifySelection },\n    { key: \"Mod-Enter\", run: insertBlankLine },\n    { key: \"Alt-l\", mac: \"Ctrl-l\", run: selectLine },\n    { key: \"Mod-i\", run: selectParentSyntax, preventDefault: true },\n    { key: \"Mod-[\", run: indentLess },\n    { key: \"Mod-]\", run: indentMore },\n    { key: \"Mod-Alt-\\\\\", run: indentSelection },\n    { key: \"Shift-Mod-k\", run: deleteLine },\n    { key: \"Shift-Mod-\\\\\", run: cursorMatchingBracket },\n    { key: \"Mod-/\", run: toggleComment },\n    { key: \"Alt-A\", run: toggleBlockComment },\n    { key: \"Ctrl-m\", mac: \"Shift-Alt-m\", run: toggleTabFocusMode },\n].concat(standardKeymap);\n/**\nA binding that binds Tab to [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) and\nShift-Tab to [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess).\nPlease see the [Tab example](../../examples/tab/) before using\nthis.\n*/\nconst indentWithTab = { key: \"Tab\", run: indentMore, shift: indentLess };\n\nexport { blockComment, blockUncomment, copyLineDown, copyLineUp, cursorCharBackward, cursorCharBackwardLogical, cursorCharForward, cursorCharForwardLogical, cursorCharLeft, cursorCharRight, cursorDocEnd, cursorDocStart, cursorGroupBackward, cursorGroupForward, cursorGroupForwardWin, cursorGroupLeft, cursorGroupRight, cursorLineBoundaryBackward, cursorLineBoundaryForward, cursorLineBoundaryLeft, cursorLineBoundaryRight, cursorLineDown, cursorLineEnd, cursorLineStart, cursorLineUp, cursorMatchingBracket, cursorPageDown, cursorPageUp, cursorSubwordBackward, cursorSubwordForward, cursorSyntaxLeft, cursorSyntaxRight, defaultKeymap, deleteCharBackward, deleteCharBackwardStrict, deleteCharForward, deleteGroupBackward, deleteGroupForward, deleteLine, deleteLineBoundaryBackward, deleteLineBoundaryForward, deleteToLineEnd, deleteToLineStart, deleteTrailingWhitespace, emacsStyleKeymap, history, historyField, historyKeymap, indentLess, indentMore, indentSelection, indentWithTab, insertBlankLine, insertNewline, insertNewlineAndIndent, insertNewlineKeepIndent, insertTab, invertedEffects, isolateHistory, lineComment, lineUncomment, moveLineDown, moveLineUp, redo, redoDepth, redoSelection, selectAll, selectCharBackward, selectCharBackwardLogical, selectCharForward, selectCharForwardLogical, selectCharLeft, selectCharRight, selectDocEnd, selectDocStart, selectGroupBackward, selectGroupForward, selectGroupForwardWin, selectGroupLeft, selectGroupRight, selectLine, selectLineBoundaryBackward, selectLineBoundaryForward, selectLineBoundaryLeft, selectLineBoundaryRight, selectLineDown, selectLineEnd, selectLineStart, selectLineUp, selectMatchingBracket, selectPageDown, selectPageUp, selectParentSyntax, selectSubwordBackward, selectSubwordForward, selectSyntaxLeft, selectSyntaxRight, simplifySelection, splitLine, standardKeymap, temporarilySetTabFocusMode, toggleBlockComment, toggleBlockCommentByLine, toggleComment, toggleLineComment, toggleTabFocusMode, transposeChars, undo, undoDepth, undoSelection };\n", "export default function crelt() {\n  var elt = arguments[0]\n  if (typeof elt == \"string\") elt = document.createElement(elt)\n  var i = 1, next = arguments[1]\n  if (next && typeof next == \"object\" && next.nodeType == null && !Array.isArray(next)) {\n    for (var name in next) if (Object.prototype.hasOwnProperty.call(next, name)) {\n      var value = next[name]\n      if (typeof value == \"string\") elt.setAttribute(name, value)\n      else if (value != null) elt[name] = value\n    }\n    i++\n  }\n  for (; i < arguments.length; i++) add(elt, arguments[i])\n  return elt\n}\n\nfunction add(elt, child) {\n  if (typeof child == \"string\") {\n    elt.appendChild(document.createTextNode(child))\n  } else if (child == null) {\n  } else if (child.nodeType != null) {\n    elt.appendChild(child)\n  } else if (Array.isArray(child)) {\n    for (var i = 0; i < child.length; i++) add(elt, child[i])\n  } else {\n    throw new RangeError(\"Unsupported child node: \" + child)\n  }\n}\n", "import { Decoration, showPanel, EditorView, ViewPlugin, gutter, showTooltip, hoverTooltip, getPanel, logException, WidgetType, GutterMarker } from '@codemirror/view';\nimport { StateEffect, StateField, Facet, combineConfig, RangeSet, RangeSetBuilder } from '@codemirror/state';\nimport elt from 'crelt';\n\nclass SelectedDiagnostic {\n    constructor(from, to, diagnostic) {\n        this.from = from;\n        this.to = to;\n        this.diagnostic = diagnostic;\n    }\n}\nclass LintState {\n    constructor(diagnostics, panel, selected) {\n        this.diagnostics = diagnostics;\n        this.panel = panel;\n        this.selected = selected;\n    }\n    static init(diagnostics, panel, state) {\n        // Filter the list of diagnostics for which to create markers\n        let markedDiagnostics = diagnostics;\n        let diagnosticFilter = state.facet(lintConfig).markerFilter;\n        if (diagnosticFilter)\n            markedDiagnostics = diagnosticFilter(markedDiagnostics, state);\n        let sorted = diagnostics.slice().sort((a, b) => a.from - b.from || a.to - b.to);\n        let deco = new RangeSetBuilder(), active = [], pos = 0;\n        for (let i = 0;;) {\n            let next = i == sorted.length ? null : sorted[i];\n            if (!next && !active.length)\n                break;\n            let from, to;\n            if (active.length) {\n                from = pos;\n                to = active.reduce((p, d) => Math.min(p, d.to), next && next.from > from ? next.from : 1e8);\n            }\n            else {\n                from = next.from;\n                to = next.to;\n                active.push(next);\n                i++;\n            }\n            while (i < sorted.length) {\n                let next = sorted[i];\n                if (next.from == from && (next.to > next.from || next.to == from)) {\n                    active.push(next);\n                    i++;\n                    to = Math.min(next.to, to);\n                }\n                else {\n                    to = Math.min(next.from, to);\n                    break;\n                }\n            }\n            let sev = maxSeverity(active);\n            if (active.some(d => d.from == d.to || (d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from))) {\n                deco.add(from, from, Decoration.widget({\n                    widget: new DiagnosticWidget(sev),\n                    diagnostics: active.slice()\n                }));\n            }\n            else {\n                let markClass = active.reduce((c, d) => d.markClass ? c + \" \" + d.markClass : c, \"\");\n                deco.add(from, to, Decoration.mark({\n                    class: \"cm-lintRange cm-lintRange-\" + sev + markClass,\n                    diagnostics: active.slice(),\n                    inclusiveEnd: active.some(a => a.to > to)\n                }));\n            }\n            pos = to;\n            for (let i = 0; i < active.length; i++)\n                if (active[i].to <= pos)\n                    active.splice(i--, 1);\n        }\n        let set = deco.finish();\n        return new LintState(set, panel, findDiagnostic(set));\n    }\n}\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n    let found = null;\n    diagnostics.between(after, 1e9, (from, to, { spec }) => {\n        if (diagnostic && spec.diagnostics.indexOf(diagnostic) < 0)\n            return;\n        if (!found)\n            found = new SelectedDiagnostic(from, to, diagnostic || spec.diagnostics[0]);\n        else if (spec.diagnostics.indexOf(found.diagnostic) < 0)\n            return false;\n        else\n            found = new SelectedDiagnostic(found.from, to, found.diagnostic);\n    });\n    return found;\n}\nfunction hideTooltip(tr, tooltip) {\n    let from = tooltip.pos, to = tooltip.end || from;\n    let result = tr.state.facet(lintConfig).hideOn(tr, from, to);\n    if (result != null)\n        return result;\n    let line = tr.startState.doc.lineAt(tooltip.pos);\n    return !!(tr.effects.some(e => e.is(setDiagnosticsEffect)) || tr.changes.touchesRange(line.from, Math.max(line.to, to)));\n}\nfunction maybeEnableLint(state, effects) {\n    return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of(lintExtensions));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/\nfunction setDiagnostics(state, diagnostics) {\n    return {\n        effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])\n    };\n}\n/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n    create() {\n        return new LintState(Decoration.none, null, null);\n    },\n    update(value, tr) {\n        if (tr.docChanged && value.diagnostics.size) {\n            let mapped = value.diagnostics.map(tr.changes), selected = null, panel = value.panel;\n            if (value.selected) {\n                let selPos = tr.changes.mapPos(value.selected.from, 1);\n                selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n            }\n            if (!mapped.size && panel && tr.state.facet(lintConfig).autoPanel)\n                panel = null;\n            value = new LintState(mapped, panel, selected);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let panel = !tr.state.facet(lintConfig).autoPanel ? value.panel : effect.value.length ? LintPanel.open : null;\n                value = LintState.init(effect.value, panel, tr.state);\n            }\n            else if (effect.is(togglePanel)) {\n                value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n            }\n            else if (effect.is(movePanelSelection)) {\n                value = new LintState(value.diagnostics, value.panel, effect.value);\n            }\n        }\n        return value;\n    },\n    provide: f => [showPanel.from(f, val => val.panel),\n        EditorView.decorations.from(f, s => s.diagnostics)]\n});\n/**\nReturns the number of active lint diagnostics in the given state.\n*/\nfunction diagnosticCount(state) {\n    let lint = state.field(lintState, false);\n    return lint ? lint.diagnostics.size : 0;\n}\nconst activeMark = /*@__PURE__*/Decoration.mark({ class: \"cm-lintRange cm-lintRange-active\" });\nfunction lintTooltip(view, pos, side) {\n    let { diagnostics } = view.state.field(lintState);\n    let found, start = -1, end = -1;\n    diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, { spec }) => {\n        if (pos >= from && pos <= to &&\n            (from == to || ((pos > from || side > 0) && (pos < to || side < 0)))) {\n            found = spec.diagnostics;\n            start = from;\n            end = to;\n            return false;\n        }\n    });\n    let diagnosticFilter = view.state.facet(lintConfig).tooltipFilter;\n    if (found && diagnosticFilter)\n        found = diagnosticFilter(found, view.state);\n    if (!found)\n        return null;\n    return {\n        pos: start,\n        end: end,\n        above: view.state.doc.lineAt(start).to < end,\n        create() {\n            return { dom: diagnosticsTooltip(view, found) };\n        }\n    };\n}\nfunction diagnosticsTooltip(view, diagnostics) {\n    return elt(\"ul\", { class: \"cm-tooltip-lint\" }, diagnostics.map(d => renderDiagnostic(view, d, false)));\n}\n/**\nCommand to open and focus the lint panel.\n*/\nconst openLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        view.dispatch({ effects: maybeEnableLint(view.state, [togglePanel.of(true)]) });\n    let panel = getPanel(view, LintPanel.open);\n    if (panel)\n        panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n    return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\nconst closeLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        return false;\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\nconst nextDiagnostic = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = view.state.selection.main, next = field.diagnostics.iter(sel.to + 1);\n    if (!next.value) {\n        next = field.diagnostics.iter(0);\n        if (!next.value || next.from == sel.from && next.to == sel.to)\n            return false;\n    }\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    return true;\n};\n/**\nMove the selection to the previous diagnostic.\n*/\nconst previousDiagnostic = (view) => {\n    let { state } = view, field = state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = state.selection.main;\n    let prevFrom, prevTo, lastFrom, lastTo;\n    field.diagnostics.between(0, state.doc.length, (from, to) => {\n        if (to < sel.to && (prevFrom == null || prevFrom < from)) {\n            prevFrom = from;\n            prevTo = to;\n        }\n        if (lastFrom == null || from > lastFrom) {\n            lastFrom = from;\n            lastTo = to;\n        }\n    });\n    if (lastFrom == null || prevFrom == null && lastFrom == sel.from)\n        return false;\n    view.dispatch({ selection: { anchor: prevFrom !== null && prevFrom !== void 0 ? prevFrom : lastFrom, head: prevTo !== null && prevTo !== void 0 ? prevTo : lastTo }, scrollIntoView: true });\n    return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\nconst lintKeymap = [\n    { key: \"Mod-Shift-m\", run: openLintPanel, preventDefault: true },\n    { key: \"F8\", run: nextDiagnostic }\n];\nconst lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.timeout = -1;\n        this.set = true;\n        let { delay } = view.state.facet(lintConfig);\n        this.lintTime = Date.now() + delay;\n        this.run = this.run.bind(this);\n        this.timeout = setTimeout(this.run, delay);\n    }\n    run() {\n        clearTimeout(this.timeout);\n        let now = Date.now();\n        if (now < this.lintTime - 10) {\n            this.timeout = setTimeout(this.run, this.lintTime - now);\n        }\n        else {\n            this.set = false;\n            let { state } = this.view, { sources } = state.facet(lintConfig);\n            if (sources.length)\n                batchResults(sources.map(s => Promise.resolve(s(this.view))), annotations => {\n                    if (this.view.state.doc == state.doc)\n                        this.view.dispatch(setDiagnostics(this.view.state, annotations.reduce((a, b) => a.concat(b))));\n                }, error => { logException(this.view.state, error); });\n        }\n    }\n    update(update) {\n        let config = update.state.facet(lintConfig);\n        if (update.docChanged || config != update.startState.facet(lintConfig) ||\n            config.needsRefresh && config.needsRefresh(update)) {\n            this.lintTime = Date.now() + config.delay;\n            if (!this.set) {\n                this.set = true;\n                this.timeout = setTimeout(this.run, config.delay);\n            }\n        }\n    }\n    force() {\n        if (this.set) {\n            this.lintTime = Date.now();\n            this.run();\n        }\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n});\nfunction batchResults(promises, sink, error) {\n    let collected = [], timeout = -1;\n    for (let p of promises)\n        p.then(value => {\n            collected.push(value);\n            clearTimeout(timeout);\n            if (collected.length == promises.length)\n                sink(collected);\n            else\n                timeout = setTimeout(() => sink(collected), 200);\n        }, error);\n}\nconst lintConfig = /*@__PURE__*/Facet.define({\n    combine(input) {\n        return Object.assign({ sources: input.map(i => i.source).filter(x => x != null) }, combineConfig(input.map(i => i.config), {\n            delay: 750,\n            markerFilter: null,\n            tooltipFilter: null,\n            needsRefresh: null,\n            hideOn: () => null,\n        }, {\n            needsRefresh: (a, b) => !a ? b : !b ? a : u => a(u) || b(u)\n        }));\n    }\n});\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed). If `null` is given as\nsource, this only configures the lint extension.\n*/\nfunction linter(source, config = {}) {\n    return [\n        lintConfig.of({ source, config }),\n        lintPlugin,\n        lintExtensions\n    ];\n}\n/**\nForces any linters [configured](https://codemirror.net/6/docs/ref/#lint.linter) to run when the\neditor is idle to run right away.\n*/\nfunction forceLinting(view) {\n    let plugin = view.plugin(lintPlugin);\n    if (plugin)\n        plugin.force();\n}\nfunction assignKeys(actions) {\n    let assigned = [];\n    if (actions)\n        actions: for (let { name } of actions) {\n            for (let i = 0; i < name.length; i++) {\n                let ch = name[i];\n                if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n                    assigned.push(ch);\n                    continue actions;\n                }\n            }\n            assigned.push(\"\");\n        }\n    return assigned;\n}\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n    var _a;\n    let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n    return elt(\"li\", { class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity }, elt(\"span\", { class: \"cm-diagnosticText\" }, diagnostic.renderMessage ? diagnostic.renderMessage(view) : diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n        let fired = false, click = (e) => {\n            e.preventDefault();\n            if (fired)\n                return;\n            fired = true;\n            let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n            if (found)\n                action.apply(view, found.from, found.to);\n        };\n        let { name } = action, keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n        let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex),\n            elt(\"u\", name.slice(keyIndex, keyIndex + 1)),\n            name.slice(keyIndex + 1)];\n        return elt(\"button\", {\n            type: \"button\",\n            class: \"cm-diagnosticAction\",\n            onclick: click,\n            onmousedown: click,\n            \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n        }, nameElt);\n    }), diagnostic.source && elt(\"div\", { class: \"cm-diagnosticSource\" }, diagnostic.source));\n}\nclass DiagnosticWidget extends WidgetType {\n    constructor(sev) {\n        super();\n        this.sev = sev;\n    }\n    eq(other) { return other.sev == this.sev; }\n    toDOM() {\n        return elt(\"span\", { class: \"cm-lintPoint cm-lintPoint-\" + this.sev });\n    }\n}\nclass PanelItem {\n    constructor(view, diagnostic) {\n        this.diagnostic = diagnostic;\n        this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n        this.dom = renderDiagnostic(view, diagnostic, true);\n        this.dom.id = this.id;\n        this.dom.setAttribute(\"role\", \"option\");\n    }\n}\nclass LintPanel {\n    constructor(view) {\n        this.view = view;\n        this.items = [];\n        let onkeydown = (event) => {\n            if (event.keyCode == 27) { // Escape\n                closeLintPanel(this.view);\n                this.view.focus();\n            }\n            else if (event.keyCode == 38 || event.keyCode == 33) { // ArrowUp, PageUp\n                this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n            }\n            else if (event.keyCode == 40 || event.keyCode == 34) { // ArrowDown, PageDown\n                this.moveSelection((this.selectedIndex + 1) % this.items.length);\n            }\n            else if (event.keyCode == 36) { // Home\n                this.moveSelection(0);\n            }\n            else if (event.keyCode == 35) { // End\n                this.moveSelection(this.items.length - 1);\n            }\n            else if (event.keyCode == 13) { // Enter\n                this.view.focus();\n            }\n            else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) { // A-Z\n                let { diagnostic } = this.items[this.selectedIndex], keys = assignKeys(diagnostic.actions);\n                for (let i = 0; i < keys.length; i++)\n                    if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n                        let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n                        if (found)\n                            diagnostic.actions[i].apply(view, found.from, found.to);\n                    }\n            }\n            else {\n                return;\n            }\n            event.preventDefault();\n        };\n        let onclick = (event) => {\n            for (let i = 0; i < this.items.length; i++) {\n                if (this.items[i].dom.contains(event.target))\n                    this.moveSelection(i);\n            }\n        };\n        this.list = elt(\"ul\", {\n            tabIndex: 0,\n            role: \"listbox\",\n            \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n            onkeydown,\n            onclick\n        });\n        this.dom = elt(\"div\", { class: \"cm-panel-lint\" }, this.list, elt(\"button\", {\n            type: \"button\",\n            name: \"close\",\n            \"aria-label\": this.view.state.phrase(\"close\"),\n            onclick: () => closeLintPanel(this.view)\n        }, \"\u00D7\"));\n        this.update();\n    }\n    get selectedIndex() {\n        let selected = this.view.state.field(lintState).selected;\n        if (!selected)\n            return -1;\n        for (let i = 0; i < this.items.length; i++)\n            if (this.items[i].diagnostic == selected.diagnostic)\n                return i;\n        return -1;\n    }\n    update() {\n        let { diagnostics, selected } = this.view.state.field(lintState);\n        let i = 0, needsSync = false, newSelectedItem = null;\n        let seen = new Set();\n        diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {\n            for (let diagnostic of spec.diagnostics) {\n                if (seen.has(diagnostic))\n                    continue;\n                seen.add(diagnostic);\n                let found = -1, item;\n                for (let j = i; j < this.items.length; j++)\n                    if (this.items[j].diagnostic == diagnostic) {\n                        found = j;\n                        break;\n                    }\n                if (found < 0) {\n                    item = new PanelItem(this.view, diagnostic);\n                    this.items.splice(i, 0, item);\n                    needsSync = true;\n                }\n                else {\n                    item = this.items[found];\n                    if (found > i) {\n                        this.items.splice(i, found - i);\n                        needsSync = true;\n                    }\n                }\n                if (selected && item.diagnostic == selected.diagnostic) {\n                    if (!item.dom.hasAttribute(\"aria-selected\")) {\n                        item.dom.setAttribute(\"aria-selected\", \"true\");\n                        newSelectedItem = item;\n                    }\n                }\n                else if (item.dom.hasAttribute(\"aria-selected\")) {\n                    item.dom.removeAttribute(\"aria-selected\");\n                }\n                i++;\n            }\n        });\n        while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n            needsSync = true;\n            this.items.pop();\n        }\n        if (this.items.length == 0) {\n            this.items.push(new PanelItem(this.view, {\n                from: -1, to: -1,\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n            needsSync = true;\n        }\n        if (newSelectedItem) {\n            this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n            this.view.requestMeasure({\n                key: this,\n                read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n                write: ({ sel, panel }) => {\n                    let scaleY = panel.height / this.list.offsetHeight;\n                    if (sel.top < panel.top)\n                        this.list.scrollTop -= (panel.top - sel.top) / scaleY;\n                    else if (sel.bottom > panel.bottom)\n                        this.list.scrollTop += (sel.bottom - panel.bottom) / scaleY;\n                }\n            });\n        }\n        else if (this.selectedIndex < 0) {\n            this.list.removeAttribute(\"aria-activedescendant\");\n        }\n        if (needsSync)\n            this.sync();\n    }\n    sync() {\n        let domPos = this.list.firstChild;\n        function rm() {\n            let prev = domPos;\n            domPos = prev.nextSibling;\n            prev.remove();\n        }\n        for (let item of this.items) {\n            if (item.dom.parentNode == this.list) {\n                while (domPos != item.dom)\n                    rm();\n                domPos = item.dom.nextSibling;\n            }\n            else {\n                this.list.insertBefore(item.dom, domPos);\n            }\n        }\n        while (domPos)\n            rm();\n    }\n    moveSelection(selectedIndex) {\n        if (this.selectedIndex < 0)\n            return;\n        let field = this.view.state.field(lintState);\n        let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n        if (!selection)\n            return;\n        this.view.dispatch({\n            selection: { anchor: selection.from, head: selection.to },\n            scrollIntoView: true,\n            effects: movePanelSelection.of(selection)\n        });\n    }\n    static open(view) { return new LintPanel(view); }\n}\nfunction svg(content, attrs = `viewBox=\"0 0 40 40\"`) {\n    return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;\n}\nfunction underline(color) {\n    return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`, `width=\"6\" height=\"3\"`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-diagnostic\": {\n        padding: \"3px 6px 3px 8px\",\n        marginLeft: \"-1px\",\n        display: \"block\",\n        whiteSpace: \"pre-wrap\"\n    },\n    \".cm-diagnostic-error\": { borderLeft: \"5px solid #d11\" },\n    \".cm-diagnostic-warning\": { borderLeft: \"5px solid orange\" },\n    \".cm-diagnostic-info\": { borderLeft: \"5px solid #999\" },\n    \".cm-diagnostic-hint\": { borderLeft: \"5px solid #66d\" },\n    \".cm-diagnosticAction\": {\n        font: \"inherit\",\n        border: \"none\",\n        padding: \"2px 4px\",\n        backgroundColor: \"#444\",\n        color: \"white\",\n        borderRadius: \"3px\",\n        marginLeft: \"8px\",\n        cursor: \"pointer\"\n    },\n    \".cm-diagnosticSource\": {\n        fontSize: \"70%\",\n        opacity: .7\n    },\n    \".cm-lintRange\": {\n        backgroundPosition: \"left bottom\",\n        backgroundRepeat: \"repeat-x\",\n        paddingBottom: \"0.7px\",\n    },\n    \".cm-lintRange-error\": { backgroundImage: /*@__PURE__*/underline(\"#d11\") },\n    \".cm-lintRange-warning\": { backgroundImage: /*@__PURE__*/underline(\"orange\") },\n    \".cm-lintRange-info\": { backgroundImage: /*@__PURE__*/underline(\"#999\") },\n    \".cm-lintRange-hint\": { backgroundImage: /*@__PURE__*/underline(\"#66d\") },\n    \".cm-lintRange-active\": { backgroundColor: \"#ffdd9980\" },\n    \".cm-tooltip-lint\": {\n        padding: 0,\n        margin: 0\n    },\n    \".cm-lintPoint\": {\n        position: \"relative\",\n        \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            bottom: 0,\n            left: \"-2px\",\n            borderLeft: \"3px solid transparent\",\n            borderRight: \"3px solid transparent\",\n            borderBottom: \"4px solid #d11\"\n        }\n    },\n    \".cm-lintPoint-warning\": {\n        \"&:after\": { borderBottomColor: \"orange\" }\n    },\n    \".cm-lintPoint-info\": {\n        \"&:after\": { borderBottomColor: \"#999\" }\n    },\n    \".cm-lintPoint-hint\": {\n        \"&:after\": { borderBottomColor: \"#66d\" }\n    },\n    \".cm-panel.cm-panel-lint\": {\n        position: \"relative\",\n        \"& ul\": {\n            maxHeight: \"100px\",\n            overflowY: \"auto\",\n            \"& [aria-selected]\": {\n                backgroundColor: \"#ddd\",\n                \"& u\": { textDecoration: \"underline\" }\n            },\n            \"&:focus [aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            },\n            \"& u\": { textDecoration: \"none\" },\n            padding: 0,\n            margin: 0\n        },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"2px\",\n            background: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        }\n    }\n});\nfunction severityWeight(sev) {\n    return sev == \"error\" ? 4 : sev == \"warning\" ? 3 : sev == \"info\" ? 2 : 1;\n}\nfunction maxSeverity(diagnostics) {\n    let sev = \"hint\", weight = 1;\n    for (let d of diagnostics) {\n        let w = severityWeight(d.severity);\n        if (w > weight) {\n            weight = w;\n            sev = d.severity;\n        }\n    }\n    return sev;\n}\nclass LintGutterMarker extends GutterMarker {\n    constructor(diagnostics) {\n        super();\n        this.diagnostics = diagnostics;\n        this.severity = maxSeverity(diagnostics);\n    }\n    toDOM(view) {\n        let elt = document.createElement(\"div\");\n        elt.className = \"cm-lint-marker cm-lint-marker-\" + this.severity;\n        let diagnostics = this.diagnostics;\n        let diagnosticsFilter = view.state.facet(lintGutterConfig).tooltipFilter;\n        if (diagnosticsFilter)\n            diagnostics = diagnosticsFilter(diagnostics, view.state);\n        if (diagnostics.length)\n            elt.onmouseover = () => gutterMarkerMouseOver(view, elt, diagnostics);\n        return elt;\n    }\n}\nfunction trackHoverOn(view, marker) {\n    let mousemove = (event) => {\n        let rect = marker.getBoundingClientRect();\n        if (event.clientX > rect.left - 10 /* Hover.Margin */ && event.clientX < rect.right + 10 /* Hover.Margin */ &&\n            event.clientY > rect.top - 10 /* Hover.Margin */ && event.clientY < rect.bottom + 10 /* Hover.Margin */)\n            return;\n        for (let target = event.target; target; target = target.parentNode) {\n            if (target.nodeType == 1 && target.classList.contains(\"cm-tooltip-lint\"))\n                return;\n        }\n        window.removeEventListener(\"mousemove\", mousemove);\n        if (view.state.field(lintGutterTooltip))\n            view.dispatch({ effects: setLintGutterTooltip.of(null) });\n    };\n    window.addEventListener(\"mousemove\", mousemove);\n}\nfunction gutterMarkerMouseOver(view, marker, diagnostics) {\n    function hovered() {\n        let line = view.elementAtHeight(marker.getBoundingClientRect().top + 5 - view.documentTop);\n        const linePos = view.coordsAtPos(line.from);\n        if (linePos) {\n            view.dispatch({ effects: setLintGutterTooltip.of({\n                    pos: line.from,\n                    above: false,\n                    clip: false,\n                    create() {\n                        return {\n                            dom: diagnosticsTooltip(view, diagnostics),\n                            getCoords: () => marker.getBoundingClientRect()\n                        };\n                    }\n                }) });\n        }\n        marker.onmouseout = marker.onmousemove = null;\n        trackHoverOn(view, marker);\n    }\n    let { hoverTime } = view.state.facet(lintGutterConfig);\n    let hoverTimeout = setTimeout(hovered, hoverTime);\n    marker.onmouseout = () => {\n        clearTimeout(hoverTimeout);\n        marker.onmouseout = marker.onmousemove = null;\n    };\n    marker.onmousemove = () => {\n        clearTimeout(hoverTimeout);\n        hoverTimeout = setTimeout(hovered, hoverTime);\n    };\n}\nfunction markersForDiagnostics(doc, diagnostics) {\n    let byLine = Object.create(null);\n    for (let diagnostic of diagnostics) {\n        let line = doc.lineAt(diagnostic.from);\n        (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);\n    }\n    let markers = [];\n    for (let line in byLine) {\n        markers.push(new LintGutterMarker(byLine[line]).range(+line));\n    }\n    return RangeSet.of(markers, true);\n}\nconst lintGutterExtension = /*@__PURE__*/gutter({\n    class: \"cm-gutter-lint\",\n    markers: view => view.state.field(lintGutterMarkers),\n    widgetMarker: (view, widget, block) => {\n        let diagnostics = [];\n        view.state.field(lintGutterMarkers).between(block.from, block.to, (from, to, value) => {\n            if (from > block.from && from < block.to)\n                diagnostics.push(...value.diagnostics);\n        });\n        return diagnostics.length ? new LintGutterMarker(diagnostics) : null;\n    }\n});\nconst lintGutterMarkers = /*@__PURE__*/StateField.define({\n    create() {\n        return RangeSet.empty;\n    },\n    update(markers, tr) {\n        markers = markers.map(tr.changes);\n        let diagnosticFilter = tr.state.facet(lintGutterConfig).markerFilter;\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let diagnostics = effect.value;\n                if (diagnosticFilter)\n                    diagnostics = diagnosticFilter(diagnostics || [], tr.state);\n                markers = markersForDiagnostics(tr.state.doc, diagnostics.slice(0));\n            }\n        }\n        return markers;\n    }\n});\nconst setLintGutterTooltip = /*@__PURE__*/StateEffect.define();\nconst lintGutterTooltip = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(tooltip, tr) {\n        if (tooltip && tr.docChanged)\n            tooltip = hideTooltip(tr, tooltip) ? null : Object.assign(Object.assign({}, tooltip), { pos: tr.changes.mapPos(tooltip.pos) });\n        return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);\n    },\n    provide: field => showTooltip.from(field)\n});\nconst lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-gutter-lint\": {\n        width: \"1.4em\",\n        \"& .cm-gutterElement\": {\n            padding: \".2em\"\n        }\n    },\n    \".cm-lint-marker\": {\n        width: \"1em\",\n        height: \"1em\"\n    },\n    \".cm-lint-marker-info\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#aaf\" stroke=\"#77e\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M5 5L35 5L35 35L5 35Z\"/>`)\n    },\n    \".cm-lint-marker-warning\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#fe8\" stroke=\"#fd7\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M20 6L37 35L3 35Z\"/>`),\n    },\n    \".cm-lint-marker-error\": {\n        content: /*@__PURE__*/svg(`<circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"#f87\" stroke=\"#f43\" stroke-width=\"6\"/>`)\n    },\n});\nconst lintExtensions = [\n    lintState,\n    /*@__PURE__*/EditorView.decorations.compute([lintState], state => {\n        let { selected, panel } = state.field(lintState);\n        return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([\n            activeMark.range(selected.from, selected.to)\n        ]);\n    }),\n    /*@__PURE__*/hoverTooltip(lintTooltip, { hideOn: hideTooltip }),\n    baseTheme\n];\nconst lintGutterConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            hoverTime: 300 /* Hover.Time */,\n            markerFilter: null,\n            tooltipFilter: null\n        });\n    }\n});\n/**\nReturns an extension that installs a gutter showing markers for\neach line that has diagnostics, which can be hovered over to see\nthe diagnostics.\n*/\nfunction lintGutter(config = {}) {\n    return [lintGutterConfig.of(config), lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];\n}\n/**\nIterate over the marked diagnostics for the given editor state,\ncalling `f` for each of them. Note that, if the document changed\nsince the diagnostics were created, the `Diagnostic` object will\nhold the original outdated position, whereas the `to` and `from`\narguments hold the diagnostic's current position.\n*/\nfunction forEachDiagnostic(state, f) {\n    let lState = state.field(lintState, false);\n    if (lState && lState.diagnostics.size) {\n        let pending = [], pendingStart = [], lastEnd = -1;\n        for (let iter = RangeSet.iter([lState.diagnostics]);; iter.next()) {\n            for (let i = 0; i < pending.length; i++)\n                if (!iter.value || iter.value.spec.diagnostics.indexOf(pending[i]) < 0) {\n                    f(pending[i], pendingStart[i], lastEnd);\n                    pending.splice(i, 1);\n                    pendingStart.splice(i--, 1);\n                }\n            if (!iter.value)\n                break;\n            for (let d of iter.value.spec.diagnostics)\n                if (pending.indexOf(d) < 0) {\n                    pending.push(d);\n                    pendingStart.push(iter.from);\n                }\n            lastEnd = iter.to;\n        }\n    }\n}\n\nexport { closeLintPanel, diagnosticCount, forEachDiagnostic, forceLinting, lintGutter, lintKeymap, linter, nextDiagnostic, openLintPanel, previousDiagnostic, setDiagnostics, setDiagnosticsEffect };\n", "import { showPanel, EditorView, getPanel, Decoration, ViewPlugin, runScopeHandlers } from '@codemirror/view';\nimport { codePointAt, fromCodePoint, codePointSize, StateEffect, StateField, EditorSelection, Facet, combineConfig, CharCategory, RangeSetBuilder, Prec, EditorState, findClusterBreak } from '@codemirror/state';\nimport elt from 'crelt';\n\nconst basicNormalize = typeof String.prototype.normalize == \"function\"\n    ? x => x.normalize(\"NFKD\") : x => x;\n/**\nA search cursor provides an iterator over text matches in a\ndocument.\n*/\nclass SearchCursor {\n    /**\n    Create a text cursor. The query is the search string, `from` to\n    `to` provides the region to search.\n    \n    When `normalize` is given, it will be called, on both the query\n    string and the content it is matched against, before comparing.\n    You can, for example, create a case-insensitive search by\n    passing `s => s.toLowerCase()`.\n    \n    Text is always normalized with\n    [`.normalize(\"NFKD\")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)\n    (when supported).\n    */\n    constructor(text, query, from = 0, to = text.length, normalize, test) {\n        this.test = test;\n        /**\n        The current match (only holds a meaningful value after\n        [`next`](https://codemirror.net/6/docs/ref/#search.SearchCursor.next) has been called and when\n        `done` is false).\n        */\n        this.value = { from: 0, to: 0 };\n        /**\n        Whether the end of the iterated region has been reached.\n        */\n        this.done = false;\n        this.matches = [];\n        this.buffer = \"\";\n        this.bufferPos = 0;\n        this.iter = text.iterRange(from, to);\n        this.bufferStart = from;\n        this.normalize = normalize ? x => normalize(basicNormalize(x)) : basicNormalize;\n        this.query = this.normalize(query);\n    }\n    peek() {\n        if (this.bufferPos == this.buffer.length) {\n            this.bufferStart += this.buffer.length;\n            this.iter.next();\n            if (this.iter.done)\n                return -1;\n            this.bufferPos = 0;\n            this.buffer = this.iter.value;\n        }\n        return codePointAt(this.buffer, this.bufferPos);\n    }\n    /**\n    Look for the next match. Updates the iterator's\n    [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and\n    [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called\n    at least once before using the cursor.\n    */\n    next() {\n        while (this.matches.length)\n            this.matches.pop();\n        return this.nextOverlapping();\n    }\n    /**\n    The `next` method will ignore matches that partially overlap a\n    previous match. This method behaves like `next`, but includes\n    such matches.\n    */\n    nextOverlapping() {\n        for (;;) {\n            let next = this.peek();\n            if (next < 0) {\n                this.done = true;\n                return this;\n            }\n            let str = fromCodePoint(next), start = this.bufferStart + this.bufferPos;\n            this.bufferPos += codePointSize(next);\n            let norm = this.normalize(str);\n            if (norm.length)\n                for (let i = 0, pos = start;; i++) {\n                    let code = norm.charCodeAt(i);\n                    let match = this.match(code, pos, this.bufferPos + this.bufferStart);\n                    if (i == norm.length - 1) {\n                        if (match) {\n                            this.value = match;\n                            return this;\n                        }\n                        break;\n                    }\n                    if (pos == start && i < str.length && str.charCodeAt(i) == code)\n                        pos++;\n                }\n        }\n    }\n    match(code, pos, end) {\n        let match = null;\n        for (let i = 0; i < this.matches.length; i += 2) {\n            let index = this.matches[i], keep = false;\n            if (this.query.charCodeAt(index) == code) {\n                if (index == this.query.length - 1) {\n                    match = { from: this.matches[i + 1], to: end };\n                }\n                else {\n                    this.matches[i]++;\n                    keep = true;\n                }\n            }\n            if (!keep) {\n                this.matches.splice(i, 2);\n                i -= 2;\n            }\n        }\n        if (this.query.charCodeAt(0) == code) {\n            if (this.query.length == 1)\n                match = { from: pos, to: end };\n            else\n                this.matches.push(1, pos);\n        }\n        if (match && this.test && !this.test(match.from, match.to, this.buffer, this.bufferStart))\n            match = null;\n        return match;\n    }\n}\nif (typeof Symbol != \"undefined\")\n    SearchCursor.prototype[Symbol.iterator] = function () { return this; };\n\nconst empty = { from: -1, to: -1, match: /*@__PURE__*//.*/.exec(\"\") };\nconst baseFlags = \"gm\" + (/x/.unicode == null ? \"\" : \"u\");\n/**\nThis class is similar to [`SearchCursor`](https://codemirror.net/6/docs/ref/#search.SearchCursor)\nbut searches for a regular expression pattern instead of a plain\nstring.\n*/\nclass RegExpCursor {\n    /**\n    Create a cursor that will search the given range in the given\n    document. `query` should be the raw pattern (as you'd pass it to\n    `new RegExp`).\n    */\n    constructor(text, query, options, from = 0, to = text.length) {\n        this.text = text;\n        this.to = to;\n        this.curLine = \"\";\n        /**\n        Set to `true` when the cursor has reached the end of the search\n        range.\n        */\n        this.done = false;\n        /**\n        Will contain an object with the extent of the match and the\n        match object when [`next`](https://codemirror.net/6/docs/ref/#search.RegExpCursor.next)\n        sucessfully finds a match.\n        */\n        this.value = empty;\n        if (/\\\\[sWDnr]|\\n|\\r|\\[\\^/.test(query))\n            return new MultilineRegExpCursor(text, query, options, from, to);\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.test = options === null || options === void 0 ? void 0 : options.test;\n        this.iter = text.iter();\n        let startLine = text.lineAt(from);\n        this.curLineStart = startLine.from;\n        this.matchPos = toCharEnd(text, from);\n        this.getLine(this.curLineStart);\n    }\n    getLine(skip) {\n        this.iter.next(skip);\n        if (this.iter.lineBreak) {\n            this.curLine = \"\";\n        }\n        else {\n            this.curLine = this.iter.value;\n            if (this.curLineStart + this.curLine.length > this.to)\n                this.curLine = this.curLine.slice(0, this.to - this.curLineStart);\n            this.iter.next();\n        }\n    }\n    nextLine() {\n        this.curLineStart = this.curLineStart + this.curLine.length + 1;\n        if (this.curLineStart > this.to)\n            this.curLine = \"\";\n        else\n            this.getLine(0);\n    }\n    /**\n    Move to the next match, if there is one.\n    */\n    next() {\n        for (let off = this.matchPos - this.curLineStart;;) {\n            this.re.lastIndex = off;\n            let match = this.matchPos <= this.to && this.re.exec(this.curLine);\n            if (match) {\n                let from = this.curLineStart + match.index, to = from + match[0].length;\n                this.matchPos = toCharEnd(this.text, to + (from == to ? 1 : 0));\n                if (from == this.curLineStart + this.curLine.length)\n                    this.nextLine();\n                if ((from < to || from > this.value.to) && (!this.test || this.test(from, to, match))) {\n                    this.value = { from, to, match };\n                    return this;\n                }\n                off = this.matchPos - this.curLineStart;\n            }\n            else if (this.curLineStart + this.curLine.length < this.to) {\n                this.nextLine();\n                off = 0;\n            }\n            else {\n                this.done = true;\n                return this;\n            }\n        }\n    }\n}\nconst flattened = /*@__PURE__*/new WeakMap();\n// Reusable (partially) flattened document strings\nclass FlattenedDoc {\n    constructor(from, text) {\n        this.from = from;\n        this.text = text;\n    }\n    get to() { return this.from + this.text.length; }\n    static get(doc, from, to) {\n        let cached = flattened.get(doc);\n        if (!cached || cached.from >= to || cached.to <= from) {\n            let flat = new FlattenedDoc(from, doc.sliceString(from, to));\n            flattened.set(doc, flat);\n            return flat;\n        }\n        if (cached.from == from && cached.to == to)\n            return cached;\n        let { text, from: cachedFrom } = cached;\n        if (cachedFrom > from) {\n            text = doc.sliceString(from, cachedFrom) + text;\n            cachedFrom = from;\n        }\n        if (cached.to < to)\n            text += doc.sliceString(cached.to, to);\n        flattened.set(doc, new FlattenedDoc(cachedFrom, text));\n        return new FlattenedDoc(from, text.slice(from - cachedFrom, to - cachedFrom));\n    }\n}\nclass MultilineRegExpCursor {\n    constructor(text, query, options, from, to) {\n        this.text = text;\n        this.to = to;\n        this.done = false;\n        this.value = empty;\n        this.matchPos = toCharEnd(text, from);\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.test = options === null || options === void 0 ? void 0 : options.test;\n        this.flat = FlattenedDoc.get(text, from, this.chunkEnd(from + 5000 /* Chunk.Base */));\n    }\n    chunkEnd(pos) {\n        return pos >= this.to ? this.to : this.text.lineAt(pos).to;\n    }\n    next() {\n        for (;;) {\n            let off = this.re.lastIndex = this.matchPos - this.flat.from;\n            let match = this.re.exec(this.flat.text);\n            // Skip empty matches directly after the last match\n            if (match && !match[0] && match.index == off) {\n                this.re.lastIndex = off + 1;\n                match = this.re.exec(this.flat.text);\n            }\n            if (match) {\n                let from = this.flat.from + match.index, to = from + match[0].length;\n                // If a match goes almost to the end of a noncomplete chunk, try\n                // again, since it'll likely be able to match more\n                if ((this.flat.to >= this.to || match.index + match[0].length <= this.flat.text.length - 10) &&\n                    (!this.test || this.test(from, to, match))) {\n                    this.value = { from, to, match };\n                    this.matchPos = toCharEnd(this.text, to + (from == to ? 1 : 0));\n                    return this;\n                }\n            }\n            if (this.flat.to == this.to) {\n                this.done = true;\n                return this;\n            }\n            // Grow the flattened doc\n            this.flat = FlattenedDoc.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));\n        }\n    }\n}\nif (typeof Symbol != \"undefined\") {\n    RegExpCursor.prototype[Symbol.iterator] = MultilineRegExpCursor.prototype[Symbol.iterator] =\n        function () { return this; };\n}\nfunction validRegExp(source) {\n    try {\n        new RegExp(source, baseFlags);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction toCharEnd(text, pos) {\n    if (pos >= text.length)\n        return pos;\n    let line = text.lineAt(pos), next;\n    while (pos < line.to && (next = line.text.charCodeAt(pos - line.from)) >= 0xDC00 && next < 0xE000)\n        pos++;\n    return pos;\n}\n\nfunction createLineDialog(view) {\n    let line = String(view.state.doc.lineAt(view.state.selection.main.head).number);\n    let input = elt(\"input\", { class: \"cm-textfield\", name: \"line\", value: line });\n    let dom = elt(\"form\", {\n        class: \"cm-gotoLine\",\n        onkeydown: (event) => {\n            if (event.keyCode == 27) { // Escape\n                event.preventDefault();\n                view.dispatch({ effects: dialogEffect.of(false) });\n                view.focus();\n            }\n            else if (event.keyCode == 13) { // Enter\n                event.preventDefault();\n                go();\n            }\n        },\n        onsubmit: (event) => {\n            event.preventDefault();\n            go();\n        }\n    }, elt(\"label\", view.state.phrase(\"Go to line\"), \": \", input), \" \", elt(\"button\", { class: \"cm-button\", type: \"submit\" }, view.state.phrase(\"go\")));\n    function go() {\n        let match = /^([+-])?(\\d+)?(:\\d+)?(%)?$/.exec(input.value);\n        if (!match)\n            return;\n        let { state } = view, startLine = state.doc.lineAt(state.selection.main.head);\n        let [, sign, ln, cl, percent] = match;\n        let col = cl ? +cl.slice(1) : 0;\n        let line = ln ? +ln : startLine.number;\n        if (ln && percent) {\n            let pc = line / 100;\n            if (sign)\n                pc = pc * (sign == \"-\" ? -1 : 1) + (startLine.number / state.doc.lines);\n            line = Math.round(state.doc.lines * pc);\n        }\n        else if (ln && sign) {\n            line = line * (sign == \"-\" ? -1 : 1) + startLine.number;\n        }\n        let docLine = state.doc.line(Math.max(1, Math.min(state.doc.lines, line)));\n        let selection = EditorSelection.cursor(docLine.from + Math.max(0, Math.min(col, docLine.length)));\n        view.dispatch({\n            effects: [dialogEffect.of(false), EditorView.scrollIntoView(selection.from, { y: 'center' })],\n            selection,\n        });\n        view.focus();\n    }\n    return { dom };\n}\nconst dialogEffect = /*@__PURE__*/StateEffect.define();\nconst dialogField = /*@__PURE__*/StateField.define({\n    create() { return true; },\n    update(value, tr) {\n        for (let e of tr.effects)\n            if (e.is(dialogEffect))\n                value = e.value;\n        return value;\n    },\n    provide: f => showPanel.from(f, val => val ? createLineDialog : null)\n});\n/**\nCommand that shows a dialog asking the user for a line number, and\nwhen a valid position is provided, moves the cursor to that line.\n\nSupports line numbers, relative line offsets prefixed with `+` or\n`-`, document percentages suffixed with `%`, and an optional\ncolumn position by adding `:` and a second number after the line\nnumber.\n*/\nconst gotoLine = view => {\n    let panel = getPanel(view, createLineDialog);\n    if (!panel) {\n        let effects = [dialogEffect.of(true)];\n        if (view.state.field(dialogField, false) == null)\n            effects.push(StateEffect.appendConfig.of([dialogField, baseTheme$1]));\n        view.dispatch({ effects });\n        panel = getPanel(view, createLineDialog);\n    }\n    if (panel)\n        panel.dom.querySelector(\"input\").select();\n    return true;\n};\nconst baseTheme$1 = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panel.cm-gotoLine\": {\n        padding: \"2px 6px 4px\",\n        \"& label\": { fontSize: \"80%\" }\n    }\n});\n\nconst defaultHighlightOptions = {\n    highlightWordAroundCursor: false,\n    minSelectionLength: 1,\n    maxMatches: 100,\n    wholeWords: false\n};\nconst highlightConfig = /*@__PURE__*/Facet.define({\n    combine(options) {\n        return combineConfig(options, defaultHighlightOptions, {\n            highlightWordAroundCursor: (a, b) => a || b,\n            minSelectionLength: Math.min,\n            maxMatches: Math.min\n        });\n    }\n});\n/**\nThis extension highlights text that matches the selection. It uses\nthe `\"cm-selectionMatch\"` class for the highlighting. When\n`highlightWordAroundCursor` is enabled, the word at the cursor\nitself will be highlighted with `\"cm-selectionMatch-main\"`.\n*/\nfunction highlightSelectionMatches(options) {\n    let ext = [defaultTheme, matchHighlighter];\n    if (options)\n        ext.push(highlightConfig.of(options));\n    return ext;\n}\nconst matchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch\" });\nconst mainMatchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch cm-selectionMatch-main\" });\n// Whether the characters directly outside the given positions are non-word characters\nfunction insideWordBoundaries(check, state, from, to) {\n    return (from == 0 || check(state.sliceDoc(from - 1, from)) != CharCategory.Word) &&\n        (to == state.doc.length || check(state.sliceDoc(to, to + 1)) != CharCategory.Word);\n}\n// Whether the characters directly at the given positions are word characters\nfunction insideWord(check, state, from, to) {\n    return check(state.sliceDoc(from, from + 1)) == CharCategory.Word\n        && check(state.sliceDoc(to - 1, to)) == CharCategory.Word;\n}\nconst matchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.selectionSet || update.docChanged || update.viewportChanged)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let conf = view.state.facet(highlightConfig);\n        let { state } = view, sel = state.selection;\n        if (sel.ranges.length > 1)\n            return Decoration.none;\n        let range = sel.main, query, check = null;\n        if (range.empty) {\n            if (!conf.highlightWordAroundCursor)\n                return Decoration.none;\n            let word = state.wordAt(range.head);\n            if (!word)\n                return Decoration.none;\n            check = state.charCategorizer(range.head);\n            query = state.sliceDoc(word.from, word.to);\n        }\n        else {\n            let len = range.to - range.from;\n            if (len < conf.minSelectionLength || len > 200)\n                return Decoration.none;\n            if (conf.wholeWords) {\n                query = state.sliceDoc(range.from, range.to); // TODO: allow and include leading/trailing space?\n                check = state.charCategorizer(range.head);\n                if (!(insideWordBoundaries(check, state, range.from, range.to) &&\n                    insideWord(check, state, range.from, range.to)))\n                    return Decoration.none;\n            }\n            else {\n                query = state.sliceDoc(range.from, range.to);\n                if (!query)\n                    return Decoration.none;\n            }\n        }\n        let deco = [];\n        for (let part of view.visibleRanges) {\n            let cursor = new SearchCursor(state.doc, query, part.from, part.to);\n            while (!cursor.next().done) {\n                let { from, to } = cursor.value;\n                if (!check || insideWordBoundaries(check, state, from, to)) {\n                    if (range.empty && from <= range.from && to >= range.to)\n                        deco.push(mainMatchDeco.range(from, to));\n                    else if (from >= range.to || to <= range.from)\n                        deco.push(matchDeco.range(from, to));\n                    if (deco.length > conf.maxMatches)\n                        return Decoration.none;\n                }\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\nconst defaultTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-selectionMatch\": { backgroundColor: \"#99ff7780\" },\n    \".cm-searchMatch .cm-selectionMatch\": { backgroundColor: \"transparent\" }\n});\n// Select the words around the cursors.\nconst selectWord = ({ state, dispatch }) => {\n    let { selection } = state;\n    let newSel = EditorSelection.create(selection.ranges.map(range => state.wordAt(range.head) || EditorSelection.cursor(range.head)), selection.mainIndex);\n    if (newSel.eq(selection))\n        return false;\n    dispatch(state.update({ selection: newSel }));\n    return true;\n};\n// Find next occurrence of query relative to last cursor. Wrap around\n// the document if there are no more matches.\nfunction findNextOccurrence(state, query) {\n    let { main, ranges } = state.selection;\n    let word = state.wordAt(main.head), fullWord = word && word.from == main.from && word.to == main.to;\n    for (let cycled = false, cursor = new SearchCursor(state.doc, query, ranges[ranges.length - 1].to);;) {\n        cursor.next();\n        if (cursor.done) {\n            if (cycled)\n                return null;\n            cursor = new SearchCursor(state.doc, query, 0, Math.max(0, ranges[ranges.length - 1].from - 1));\n            cycled = true;\n        }\n        else {\n            if (cycled && ranges.some(r => r.from == cursor.value.from))\n                continue;\n            if (fullWord) {\n                let word = state.wordAt(cursor.value.from);\n                if (!word || word.from != cursor.value.from || word.to != cursor.value.to)\n                    continue;\n            }\n            return cursor.value;\n        }\n    }\n}\n/**\nSelect next occurrence of the current selection. Expand selection\nto the surrounding word when the selection is empty.\n*/\nconst selectNextOccurrence = ({ state, dispatch }) => {\n    let { ranges } = state.selection;\n    if (ranges.some(sel => sel.from === sel.to))\n        return selectWord({ state, dispatch });\n    let searchedText = state.sliceDoc(ranges[0].from, ranges[0].to);\n    if (state.selection.ranges.some(r => state.sliceDoc(r.from, r.to) != searchedText))\n        return false;\n    let range = findNextOccurrence(state, searchedText);\n    if (!range)\n        return false;\n    dispatch(state.update({\n        selection: state.selection.addRange(EditorSelection.range(range.from, range.to), false),\n        effects: EditorView.scrollIntoView(range.to)\n    }));\n    return true;\n};\n\nconst searchConfigFacet = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            top: false,\n            caseSensitive: false,\n            literal: false,\n            regexp: false,\n            wholeWord: false,\n            createPanel: view => new SearchPanel(view),\n            scrollToMatch: range => EditorView.scrollIntoView(range)\n        });\n    }\n});\n/**\nAdd search state to the editor configuration, and optionally\nconfigure the search extension.\n([`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel) will automatically\nenable this if it isn't already on).\n*/\nfunction search(config) {\n    return config ? [searchConfigFacet.of(config), searchExtensions] : searchExtensions;\n}\n/**\nA search query. Part of the editor's search state.\n*/\nclass SearchQuery {\n    /**\n    Create a query object.\n    */\n    constructor(config) {\n        this.search = config.search;\n        this.caseSensitive = !!config.caseSensitive;\n        this.literal = !!config.literal;\n        this.regexp = !!config.regexp;\n        this.replace = config.replace || \"\";\n        this.valid = !!this.search && (!this.regexp || validRegExp(this.search));\n        this.unquoted = this.unquote(this.search);\n        this.wholeWord = !!config.wholeWord;\n    }\n    /**\n    @internal\n    */\n    unquote(text) {\n        return this.literal ? text :\n            text.replace(/\\\\([nrt\\\\])/g, (_, ch) => ch == \"n\" ? \"\\n\" : ch == \"r\" ? \"\\r\" : ch == \"t\" ? \"\\t\" : \"\\\\\");\n    }\n    /**\n    Compare this query to another query.\n    */\n    eq(other) {\n        return this.search == other.search && this.replace == other.replace &&\n            this.caseSensitive == other.caseSensitive && this.regexp == other.regexp &&\n            this.wholeWord == other.wholeWord;\n    }\n    /**\n    @internal\n    */\n    create() {\n        return this.regexp ? new RegExpQuery(this) : new StringQuery(this);\n    }\n    /**\n    Get a search cursor for this query, searching through the given\n    range in the given state.\n    */\n    getCursor(state, from = 0, to) {\n        let st = state.doc ? state : EditorState.create({ doc: state });\n        if (to == null)\n            to = st.doc.length;\n        return this.regexp ? regexpCursor(this, st, from, to) : stringCursor(this, st, from, to);\n    }\n}\nclass QueryType {\n    constructor(spec) {\n        this.spec = spec;\n    }\n}\nfunction stringCursor(spec, state, from, to) {\n    return new SearchCursor(state.doc, spec.unquoted, from, to, spec.caseSensitive ? undefined : x => x.toLowerCase(), spec.wholeWord ? stringWordTest(state.doc, state.charCategorizer(state.selection.main.head)) : undefined);\n}\nfunction stringWordTest(doc, categorizer) {\n    return (from, to, buf, bufPos) => {\n        if (bufPos > from || bufPos + buf.length < to) {\n            bufPos = Math.max(0, from - 2);\n            buf = doc.sliceString(bufPos, Math.min(doc.length, to + 2));\n        }\n        return (categorizer(charBefore(buf, from - bufPos)) != CharCategory.Word ||\n            categorizer(charAfter(buf, from - bufPos)) != CharCategory.Word) &&\n            (categorizer(charAfter(buf, to - bufPos)) != CharCategory.Word ||\n                categorizer(charBefore(buf, to - bufPos)) != CharCategory.Word);\n    };\n}\nclass StringQuery extends QueryType {\n    constructor(spec) {\n        super(spec);\n    }\n    nextMatch(state, curFrom, curTo) {\n        let cursor = stringCursor(this.spec, state, curTo, state.doc.length).nextOverlapping();\n        if (cursor.done) {\n            let end = Math.min(state.doc.length, curFrom + this.spec.unquoted.length);\n            cursor = stringCursor(this.spec, state, 0, end).nextOverlapping();\n        }\n        return cursor.done || cursor.value.from == curFrom && cursor.value.to == curTo ? null : cursor.value;\n    }\n    // Searching in reverse is, rather than implementing an inverted search\n    // cursor, done by scanning chunk after chunk forward.\n    prevMatchInRange(state, from, to) {\n        for (let pos = to;;) {\n            let start = Math.max(from, pos - 10000 /* FindPrev.ChunkSize */ - this.spec.unquoted.length);\n            let cursor = stringCursor(this.spec, state, start, pos), range = null;\n            while (!cursor.nextOverlapping().done)\n                range = cursor.value;\n            if (range)\n                return range;\n            if (start == from)\n                return null;\n            pos -= 10000 /* FindPrev.ChunkSize */;\n        }\n    }\n    prevMatch(state, curFrom, curTo) {\n        let found = this.prevMatchInRange(state, 0, curFrom);\n        if (!found)\n            found = this.prevMatchInRange(state, Math.max(0, curTo - this.spec.unquoted.length), state.doc.length);\n        return found && (found.from != curFrom || found.to != curTo) ? found : null;\n    }\n    getReplacement(_result) { return this.spec.unquote(this.spec.replace); }\n    matchAll(state, limit) {\n        let cursor = stringCursor(this.spec, state, 0, state.doc.length), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(state, from, to, add) {\n        let cursor = stringCursor(this.spec, state, Math.max(0, from - this.spec.unquoted.length), Math.min(to + this.spec.unquoted.length, state.doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\nfunction regexpCursor(spec, state, from, to) {\n    return new RegExpCursor(state.doc, spec.search, {\n        ignoreCase: !spec.caseSensitive,\n        test: spec.wholeWord ? regexpWordTest(state.charCategorizer(state.selection.main.head)) : undefined\n    }, from, to);\n}\nfunction charBefore(str, index) {\n    return str.slice(findClusterBreak(str, index, false), index);\n}\nfunction charAfter(str, index) {\n    return str.slice(index, findClusterBreak(str, index));\n}\nfunction regexpWordTest(categorizer) {\n    return (_from, _to, match) => !match[0].length ||\n        (categorizer(charBefore(match.input, match.index)) != CharCategory.Word ||\n            categorizer(charAfter(match.input, match.index)) != CharCategory.Word) &&\n            (categorizer(charAfter(match.input, match.index + match[0].length)) != CharCategory.Word ||\n                categorizer(charBefore(match.input, match.index + match[0].length)) != CharCategory.Word);\n}\nclass RegExpQuery extends QueryType {\n    nextMatch(state, curFrom, curTo) {\n        let cursor = regexpCursor(this.spec, state, curTo, state.doc.length).next();\n        if (cursor.done)\n            cursor = regexpCursor(this.spec, state, 0, curFrom).next();\n        return cursor.done ? null : cursor.value;\n    }\n    prevMatchInRange(state, from, to) {\n        for (let size = 1;; size++) {\n            let start = Math.max(from, to - size * 10000 /* FindPrev.ChunkSize */);\n            let cursor = regexpCursor(this.spec, state, start, to), range = null;\n            while (!cursor.next().done)\n                range = cursor.value;\n            if (range && (start == from || range.from > start + 10))\n                return range;\n            if (start == from)\n                return null;\n        }\n    }\n    prevMatch(state, curFrom, curTo) {\n        return this.prevMatchInRange(state, 0, curFrom) ||\n            this.prevMatchInRange(state, curTo, state.doc.length);\n    }\n    getReplacement(result) {\n        return this.spec.unquote(this.spec.replace).replace(/\\$([$&]|\\d+)/g, (m, i) => {\n            if (i == \"&\")\n                return result.match[0];\n            if (i == \"$\")\n                return \"$\";\n            for (let l = i.length; l > 0; l--) {\n                let n = +i.slice(0, l);\n                if (n > 0 && n < result.match.length)\n                    return result.match[n] + i.slice(l);\n            }\n            return m;\n        });\n    }\n    matchAll(state, limit) {\n        let cursor = regexpCursor(this.spec, state, 0, state.doc.length), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(state, from, to, add) {\n        let cursor = regexpCursor(this.spec, state, Math.max(0, from - 250 /* RegExp.HighlightMargin */), Math.min(to + 250 /* RegExp.HighlightMargin */, state.doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\n/**\nA state effect that updates the current search query. Note that\nthis only has an effect if the search state has been initialized\n(by including [`search`](https://codemirror.net/6/docs/ref/#search.search) in your configuration or\nby running [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel) at least\nonce).\n*/\nconst setSearchQuery = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst searchState = /*@__PURE__*/StateField.define({\n    create(state) {\n        return new SearchState(defaultQuery(state).create(), null);\n    },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setSearchQuery))\n                value = new SearchState(effect.value.create(), value.panel);\n            else if (effect.is(togglePanel))\n                value = new SearchState(value.query, effect.value ? createSearchPanel : null);\n        }\n        return value;\n    },\n    provide: f => showPanel.from(f, val => val.panel)\n});\n/**\nGet the current search query from an editor state.\n*/\nfunction getSearchQuery(state) {\n    let curState = state.field(searchState, false);\n    return curState ? curState.query.spec : defaultQuery(state);\n}\n/**\nQuery whether the search panel is open in the given editor state.\n*/\nfunction searchPanelOpen(state) {\n    var _a;\n    return ((_a = state.field(searchState, false)) === null || _a === void 0 ? void 0 : _a.panel) != null;\n}\nclass SearchState {\n    constructor(query, panel) {\n        this.query = query;\n        this.panel = panel;\n    }\n}\nconst matchMark = /*@__PURE__*/Decoration.mark({ class: \"cm-searchMatch\" }), selectedMatchMark = /*@__PURE__*/Decoration.mark({ class: \"cm-searchMatch cm-searchMatch-selected\" });\nconst searchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.decorations = this.highlight(view.state.field(searchState));\n    }\n    update(update) {\n        let state = update.state.field(searchState);\n        if (state != update.startState.field(searchState) || update.docChanged || update.selectionSet || update.viewportChanged)\n            this.decorations = this.highlight(state);\n    }\n    highlight({ query, panel }) {\n        if (!panel || !query.spec.valid)\n            return Decoration.none;\n        let { view } = this;\n        let builder = new RangeSetBuilder();\n        for (let i = 0, ranges = view.visibleRanges, l = ranges.length; i < l; i++) {\n            let { from, to } = ranges[i];\n            while (i < l - 1 && to > ranges[i + 1].from - 2 * 250 /* RegExp.HighlightMargin */)\n                to = ranges[++i].to;\n            query.highlight(view.state, from, to, (from, to) => {\n                let selected = view.state.selection.ranges.some(r => r.from == from && r.to == to);\n                builder.add(from, to, selected ? selectedMatchMark : matchMark);\n            });\n        }\n        return builder.finish();\n    }\n}, {\n    decorations: v => v.decorations\n});\nfunction searchCommand(f) {\n    return view => {\n        let state = view.state.field(searchState, false);\n        return state && state.query.spec.valid ? f(view, state) : openSearchPanel(view);\n    };\n}\n/**\nOpen the search panel if it isn't already open, and move the\nselection to the first match after the current main selection.\nWill wrap around to the start of the document when it reaches the\nend.\n*/\nconst findNext = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { to } = view.state.selection.main;\n    let next = query.nextMatch(view.state, to, to);\n    if (!next)\n        return false;\n    let selection = EditorSelection.single(next.from, next.to);\n    let config = view.state.facet(searchConfigFacet);\n    view.dispatch({\n        selection,\n        effects: [announceMatch(view, next), config.scrollToMatch(selection.main, view)],\n        userEvent: \"select.search\"\n    });\n    selectSearchInput(view);\n    return true;\n});\n/**\nMove the selection to the previous instance of the search query,\nbefore the current main selection. Will wrap past the start\nof the document to start searching at the end again.\n*/\nconst findPrevious = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { state } = view, { from } = state.selection.main;\n    let prev = query.prevMatch(state, from, from);\n    if (!prev)\n        return false;\n    let selection = EditorSelection.single(prev.from, prev.to);\n    let config = view.state.facet(searchConfigFacet);\n    view.dispatch({\n        selection,\n        effects: [announceMatch(view, prev), config.scrollToMatch(selection.main, view)],\n        userEvent: \"select.search\"\n    });\n    selectSearchInput(view);\n    return true;\n});\n/**\nSelect all instances of the search query.\n*/\nconst selectMatches = /*@__PURE__*/searchCommand((view, { query }) => {\n    let ranges = query.matchAll(view.state, 1000);\n    if (!ranges || !ranges.length)\n        return false;\n    view.dispatch({\n        selection: EditorSelection.create(ranges.map(r => EditorSelection.range(r.from, r.to))),\n        userEvent: \"select.search.matches\"\n    });\n    return true;\n});\n/**\nSelect all instances of the currently selected text.\n*/\nconst selectSelectionMatches = ({ state, dispatch }) => {\n    let sel = state.selection;\n    if (sel.ranges.length > 1 || sel.main.empty)\n        return false;\n    let { from, to } = sel.main;\n    let ranges = [], main = 0;\n    for (let cur = new SearchCursor(state.doc, state.sliceDoc(from, to)); !cur.next().done;) {\n        if (ranges.length > 1000)\n            return false;\n        if (cur.value.from == from)\n            main = ranges.length;\n        ranges.push(EditorSelection.range(cur.value.from, cur.value.to));\n    }\n    dispatch(state.update({\n        selection: EditorSelection.create(ranges, main),\n        userEvent: \"select.search.matches\"\n    }));\n    return true;\n};\n/**\nReplace the current match of the search query.\n*/\nconst replaceNext = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { state } = view, { from, to } = state.selection.main;\n    if (state.readOnly)\n        return false;\n    let match = query.nextMatch(state, from, from);\n    if (!match)\n        return false;\n    let next = match;\n    let changes = [], selection, replacement;\n    let effects = [];\n    if (next.from == from && next.to == to) {\n        replacement = state.toText(query.getReplacement(next));\n        changes.push({ from: next.from, to: next.to, insert: replacement });\n        next = query.nextMatch(state, next.from, next.to);\n        effects.push(EditorView.announce.of(state.phrase(\"replaced match on line $\", state.doc.lineAt(from).number) + \".\"));\n    }\n    if (next) {\n        let off = changes.length == 0 || changes[0].from >= match.to ? 0 : match.to - match.from - replacement.length;\n        selection = EditorSelection.single(next.from - off, next.to - off);\n        effects.push(announceMatch(view, next));\n        effects.push(state.facet(searchConfigFacet).scrollToMatch(selection.main, view));\n    }\n    view.dispatch({\n        changes, selection, effects,\n        userEvent: \"input.replace\"\n    });\n    return true;\n});\n/**\nReplace all instances of the search query with the given\nreplacement.\n*/\nconst replaceAll = /*@__PURE__*/searchCommand((view, { query }) => {\n    if (view.state.readOnly)\n        return false;\n    let changes = query.matchAll(view.state, 1e9).map(match => {\n        let { from, to } = match;\n        return { from, to, insert: query.getReplacement(match) };\n    });\n    if (!changes.length)\n        return false;\n    let announceText = view.state.phrase(\"replaced $ matches\", changes.length) + \".\";\n    view.dispatch({\n        changes,\n        effects: EditorView.announce.of(announceText),\n        userEvent: \"input.replace.all\"\n    });\n    return true;\n});\nfunction createSearchPanel(view) {\n    return view.state.facet(searchConfigFacet).createPanel(view);\n}\nfunction defaultQuery(state, fallback) {\n    var _a, _b, _c, _d, _e;\n    let sel = state.selection.main;\n    let selText = sel.empty || sel.to > sel.from + 100 ? \"\" : state.sliceDoc(sel.from, sel.to);\n    if (fallback && !selText)\n        return fallback;\n    let config = state.facet(searchConfigFacet);\n    return new SearchQuery({\n        search: ((_a = fallback === null || fallback === void 0 ? void 0 : fallback.literal) !== null && _a !== void 0 ? _a : config.literal) ? selText : selText.replace(/\\n/g, \"\\\\n\"),\n        caseSensitive: (_b = fallback === null || fallback === void 0 ? void 0 : fallback.caseSensitive) !== null && _b !== void 0 ? _b : config.caseSensitive,\n        literal: (_c = fallback === null || fallback === void 0 ? void 0 : fallback.literal) !== null && _c !== void 0 ? _c : config.literal,\n        regexp: (_d = fallback === null || fallback === void 0 ? void 0 : fallback.regexp) !== null && _d !== void 0 ? _d : config.regexp,\n        wholeWord: (_e = fallback === null || fallback === void 0 ? void 0 : fallback.wholeWord) !== null && _e !== void 0 ? _e : config.wholeWord\n    });\n}\nfunction getSearchInput(view) {\n    let panel = getPanel(view, createSearchPanel);\n    return panel && panel.dom.querySelector(\"[main-field]\");\n}\nfunction selectSearchInput(view) {\n    let input = getSearchInput(view);\n    if (input && input == view.root.activeElement)\n        input.select();\n}\n/**\nMake sure the search panel is open and focused.\n*/\nconst openSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (state && state.panel) {\n        let searchInput = getSearchInput(view);\n        if (searchInput && searchInput != view.root.activeElement) {\n            let query = defaultQuery(view.state, state.query.spec);\n            if (query.valid)\n                view.dispatch({ effects: setSearchQuery.of(query) });\n            searchInput.focus();\n            searchInput.select();\n        }\n    }\n    else {\n        view.dispatch({ effects: [\n                togglePanel.of(true),\n                state ? setSearchQuery.of(defaultQuery(view.state, state.query.spec)) : StateEffect.appendConfig.of(searchExtensions)\n            ] });\n    }\n    return true;\n};\n/**\nClose the search panel.\n*/\nconst closeSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (!state || !state.panel)\n        return false;\n    let panel = getPanel(view, createSearchPanel);\n    if (panel && panel.dom.contains(view.root.activeElement))\n        view.focus();\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nDefault search-related key bindings.\n\n - Mod-f: [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel)\n - F3, Mod-g: [`findNext`](https://codemirror.net/6/docs/ref/#search.findNext)\n - Shift-F3, Shift-Mod-g: [`findPrevious`](https://codemirror.net/6/docs/ref/#search.findPrevious)\n - Mod-Alt-g: [`gotoLine`](https://codemirror.net/6/docs/ref/#search.gotoLine)\n - Mod-d: [`selectNextOccurrence`](https://codemirror.net/6/docs/ref/#search.selectNextOccurrence)\n*/\nconst searchKeymap = [\n    { key: \"Mod-f\", run: openSearchPanel, scope: \"editor search-panel\" },\n    { key: \"F3\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Mod-g\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Escape\", run: closeSearchPanel, scope: \"editor search-panel\" },\n    { key: \"Mod-Shift-l\", run: selectSelectionMatches },\n    { key: \"Mod-Alt-g\", run: gotoLine },\n    { key: \"Mod-d\", run: selectNextOccurrence, preventDefault: true },\n];\nclass SearchPanel {\n    constructor(view) {\n        this.view = view;\n        let query = this.query = view.state.field(searchState).query.spec;\n        this.commit = this.commit.bind(this);\n        this.searchField = elt(\"input\", {\n            value: query.search,\n            placeholder: phrase(view, \"Find\"),\n            \"aria-label\": phrase(view, \"Find\"),\n            class: \"cm-textfield\",\n            name: \"search\",\n            form: \"\",\n            \"main-field\": \"true\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.replaceField = elt(\"input\", {\n            value: query.replace,\n            placeholder: phrase(view, \"Replace\"),\n            \"aria-label\": phrase(view, \"Replace\"),\n            class: \"cm-textfield\",\n            name: \"replace\",\n            form: \"\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.caseField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"case\",\n            form: \"\",\n            checked: query.caseSensitive,\n            onchange: this.commit\n        });\n        this.reField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"re\",\n            form: \"\",\n            checked: query.regexp,\n            onchange: this.commit\n        });\n        this.wordField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"word\",\n            form: \"\",\n            checked: query.wholeWord,\n            onchange: this.commit\n        });\n        function button(name, onclick, content) {\n            return elt(\"button\", { class: \"cm-button\", name, onclick, type: \"button\" }, content);\n        }\n        this.dom = elt(\"div\", { onkeydown: (e) => this.keydown(e), class: \"cm-search\" }, [\n            this.searchField,\n            button(\"next\", () => findNext(view), [phrase(view, \"next\")]),\n            button(\"prev\", () => findPrevious(view), [phrase(view, \"previous\")]),\n            button(\"select\", () => selectMatches(view), [phrase(view, \"all\")]),\n            elt(\"label\", null, [this.caseField, phrase(view, \"match case\")]),\n            elt(\"label\", null, [this.reField, phrase(view, \"regexp\")]),\n            elt(\"label\", null, [this.wordField, phrase(view, \"by word\")]),\n            ...view.state.readOnly ? [] : [\n                elt(\"br\"),\n                this.replaceField,\n                button(\"replace\", () => replaceNext(view), [phrase(view, \"replace\")]),\n                button(\"replaceAll\", () => replaceAll(view), [phrase(view, \"replace all\")])\n            ],\n            elt(\"button\", {\n                name: \"close\",\n                onclick: () => closeSearchPanel(view),\n                \"aria-label\": phrase(view, \"close\"),\n                type: \"button\"\n            }, [\"\u00D7\"])\n        ]);\n    }\n    commit() {\n        let query = new SearchQuery({\n            search: this.searchField.value,\n            caseSensitive: this.caseField.checked,\n            regexp: this.reField.checked,\n            wholeWord: this.wordField.checked,\n            replace: this.replaceField.value,\n        });\n        if (!query.eq(this.query)) {\n            this.query = query;\n            this.view.dispatch({ effects: setSearchQuery.of(query) });\n        }\n    }\n    keydown(e) {\n        if (runScopeHandlers(this.view, e, \"search-panel\")) {\n            e.preventDefault();\n        }\n        else if (e.keyCode == 13 && e.target == this.searchField) {\n            e.preventDefault();\n            (e.shiftKey ? findPrevious : findNext)(this.view);\n        }\n        else if (e.keyCode == 13 && e.target == this.replaceField) {\n            e.preventDefault();\n            replaceNext(this.view);\n        }\n    }\n    update(update) {\n        for (let tr of update.transactions)\n            for (let effect of tr.effects) {\n                if (effect.is(setSearchQuery) && !effect.value.eq(this.query))\n                    this.setQuery(effect.value);\n            }\n    }\n    setQuery(query) {\n        this.query = query;\n        this.searchField.value = query.search;\n        this.replaceField.value = query.replace;\n        this.caseField.checked = query.caseSensitive;\n        this.reField.checked = query.regexp;\n        this.wordField.checked = query.wholeWord;\n    }\n    mount() {\n        this.searchField.select();\n    }\n    get pos() { return 80; }\n    get top() { return this.view.state.facet(searchConfigFacet).top; }\n}\nfunction phrase(view, phrase) { return view.state.phrase(phrase); }\nconst AnnounceMargin = 30;\nconst Break = /[\\s\\.,:;?!]/;\nfunction announceMatch(view, { from, to }) {\n    let line = view.state.doc.lineAt(from), lineEnd = view.state.doc.lineAt(to).to;\n    let start = Math.max(line.from, from - AnnounceMargin), end = Math.min(lineEnd, to + AnnounceMargin);\n    let text = view.state.sliceDoc(start, end);\n    if (start != line.from) {\n        for (let i = 0; i < AnnounceMargin; i++)\n            if (!Break.test(text[i + 1]) && Break.test(text[i])) {\n                text = text.slice(i);\n                break;\n            }\n    }\n    if (end != lineEnd) {\n        for (let i = text.length - 1; i > text.length - AnnounceMargin; i--)\n            if (!Break.test(text[i - 1]) && Break.test(text[i])) {\n                text = text.slice(0, i);\n                break;\n            }\n    }\n    return EditorView.announce.of(`${view.state.phrase(\"current match\")}. ${text} ${view.state.phrase(\"on line\")} ${line.number}.`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panel.cm-search\": {\n        padding: \"2px 6px 4px\",\n        position: \"relative\",\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"4px\",\n            backgroundColor: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        },\n        \"& input, & button, & label\": {\n            margin: \".2em .6em .2em 0\"\n        },\n        \"& input[type=checkbox]\": {\n            marginRight: \".2em\"\n        },\n        \"& label\": {\n            fontSize: \"80%\",\n            whiteSpace: \"pre\"\n        }\n    },\n    \"&light .cm-searchMatch\": { backgroundColor: \"#ffff0054\" },\n    \"&dark .cm-searchMatch\": { backgroundColor: \"#00ffff8a\" },\n    \"&light .cm-searchMatch-selected\": { backgroundColor: \"#ff6a0054\" },\n    \"&dark .cm-searchMatch-selected\": { backgroundColor: \"#ff00ff8a\" }\n});\nconst searchExtensions = [\n    searchState,\n    /*@__PURE__*/Prec.low(searchHighlighter),\n    baseTheme\n];\n\nexport { RegExpCursor, SearchCursor, SearchQuery, closeSearchPanel, findNext, findPrevious, getSearchQuery, gotoLine, highlightSelectionMatches, openSearchPanel, replaceAll, replaceNext, search, searchKeymap, searchPanelOpen, selectMatches, selectNextOccurrence, selectSelectionMatches, setSearchQuery };\n", "import { Annotation, StateEffect, EditorSelection, codePointAt, codePointSize, fromCodePoint, Facet, combineConfig, StateField, Prec, Text, Transaction, MapMode, RangeValue, RangeSet, CharCategory } from '@codemirror/state';\nimport { Direction, logException, showTooltip, EditorView, ViewPlugin, getTooltip, Decoration, WidgetType, keymap } from '@codemirror/view';\nimport { syntaxTree, indentUnit } from '@codemirror/language';\n\n/**\nAn instance of this is passed to completion source functions.\n*/\nclass CompletionContext {\n    /**\n    Create a new completion context. (Mostly useful for testing\n    completion sources\u2014in the editor, the extension will create\n    these for you.)\n    */\n    constructor(\n    /**\n    The editor state that the completion happens in.\n    */\n    state, \n    /**\n    The position at which the completion is happening.\n    */\n    pos, \n    /**\n    Indicates whether completion was activated explicitly, or\n    implicitly by typing. The usual way to respond to this is to\n    only return completions when either there is part of a\n    completable entity before the cursor, or `explicit` is true.\n    */\n    explicit, \n    /**\n    The editor view. May be undefined if the context was created\n    in a situation where there is no such view available, such as\n    in synchronous updates via\n    [`CompletionResult.update`](https://codemirror.net/6/docs/ref/#autocomplete.CompletionResult.update)\n    or when called by test code.\n    */\n    view) {\n        this.state = state;\n        this.pos = pos;\n        this.explicit = explicit;\n        this.view = view;\n        /**\n        @internal\n        */\n        this.abortListeners = [];\n        /**\n        @internal\n        */\n        this.abortOnDocChange = false;\n    }\n    /**\n    Get the extent, content, and (if there is a token) type of the\n    token before `this.pos`.\n    */\n    tokenBefore(types) {\n        let token = syntaxTree(this.state).resolveInner(this.pos, -1);\n        while (token && types.indexOf(token.name) < 0)\n            token = token.parent;\n        return token ? { from: token.from, to: this.pos,\n            text: this.state.sliceDoc(token.from, this.pos),\n            type: token.type } : null;\n    }\n    /**\n    Get the match of the given expression directly before the\n    cursor.\n    */\n    matchBefore(expr) {\n        let line = this.state.doc.lineAt(this.pos);\n        let start = Math.max(line.from, this.pos - 250);\n        let str = line.text.slice(start - line.from, this.pos - line.from);\n        let found = str.search(ensureAnchor(expr, false));\n        return found < 0 ? null : { from: start + found, to: this.pos, text: str.slice(found) };\n    }\n    /**\n    Yields true when the query has been aborted. Can be useful in\n    asynchronous queries to avoid doing work that will be ignored.\n    */\n    get aborted() { return this.abortListeners == null; }\n    /**\n    Allows you to register abort handlers, which will be called when\n    the query is\n    [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).\n    \n    By default, running queries will not be aborted for regular\n    typing or backspacing, on the assumption that they are likely to\n    return a result with a\n    [`validFor`](https://codemirror.net/6/docs/ref/#autocomplete.CompletionResult.validFor) field that\n    allows the result to be used after all. Passing `onDocChange:\n    true` will cause this query to be aborted for any document\n    change.\n    */\n    addEventListener(type, listener, options) {\n        if (type == \"abort\" && this.abortListeners) {\n            this.abortListeners.push(listener);\n            if (options && options.onDocChange)\n                this.abortOnDocChange = true;\n        }\n    }\n}\nfunction toSet(chars) {\n    let flat = Object.keys(chars).join(\"\");\n    let words = /\\w/.test(flat);\n    if (words)\n        flat = flat.replace(/\\w/g, \"\");\n    return `[${words ? \"\\\\w\" : \"\"}${flat.replace(/[^\\w\\s]/g, \"\\\\$&\")}]`;\n}\nfunction prefixMatch(options) {\n    let first = Object.create(null), rest = Object.create(null);\n    for (let { label } of options) {\n        first[label[0]] = true;\n        for (let i = 1; i < label.length; i++)\n            rest[label[i]] = true;\n    }\n    let source = toSet(first) + toSet(rest) + \"*$\";\n    return [new RegExp(\"^\" + source), new RegExp(source)];\n}\n/**\nGiven a a fixed array of options, return an autocompleter that\ncompletes them.\n*/\nfunction completeFromList(list) {\n    let options = list.map(o => typeof o == \"string\" ? { label: o } : o);\n    let [validFor, match] = options.every(o => /^\\w+$/.test(o.label)) ? [/\\w*$/, /\\w+$/] : prefixMatch(options);\n    return (context) => {\n        let token = context.matchBefore(match);\n        return token || context.explicit ? { from: token ? token.from : context.pos, options, validFor } : null;\n    };\n}\n/**\nWrap the given completion source so that it will only fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent) {\n            if (nodes.indexOf(pos.name) > -1)\n                return source(context);\n            if (pos.type.isTop)\n                break;\n        }\n        return null;\n    };\n}\n/**\nWrap the given completion source so that it will not fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifNotIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent) {\n            if (nodes.indexOf(pos.name) > -1)\n                return null;\n            if (pos.type.isTop)\n                break;\n        }\n        return source(context);\n    };\n}\nclass Option {\n    constructor(completion, source, match, score) {\n        this.completion = completion;\n        this.source = source;\n        this.match = match;\n        this.score = score;\n    }\n}\nfunction cur(state) { return state.selection.main.from; }\n// Make sure the given regexp has a $ at its end and, if `start` is\n// true, a ^ at its start.\nfunction ensureAnchor(expr, start) {\n    var _a;\n    let { source } = expr;\n    let addStart = start && source[0] != \"^\", addEnd = source[source.length - 1] != \"$\";\n    if (!addStart && !addEnd)\n        return expr;\n    return new RegExp(`${addStart ? \"^\" : \"\"}(?:${source})${addEnd ? \"$\" : \"\"}`, (_a = expr.flags) !== null && _a !== void 0 ? _a : (expr.ignoreCase ? \"i\" : \"\"));\n}\n/**\nThis annotation is added to transactions that are produced by\npicking a completion.\n*/\nconst pickedCompletion = /*@__PURE__*/Annotation.define();\n/**\nHelper function that returns a transaction spec which inserts a\ncompletion's text in the main selection range, and any other\nselection range that has the same text in front of it.\n*/\nfunction insertCompletionText(state, text, from, to) {\n    let { main } = state.selection, fromOff = from - main.from, toOff = to - main.from;\n    return Object.assign(Object.assign({}, state.changeByRange(range => {\n        if (range != main && from != to &&\n            state.sliceDoc(range.from + fromOff, range.from + toOff) != state.sliceDoc(from, to))\n            return { range };\n        let lines = state.toText(text);\n        return {\n            changes: { from: range.from + fromOff, to: to == main.from ? range.to : range.from + toOff, insert: lines },\n            range: EditorSelection.cursor(range.from + fromOff + lines.length)\n        };\n    })), { scrollIntoView: true, userEvent: \"input.complete\" });\n}\nconst SourceCache = /*@__PURE__*/new WeakMap();\nfunction asSource(source) {\n    if (!Array.isArray(source))\n        return source;\n    let known = SourceCache.get(source);\n    if (!known)\n        SourceCache.set(source, known = completeFromList(source));\n    return known;\n}\nconst startCompletionEffect = /*@__PURE__*/StateEffect.define();\nconst closeCompletionEffect = /*@__PURE__*/StateEffect.define();\n\n// A pattern matcher for fuzzy completion matching. Create an instance\n// once for a pattern, and then use that to match any number of\n// completions.\nclass FuzzyMatcher {\n    constructor(pattern) {\n        this.pattern = pattern;\n        this.chars = [];\n        this.folded = [];\n        // Buffers reused by calls to `match` to track matched character\n        // positions.\n        this.any = [];\n        this.precise = [];\n        this.byWord = [];\n        this.score = 0;\n        this.matched = [];\n        for (let p = 0; p < pattern.length;) {\n            let char = codePointAt(pattern, p), size = codePointSize(char);\n            this.chars.push(char);\n            let part = pattern.slice(p, p + size), upper = part.toUpperCase();\n            this.folded.push(codePointAt(upper == part ? part.toLowerCase() : upper, 0));\n            p += size;\n        }\n        this.astral = pattern.length != this.chars.length;\n    }\n    ret(score, matched) {\n        this.score = score;\n        this.matched = matched;\n        return this;\n    }\n    // Matches a given word (completion) against the pattern (input).\n    // Will return a boolean indicating whether there was a match and,\n    // on success, set `this.score` to the score, `this.matched` to an\n    // array of `from, to` pairs indicating the matched parts of `word`.\n    //\n    // The score is a number that is more negative the worse the match\n    // is. See `Penalty` above.\n    match(word) {\n        if (this.pattern.length == 0)\n            return this.ret(-100 /* Penalty.NotFull */, []);\n        if (word.length < this.pattern.length)\n            return null;\n        let { chars, folded, any, precise, byWord } = this;\n        // For single-character queries, only match when they occur right\n        // at the start\n        if (chars.length == 1) {\n            let first = codePointAt(word, 0), firstSize = codePointSize(first);\n            let score = firstSize == word.length ? 0 : -100 /* Penalty.NotFull */;\n            if (first == chars[0]) ;\n            else if (first == folded[0])\n                score += -200 /* Penalty.CaseFold */;\n            else\n                return null;\n            return this.ret(score, [0, firstSize]);\n        }\n        let direct = word.indexOf(this.pattern);\n        if (direct == 0)\n            return this.ret(word.length == this.pattern.length ? 0 : -100 /* Penalty.NotFull */, [0, this.pattern.length]);\n        let len = chars.length, anyTo = 0;\n        if (direct < 0) {\n            for (let i = 0, e = Math.min(word.length, 200); i < e && anyTo < len;) {\n                let next = codePointAt(word, i);\n                if (next == chars[anyTo] || next == folded[anyTo])\n                    any[anyTo++] = i;\n                i += codePointSize(next);\n            }\n            // No match, exit immediately\n            if (anyTo < len)\n                return null;\n        }\n        // This tracks the extent of the precise (non-folded, not\n        // necessarily adjacent) match\n        let preciseTo = 0;\n        // Tracks whether there is a match that hits only characters that\n        // appear to be starting words. `byWordFolded` is set to true when\n        // a case folded character is encountered in such a match\n        let byWordTo = 0, byWordFolded = false;\n        // If we've found a partial adjacent match, these track its state\n        let adjacentTo = 0, adjacentStart = -1, adjacentEnd = -1;\n        let hasLower = /[a-z]/.test(word), wordAdjacent = true;\n        // Go over the option's text, scanning for the various kinds of matches\n        for (let i = 0, e = Math.min(word.length, 200), prevType = 0 /* Tp.NonWord */; i < e && byWordTo < len;) {\n            let next = codePointAt(word, i);\n            if (direct < 0) {\n                if (preciseTo < len && next == chars[preciseTo])\n                    precise[preciseTo++] = i;\n                if (adjacentTo < len) {\n                    if (next == chars[adjacentTo] || next == folded[adjacentTo]) {\n                        if (adjacentTo == 0)\n                            adjacentStart = i;\n                        adjacentEnd = i + 1;\n                        adjacentTo++;\n                    }\n                    else {\n                        adjacentTo = 0;\n                    }\n                }\n            }\n            let ch, type = next < 0xff\n                ? (next >= 48 && next <= 57 || next >= 97 && next <= 122 ? 2 /* Tp.Lower */ : next >= 65 && next <= 90 ? 1 /* Tp.Upper */ : 0 /* Tp.NonWord */)\n                : ((ch = fromCodePoint(next)) != ch.toLowerCase() ? 1 /* Tp.Upper */ : ch != ch.toUpperCase() ? 2 /* Tp.Lower */ : 0 /* Tp.NonWord */);\n            if (!i || type == 1 /* Tp.Upper */ && hasLower || prevType == 0 /* Tp.NonWord */ && type != 0 /* Tp.NonWord */) {\n                if (chars[byWordTo] == next || (folded[byWordTo] == next && (byWordFolded = true)))\n                    byWord[byWordTo++] = i;\n                else if (byWord.length)\n                    wordAdjacent = false;\n            }\n            prevType = type;\n            i += codePointSize(next);\n        }\n        if (byWordTo == len && byWord[0] == 0 && wordAdjacent)\n            return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0), byWord, word);\n        if (adjacentTo == len && adjacentStart == 0)\n            return this.ret(-200 /* Penalty.CaseFold */ - word.length + (adjacentEnd == word.length ? 0 : -100 /* Penalty.NotFull */), [0, adjacentEnd]);\n        if (direct > -1)\n            return this.ret(-700 /* Penalty.NotStart */ - word.length, [direct, direct + this.pattern.length]);\n        if (adjacentTo == len)\n            return this.ret(-200 /* Penalty.CaseFold */ + -700 /* Penalty.NotStart */ - word.length, [adjacentStart, adjacentEnd]);\n        if (byWordTo == len)\n            return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0) + -700 /* Penalty.NotStart */ +\n                (wordAdjacent ? 0 : -1100 /* Penalty.Gap */), byWord, word);\n        return chars.length == 2 ? null\n            : this.result((any[0] ? -700 /* Penalty.NotStart */ : 0) + -200 /* Penalty.CaseFold */ + -1100 /* Penalty.Gap */, any, word);\n    }\n    result(score, positions, word) {\n        let result = [], i = 0;\n        for (let pos of positions) {\n            let to = pos + (this.astral ? codePointSize(codePointAt(word, pos)) : 1);\n            if (i && result[i - 1] == pos)\n                result[i - 1] = to;\n            else {\n                result[i++] = pos;\n                result[i++] = to;\n            }\n        }\n        return this.ret(score - word.length, result);\n    }\n}\nclass StrictMatcher {\n    constructor(pattern) {\n        this.pattern = pattern;\n        this.matched = [];\n        this.score = 0;\n        this.folded = pattern.toLowerCase();\n    }\n    match(word) {\n        if (word.length < this.pattern.length)\n            return null;\n        let start = word.slice(0, this.pattern.length);\n        let match = start == this.pattern ? 0 : start.toLowerCase() == this.folded ? -200 /* Penalty.CaseFold */ : null;\n        if (match == null)\n            return null;\n        this.matched = [0, start.length];\n        this.score = match + (word.length == this.pattern.length ? 0 : -100 /* Penalty.NotFull */);\n        return this;\n    }\n}\n\nconst completionConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            activateOnTyping: true,\n            activateOnCompletion: () => false,\n            activateOnTypingDelay: 100,\n            selectOnOpen: true,\n            override: null,\n            closeOnBlur: true,\n            maxRenderedOptions: 100,\n            defaultKeymap: true,\n            tooltipClass: () => \"\",\n            optionClass: () => \"\",\n            aboveCursor: false,\n            icons: true,\n            addToOptions: [],\n            positionInfo: defaultPositionInfo,\n            filterStrict: false,\n            compareCompletions: (a, b) => a.label.localeCompare(b.label),\n            interactionDelay: 75,\n            updateSyncTime: 100\n        }, {\n            defaultKeymap: (a, b) => a && b,\n            closeOnBlur: (a, b) => a && b,\n            icons: (a, b) => a && b,\n            tooltipClass: (a, b) => c => joinClass(a(c), b(c)),\n            optionClass: (a, b) => c => joinClass(a(c), b(c)),\n            addToOptions: (a, b) => a.concat(b),\n            filterStrict: (a, b) => a || b,\n        });\n    }\n});\nfunction joinClass(a, b) {\n    return a ? b ? a + \" \" + b : a : b;\n}\nfunction defaultPositionInfo(view, list, option, info, space, tooltip) {\n    let rtl = view.textDirection == Direction.RTL, left = rtl, narrow = false;\n    let side = \"top\", offset, maxWidth;\n    let spaceLeft = list.left - space.left, spaceRight = space.right - list.right;\n    let infoWidth = info.right - info.left, infoHeight = info.bottom - info.top;\n    if (left && spaceLeft < Math.min(infoWidth, spaceRight))\n        left = false;\n    else if (!left && spaceRight < Math.min(infoWidth, spaceLeft))\n        left = true;\n    if (infoWidth <= (left ? spaceLeft : spaceRight)) {\n        offset = Math.max(space.top, Math.min(option.top, space.bottom - infoHeight)) - list.top;\n        maxWidth = Math.min(400 /* Info.Width */, left ? spaceLeft : spaceRight);\n    }\n    else {\n        narrow = true;\n        maxWidth = Math.min(400 /* Info.Width */, (rtl ? list.right : space.right - list.left) - 30 /* Info.Margin */);\n        let spaceBelow = space.bottom - list.bottom;\n        if (spaceBelow >= infoHeight || spaceBelow > list.top) { // Below the completion\n            offset = option.bottom - list.top;\n        }\n        else { // Above it\n            side = \"bottom\";\n            offset = list.bottom - option.top;\n        }\n    }\n    let scaleY = (list.bottom - list.top) / tooltip.offsetHeight;\n    let scaleX = (list.right - list.left) / tooltip.offsetWidth;\n    return {\n        style: `${side}: ${offset / scaleY}px; max-width: ${maxWidth / scaleX}px`,\n        class: \"cm-completionInfo-\" + (narrow ? (rtl ? \"left-narrow\" : \"right-narrow\") : left ? \"left\" : \"right\")\n    };\n}\n\nfunction optionContent(config) {\n    let content = config.addToOptions.slice();\n    if (config.icons)\n        content.push({\n            render(completion) {\n                let icon = document.createElement(\"div\");\n                icon.classList.add(\"cm-completionIcon\");\n                if (completion.type)\n                    icon.classList.add(...completion.type.split(/\\s+/g).map(cls => \"cm-completionIcon-\" + cls));\n                icon.setAttribute(\"aria-hidden\", \"true\");\n                return icon;\n            },\n            position: 20\n        });\n    content.push({\n        render(completion, _s, _v, match) {\n            let labelElt = document.createElement(\"span\");\n            labelElt.className = \"cm-completionLabel\";\n            let label = completion.displayLabel || completion.label, off = 0;\n            for (let j = 0; j < match.length;) {\n                let from = match[j++], to = match[j++];\n                if (from > off)\n                    labelElt.appendChild(document.createTextNode(label.slice(off, from)));\n                let span = labelElt.appendChild(document.createElement(\"span\"));\n                span.appendChild(document.createTextNode(label.slice(from, to)));\n                span.className = \"cm-completionMatchedText\";\n                off = to;\n            }\n            if (off < label.length)\n                labelElt.appendChild(document.createTextNode(label.slice(off)));\n            return labelElt;\n        },\n        position: 50\n    }, {\n        render(completion) {\n            if (!completion.detail)\n                return null;\n            let detailElt = document.createElement(\"span\");\n            detailElt.className = \"cm-completionDetail\";\n            detailElt.textContent = completion.detail;\n            return detailElt;\n        },\n        position: 80\n    });\n    return content.sort((a, b) => a.position - b.position).map(a => a.render);\n}\nfunction rangeAroundSelected(total, selected, max) {\n    if (total <= max)\n        return { from: 0, to: total };\n    if (selected < 0)\n        selected = 0;\n    if (selected <= (total >> 1)) {\n        let off = Math.floor(selected / max);\n        return { from: off * max, to: (off + 1) * max };\n    }\n    let off = Math.floor((total - selected) / max);\n    return { from: total - (off + 1) * max, to: total - off * max };\n}\nclass CompletionTooltip {\n    constructor(view, stateField, applyCompletion) {\n        this.view = view;\n        this.stateField = stateField;\n        this.applyCompletion = applyCompletion;\n        this.info = null;\n        this.infoDestroy = null;\n        this.placeInfoReq = {\n            read: () => this.measureInfo(),\n            write: (pos) => this.placeInfo(pos),\n            key: this\n        };\n        this.space = null;\n        this.currentClass = \"\";\n        let cState = view.state.field(stateField);\n        let { options, selected } = cState.open;\n        let config = view.state.facet(completionConfig);\n        this.optionContent = optionContent(config);\n        this.optionClass = config.optionClass;\n        this.tooltipClass = config.tooltipClass;\n        this.range = rangeAroundSelected(options.length, selected, config.maxRenderedOptions);\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-tooltip-autocomplete\";\n        this.updateTooltipClass(view.state);\n        this.dom.addEventListener(\"mousedown\", (e) => {\n            let { options } = view.state.field(stateField).open;\n            for (let dom = e.target, match; dom && dom != this.dom; dom = dom.parentNode) {\n                if (dom.nodeName == \"LI\" && (match = /-(\\d+)$/.exec(dom.id)) && +match[1] < options.length) {\n                    this.applyCompletion(view, options[+match[1]]);\n                    e.preventDefault();\n                    return;\n                }\n            }\n        });\n        this.dom.addEventListener(\"focusout\", (e) => {\n            let state = view.state.field(this.stateField, false);\n            if (state && state.tooltip && view.state.facet(completionConfig).closeOnBlur &&\n                e.relatedTarget != view.contentDOM)\n                view.dispatch({ effects: closeCompletionEffect.of(null) });\n        });\n        this.showOptions(options, cState.id);\n    }\n    mount() { this.updateSel(); }\n    showOptions(options, id) {\n        if (this.list)\n            this.list.remove();\n        this.list = this.dom.appendChild(this.createListBox(options, id, this.range));\n        this.list.addEventListener(\"scroll\", () => {\n            if (this.info)\n                this.view.requestMeasure(this.placeInfoReq);\n        });\n    }\n    update(update) {\n        var _a;\n        let cState = update.state.field(this.stateField);\n        let prevState = update.startState.field(this.stateField);\n        this.updateTooltipClass(update.state);\n        if (cState != prevState) {\n            let { options, selected, disabled } = cState.open;\n            if (!prevState.open || prevState.open.options != options) {\n                this.range = rangeAroundSelected(options.length, selected, update.state.facet(completionConfig).maxRenderedOptions);\n                this.showOptions(options, cState.id);\n            }\n            this.updateSel();\n            if (disabled != ((_a = prevState.open) === null || _a === void 0 ? void 0 : _a.disabled))\n                this.dom.classList.toggle(\"cm-tooltip-autocomplete-disabled\", !!disabled);\n        }\n    }\n    updateTooltipClass(state) {\n        let cls = this.tooltipClass(state);\n        if (cls != this.currentClass) {\n            for (let c of this.currentClass.split(\" \"))\n                if (c)\n                    this.dom.classList.remove(c);\n            for (let c of cls.split(\" \"))\n                if (c)\n                    this.dom.classList.add(c);\n            this.currentClass = cls;\n        }\n    }\n    positioned(space) {\n        this.space = space;\n        if (this.info)\n            this.view.requestMeasure(this.placeInfoReq);\n    }\n    updateSel() {\n        let cState = this.view.state.field(this.stateField), open = cState.open;\n        if (open.selected > -1 && open.selected < this.range.from || open.selected >= this.range.to) {\n            this.range = rangeAroundSelected(open.options.length, open.selected, this.view.state.facet(completionConfig).maxRenderedOptions);\n            this.showOptions(open.options, cState.id);\n        }\n        if (this.updateSelectedOption(open.selected)) {\n            this.destroyInfo();\n            let { completion } = open.options[open.selected];\n            let { info } = completion;\n            if (!info)\n                return;\n            let infoResult = typeof info === \"string\" ? document.createTextNode(info) : info(completion);\n            if (!infoResult)\n                return;\n            if (\"then\" in infoResult) {\n                infoResult.then(obj => {\n                    if (obj && this.view.state.field(this.stateField, false) == cState)\n                        this.addInfoPane(obj, completion);\n                }).catch(e => logException(this.view.state, e, \"completion info\"));\n            }\n            else {\n                this.addInfoPane(infoResult, completion);\n            }\n        }\n    }\n    addInfoPane(content, completion) {\n        this.destroyInfo();\n        let wrap = this.info = document.createElement(\"div\");\n        wrap.className = \"cm-tooltip cm-completionInfo\";\n        if (content.nodeType != null) {\n            wrap.appendChild(content);\n            this.infoDestroy = null;\n        }\n        else {\n            let { dom, destroy } = content;\n            wrap.appendChild(dom);\n            this.infoDestroy = destroy || null;\n        }\n        this.dom.appendChild(wrap);\n        this.view.requestMeasure(this.placeInfoReq);\n    }\n    updateSelectedOption(selected) {\n        let set = null;\n        for (let opt = this.list.firstChild, i = this.range.from; opt; opt = opt.nextSibling, i++) {\n            if (opt.nodeName != \"LI\" || !opt.id) {\n                i--; // A section header\n            }\n            else if (i == selected) {\n                if (!opt.hasAttribute(\"aria-selected\")) {\n                    opt.setAttribute(\"aria-selected\", \"true\");\n                    set = opt;\n                }\n            }\n            else {\n                if (opt.hasAttribute(\"aria-selected\"))\n                    opt.removeAttribute(\"aria-selected\");\n            }\n        }\n        if (set)\n            scrollIntoView(this.list, set);\n        return set;\n    }\n    measureInfo() {\n        let sel = this.dom.querySelector(\"[aria-selected]\");\n        if (!sel || !this.info)\n            return null;\n        let listRect = this.dom.getBoundingClientRect();\n        let infoRect = this.info.getBoundingClientRect();\n        let selRect = sel.getBoundingClientRect();\n        let space = this.space;\n        if (!space) {\n            let docElt = this.dom.ownerDocument.documentElement;\n            space = { left: 0, top: 0, right: docElt.clientWidth, bottom: docElt.clientHeight };\n        }\n        if (selRect.top > Math.min(space.bottom, listRect.bottom) - 10 ||\n            selRect.bottom < Math.max(space.top, listRect.top) + 10)\n            return null;\n        return this.view.state.facet(completionConfig).positionInfo(this.view, listRect, selRect, infoRect, space, this.dom);\n    }\n    placeInfo(pos) {\n        if (this.info) {\n            if (pos) {\n                if (pos.style)\n                    this.info.style.cssText = pos.style;\n                this.info.className = \"cm-tooltip cm-completionInfo \" + (pos.class || \"\");\n            }\n            else {\n                this.info.style.cssText = \"top: -1e6px\";\n            }\n        }\n    }\n    createListBox(options, id, range) {\n        const ul = document.createElement(\"ul\");\n        ul.id = id;\n        ul.setAttribute(\"role\", \"listbox\");\n        ul.setAttribute(\"aria-expanded\", \"true\");\n        ul.setAttribute(\"aria-label\", this.view.state.phrase(\"Completions\"));\n        ul.addEventListener(\"mousedown\", e => {\n            // Prevent focus change when clicking the scrollbar\n            if (e.target == ul)\n                e.preventDefault();\n        });\n        let curSection = null;\n        for (let i = range.from; i < range.to; i++) {\n            let { completion, match } = options[i], { section } = completion;\n            if (section) {\n                let name = typeof section == \"string\" ? section : section.name;\n                if (name != curSection && (i > range.from || range.from == 0)) {\n                    curSection = name;\n                    if (typeof section != \"string\" && section.header) {\n                        ul.appendChild(section.header(section));\n                    }\n                    else {\n                        let header = ul.appendChild(document.createElement(\"completion-section\"));\n                        header.textContent = name;\n                    }\n                }\n            }\n            const li = ul.appendChild(document.createElement(\"li\"));\n            li.id = id + \"-\" + i;\n            li.setAttribute(\"role\", \"option\");\n            let cls = this.optionClass(completion);\n            if (cls)\n                li.className = cls;\n            for (let source of this.optionContent) {\n                let node = source(completion, this.view.state, this.view, match);\n                if (node)\n                    li.appendChild(node);\n            }\n        }\n        if (range.from)\n            ul.classList.add(\"cm-completionListIncompleteTop\");\n        if (range.to < options.length)\n            ul.classList.add(\"cm-completionListIncompleteBottom\");\n        return ul;\n    }\n    destroyInfo() {\n        if (this.info) {\n            if (this.infoDestroy)\n                this.infoDestroy();\n            this.info.remove();\n            this.info = null;\n        }\n    }\n    destroy() {\n        this.destroyInfo();\n    }\n}\nfunction completionTooltip(stateField, applyCompletion) {\n    return (view) => new CompletionTooltip(view, stateField, applyCompletion);\n}\nfunction scrollIntoView(container, element) {\n    let parent = container.getBoundingClientRect();\n    let self = element.getBoundingClientRect();\n    let scaleY = parent.height / container.offsetHeight;\n    if (self.top < parent.top)\n        container.scrollTop -= (parent.top - self.top) / scaleY;\n    else if (self.bottom > parent.bottom)\n        container.scrollTop += (self.bottom - parent.bottom) / scaleY;\n}\n\n// Used to pick a preferred option when two options with the same\n// label occur in the result.\nfunction score(option) {\n    return (option.boost || 0) * 100 + (option.apply ? 10 : 0) + (option.info ? 5 : 0) +\n        (option.type ? 1 : 0);\n}\nfunction sortOptions(active, state) {\n    let options = [];\n    let sections = null;\n    let addOption = (option) => {\n        options.push(option);\n        let { section } = option.completion;\n        if (section) {\n            if (!sections)\n                sections = [];\n            let name = typeof section == \"string\" ? section : section.name;\n            if (!sections.some(s => s.name == name))\n                sections.push(typeof section == \"string\" ? { name } : section);\n        }\n    };\n    let conf = state.facet(completionConfig);\n    for (let a of active)\n        if (a.hasResult()) {\n            let getMatch = a.result.getMatch;\n            if (a.result.filter === false) {\n                for (let option of a.result.options) {\n                    addOption(new Option(option, a.source, getMatch ? getMatch(option) : [], 1e9 - options.length));\n                }\n            }\n            else {\n                let pattern = state.sliceDoc(a.from, a.to), match;\n                let matcher = conf.filterStrict ? new StrictMatcher(pattern) : new FuzzyMatcher(pattern);\n                for (let option of a.result.options)\n                    if (match = matcher.match(option.label)) {\n                        let matched = !option.displayLabel ? match.matched : getMatch ? getMatch(option, match.matched) : [];\n                        addOption(new Option(option, a.source, matched, match.score + (option.boost || 0)));\n                    }\n            }\n        }\n    if (sections) {\n        let sectionOrder = Object.create(null), pos = 0;\n        let cmp = (a, b) => { var _a, _b; return ((_a = a.rank) !== null && _a !== void 0 ? _a : 1e9) - ((_b = b.rank) !== null && _b !== void 0 ? _b : 1e9) || (a.name < b.name ? -1 : 1); };\n        for (let s of sections.sort(cmp)) {\n            pos -= 1e5;\n            sectionOrder[s.name] = pos;\n        }\n        for (let option of options) {\n            let { section } = option.completion;\n            if (section)\n                option.score += sectionOrder[typeof section == \"string\" ? section : section.name];\n        }\n    }\n    let result = [], prev = null;\n    let compare = conf.compareCompletions;\n    for (let opt of options.sort((a, b) => (b.score - a.score) || compare(a.completion, b.completion))) {\n        let cur = opt.completion;\n        if (!prev || prev.label != cur.label || prev.detail != cur.detail ||\n            (prev.type != null && cur.type != null && prev.type != cur.type) ||\n            prev.apply != cur.apply || prev.boost != cur.boost)\n            result.push(opt);\n        else if (score(opt.completion) > score(prev))\n            result[result.length - 1] = opt;\n        prev = opt.completion;\n    }\n    return result;\n}\nclass CompletionDialog {\n    constructor(options, attrs, tooltip, timestamp, selected, disabled) {\n        this.options = options;\n        this.attrs = attrs;\n        this.tooltip = tooltip;\n        this.timestamp = timestamp;\n        this.selected = selected;\n        this.disabled = disabled;\n    }\n    setSelected(selected, id) {\n        return selected == this.selected || selected >= this.options.length ? this\n            : new CompletionDialog(this.options, makeAttrs(id, selected), this.tooltip, this.timestamp, selected, this.disabled);\n    }\n    static build(active, state, id, prev, conf, didSetActive) {\n        if (prev && !didSetActive && active.some(s => s.isPending))\n            return prev.setDisabled();\n        let options = sortOptions(active, state);\n        if (!options.length)\n            return prev && active.some(a => a.isPending) ? prev.setDisabled() : null;\n        let selected = state.facet(completionConfig).selectOnOpen ? 0 : -1;\n        if (prev && prev.selected != selected && prev.selected != -1) {\n            let selectedValue = prev.options[prev.selected].completion;\n            for (let i = 0; i < options.length; i++)\n                if (options[i].completion == selectedValue) {\n                    selected = i;\n                    break;\n                }\n        }\n        return new CompletionDialog(options, makeAttrs(id, selected), {\n            pos: active.reduce((a, b) => b.hasResult() ? Math.min(a, b.from) : a, 1e8),\n            create: createTooltip,\n            above: conf.aboveCursor,\n        }, prev ? prev.timestamp : Date.now(), selected, false);\n    }\n    map(changes) {\n        return new CompletionDialog(this.options, this.attrs, Object.assign(Object.assign({}, this.tooltip), { pos: changes.mapPos(this.tooltip.pos) }), this.timestamp, this.selected, this.disabled);\n    }\n    setDisabled() {\n        return new CompletionDialog(this.options, this.attrs, this.tooltip, this.timestamp, this.selected, true);\n    }\n}\nclass CompletionState {\n    constructor(active, id, open) {\n        this.active = active;\n        this.id = id;\n        this.open = open;\n    }\n    static start() {\n        return new CompletionState(none, \"cm-ac-\" + Math.floor(Math.random() * 2e6).toString(36), null);\n    }\n    update(tr) {\n        let { state } = tr, conf = state.facet(completionConfig);\n        let sources = conf.override ||\n            state.languageDataAt(\"autocomplete\", cur(state)).map(asSource);\n        let active = sources.map(source => {\n            let value = this.active.find(s => s.source == source) ||\n                new ActiveSource(source, this.active.some(a => a.state != 0 /* State.Inactive */) ? 1 /* State.Pending */ : 0 /* State.Inactive */);\n            return value.update(tr, conf);\n        });\n        if (active.length == this.active.length && active.every((a, i) => a == this.active[i]))\n            active = this.active;\n        let open = this.open, didSet = tr.effects.some(e => e.is(setActiveEffect));\n        if (open && tr.docChanged)\n            open = open.map(tr.changes);\n        if (tr.selection || active.some(a => a.hasResult() && tr.changes.touchesRange(a.from, a.to)) ||\n            !sameResults(active, this.active) || didSet)\n            open = CompletionDialog.build(active, state, this.id, open, conf, didSet);\n        else if (open && open.disabled && !active.some(a => a.isPending))\n            open = null;\n        if (!open && active.every(a => !a.isPending) && active.some(a => a.hasResult()))\n            active = active.map(a => a.hasResult() ? new ActiveSource(a.source, 0 /* State.Inactive */) : a);\n        for (let effect of tr.effects)\n            if (effect.is(setSelectedEffect))\n                open = open && open.setSelected(effect.value, this.id);\n        return active == this.active && open == this.open ? this : new CompletionState(active, this.id, open);\n    }\n    get tooltip() { return this.open ? this.open.tooltip : null; }\n    get attrs() { return this.open ? this.open.attrs : this.active.length ? baseAttrs : noAttrs; }\n}\nfunction sameResults(a, b) {\n    if (a == b)\n        return true;\n    for (let iA = 0, iB = 0;;) {\n        while (iA < a.length && !a[iA].hasResult())\n            iA++;\n        while (iB < b.length && !b[iB].hasResult())\n            iB++;\n        let endA = iA == a.length, endB = iB == b.length;\n        if (endA || endB)\n            return endA == endB;\n        if (a[iA++].result != b[iB++].result)\n            return false;\n    }\n}\nconst baseAttrs = {\n    \"aria-autocomplete\": \"list\"\n};\nconst noAttrs = {};\nfunction makeAttrs(id, selected) {\n    let result = {\n        \"aria-autocomplete\": \"list\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-controls\": id\n    };\n    if (selected > -1)\n        result[\"aria-activedescendant\"] = id + \"-\" + selected;\n    return result;\n}\nconst none = [];\nfunction getUpdateType(tr, conf) {\n    if (tr.isUserEvent(\"input.complete\")) {\n        let completion = tr.annotation(pickedCompletion);\n        if (completion && conf.activateOnCompletion(completion))\n            return 4 /* UpdateType.Activate */ | 8 /* UpdateType.Reset */;\n    }\n    let typing = tr.isUserEvent(\"input.type\");\n    return typing && conf.activateOnTyping ? 4 /* UpdateType.Activate */ | 1 /* UpdateType.Typing */\n        : typing ? 1 /* UpdateType.Typing */\n            : tr.isUserEvent(\"delete.backward\") ? 2 /* UpdateType.Backspacing */\n                : tr.selection ? 8 /* UpdateType.Reset */\n                    : tr.docChanged ? 16 /* UpdateType.ResetIfTouching */ : 0 /* UpdateType.None */;\n}\nclass ActiveSource {\n    constructor(source, state, explicit = false) {\n        this.source = source;\n        this.state = state;\n        this.explicit = explicit;\n    }\n    hasResult() { return false; }\n    get isPending() { return this.state == 1 /* State.Pending */; }\n    update(tr, conf) {\n        let type = getUpdateType(tr, conf), value = this;\n        if ((type & 8 /* UpdateType.Reset */) || (type & 16 /* UpdateType.ResetIfTouching */) && this.touches(tr))\n            value = new ActiveSource(value.source, 0 /* State.Inactive */);\n        if ((type & 4 /* UpdateType.Activate */) && value.state == 0 /* State.Inactive */)\n            value = new ActiveSource(this.source, 1 /* State.Pending */);\n        value = value.updateFor(tr, type);\n        for (let effect of tr.effects) {\n            if (effect.is(startCompletionEffect))\n                value = new ActiveSource(value.source, 1 /* State.Pending */, effect.value);\n            else if (effect.is(closeCompletionEffect))\n                value = new ActiveSource(value.source, 0 /* State.Inactive */);\n            else if (effect.is(setActiveEffect))\n                for (let active of effect.value)\n                    if (active.source == value.source)\n                        value = active;\n        }\n        return value;\n    }\n    updateFor(tr, type) { return this.map(tr.changes); }\n    map(changes) { return this; }\n    touches(tr) {\n        return tr.changes.touchesRange(cur(tr.state));\n    }\n}\nclass ActiveResult extends ActiveSource {\n    constructor(source, explicit, limit, result, from, to) {\n        super(source, 3 /* State.Result */, explicit);\n        this.limit = limit;\n        this.result = result;\n        this.from = from;\n        this.to = to;\n    }\n    hasResult() { return true; }\n    updateFor(tr, type) {\n        var _a;\n        if (!(type & 3 /* UpdateType.SimpleInteraction */))\n            return this.map(tr.changes);\n        let result = this.result;\n        if (result.map && !tr.changes.empty)\n            result = result.map(result, tr.changes);\n        let from = tr.changes.mapPos(this.from), to = tr.changes.mapPos(this.to, 1);\n        let pos = cur(tr.state);\n        if (pos > to || !result ||\n            (type & 2 /* UpdateType.Backspacing */) && (cur(tr.startState) == this.from || pos < this.limit))\n            return new ActiveSource(this.source, type & 4 /* UpdateType.Activate */ ? 1 /* State.Pending */ : 0 /* State.Inactive */);\n        let limit = tr.changes.mapPos(this.limit);\n        if (checkValid(result.validFor, tr.state, from, to))\n            return new ActiveResult(this.source, this.explicit, limit, result, from, to);\n        if (result.update &&\n            (result = result.update(result, from, to, new CompletionContext(tr.state, pos, false))))\n            return new ActiveResult(this.source, this.explicit, limit, result, result.from, (_a = result.to) !== null && _a !== void 0 ? _a : cur(tr.state));\n        return new ActiveSource(this.source, 1 /* State.Pending */, this.explicit);\n    }\n    map(mapping) {\n        if (mapping.empty)\n            return this;\n        let result = this.result.map ? this.result.map(this.result, mapping) : this.result;\n        if (!result)\n            return new ActiveSource(this.source, 0 /* State.Inactive */);\n        return new ActiveResult(this.source, this.explicit, mapping.mapPos(this.limit), this.result, mapping.mapPos(this.from), mapping.mapPos(this.to, 1));\n    }\n    touches(tr) {\n        return tr.changes.touchesRange(this.from, this.to);\n    }\n}\nfunction checkValid(validFor, state, from, to) {\n    if (!validFor)\n        return false;\n    let text = state.sliceDoc(from, to);\n    return typeof validFor == \"function\" ? validFor(text, from, to, state) : ensureAnchor(validFor, true).test(text);\n}\nconst setActiveEffect = /*@__PURE__*/StateEffect.define({\n    map(sources, mapping) { return sources.map(s => s.map(mapping)); }\n});\nconst setSelectedEffect = /*@__PURE__*/StateEffect.define();\nconst completionState = /*@__PURE__*/StateField.define({\n    create() { return CompletionState.start(); },\n    update(value, tr) { return value.update(tr); },\n    provide: f => [\n        showTooltip.from(f, val => val.tooltip),\n        EditorView.contentAttributes.from(f, state => state.attrs)\n    ]\n});\nfunction applyCompletion(view, option) {\n    const apply = option.completion.apply || option.completion.label;\n    let result = view.state.field(completionState).active.find(a => a.source == option.source);\n    if (!(result instanceof ActiveResult))\n        return false;\n    if (typeof apply == \"string\")\n        view.dispatch(Object.assign(Object.assign({}, insertCompletionText(view.state, apply, result.from, result.to)), { annotations: pickedCompletion.of(option.completion) }));\n    else\n        apply(view, option.completion, result.from, result.to);\n    return true;\n}\nconst createTooltip = /*@__PURE__*/completionTooltip(completionState, applyCompletion);\n\n/**\nReturns a command that moves the completion selection forward or\nbackward by the given amount.\n*/\nfunction moveCompletionSelection(forward, by = \"option\") {\n    return (view) => {\n        let cState = view.state.field(completionState, false);\n        if (!cState || !cState.open || cState.open.disabled ||\n            Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay)\n            return false;\n        let step = 1, tooltip;\n        if (by == \"page\" && (tooltip = getTooltip(view, cState.open.tooltip)))\n            step = Math.max(2, Math.floor(tooltip.dom.offsetHeight /\n                tooltip.dom.querySelector(\"li\").offsetHeight) - 1);\n        let { length } = cState.open.options;\n        let selected = cState.open.selected > -1 ? cState.open.selected + step * (forward ? 1 : -1) : forward ? 0 : length - 1;\n        if (selected < 0)\n            selected = by == \"page\" ? 0 : length - 1;\n        else if (selected >= length)\n            selected = by == \"page\" ? length - 1 : 0;\n        view.dispatch({ effects: setSelectedEffect.of(selected) });\n        return true;\n    };\n}\n/**\nAccept the current completion.\n*/\nconst acceptCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (view.state.readOnly || !cState || !cState.open || cState.open.selected < 0 || cState.open.disabled ||\n        Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay)\n        return false;\n    return applyCompletion(view, cState.open.options[cState.open.selected]);\n};\n/**\nExplicitly start autocompletion.\n*/\nconst startCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState)\n        return false;\n    view.dispatch({ effects: startCompletionEffect.of(true) });\n    return true;\n};\n/**\nClose the currently active completion.\n*/\nconst closeCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState || !cState.active.some(a => a.state != 0 /* State.Inactive */))\n        return false;\n    view.dispatch({ effects: closeCompletionEffect.of(null) });\n    return true;\n};\nclass RunningQuery {\n    constructor(active, context) {\n        this.active = active;\n        this.context = context;\n        this.time = Date.now();\n        this.updates = [];\n        // Note that 'undefined' means 'not done yet', whereas 'null' means\n        // 'query returned null'.\n        this.done = undefined;\n    }\n}\nconst MaxUpdateCount = 50, MinAbortTime = 1000;\nconst completionPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.debounceUpdate = -1;\n        this.running = [];\n        this.debounceAccept = -1;\n        this.pendingStart = false;\n        this.composing = 0 /* CompositionState.None */;\n        for (let active of view.state.field(completionState).active)\n            if (active.isPending)\n                this.startQuery(active);\n    }\n    update(update) {\n        let cState = update.state.field(completionState);\n        let conf = update.state.facet(completionConfig);\n        if (!update.selectionSet && !update.docChanged && update.startState.field(completionState) == cState)\n            return;\n        let doesReset = update.transactions.some(tr => {\n            let type = getUpdateType(tr, conf);\n            return (type & 8 /* UpdateType.Reset */) || (tr.selection || tr.docChanged) && !(type & 3 /* UpdateType.SimpleInteraction */);\n        });\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (doesReset ||\n                query.context.abortOnDocChange && update.docChanged ||\n                query.updates.length + update.transactions.length > MaxUpdateCount && Date.now() - query.time > MinAbortTime) {\n                for (let handler of query.context.abortListeners) {\n                    try {\n                        handler();\n                    }\n                    catch (e) {\n                        logException(this.view.state, e);\n                    }\n                }\n                query.context.abortListeners = null;\n                this.running.splice(i--, 1);\n            }\n            else {\n                query.updates.push(...update.transactions);\n            }\n        }\n        if (this.debounceUpdate > -1)\n            clearTimeout(this.debounceUpdate);\n        if (update.transactions.some(tr => tr.effects.some(e => e.is(startCompletionEffect))))\n            this.pendingStart = true;\n        let delay = this.pendingStart ? 50 : conf.activateOnTypingDelay;\n        this.debounceUpdate = cState.active.some(a => a.isPending && !this.running.some(q => q.active.source == a.source))\n            ? setTimeout(() => this.startUpdate(), delay) : -1;\n        if (this.composing != 0 /* CompositionState.None */)\n            for (let tr of update.transactions) {\n                if (tr.isUserEvent(\"input.type\"))\n                    this.composing = 2 /* CompositionState.Changed */;\n                else if (this.composing == 2 /* CompositionState.Changed */ && tr.selection)\n                    this.composing = 3 /* CompositionState.ChangedAndMoved */;\n            }\n    }\n    startUpdate() {\n        this.debounceUpdate = -1;\n        this.pendingStart = false;\n        let { state } = this.view, cState = state.field(completionState);\n        for (let active of cState.active) {\n            if (active.isPending && !this.running.some(r => r.active.source == active.source))\n                this.startQuery(active);\n        }\n        if (this.running.length && cState.open && cState.open.disabled)\n            this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(completionConfig).updateSyncTime);\n    }\n    startQuery(active) {\n        let { state } = this.view, pos = cur(state);\n        let context = new CompletionContext(state, pos, active.explicit, this.view);\n        let pending = new RunningQuery(active, context);\n        this.running.push(pending);\n        Promise.resolve(active.source(context)).then(result => {\n            if (!pending.context.aborted) {\n                pending.done = result || null;\n                this.scheduleAccept();\n            }\n        }, err => {\n            this.view.dispatch({ effects: closeCompletionEffect.of(null) });\n            logException(this.view.state, err);\n        });\n    }\n    scheduleAccept() {\n        if (this.running.every(q => q.done !== undefined))\n            this.accept();\n        else if (this.debounceAccept < 0)\n            this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(completionConfig).updateSyncTime);\n    }\n    // For each finished query in this.running, try to create a result\n    // or, if appropriate, restart the query.\n    accept() {\n        var _a;\n        if (this.debounceAccept > -1)\n            clearTimeout(this.debounceAccept);\n        this.debounceAccept = -1;\n        let updated = [];\n        let conf = this.view.state.facet(completionConfig), cState = this.view.state.field(completionState);\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (query.done === undefined)\n                continue;\n            this.running.splice(i--, 1);\n            if (query.done) {\n                let pos = cur(query.updates.length ? query.updates[0].startState : this.view.state);\n                let limit = Math.min(pos, query.done.from + (query.active.explicit ? 0 : 1));\n                let active = new ActiveResult(query.active.source, query.active.explicit, limit, query.done, query.done.from, (_a = query.done.to) !== null && _a !== void 0 ? _a : pos);\n                // Replay the transactions that happened since the start of\n                // the request and see if that preserves the result\n                for (let tr of query.updates)\n                    active = active.update(tr, conf);\n                if (active.hasResult()) {\n                    updated.push(active);\n                    continue;\n                }\n            }\n            let current = cState.active.find(a => a.source == query.active.source);\n            if (current && current.isPending) {\n                if (query.done == null) {\n                    // Explicitly failed. Should clear the pending status if it\n                    // hasn't been re-set in the meantime.\n                    let active = new ActiveSource(query.active.source, 0 /* State.Inactive */);\n                    for (let tr of query.updates)\n                        active = active.update(tr, conf);\n                    if (!active.isPending)\n                        updated.push(active);\n                }\n                else {\n                    // Cleared by subsequent transactions. Restart.\n                    this.startQuery(current);\n                }\n            }\n        }\n        if (updated.length || cState.open && cState.open.disabled)\n            this.view.dispatch({ effects: setActiveEffect.of(updated) });\n    }\n}, {\n    eventHandlers: {\n        blur(event) {\n            let state = this.view.state.field(completionState, false);\n            if (state && state.tooltip && this.view.state.facet(completionConfig).closeOnBlur) {\n                let dialog = state.open && getTooltip(this.view, state.open.tooltip);\n                if (!dialog || !dialog.dom.contains(event.relatedTarget))\n                    setTimeout(() => this.view.dispatch({ effects: closeCompletionEffect.of(null) }), 10);\n            }\n        },\n        compositionstart() {\n            this.composing = 1 /* CompositionState.Started */;\n        },\n        compositionend() {\n            if (this.composing == 3 /* CompositionState.ChangedAndMoved */) {\n                // Safari fires compositionend events synchronously, possibly\n                // from inside an update, so dispatch asynchronously to avoid reentrancy\n                setTimeout(() => this.view.dispatch({ effects: startCompletionEffect.of(false) }), 20);\n            }\n            this.composing = 0 /* CompositionState.None */;\n        }\n    }\n});\nconst windows = typeof navigator == \"object\" && /*@__PURE__*//Win/.test(navigator.platform);\nconst commitCharacters = /*@__PURE__*/Prec.highest(/*@__PURE__*/EditorView.domEventHandlers({\n    keydown(event, view) {\n        let field = view.state.field(completionState, false);\n        if (!field || !field.open || field.open.disabled || field.open.selected < 0 ||\n            event.key.length > 1 || event.ctrlKey && !(windows && event.altKey) || event.metaKey)\n            return false;\n        let option = field.open.options[field.open.selected];\n        let result = field.active.find(a => a.source == option.source);\n        let commitChars = option.completion.commitCharacters || result.result.commitCharacters;\n        if (commitChars && commitChars.indexOf(event.key) > -1)\n            applyCompletion(view, option);\n        return false;\n    }\n}));\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-tooltip.cm-tooltip-autocomplete\": {\n        \"& > ul\": {\n            fontFamily: \"monospace\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden auto\",\n            maxWidth_fallback: \"700px\",\n            maxWidth: \"min(700px, 95vw)\",\n            minWidth: \"250px\",\n            maxHeight: \"10em\",\n            height: \"100%\",\n            listStyle: \"none\",\n            margin: 0,\n            padding: 0,\n            \"& > li, & > completion-section\": {\n                padding: \"1px 3px\",\n                lineHeight: 1.2\n            },\n            \"& > li\": {\n                overflowX: \"hidden\",\n                textOverflow: \"ellipsis\",\n                cursor: \"pointer\"\n            },\n            \"& > completion-section\": {\n                display: \"list-item\",\n                borderBottom: \"1px solid silver\",\n                paddingLeft: \"0.5em\",\n                opacity: 0.7\n            }\n        }\n    },\n    \"&light .cm-tooltip-autocomplete ul li[aria-selected]\": {\n        background: \"#17c\",\n        color: \"white\",\n    },\n    \"&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]\": {\n        background: \"#777\",\n    },\n    \"&dark .cm-tooltip-autocomplete ul li[aria-selected]\": {\n        background: \"#347\",\n        color: \"white\",\n    },\n    \"&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]\": {\n        background: \"#444\",\n    },\n    \".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after\": {\n        content: '\"\u00B7\u00B7\u00B7\"',\n        opacity: 0.5,\n        display: \"block\",\n        textAlign: \"center\"\n    },\n    \".cm-tooltip.cm-completionInfo\": {\n        position: \"absolute\",\n        padding: \"3px 9px\",\n        width: \"max-content\",\n        maxWidth: `${400 /* Info.Width */}px`,\n        boxSizing: \"border-box\",\n        whiteSpace: \"pre-line\"\n    },\n    \".cm-completionInfo.cm-completionInfo-left\": { right: \"100%\" },\n    \".cm-completionInfo.cm-completionInfo-right\": { left: \"100%\" },\n    \".cm-completionInfo.cm-completionInfo-left-narrow\": { right: `${30 /* Info.Margin */}px` },\n    \".cm-completionInfo.cm-completionInfo-right-narrow\": { left: `${30 /* Info.Margin */}px` },\n    \"&light .cm-snippetField\": { backgroundColor: \"#00000022\" },\n    \"&dark .cm-snippetField\": { backgroundColor: \"#ffffff22\" },\n    \".cm-snippetFieldPosition\": {\n        verticalAlign: \"text-top\",\n        width: 0,\n        height: \"1.15em\",\n        display: \"inline-block\",\n        margin: \"0 -0.7px -.7em\",\n        borderLeft: \"1.4px dotted #888\"\n    },\n    \".cm-completionMatchedText\": {\n        textDecoration: \"underline\"\n    },\n    \".cm-completionDetail\": {\n        marginLeft: \"0.5em\",\n        fontStyle: \"italic\"\n    },\n    \".cm-completionIcon\": {\n        fontSize: \"90%\",\n        width: \".8em\",\n        display: \"inline-block\",\n        textAlign: \"center\",\n        paddingRight: \".6em\",\n        opacity: \"0.6\",\n        boxSizing: \"content-box\"\n    },\n    \".cm-completionIcon-function, .cm-completionIcon-method\": {\n        \"&:after\": { content: \"'\u0192'\" }\n    },\n    \".cm-completionIcon-class\": {\n        \"&:after\": { content: \"'\u25CB'\" }\n    },\n    \".cm-completionIcon-interface\": {\n        \"&:after\": { content: \"'\u25CC'\" }\n    },\n    \".cm-completionIcon-variable\": {\n        \"&:after\": { content: \"'\uD835\uDC65'\" }\n    },\n    \".cm-completionIcon-constant\": {\n        \"&:after\": { content: \"'\uD835\uDC36'\" }\n    },\n    \".cm-completionIcon-type\": {\n        \"&:after\": { content: \"'\uD835\uDC61'\" }\n    },\n    \".cm-completionIcon-enum\": {\n        \"&:after\": { content: \"'\u222A'\" }\n    },\n    \".cm-completionIcon-property\": {\n        \"&:after\": { content: \"'\u25A1'\" }\n    },\n    \".cm-completionIcon-keyword\": {\n        \"&:after\": { content: \"'\uD83D\uDD11\\uFE0E'\" } // Disable emoji rendering\n    },\n    \".cm-completionIcon-namespace\": {\n        \"&:after\": { content: \"'\u25A2'\" }\n    },\n    \".cm-completionIcon-text\": {\n        \"&:after\": { content: \"'abc'\", fontSize: \"50%\", verticalAlign: \"middle\" }\n    }\n});\n\nclass FieldPos {\n    constructor(field, line, from, to) {\n        this.field = field;\n        this.line = line;\n        this.from = from;\n        this.to = to;\n    }\n}\nclass FieldRange {\n    constructor(field, from, to) {\n        this.field = field;\n        this.from = from;\n        this.to = to;\n    }\n    map(changes) {\n        let from = changes.mapPos(this.from, -1, MapMode.TrackDel);\n        let to = changes.mapPos(this.to, 1, MapMode.TrackDel);\n        return from == null || to == null ? null : new FieldRange(this.field, from, to);\n    }\n}\nclass Snippet {\n    constructor(lines, fieldPositions) {\n        this.lines = lines;\n        this.fieldPositions = fieldPositions;\n    }\n    instantiate(state, pos) {\n        let text = [], lineStart = [pos];\n        let lineObj = state.doc.lineAt(pos), baseIndent = /^\\s*/.exec(lineObj.text)[0];\n        for (let line of this.lines) {\n            if (text.length) {\n                let indent = baseIndent, tabs = /^\\t*/.exec(line)[0].length;\n                for (let i = 0; i < tabs; i++)\n                    indent += state.facet(indentUnit);\n                lineStart.push(pos + indent.length - tabs);\n                line = indent + line.slice(tabs);\n            }\n            text.push(line);\n            pos += line.length + 1;\n        }\n        let ranges = this.fieldPositions.map(pos => new FieldRange(pos.field, lineStart[pos.line] + pos.from, lineStart[pos.line] + pos.to));\n        return { text, ranges };\n    }\n    static parse(template) {\n        let fields = [];\n        let lines = [], positions = [], m;\n        for (let line of template.split(/\\r\\n?|\\n/)) {\n            while (m = /[#$]\\{(?:(\\d+)(?::([^}]*))?|((?:\\\\[{}]|[^}])*))\\}/.exec(line)) {\n                let seq = m[1] ? +m[1] : null, rawName = m[2] || m[3] || \"\", found = -1;\n                let name = rawName.replace(/\\\\[{}]/g, m => m[1]);\n                for (let i = 0; i < fields.length; i++) {\n                    if (seq != null ? fields[i].seq == seq : name ? fields[i].name == name : false)\n                        found = i;\n                }\n                if (found < 0) {\n                    let i = 0;\n                    while (i < fields.length && (seq == null || (fields[i].seq != null && fields[i].seq < seq)))\n                        i++;\n                    fields.splice(i, 0, { seq, name });\n                    found = i;\n                    for (let pos of positions)\n                        if (pos.field >= found)\n                            pos.field++;\n                }\n                positions.push(new FieldPos(found, lines.length, m.index, m.index + name.length));\n                line = line.slice(0, m.index) + rawName + line.slice(m.index + m[0].length);\n            }\n            line = line.replace(/\\\\([{}])/g, (_, brace, index) => {\n                for (let pos of positions)\n                    if (pos.line == lines.length && pos.from > index) {\n                        pos.from--;\n                        pos.to--;\n                    }\n                return brace;\n            });\n            lines.push(line);\n        }\n        return new Snippet(lines, positions);\n    }\n}\nlet fieldMarker = /*@__PURE__*/Decoration.widget({ widget: /*@__PURE__*/new class extends WidgetType {\n        toDOM() {\n            let span = document.createElement(\"span\");\n            span.className = \"cm-snippetFieldPosition\";\n            return span;\n        }\n        ignoreEvent() { return false; }\n    } });\nlet fieldRange = /*@__PURE__*/Decoration.mark({ class: \"cm-snippetField\" });\nclass ActiveSnippet {\n    constructor(ranges, active) {\n        this.ranges = ranges;\n        this.active = active;\n        this.deco = Decoration.set(ranges.map(r => (r.from == r.to ? fieldMarker : fieldRange).range(r.from, r.to)));\n    }\n    map(changes) {\n        let ranges = [];\n        for (let r of this.ranges) {\n            let mapped = r.map(changes);\n            if (!mapped)\n                return null;\n            ranges.push(mapped);\n        }\n        return new ActiveSnippet(ranges, this.active);\n    }\n    selectionInsideField(sel) {\n        return sel.ranges.every(range => this.ranges.some(r => r.field == this.active && r.from <= range.from && r.to >= range.to));\n    }\n}\nconst setActive = /*@__PURE__*/StateEffect.define({\n    map(value, changes) { return value && value.map(changes); }\n});\nconst moveToField = /*@__PURE__*/StateEffect.define();\nconst snippetState = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setActive))\n                return effect.value;\n            if (effect.is(moveToField) && value)\n                return new ActiveSnippet(value.ranges, effect.value);\n        }\n        if (value && tr.docChanged)\n            value = value.map(tr.changes);\n        if (value && tr.selection && !value.selectionInsideField(tr.selection))\n            value = null;\n        return value;\n    },\n    provide: f => EditorView.decorations.from(f, val => val ? val.deco : Decoration.none)\n});\nfunction fieldSelection(ranges, field) {\n    return EditorSelection.create(ranges.filter(r => r.field == field).map(r => EditorSelection.range(r.from, r.to)));\n}\n/**\nConvert a snippet template to a function that can\n[apply](https://codemirror.net/6/docs/ref/#autocomplete.Completion.apply) it. Snippets are written\nusing syntax like this:\n\n    \"for (let ${index} = 0; ${index} < ${end}; ${index}++) {\\n\\t${}\\n}\"\n\nEach `${}` placeholder (you may also use `#{}`) indicates a field\nthat the user can fill in. Its name, if any, will be the default\ncontent for the field.\n\nWhen the snippet is activated by calling the returned function,\nthe code is inserted at the given position. Newlines in the\ntemplate are indented by the indentation of the start line, plus\none [indent unit](https://codemirror.net/6/docs/ref/#language.indentUnit) per tab character after\nthe newline.\n\nOn activation, (all instances of) the first field are selected.\nThe user can move between fields with Tab and Shift-Tab as long as\nthe fields are active. Moving to the last field or moving the\ncursor out of the current field deactivates the fields.\n\nThe order of fields defaults to textual order, but you can add\nnumbers to placeholders (`${1}` or `${1:defaultText}`) to provide\na custom order.\n\nTo include a literal `{` or `}` in your template, put a backslash\nin front of it. This will be removed and the brace will not be\ninterpreted as indicating a placeholder.\n*/\nfunction snippet(template) {\n    let snippet = Snippet.parse(template);\n    return (editor, completion, from, to) => {\n        let { text, ranges } = snippet.instantiate(editor.state, from);\n        let { main } = editor.state.selection;\n        let spec = {\n            changes: { from, to: to == main.from ? main.to : to, insert: Text.of(text) },\n            scrollIntoView: true,\n            annotations: completion ? [pickedCompletion.of(completion), Transaction.userEvent.of(\"input.complete\")] : undefined\n        };\n        if (ranges.length)\n            spec.selection = fieldSelection(ranges, 0);\n        if (ranges.some(r => r.field > 0)) {\n            let active = new ActiveSnippet(ranges, 0);\n            let effects = spec.effects = [setActive.of(active)];\n            if (editor.state.field(snippetState, false) === undefined)\n                effects.push(StateEffect.appendConfig.of([snippetState, addSnippetKeymap, snippetPointerHandler, baseTheme]));\n        }\n        editor.dispatch(editor.state.update(spec));\n    };\n}\nfunction moveField(dir) {\n    return ({ state, dispatch }) => {\n        let active = state.field(snippetState, false);\n        if (!active || dir < 0 && active.active == 0)\n            return false;\n        let next = active.active + dir, last = dir > 0 && !active.ranges.some(r => r.field == next + dir);\n        dispatch(state.update({\n            selection: fieldSelection(active.ranges, next),\n            effects: setActive.of(last ? null : new ActiveSnippet(active.ranges, next)),\n            scrollIntoView: true\n        }));\n        return true;\n    };\n}\n/**\nA command that clears the active snippet, if any.\n*/\nconst clearSnippet = ({ state, dispatch }) => {\n    let active = state.field(snippetState, false);\n    if (!active)\n        return false;\n    dispatch(state.update({ effects: setActive.of(null) }));\n    return true;\n};\n/**\nMove to the next snippet field, if available.\n*/\nconst nextSnippetField = /*@__PURE__*/moveField(1);\n/**\nMove to the previous snippet field, if available.\n*/\nconst prevSnippetField = /*@__PURE__*/moveField(-1);\n/**\nCheck if there is an active snippet with a next field for\n`nextSnippetField` to move to.\n*/\nfunction hasNextSnippetField(state) {\n    let active = state.field(snippetState, false);\n    return !!(active && active.ranges.some(r => r.field == active.active + 1));\n}\n/**\nReturns true if there is an active snippet and a previous field\nfor `prevSnippetField` to move to.\n*/\nfunction hasPrevSnippetField(state) {\n    let active = state.field(snippetState, false);\n    return !!(active && active.active > 0);\n}\nconst defaultSnippetKeymap = [\n    { key: \"Tab\", run: nextSnippetField, shift: prevSnippetField },\n    { key: \"Escape\", run: clearSnippet }\n];\n/**\nA facet that can be used to configure the key bindings used by\nsnippets. The default binds Tab to\n[`nextSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.nextSnippetField), Shift-Tab to\n[`prevSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.prevSnippetField), and Escape\nto [`clearSnippet`](https://codemirror.net/6/docs/ref/#autocomplete.clearSnippet).\n*/\nconst snippetKeymap = /*@__PURE__*/Facet.define({\n    combine(maps) { return maps.length ? maps[0] : defaultSnippetKeymap; }\n});\nconst addSnippetKeymap = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.compute([snippetKeymap], state => state.facet(snippetKeymap)));\n/**\nCreate a completion from a snippet. Returns an object with the\nproperties from `completion`, plus an `apply` function that\napplies the snippet.\n*/\nfunction snippetCompletion(template, completion) {\n    return Object.assign(Object.assign({}, completion), { apply: snippet(template) });\n}\nconst snippetPointerHandler = /*@__PURE__*/EditorView.domEventHandlers({\n    mousedown(event, view) {\n        let active = view.state.field(snippetState, false), pos;\n        if (!active || (pos = view.posAtCoords({ x: event.clientX, y: event.clientY })) == null)\n            return false;\n        let match = active.ranges.find(r => r.from <= pos && r.to >= pos);\n        if (!match || match.field == active.active)\n            return false;\n        view.dispatch({\n            selection: fieldSelection(active.ranges, match.field),\n            effects: setActive.of(active.ranges.some(r => r.field > match.field)\n                ? new ActiveSnippet(active.ranges, match.field) : null),\n            scrollIntoView: true\n        });\n        return true;\n    }\n});\n\nfunction wordRE(wordChars) {\n    let escaped = wordChars.replace(/[\\]\\-\\\\]/g, \"\\\\$&\");\n    try {\n        return new RegExp(`[\\\\p{Alphabetic}\\\\p{Number}_${escaped}]+`, \"ug\");\n    }\n    catch (_a) {\n        return new RegExp(`[\\w${escaped}]`, \"g\");\n    }\n}\nfunction mapRE(re, f) {\n    return new RegExp(f(re.source), re.unicode ? \"u\" : \"\");\n}\nconst wordCaches = /*@__PURE__*/Object.create(null);\nfunction wordCache(wordChars) {\n    return wordCaches[wordChars] || (wordCaches[wordChars] = new WeakMap);\n}\nfunction storeWords(doc, wordRE, result, seen, ignoreAt) {\n    for (let lines = doc.iterLines(), pos = 0; !lines.next().done;) {\n        let { value } = lines, m;\n        wordRE.lastIndex = 0;\n        while (m = wordRE.exec(value)) {\n            if (!seen[m[0]] && pos + m.index != ignoreAt) {\n                result.push({ type: \"text\", label: m[0] });\n                seen[m[0]] = true;\n                if (result.length >= 2000 /* C.MaxList */)\n                    return;\n            }\n        }\n        pos += value.length + 1;\n    }\n}\nfunction collectWords(doc, cache, wordRE, to, ignoreAt) {\n    let big = doc.length >= 1000 /* C.MinCacheLen */;\n    let cached = big && cache.get(doc);\n    if (cached)\n        return cached;\n    let result = [], seen = Object.create(null);\n    if (doc.children) {\n        let pos = 0;\n        for (let ch of doc.children) {\n            if (ch.length >= 1000 /* C.MinCacheLen */) {\n                for (let c of collectWords(ch, cache, wordRE, to - pos, ignoreAt - pos)) {\n                    if (!seen[c.label]) {\n                        seen[c.label] = true;\n                        result.push(c);\n                    }\n                }\n            }\n            else {\n                storeWords(ch, wordRE, result, seen, ignoreAt - pos);\n            }\n            pos += ch.length + 1;\n        }\n    }\n    else {\n        storeWords(doc, wordRE, result, seen, ignoreAt);\n    }\n    if (big && result.length < 2000 /* C.MaxList */)\n        cache.set(doc, result);\n    return result;\n}\n/**\nA completion source that will scan the document for words (using a\n[character categorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer)), and\nreturn those as completions.\n*/\nconst completeAnyWord = context => {\n    let wordChars = context.state.languageDataAt(\"wordChars\", context.pos).join(\"\");\n    let re = wordRE(wordChars);\n    let token = context.matchBefore(mapRE(re, s => s + \"$\"));\n    if (!token && !context.explicit)\n        return null;\n    let from = token ? token.from : context.pos;\n    let options = collectWords(context.state.doc, wordCache(wordChars), re, 50000 /* C.Range */, from);\n    return { from, options, validFor: mapRE(re, s => \"^\" + s) };\n};\n\nconst defaults = {\n    brackets: [\"(\", \"[\", \"{\", \"'\", '\"'],\n    before: \")]}:;>\",\n    stringPrefixes: []\n};\nconst closeBracketEffect = /*@__PURE__*/StateEffect.define({\n    map(value, mapping) {\n        let mapped = mapping.mapPos(value, -1, MapMode.TrackAfter);\n        return mapped == null ? undefined : mapped;\n    }\n});\nconst closedBracket = /*@__PURE__*/new class extends RangeValue {\n};\nclosedBracket.startSide = 1;\nclosedBracket.endSide = -1;\nconst bracketState = /*@__PURE__*/StateField.define({\n    create() { return RangeSet.empty; },\n    update(value, tr) {\n        value = value.map(tr.changes);\n        if (tr.selection) {\n            let line = tr.state.doc.lineAt(tr.selection.main.head);\n            value = value.update({ filter: from => from >= line.from && from <= line.to });\n        }\n        for (let effect of tr.effects)\n            if (effect.is(closeBracketEffect))\n                value = value.update({ add: [closedBracket.range(effect.value, effect.value + 1)] });\n        return value;\n    }\n});\n/**\nExtension to enable bracket-closing behavior. When a closeable\nbracket is typed, its closing bracket is immediately inserted\nafter the cursor. When closing a bracket directly in front of a\nclosing bracket inserted by the extension, the cursor moves over\nthat bracket.\n*/\nfunction closeBrackets() {\n    return [inputHandler, bracketState];\n}\nconst definedClosing = \"()[]{}<>\u00AB\u00BB\u00BB\u00AB\uFF3B\uFF3D\uFF5B\uFF5D\";\nfunction closing(ch) {\n    for (let i = 0; i < definedClosing.length; i += 2)\n        if (definedClosing.charCodeAt(i) == ch)\n            return definedClosing.charAt(i + 1);\n    return fromCodePoint(ch < 128 ? ch : ch + 1);\n}\nfunction config(state, pos) {\n    return state.languageDataAt(\"closeBrackets\", pos)[0] || defaults;\n}\nconst android = typeof navigator == \"object\" && /*@__PURE__*//Android\\b/.test(navigator.userAgent);\nconst inputHandler = /*@__PURE__*/EditorView.inputHandler.of((view, from, to, insert) => {\n    if ((android ? view.composing : view.compositionStarted) || view.state.readOnly)\n        return false;\n    let sel = view.state.selection.main;\n    if (insert.length > 2 || insert.length == 2 && codePointSize(codePointAt(insert, 0)) == 1 ||\n        from != sel.from || to != sel.to)\n        return false;\n    let tr = insertBracket(view.state, insert);\n    if (!tr)\n        return false;\n    view.dispatch(tr);\n    return true;\n});\n/**\nCommand that implements deleting a pair of matching brackets when\nthe cursor is between them.\n*/\nconst deleteBracketPair = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let conf = config(state, state.selection.main.head);\n    let tokens = conf.brackets || defaults.brackets;\n    let dont = null, changes = state.changeByRange(range => {\n        if (range.empty) {\n            let before = prevChar(state.doc, range.head);\n            for (let token of tokens) {\n                if (token == before && nextChar(state.doc, range.head) == closing(codePointAt(token, 0)))\n                    return { changes: { from: range.head - token.length, to: range.head + token.length },\n                        range: EditorSelection.cursor(range.head - token.length) };\n            }\n        }\n        return { range: dont = range };\n    });\n    if (!dont)\n        dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"delete.backward\" }));\n    return !dont;\n};\n/**\nClose-brackets related key bindings. Binds Backspace to\n[`deleteBracketPair`](https://codemirror.net/6/docs/ref/#autocomplete.deleteBracketPair).\n*/\nconst closeBracketsKeymap = [\n    { key: \"Backspace\", run: deleteBracketPair }\n];\n/**\nImplements the extension's behavior on text insertion. If the\ngiven string counts as a bracket in the language around the\nselection, and replacing the selection with it requires custom\nbehavior (inserting a closing version or skipping past a\npreviously-closed bracket), this function returns a transaction\nrepresenting that custom behavior. (You only need this if you want\nto programmatically insert brackets\u2014the\n[`closeBrackets`](https://codemirror.net/6/docs/ref/#autocomplete.closeBrackets) extension will\ntake care of running this for user input.)\n*/\nfunction insertBracket(state, bracket) {\n    let conf = config(state, state.selection.main.head);\n    let tokens = conf.brackets || defaults.brackets;\n    for (let tok of tokens) {\n        let closed = closing(codePointAt(tok, 0));\n        if (bracket == tok)\n            return closed == tok ? handleSame(state, tok, tokens.indexOf(tok + tok + tok) > -1, conf)\n                : handleOpen(state, tok, closed, conf.before || defaults.before);\n        if (bracket == closed && closedBracketAt(state, state.selection.main.from))\n            return handleClose(state, tok, closed);\n    }\n    return null;\n}\nfunction closedBracketAt(state, pos) {\n    let found = false;\n    state.field(bracketState).between(0, state.doc.length, from => {\n        if (from == pos)\n            found = true;\n    });\n    return found;\n}\nfunction nextChar(doc, pos) {\n    let next = doc.sliceString(pos, pos + 2);\n    return next.slice(0, codePointSize(codePointAt(next, 0)));\n}\nfunction prevChar(doc, pos) {\n    let prev = doc.sliceString(pos - 2, pos);\n    return codePointSize(codePointAt(prev, 0)) == prev.length ? prev : prev.slice(1);\n}\nfunction handleOpen(state, open, close, closeBefore) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: open, from: range.from }, { insert: close, from: range.to }],\n                effects: closeBracketEffect.of(range.to + open.length),\n                range: EditorSelection.range(range.anchor + open.length, range.head + open.length) };\n        let next = nextChar(state.doc, range.head);\n        if (!next || /\\s/.test(next) || closeBefore.indexOf(next) > -1)\n            return { changes: { insert: open + close, from: range.head },\n                effects: closeBracketEffect.of(range.head + open.length),\n                range: EditorSelection.cursor(range.head + open.length) };\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\nfunction handleClose(state, _open, close) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (range.empty && nextChar(state.doc, range.head) == close)\n            return { changes: { from: range.head, to: range.head + close.length, insert: close },\n                range: EditorSelection.cursor(range.head + close.length) };\n        return dont = { range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\n// Handles cases where the open and close token are the same, and\n// possibly triple quotes (as in `\"\"\"abc\"\"\"`-style quoting).\nfunction handleSame(state, token, allowTriple, config) {\n    let stringPrefixes = config.stringPrefixes || defaults.stringPrefixes;\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: token, from: range.from }, { insert: token, from: range.to }],\n                effects: closeBracketEffect.of(range.to + token.length),\n                range: EditorSelection.range(range.anchor + token.length, range.head + token.length) };\n        let pos = range.head, next = nextChar(state.doc, pos), start;\n        if (next == token) {\n            if (nodeStart(state, pos)) {\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n            }\n            else if (closedBracketAt(state, pos)) {\n                let isTriple = allowTriple && state.sliceDoc(pos, pos + token.length * 3) == token + token + token;\n                let content = isTriple ? token + token + token : token;\n                return { changes: { from: pos, to: pos + content.length, insert: content },\n                    range: EditorSelection.cursor(pos + content.length) };\n            }\n        }\n        else if (allowTriple && state.sliceDoc(pos - 2 * token.length, pos) == token + token &&\n            (start = canStartStringAt(state, pos - 2 * token.length, stringPrefixes)) > -1 &&\n            nodeStart(state, start)) {\n            return { changes: { insert: token + token + token + token, from: pos },\n                effects: closeBracketEffect.of(pos + token.length),\n                range: EditorSelection.cursor(pos + token.length) };\n        }\n        else if (state.charCategorizer(pos)(next) != CharCategory.Word) {\n            if (canStartStringAt(state, pos, stringPrefixes) > -1 && !probablyInString(state, pos, token, stringPrefixes))\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n        }\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\nfunction nodeStart(state, pos) {\n    let tree = syntaxTree(state).resolveInner(pos + 1);\n    return tree.parent && tree.from == pos;\n}\nfunction probablyInString(state, pos, quoteToken, prefixes) {\n    let node = syntaxTree(state).resolveInner(pos, -1);\n    let maxPrefix = prefixes.reduce((m, p) => Math.max(m, p.length), 0);\n    for (let i = 0; i < 5; i++) {\n        let start = state.sliceDoc(node.from, Math.min(node.to, node.from + quoteToken.length + maxPrefix));\n        let quotePos = start.indexOf(quoteToken);\n        if (!quotePos || quotePos > -1 && prefixes.indexOf(start.slice(0, quotePos)) > -1) {\n            let first = node.firstChild;\n            while (first && first.from == node.from && first.to - first.from > quoteToken.length + quotePos) {\n                if (state.sliceDoc(first.to - quoteToken.length, first.to) == quoteToken)\n                    return false;\n                first = first.firstChild;\n            }\n            return true;\n        }\n        let parent = node.to == pos && node.parent;\n        if (!parent)\n            break;\n        node = parent;\n    }\n    return false;\n}\nfunction canStartStringAt(state, pos, prefixes) {\n    let charCat = state.charCategorizer(pos);\n    if (charCat(state.sliceDoc(pos - 1, pos)) != CharCategory.Word)\n        return pos;\n    for (let prefix of prefixes) {\n        let start = pos - prefix.length;\n        if (state.sliceDoc(start, pos) == prefix && charCat(state.sliceDoc(start - 1, start)) != CharCategory.Word)\n            return start;\n    }\n    return -1;\n}\n\n/**\nReturns an extension that enables autocompletion.\n*/\nfunction autocompletion(config = {}) {\n    return [\n        commitCharacters,\n        completionState,\n        completionConfig.of(config),\n        completionPlugin,\n        completionKeymapExt,\n        baseTheme\n    ];\n}\n/**\nBasic keybindings for autocompletion.\n\n - Ctrl-Space (and Alt-\\` on macOS): [`startCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.startCompletion)\n - Escape: [`closeCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.closeCompletion)\n - ArrowDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true)`\n - ArrowUp: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(false)`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - Enter: [`acceptCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.acceptCompletion)\n*/\nconst completionKeymap = [\n    { key: \"Ctrl-Space\", run: startCompletion },\n    { mac: \"Alt-`\", run: startCompletion },\n    { key: \"Escape\", run: closeCompletion },\n    { key: \"ArrowDown\", run: /*@__PURE__*/moveCompletionSelection(true) },\n    { key: \"ArrowUp\", run: /*@__PURE__*/moveCompletionSelection(false) },\n    { key: \"PageDown\", run: /*@__PURE__*/moveCompletionSelection(true, \"page\") },\n    { key: \"PageUp\", run: /*@__PURE__*/moveCompletionSelection(false, \"page\") },\n    { key: \"Enter\", run: acceptCompletion }\n];\nconst completionKeymapExt = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.computeN([completionConfig], state => state.facet(completionConfig).defaultKeymap ? [completionKeymap] : []));\n/**\nGet the current completion status. When completions are available,\nthis will return `\"active\"`. When completions are pending (in the\nprocess of being queried), this returns `\"pending\"`. Otherwise, it\nreturns `null`.\n*/\nfunction completionStatus(state) {\n    let cState = state.field(completionState, false);\n    return cState && cState.active.some(a => a.isPending) ? \"pending\"\n        : cState && cState.active.some(a => a.state != 0 /* State.Inactive */) ? \"active\" : null;\n}\nconst completionArrayCache = /*@__PURE__*/new WeakMap;\n/**\nReturns the available completions as an array.\n*/\nfunction currentCompletions(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    if (!open || open.disabled)\n        return [];\n    let completions = completionArrayCache.get(open.options);\n    if (!completions)\n        completionArrayCache.set(open.options, completions = open.options.map(o => o.completion));\n    return completions;\n}\n/**\nReturn the currently selected completion, if any.\n*/\nfunction selectedCompletion(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open && !open.disabled && open.selected >= 0 ? open.options[open.selected].completion : null;\n}\n/**\nReturns the currently selected position in the active completion\nlist, or null if no completions are active.\n*/\nfunction selectedCompletionIndex(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open && !open.disabled && open.selected >= 0 ? open.selected : null;\n}\n/**\nCreate an effect that can be attached to a transaction to change\nthe currently selected completion.\n*/\nfunction setSelectedCompletion(index) {\n    return setSelectedEffect.of(index);\n}\n\nexport { CompletionContext, acceptCompletion, autocompletion, clearSnippet, closeBrackets, closeBracketsKeymap, closeCompletion, completeAnyWord, completeFromList, completionKeymap, completionStatus, currentCompletions, deleteBracketPair, hasNextSnippetField, hasPrevSnippetField, ifIn, ifNotIn, insertBracket, insertCompletionText, moveCompletionSelection, nextSnippetField, pickedCompletion, prevSnippetField, selectedCompletion, selectedCompletionIndex, setSelectedCompletion, snippet, snippetCompletion, snippetKeymap, startCompletion };\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n/**\n * A token has properties: text, type, line, character position in the line\n * (so we can ignore tabs), token channel, index, and source from which\n * we obtained this token.\n */\nexport default class Token {\n\n\tconstructor() {\n\t\tthis.source = null;\n\t\tthis.type = null; // token type of the token\n\t\tthis.channel = null; // The parser ignores everything not on DEFAULT_CHANNEL\n\t\tthis.start = null; // optional; return -1 if not implemented.\n\t\tthis.stop = null; // optional; return -1 if not implemented.\n\t\tthis.tokenIndex = null; // from 0..n-1 of the token object in the input stream\n\t\tthis.line = null; // line=1..n of the 1st character\n\t\tthis.column = null; // beginning of the line at which it occurs, 0..n-1\n\t\tthis._text = null; // text of the token.\n\t}\n\n\tgetTokenSource() {\n\t\treturn this.source[0];\n\t}\n\n\tgetInputStream() {\n\t\treturn this.source[1];\n\t}\n\n\tget text(){\n\t\treturn this._text;\n\t}\n\n\tset text(text) {\n\t\tthis._text = text;\n\t}\n}\n\nToken.INVALID_TYPE = 0;\n\n/**\n * During lookahead operations, this \"token\" signifies we hit rule end ATN state\n * and did not follow it despite needing to.\n */\nToken.EPSILON = -2;\n\nToken.MIN_USER_TOKEN_TYPE = 1;\n\nToken.EOF = -1;\n\n/**\n * All tokens go to the parser (unless skip() is called in that rule)\n * on a particular \"channel\". The parser tunes to a particular channel\n * so that whitespace etc... can go to the parser on a \"hidden\" channel.\n */\nToken.DEFAULT_CHANNEL = 0;\n\n/**\n * Anything on different channel than DEFAULT_CHANNEL is not parsed\n * by parser.\n */\nToken.HIDDEN_CHANNEL = 1;\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nexport default function equalArrays(a, b) {\n    if (!Array.isArray(a) || !Array.isArray(b))\n        return false;\n    if (a === b)\n        return true;\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i])\n            continue;\n        if (!a[i].equals || !a[i].equals(b[i]))\n            return false;\n    }\n    return true;\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nexport const StringSeedHashCode = Math.round(Math.random() * Math.pow(2, 32));\n\nexport function stringHashCode (value) {\n    if (!value) {\n        return 0;\n    }\n    const type = typeof value;\n    const key = type === 'string' ? value : type === 'object' && value.toString ? value.toString() : false;\n    if (!key) {\n        return 0;\n    }\n    let h1b, k1;\n\n    const remainder = key.length & 3; // key.length % 4\n    const bytes = key.length - remainder;\n    let h1 = StringSeedHashCode;\n    const c1 = 0xcc9e2d51;\n    const c2 = 0x1b873593;\n    let i = 0;\n\n    while (i < bytes) {\n        k1 =\n            ((key.charCodeAt(i) & 0xff)) |\n            ((key.charCodeAt(++i) & 0xff) << 8) |\n            ((key.charCodeAt(++i) & 0xff) << 16) |\n            ((key.charCodeAt(++i) & 0xff) << 24);\n        ++i;\n\n        k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n        h1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n        h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n        h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n    }\n\n    k1 = 0;\n\n    switch (remainder) {\n        case 3:\n            k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n        // no-break\n        case 2:\n            k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n        // no-break\n        case 1:\n            k1 ^= (key.charCodeAt(i) & 0xff);\n            k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n            k1 = (k1 << 15) | (k1 >>> 17);\n            k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n            h1 ^= k1;\n    }\n\n    h1 ^= key.length;\n\n    h1 ^= h1 >>> 16;\n    h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n    h1 ^= h1 >>> 13;\n    h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n    h1 ^= h1 >>> 16;\n\n    return h1 >>> 0;\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport { stringHashCode } from \"../utils/stringHashCode.js\";\n\nexport default class HashCode {\n\n    constructor() {\n        this.count = 0;\n        this.hash = 0;\n    }\n\n    update() {\n        for(let i=0;i<arguments.length;i++) {\n            const value = arguments[i];\n            if (value == null)\n                continue;\n            if(Array.isArray(value))\n                this.update.apply(this, value);\n            else {\n                let k = 0;\n                switch (typeof(value)) {\n                    case 'undefined':\n                    case 'function':\n                        continue;\n                    case 'number':\n                    case 'boolean':\n                        k = value;\n                        break;\n                    case 'string':\n                        k = stringHashCode(value);\n                        break;\n                    default:\n                        if(value.updateHashCode)\n                            value.updateHashCode(this);\n                        else\n                            console.log(\"No updateHashCode for \" + value.toString())\n                        continue;\n                }\n                k = k * 0xCC9E2D51;\n                k = (k << 15) | (k >>> (32 - 15));\n                k = k * 0x1B873593;\n                this.count = this.count + 1;\n                let hash = this.hash ^ k;\n                hash = (hash << 13) | (hash >>> (32 - 13));\n                hash = hash * 5 + 0xE6546B64;\n                this.hash = hash;\n            }\n        }\n    }\n\n    finish() {\n        let hash = this.hash ^ (this.count * 4);\n        hash = hash ^ (hash >>> 16);\n        hash = hash * 0x85EBCA6B;\n        hash = hash ^ (hash >>> 13);\n        hash = hash * 0xC2B2AE35;\n        hash = hash ^ (hash >>> 16);\n        return hash;\n    }\n\n    static hashStuff() {\n        const hash = new HashCode();\n        hash.update.apply(hash, arguments);\n        return hash.finish();\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport { stringHashCode } from \"./stringHashCode.js\";\n\nexport default function standardHashCodeFunction(a) {\n    return a ? typeof a === 'string' ? stringHashCode(a) : a.hashCode() : -1;\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nexport default function standardEqualsFunction(a, b) {\n    return a && a.equals ? a.equals(b) : a===b;\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nexport default function valueToString(v) {\n    return v === null ? \"null\" : v;\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport valueToString from \"./valueToString.js\";\n\nexport default function arrayToString(a) {\n    return Array.isArray(a) ? (\"[\" + a.map(valueToString).join(\", \") + \"]\") : \"null\";\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport standardHashCodeFunction from \"../utils/standardHashCodeFunction.js\";\nimport standardEqualsFunction from \"../utils/standardEqualsFunction.js\";\nimport arrayToString from \"../utils/arrayToString.js\";\n\nconst DEFAULT_LOAD_FACTOR = 0.75;\nconst INITIAL_CAPACITY = 16\n\nexport default class HashSet {\n\n    constructor(hashFunction, equalsFunction) {\n        this.buckets = new Array(INITIAL_CAPACITY);\n        this.threshold = Math.floor(INITIAL_CAPACITY * DEFAULT_LOAD_FACTOR);\n        this.itemCount = 0;\n        this.hashFunction = hashFunction || standardHashCodeFunction;\n        this.equalsFunction = equalsFunction || standardEqualsFunction;\n    }\n\n    get(value) {\n        if(value == null) {\n            return value;\n        }\n        const bucket = this._getBucket(value)\n        if (!bucket) {\n            return null;\n        }\n        for (const e of bucket) {\n            if (this.equalsFunction(e, value)) {\n                return e;\n            }\n        }\n        return null;\n    }\n\n    add(value) {\n        const existing = this.getOrAdd(value);\n        return existing === value;\n    }\n\n    getOrAdd(value) {\n        this._expand();\n        const slot = this._getSlot(value);\n        let bucket = this.buckets[slot];\n        if (!bucket) {\n            bucket = [value];\n            this.buckets[slot] = bucket;\n            this.itemCount++;\n            return value;\n        }\n        for (const existing of bucket) {\n            if (this.equalsFunction(existing, value)) {\n                return existing;\n            }\n        }\n        bucket.push(value);\n        this.itemCount++;\n        return value;\n\n    }\n\n    has(value) {\n        return this.get(value) != null;\n    }\n\n\n    values() {\n        return this.buckets.filter(b => b != null).flat(1);\n    }\n\n    toString() {\n        return arrayToString(this.values());\n    }\n\n    get length() {\n        return this.itemCount;\n    }\n\n    _getSlot(value) {\n        const hash = this.hashFunction(value);\n        return hash & this.buckets.length - 1;\n    }\n    _getBucket(value) {\n        return this.buckets[this._getSlot(value)];\n    }\n\n    _expand() {\n        if (this.itemCount <= this.threshold) {\n            return;\n        }\n        const old_buckets = this.buckets;\n        const newCapacity = this.buckets.length * 2;\n        this.buckets = new Array(newCapacity);\n        this.threshold = Math.floor(newCapacity * DEFAULT_LOAD_FACTOR);\n        for (const bucket of old_buckets) {\n            if (!bucket) {\n                continue;\n            }\n            for (const o of bucket) {\n                const slot = this._getSlot(o);\n                let newBucket = this.buckets[slot];\n                if (!newBucket) {\n                    newBucket = [];\n                    this.buckets[slot] = newBucket;\n                }\n                newBucket.push(o);\n            }\n        }\n\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport equalArrays from \"../utils/equalArrays.js\";\nimport HashCode from \"../misc/HashCode.js\";\nimport HashSet from \"../misc/HashSet.js\";\n\n/**\n * A tree structure used to record the semantic context in which\n * an ATN configuration is valid.  It's either a single predicate,\n * a conjunction {@code p1&&p2}, or a sum of products {@code p1||p2}.\n *\n * <p>I have scoped the {@link AND}, {@link OR}, and {@link Predicate} subclasses of\n * {@link SemanticContext} within the scope of this outer class.</p>\n */\nexport default class SemanticContext {\n\n\thashCode() {\n\t\tconst hash = new HashCode();\n\t\tthis.updateHashCode(hash);\n\t\treturn hash.finish();\n\t}\n\n\t/**\n\t * For context independent predicates, we evaluate them without a local\n\t * context (i.e., null context). That way, we can evaluate them without\n\t * having to create proper rule-specific context during prediction (as\n\t * opposed to the parser, which creates them naturally). In a practical\n\t * sense, this avoids a cast exception from RuleContext to myruleContext.\n\t *\n\t * <p>For context dependent predicates, we must pass in a local context so that\n\t * references such as $arg evaluate properly as _localctx.arg. We only\n\t * capture context dependent predicates in the context in which we begin\n\t * prediction, so we passed in the outer context here in case of context\n\t * dependent predicate evaluation.</p>\n\t */\n\tevaluate(parser, outerContext) {}\n\n\t/**\n\t * Evaluate the precedence predicates for the context and reduce the result.\n\t *\n\t * @param parser The parser instance.\n\t * @param outerContext The current parser context object.\n\t * @return The simplified semantic context after precedence predicates are\n\t * evaluated, which will be one of the following values.\n\t * <ul>\n\t * <li>{@link //NONE}: if the predicate simplifies to {@code true} after\n\t * precedence predicates are evaluated.</li>\n\t * <li>{@code null}: if the predicate simplifies to {@code false} after\n\t * precedence predicates are evaluated.</li>\n\t * <li>{@code this}: if the semantic context is not changed as a result of\n\t * precedence predicate evaluation.</li>\n\t * <li>A non-{@code null} {@link SemanticContext}: the new simplified\n\t * semantic context after precedence predicates are evaluated.</li>\n\t * </ul>\n\t */\n\tevalPrecedence(parser, outerContext) {\n\t\treturn this;\n\t}\n\n\tstatic andContext(a, b) {\n\t\tif (a === null || a === SemanticContext.NONE) {\n\t\t\treturn b;\n\t\t}\n\t\tif (b === null || b === SemanticContext.NONE) {\n\t\t\treturn a;\n\t\t}\n\t\tconst result = new AND(a, b);\n\t\tif (result.opnds.length === 1) {\n\t\t\treturn result.opnds[0];\n\t\t} else {\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tstatic orContext(a, b) {\n\t\tif (a === null) {\n\t\t\treturn b;\n\t\t}\n\t\tif (b === null) {\n\t\t\treturn a;\n\t\t}\n\t\tif (a === SemanticContext.NONE || b === SemanticContext.NONE) {\n\t\t\treturn SemanticContext.NONE;\n\t\t}\n\t\tconst result = new OR(a, b);\n\t\tif (result.opnds.length === 1) {\n\t\t\treturn result.opnds[0];\n\t\t} else {\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\n\n\nclass AND extends SemanticContext {\n\t/**\n\t * A semantic context which is true whenever none of the contained contexts\n\t * is false\n\t */\n\tconstructor(a, b) {\n\t\tsuper();\n\t\tconst operands = new HashSet();\n\t\tif (a instanceof AND) {\n\t\t\ta.opnds.map(function(o) {\n\t\t\t\toperands.add(o);\n\t\t\t});\n\t\t} else {\n\t\t\toperands.add(a);\n\t\t}\n\t\tif (b instanceof AND) {\n\t\t\tb.opnds.map(function(o) {\n\t\t\t\toperands.add(o);\n\t\t\t});\n\t\t} else {\n\t\t\toperands.add(b);\n\t\t}\n\t\tconst precedencePredicates = filterPrecedencePredicates(operands);\n\t\tif (precedencePredicates.length > 0) {\n\t\t\t// interested in the transition with the lowest precedence\n\t\t\tlet reduced = null;\n\t\t\tprecedencePredicates.map( function(p) {\n\t\t\t\tif(reduced===null || p.precedence<reduced.precedence) {\n\t\t\t\t\treduced = p;\n\t\t\t\t}\n\t\t\t});\n\t\t\toperands.add(reduced);\n\t\t}\n\t\tthis.opnds = Array.from(operands.values());\n\t}\n\n\tequals(other) {\n\t\tif (this === other) {\n\t\t\treturn true;\n\t\t} else if (!(other instanceof AND)) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn equalArrays(this.opnds, other.opnds);\n\t\t}\n\t}\n\n\tupdateHashCode(hash) {\n\t\thash.update(this.opnds, \"AND\");\n\t}\n\n\t/**\n\t * {@inheritDoc}\n\t *\n\t * <p>\n\t * The evaluation of predicates by this context is short-circuiting, but\n\t * unordered.</p>\n\t */\n\tevaluate(parser, outerContext) {\n\t\tfor (let i = 0; i < this.opnds.length; i++) {\n\t\t\tif (!this.opnds[i].evaluate(parser, outerContext)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tevalPrecedence(parser, outerContext) {\n\t\tlet differs = false;\n\t\tconst operands = [];\n\t\tfor (let i = 0; i < this.opnds.length; i++) {\n\t\t\tconst context = this.opnds[i];\n\t\t\tconst evaluated = context.evalPrecedence(parser, outerContext);\n\t\t\tdiffers |= (evaluated !== context);\n\t\t\tif (evaluated === null) {\n\t\t\t\t// The AND context is false if any element is false\n\t\t\t\treturn null;\n\t\t\t} else if (evaluated !== SemanticContext.NONE) {\n\t\t\t\t// Reduce the result by skipping true elements\n\t\t\t\toperands.push(evaluated);\n\t\t\t}\n\t\t}\n\t\tif (!differs) {\n\t\t\treturn this;\n\t\t}\n\t\tif (operands.length === 0) {\n\t\t\t// all elements were true, so the AND context is true\n\t\t\treturn SemanticContext.NONE;\n\t\t}\n\t\tlet result = null;\n\t\toperands.map(function(o) {\n\t\t\tresult = result === null ? o : SemanticContext.andContext(result, o);\n\t\t});\n\t\treturn result;\n\t}\n\n\ttoString() {\n\t\tconst s = this.opnds.map(o => o.toString());\n\t\treturn (s.length > 3 ? s.slice(3) : s).join(\"&&\");\n\t}\n}\n\n\nclass OR extends SemanticContext {\n\t/**\n\t * A semantic context which is true whenever at least one of the contained\n\t * contexts is true\n\t */\n\tconstructor(a, b) {\n\t\tsuper();\n\t\tconst operands = new HashSet();\n\t\tif (a instanceof OR) {\n\t\t\ta.opnds.map(function(o) {\n\t\t\t\toperands.add(o);\n\t\t\t});\n\t\t} else {\n\t\t\toperands.add(a);\n\t\t}\n\t\tif (b instanceof OR) {\n\t\t\tb.opnds.map(function(o) {\n\t\t\t\toperands.add(o);\n\t\t\t});\n\t\t} else {\n\t\t\toperands.add(b);\n\t\t}\n\n\t\tconst precedencePredicates = filterPrecedencePredicates(operands);\n\t\tif (precedencePredicates.length > 0) {\n\t\t\t// interested in the transition with the highest precedence\n\t\t\tconst s = precedencePredicates.sort(function(a, b) {\n\t\t\t\treturn a.compareTo(b);\n\t\t\t});\n\t\t\tconst reduced = s[s.length-1];\n\t\t\toperands.add(reduced);\n\t\t}\n\t\tthis.opnds = Array.from(operands.values());\n\t}\n\n\tequals(other) {\n\t\tif (this === other) {\n\t\t\treturn true;\n\t\t} else if (!(other instanceof OR)) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn equalArrays(this.opnds, other.opnds);\n\t\t}\n\t}\n\n\tupdateHashCode(hash) {\n\t\thash.update(this.opnds, \"OR\");\n\t}\n\n\t/**\n\t * <p>\n\t * The evaluation of predicates by this context is short-circuiting, but\n\t * unordered.</p>\n\t */\n\tevaluate(parser, outerContext) {\n\t\tfor (let i = 0; i < this.opnds.length; i++) {\n\t\t\tif (this.opnds[i].evaluate(parser, outerContext)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tevalPrecedence(parser, outerContext) {\n\t\tlet differs = false;\n\t\tconst operands = [];\n\t\tfor (let i = 0; i < this.opnds.length; i++) {\n\t\t\tconst context = this.opnds[i];\n\t\t\tconst evaluated = context.evalPrecedence(parser, outerContext);\n\t\t\tdiffers |= (evaluated !== context);\n\t\t\tif (evaluated === SemanticContext.NONE) {\n\t\t\t\t// The OR context is true if any element is true\n\t\t\t\treturn SemanticContext.NONE;\n\t\t\t} else if (evaluated !== null) {\n\t\t\t\t// Reduce the result by skipping false elements\n\t\t\t\toperands.push(evaluated);\n\t\t\t}\n\t\t}\n\t\tif (!differs) {\n\t\t\treturn this;\n\t\t}\n\t\tif (operands.length === 0) {\n\t\t\t// all elements were false, so the OR context is false\n\t\t\treturn null;\n\t\t}\n\t\tconst result = null;\n\t\toperands.map(function(o) {\n\t\t\treturn result === null ? o : SemanticContext.orContext(result, o);\n\t\t});\n\t\treturn result;\n\t}\n\n\ttoString() {\n\t\tconst s = this.opnds.map(o => o.toString());\n\t\treturn (s.length > 3 ? s.slice(3) : s).join(\"||\");\n\t}\n}\n\nfunction filterPrecedencePredicates(set) {\n\tconst result = [];\n\tset.values().map( function(context) {\n\t\tif (context instanceof SemanticContext.PrecedencePredicate) {\n\t\t\tresult.push(context);\n\t\t}\n\t});\n\treturn result;\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport SemanticContext from './SemanticContext.js';\nimport HashCode from \"../misc/HashCode.js\";\n\nfunction checkParams(params, isCfg) {\n\tif(params===null) {\n\t\tconst result = { state:null, alt:null, context:null, semanticContext:null };\n\t\tif(isCfg) {\n\t\t\tresult.reachesIntoOuterContext = 0;\n\t\t}\n\t\treturn result;\n\t} else {\n\t\tconst props = {};\n\t\tprops.state = params.state || null;\n\t\tprops.alt = (params.alt === undefined) ? null : params.alt;\n\t\tprops.context = params.context || null;\n\t\tprops.semanticContext = params.semanticContext || null;\n\t\tif(isCfg) {\n\t\t\tprops.reachesIntoOuterContext = params.reachesIntoOuterContext || 0;\n\t\t\tprops.precedenceFilterSuppressed = params.precedenceFilterSuppressed || false;\n\t\t}\n\t\treturn props;\n\t}\n}\n\nexport default class ATNConfig {\n    /**\n     * @param {Object} params A tuple: (ATN state, predicted alt, syntactic, semantic context).\n     * The syntactic context is a graph-structured stack node whose\n     * path(s) to the root is the rule invocation(s)\n     * chain used to arrive at the state.  The semantic context is\n     * the tree of semantic predicates encountered before reaching\n     * an ATN state\n     */\n    constructor(params, config) {\n        this.checkContext(params, config);\n        params = checkParams(params);\n        config = checkParams(config, true);\n        // The ATN state associated with this configuration///\n        this.state = params.state!==null ? params.state : config.state;\n        // What alt (or lexer rule) is predicted by this configuration///\n        this.alt = params.alt!==null ? params.alt : config.alt;\n        /**\n         * The stack of invoking states leading to the rule/states associated\n         * with this config.  We track only those contexts pushed during\n         * execution of the ATN simulator\n         */\n        this.context = params.context!==null ? params.context : config.context;\n        this.semanticContext = params.semanticContext!==null ? params.semanticContext :\n            (config.semanticContext!==null ? config.semanticContext : SemanticContext.NONE);\n        // TODO: make it a boolean then\n        /**\n         * We cannot execute predicates dependent upon local context unless\n         * we know for sure we are in the correct context. Because there is\n         * no way to do this efficiently, we simply cannot evaluate\n         * dependent predicates unless we are in the rule that initially\n         * invokes the ATN simulator.\n         * closure() tracks the depth of how far we dip into the\n         * outer context: depth &gt; 0.  Note that it may not be totally\n         * accurate depth since I don't ever decrement\n         */\n        this.reachesIntoOuterContext = config.reachesIntoOuterContext;\n        this.precedenceFilterSuppressed = config.precedenceFilterSuppressed;\n    }\n\n    checkContext(params, config) {\n        if((params.context===null || params.context===undefined) &&\n                (config===null || config.context===null || config.context===undefined)) {\n            this.context = null;\n        }\n    }\n\n    hashCode() {\n        const hash = new HashCode();\n        this.updateHashCode(hash);\n        return hash.finish();\n    }\n\n    updateHashCode(hash) {\n        hash.update(this.state.stateNumber, this.alt, this.context, this.semanticContext);\n    }\n\n    /**\n     * An ATN configuration is equal to another if both have\n     * the same state, they predict the same alternative, and\n     * syntactic/semantic contexts are the same\n     */\n    equals(other) {\n        if (this === other) {\n            return true;\n        } else if (! (other instanceof ATNConfig)) {\n            return false;\n        } else {\n            return this.state.stateNumber===other.state.stateNumber &&\n                this.alt===other.alt &&\n                (this.context===null ? other.context===null : this.context.equals(other.context)) &&\n                this.semanticContext.equals(other.semanticContext) &&\n                this.precedenceFilterSuppressed===other.precedenceFilterSuppressed;\n        }\n    }\n\n    hashCodeForConfigSet() {\n        const hash = new HashCode();\n        hash.update(this.state.stateNumber, this.alt, this.semanticContext);\n        return hash.finish();\n    }\n\n    equalsForConfigSet(other) {\n        if (this === other) {\n            return true;\n        } else if (! (other instanceof ATNConfig)) {\n            return false;\n        } else {\n            return this.state.stateNumber===other.state.stateNumber &&\n                this.alt===other.alt &&\n                this.semanticContext.equals(other.semanticContext);\n        }\n    }\n\n    toString() {\n        return \"(\" + this.state + \",\" + this.alt +\n            (this.context!==null ? \",[\" + this.context.toString() + \"]\" : \"\") +\n            (this.semanticContext !== SemanticContext.NONE ?\n                    (\",\" + this.semanticContext.toString())\n                    : \"\") +\n            (this.reachesIntoOuterContext>0 ?\n                    (\",up=\" + this.reachesIntoOuterContext)\n                    : \"\") + \")\";\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n/* stop is not included! */\nexport default class Interval {\n\n    constructor(start, stop) {\n        this.start = start;\n        this.stop = stop;\n    }\n\n    clone() {\n        return new Interval(this.start, this.stop);\n    }\n\n    contains(item) {\n        return item >= this.start && item < this.stop;\n    }\n\n    toString() {\n        if(this.start===this.stop-1) {\n            return this.start.toString();\n        } else {\n            return this.start.toString() + \"..\" + (this.stop-1).toString();\n        }\n    }\n\n    get length(){\n        return this.stop - this.start;\n    }\n}\n\nInterval.INVALID_INTERVAL = new Interval(-1, -2);\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport Token from '../Token.js';\nimport Interval from \"./Interval.js\";\n\nexport default class IntervalSet {\n\tconstructor() {\n\t\tthis.intervals = null;\n\t\tthis.readOnly = false;\n\t}\n\n\tfirst(v) {\n\t\tif (this.intervals === null || this.intervals.length===0) {\n\t\t\treturn Token.INVALID_TYPE;\n\t\t} else {\n\t\t\treturn this.intervals[0].start;\n\t\t}\n\t}\n\n\taddOne(v) {\n\t\tthis.addInterval(new Interval(v, v + 1));\n\t}\n\n\taddRange(l, h) {\n\t\tthis.addInterval(new Interval(l, h + 1));\n\t}\n\n\taddInterval(toAdd) {\n\t\tif (this.intervals === null) {\n\t\t\tthis.intervals = [];\n\t\t\tthis.intervals.push(toAdd.clone());\n\t\t} else {\n\t\t\t// find insert pos\n\t\t\tfor (let pos = 0; pos < this.intervals.length; pos++) {\n\t\t\t\tconst existing = this.intervals[pos];\n\t\t\t\t// distinct range -> insert\n\t\t\t\tif (toAdd.stop < existing.start) {\n\t\t\t\t\tthis.intervals.splice(pos, 0, toAdd);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// contiguous range -> adjust\n\t\t\t\telse if (toAdd.stop === existing.start) {\n\t\t\t\t\tthis.intervals[pos] = new Interval(toAdd.start, existing.stop)\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// overlapping range -> adjust and reduce\n\t\t\t\telse if (toAdd.start <= existing.stop) {\n\t\t\t\t\tthis.intervals[pos] = new Interval(Math.min(existing.start, toAdd.start), Math.max(existing.stop, toAdd.stop));\n\t\t\t\t\tthis.reduce(pos);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// greater than any existing\n\t\t\tthis.intervals.push(toAdd.clone());\n\t\t}\n\t}\n\n\taddSet(other) {\n\t\tif (other.intervals !== null) {\n\t\t\tother.intervals.forEach( toAdd => this.addInterval(toAdd), this);\n\t\t}\n\t\treturn this;\n\t}\n\n\treduce(pos) {\n\t\t// only need to reduce if pos is not the last\n\t\tif (pos < this.intervals.length - 1) {\n\t\t\tconst current = this.intervals[pos];\n\t\t\tconst next = this.intervals[pos + 1];\n\t\t\t// if next contained in current\n\t\t\tif (current.stop >= next.stop) {\n\t\t\t\tthis.intervals.splice(pos + 1, 1);\n\t\t\t\tthis.reduce(pos);\n\t\t\t} else if (current.stop >= next.start) {\n\t\t\t\tthis.intervals[pos] = new Interval(current.start, next.stop);\n\t\t\t\tthis.intervals.splice(pos + 1, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tcomplement(start, stop) {\n\t\tconst result = new IntervalSet();\n\t\tresult.addInterval(new Interval(start, stop + 1));\n\t\tif(this.intervals !== null)\n\t\t\tthis.intervals.forEach(toRemove => result.removeRange(toRemove));\n\t\treturn result;\n\t}\n\n\tcontains(item) {\n\t\tif (this.intervals === null) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tfor (let k = 0; k < this.intervals.length; k++) {\n\t\t\t\tif(this.intervals[k].contains(item)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tremoveRange(toRemove) {\n\t\tif(toRemove.start===toRemove.stop-1) {\n\t\t\tthis.removeOne(toRemove.start);\n\t\t} else if (this.intervals !== null) {\n\t\t\tlet pos = 0;\n\t\t\tfor(let n=0; n<this.intervals.length; n++) {\n\t\t\t\tconst existing = this.intervals[pos];\n\t\t\t\t// intervals are ordered\n\t\t\t\tif (toRemove.stop<=existing.start) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// check for including range, split it\n\t\t\t\telse if(toRemove.start>existing.start && toRemove.stop<existing.stop) {\n\t\t\t\t\tthis.intervals[pos] = new Interval(existing.start, toRemove.start);\n\t\t\t\t\tconst x = new Interval(toRemove.stop, existing.stop);\n\t\t\t\t\tthis.intervals.splice(pos, 0, x);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// check for included range, remove it\n\t\t\t\telse if(toRemove.start<=existing.start && toRemove.stop>=existing.stop) {\n\t\t\t\t\tthis.intervals.splice(pos, 1);\n\t\t\t\t\tpos = pos - 1; // need another pass\n\t\t\t\t}\n\t\t\t\t// check for lower boundary\n\t\t\t\telse if(toRemove.start<existing.stop) {\n\t\t\t\t\tthis.intervals[pos] = new Interval(existing.start, toRemove.start);\n\t\t\t\t}\n\t\t\t\t// check for upper boundary\n\t\t\t\telse if(toRemove.stop<existing.stop) {\n\t\t\t\t\tthis.intervals[pos] = new Interval(toRemove.stop, existing.stop);\n\t\t\t\t}\n\t\t\t\tpos += 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tremoveOne(value) {\n\t\tif (this.intervals !== null) {\n\t\t\tfor (let i = 0; i < this.intervals.length; i++) {\n\t\t\t\tconst existing = this.intervals[i];\n\t\t\t\t// intervals are ordered\n\t\t\t\tif (value < existing.start) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// check for single value range\n\t\t\t\telse if (value === existing.start && value === existing.stop - 1) {\n\t\t\t\t\tthis.intervals.splice(i, 1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// check for lower boundary\n\t\t\t\telse if (value === existing.start) {\n\t\t\t\t\tthis.intervals[i] = new Interval(existing.start + 1, existing.stop);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// check for upper boundary\n\t\t\t\telse if (value === existing.stop - 1) {\n\t\t\t\t\tthis.intervals[i] = new Interval(existing.start, existing.stop - 1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// split existing range\n\t\t\t\telse if (value < existing.stop - 1) {\n\t\t\t\t\tconst replace = new Interval(existing.start, value);\n\t\t\t\t\texisting.start = value + 1;\n\t\t\t\t\tthis.intervals.splice(i, 0, replace);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\ttoString(literalNames, symbolicNames, elemsAreChar) {\n\t\tliteralNames = literalNames || null;\n\t\tsymbolicNames = symbolicNames || null;\n\t\telemsAreChar = elemsAreChar || false;\n\t\tif (this.intervals === null) {\n\t\t\treturn \"{}\";\n\t\t} else if(literalNames!==null || symbolicNames!==null) {\n\t\t\treturn this.toTokenString(literalNames, symbolicNames);\n\t\t} else if(elemsAreChar) {\n\t\t\treturn this.toCharString();\n\t\t} else {\n\t\t\treturn this.toIndexString();\n\t\t}\n\t}\n\n\ttoCharString() {\n\t\tconst names = [];\n\t\tfor (let i = 0; i < this.intervals.length; i++) {\n\t\t\tconst existing = this.intervals[i];\n\t\t\tif(existing.stop===existing.start+1) {\n\t\t\t\tif ( existing.start===Token.EOF ) {\n\t\t\t\t\tnames.push(\"<EOF>\");\n\t\t\t\t} else {\n\t\t\t\t\tnames.push(\"'\" + String.fromCharCode(existing.start) + \"'\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnames.push(\"'\" + String.fromCharCode(existing.start) + \"'..'\" + String.fromCharCode(existing.stop-1) + \"'\");\n\t\t\t}\n\t\t}\n\t\tif (names.length > 1) {\n\t\t\treturn \"{\" + names.join(\", \") + \"}\";\n\t\t} else {\n\t\t\treturn names[0];\n\t\t}\n\t}\n\n\ttoIndexString() {\n\t\tconst names = [];\n\t\tfor (let i = 0; i < this.intervals.length; i++) {\n\t\t\tconst existing = this.intervals[i];\n\t\t\tif(existing.stop===existing.start+1) {\n\t\t\t\tif ( existing.start===Token.EOF ) {\n\t\t\t\t\tnames.push(\"<EOF>\");\n\t\t\t\t} else {\n\t\t\t\t\tnames.push(existing.start.toString());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnames.push(existing.start.toString() + \"..\" + (existing.stop-1).toString());\n\t\t\t}\n\t\t}\n\t\tif (names.length > 1) {\n\t\t\treturn \"{\" + names.join(\", \") + \"}\";\n\t\t} else {\n\t\t\treturn names[0];\n\t\t}\n\t}\n\n\ttoTokenString(literalNames, symbolicNames) {\n\t\tconst names = [];\n\t\tfor (let i = 0; i < this.intervals.length; i++) {\n\t\t\tconst existing = this.intervals[i];\n\t\t\tfor (let j = existing.start; j < existing.stop; j++) {\n\t\t\t\tnames.push(this.elementName(literalNames, symbolicNames, j));\n\t\t\t}\n\t\t}\n\t\tif (names.length > 1) {\n\t\t\treturn \"{\" + names.join(\", \") + \"}\";\n\t\t} else {\n\t\t\treturn names[0];\n\t\t}\n\t}\n\n\telementName(literalNames, symbolicNames, token) {\n\t\tif (token === Token.EOF) {\n\t\t\treturn \"<EOF>\";\n\t\t} else if (token === Token.EPSILON) {\n\t\t\treturn \"<EPSILON>\";\n\t\t} else {\n\t\t\treturn literalNames[token] || symbolicNames[token];\n\t\t}\n\t}\n\n\tget length(){\n\t\treturn this.intervals.map( interval => interval.length ).reduce((acc, val) => acc + val);\n\t}\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n/**\n * The following images show the relation of states and\n * {@link ATNState//transitions} for various grammar constructs.\n *\n * <ul>\n *\n * <li>Solid edges marked with an &//0949; indicate a required\n * {@link EpsilonTransition}.</li>\n *\n * <li>Dashed edges indicate locations where any transition derived from\n * {@link Transition} might appear.</li>\n *\n * <li>Dashed nodes are place holders for either a sequence of linked\n * {@link BasicState} states or the inclusion of a block representing a nested\n * construct in one of the forms below.</li>\n *\n * <li>Nodes showing multiple outgoing alternatives with a {@code ...} support\n * any number of alternatives (one or more). Nodes without the {@code ...} only\n * support the exact number of alternatives shown in the diagram.</li>\n *\n * </ul>\n *\n * <h2>Basic Blocks</h2>\n *\n * <h3>Rule</h3>\n *\n * <embed src=\"images/Rule.svg\" type=\"image/svg+xml\"/>\n *\n * <h3>Block of 1 or more alternatives</h3>\n *\n * <embed src=\"images/Block.svg\" type=\"image/svg+xml\"/>\n *\n * <h2>Greedy Loops</h2>\n *\n * <h3>Greedy Closure: {@code (...)*}</h3>\n *\n * <embed src=\"images/ClosureGreedy.svg\" type=\"image/svg+xml\"/>\n *\n * <h3>Greedy Positive Closure: {@code (...)+}</h3>\n *\n * <embed src=\"images/PositiveClosureGreedy.svg\" type=\"image/svg+xml\"/>\n *\n * <h3>Greedy Optional: {@code (...)?}</h3>\n *\n * <embed src=\"images/OptionalGreedy.svg\" type=\"image/svg+xml\"/>\n *\n * <h2>Non-Greedy Loops</h2>\n *\n * <h3>Non-Greedy Closure: {@code (...)*?}</h3>\n *\n * <embed src=\"images/ClosureNonGreedy.svg\" type=\"image/svg+xml\"/>\n *\n * <h3>Non-Greedy Positive Closure: {@code (...)+?}</h3>\n *\n * <embed src=\"images/PositiveClosureNonGreedy.svg\" type=\"image/svg+xml\"/>\n *\n * <h3>Non-Greedy Optional: {@code (...)??}</h3>\n *\n * <embed src=\"images/OptionalNonGreedy.svg\" type=\"image/svg+xml\"/>\n */\nexport default class ATNState {\n    constructor() {\n        // Which ATN are we in?\n        this.atn = null;\n        this.stateNumber = ATNState.INVALID_STATE_NUMBER;\n        this.stateType = null;\n        this.ruleIndex = 0; // at runtime, we don't have Rule objects\n        this.epsilonOnlyTransitions = false;\n        // Track the transitions emanating from this ATN state.\n        this.transitions = [];\n        // Used to cache lookahead during parsing, not used during construction\n        this.nextTokenWithinRule = null;\n    }\n\n    toString() {\n        return this.stateNumber;\n    }\n\n    equals(other) {\n        if (other instanceof ATNState) {\n            return this.stateNumber===other.stateNumber;\n        } else {\n            return false;\n        }\n    }\n\n    isNonGreedyExitState() {\n        return false;\n    }\n\n    addTransition(trans, index) {\n        if(index===undefined) {\n            index = -1;\n        }\n        if (this.transitions.length===0) {\n            this.epsilonOnlyTransitions = trans.isEpsilon;\n        } else if(this.epsilonOnlyTransitions !== trans.isEpsilon) {\n            this.epsilonOnlyTransitions = false;\n        }\n        if (index===-1) {\n            this.transitions.push(trans);\n        } else {\n            this.transitions.splice(index, 1, trans);\n        }\n    }\n}\n\n// constants for serialization\nATNState.INVALID_TYPE = 0;\nATNState.BASIC = 1;\nATNState.RULE_START = 2;\nATNState.BLOCK_START = 3;\nATNState.PLUS_BLOCK_START = 4;\nATNState.STAR_BLOCK_START = 5;\nATNState.TOKEN_START = 6;\nATNState.RULE_STOP = 7;\nATNState.BLOCK_END = 8;\nATNState.STAR_LOOP_BACK = 9;\nATNState.STAR_LOOP_ENTRY = 10;\nATNState.PLUS_LOOP_BACK = 11;\nATNState.LOOP_END = 12;\n\nATNState.serializationNames = [\n            \"INVALID\",\n            \"BASIC\",\n            \"RULE_START\",\n            \"BLOCK_START\",\n            \"PLUS_BLOCK_START\",\n            \"STAR_BLOCK_START\",\n            \"TOKEN_START\",\n            \"RULE_STOP\",\n            \"BLOCK_END\",\n            \"STAR_LOOP_BACK\",\n            \"STAR_LOOP_ENTRY\",\n            \"PLUS_LOOP_BACK\",\n            \"LOOP_END\" ];\n\nATNState.INVALID_STATE_NUMBER = -1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport ATNState from \"./ATNState.js\";\n\n/**\n * The last node in the ATN for a rule, unless that rule is the start symbol.\n * In that case, there is one transition to EOF. Later, we might encode\n * references to all calls to this rule to compute FOLLOW sets for\n * error handling\n */\nexport default class RuleStopState extends ATNState {\n    constructor() {\n        super();\n        this.stateType = ATNState.RULE_STOP;\n        return this;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n/**\n * An ATN transition between any two ATN states.  Subclasses define\n * atom, set, epsilon, action, predicate, rule transitions.\n *\n * <p>This is a one way link.  It emanates from a state (usually via a list of\n * transitions) and has a target state.</p>\n *\n * <p>Since we never have to change the ATN transitions once we construct it,\n * we can fix these transitions as specific classes. The DFA transitions\n * on the other hand need to update the labels as it adds transitions to\n * the states. We'll use the term Edge for the DFA to distinguish them from\n * ATN transitions.</p>\n */\nexport default class Transition {\n    constructor(target) {\n        // The target of this transition.\n        if (target===undefined || target===null) {\n            throw \"target cannot be null.\";\n        }\n        this.target = target;\n        // Are we epsilon, action, sempred?\n        this.isEpsilon = false;\n        this.label = null;\n    }\n}\n\n// constants for serialization\n\nTransition.EPSILON = 1;\nTransition.RANGE = 2;\nTransition.RULE = 3;\n// e.g., {isType(input.LT(1))}?\nTransition.PREDICATE = 4;\nTransition.ATOM = 5;\nTransition.ACTION = 6;\n// ~(A|B) or ~atom, wildcard, which convert to next 2\nTransition.SET = 7;\nTransition.NOT_SET = 8;\nTransition.WILDCARD = 9;\nTransition.PRECEDENCE = 10;\n\nTransition.serializationNames = [\n            \"INVALID\",\n            \"EPSILON\",\n            \"RANGE\",\n            \"RULE\",\n            \"PREDICATE\",\n            \"ATOM\",\n            \"ACTION\",\n            \"SET\",\n            \"NOT_SET\",\n            \"WILDCARD\",\n            \"PRECEDENCE\"\n        ];\n\nTransition.serializationTypes = {\n        EpsilonTransition: Transition.EPSILON,\n        RangeTransition: Transition.RANGE,\n        RuleTransition: Transition.RULE,\n        PredicateTransition: Transition.PREDICATE,\n        AtomTransition: Transition.ATOM,\n        ActionTransition: Transition.ACTION,\n        SetTransition: Transition.SET,\n        NotSetTransition: Transition.NOT_SET,\n        WildcardTransition: Transition.WILDCARD,\n        PrecedencePredicateTransition: Transition.PRECEDENCE\n    };\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport Transition from \"./Transition.js\";\n\nexport default class RuleTransition extends Transition {\n    constructor(ruleStart, ruleIndex, precedence, followState) {\n        super(ruleStart);\n        // ptr to the rule definition object for this rule ref\n        this.ruleIndex = ruleIndex;\n        this.precedence = precedence;\n        // what node to begin computations following ref to rule\n        this.followState = followState;\n        this.serializationType = Transition.RULE;\n        this.isEpsilon = true;\n    }\n\n    matches(symbol, minVocabSymbol, maxVocabSymbol) {\n        return false;\n    }\n}\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n// A transition containing a set of values.\nimport IntervalSet from \"../misc/IntervalSet.js\";\nimport Token from '../Token.js';\nimport Transition from \"./Transition.js\";\n\nexport default class SetTransition extends Transition {\n    constructor(target, set) {\n        super(target);\n        this.serializationType = Transition.SET;\n        if (set !==undefined && set !==null) {\n            this.label = set;\n        } else {\n            this.label = new IntervalSet();\n            this.label.addOne(Token.INVALID_TYPE);\n        }\n    }\n\n    matches(symbol, minVocabSymbol, maxVocabSymbol) {\n        return this.label.contains(symbol);\n    }\n\n    toString() {\n        return this.label.toString();\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport Transition from \"./Transition.js\";\nimport SetTransition from \"./SetTransition.js\";\n\nexport default class NotSetTransition extends SetTransition {\n    constructor(target, set) {\n        super(target, set);\n        this.serializationType = Transition.NOT_SET;\n    }\n\n    matches(symbol, minVocabSymbol, maxVocabSymbol) {\n        return symbol >= minVocabSymbol && symbol <= maxVocabSymbol &&\n            !super.matches(symbol, minVocabSymbol, maxVocabSymbol);\n    }\n\n    toString() {\n        return '~' + super.toString();\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport Transition from \"./Transition.js\";\n\nexport default class WildcardTransition extends Transition {\n    constructor(target) {\n        super(target);\n        this.serializationType = Transition.WILDCARD;\n    }\n\n    matches(symbol, minVocabSymbol, maxVocabSymbol) {\n        return symbol >= minVocabSymbol && symbol <= maxVocabSymbol;\n    }\n\n    toString() {\n        return \".\";\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport Transition from \"../transition/Transition.js\";\n\nexport default class AbstractPredicateTransition extends Transition {\n    constructor(target) {\n        super(target);\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n/**\n * The basic notion of a tree has a parent, a payload, and a list of children.\n * It is the most abstract interface for all the trees used by ANTLR.\n */\nexport default class Tree {}\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport Tree from \"./Tree.js\";\n\nexport default class SyntaxTree extends Tree {\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport SyntaxTree from \"./SyntaxTree.js\";\n\nexport default class ParseTree extends SyntaxTree {\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport ParseTree from \"./ParseTree.js\";\n\nexport default class RuleNode extends ParseTree {\n\n    get ruleContext() {\n        throw new Error(\"missing interface implementation\")\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport ParseTree from \"./ParseTree.js\";\n\nexport default class TerminalNode extends ParseTree {\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport TerminalNode from \"./TerminalNode.js\";\n\nexport default class ErrorNode extends TerminalNode {\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport Token from '../Token.js';\nimport ErrorNode from './ErrorNode.js';\nimport TerminalNode from './TerminalNode.js';\nimport RuleNode from './RuleNode.js';\nimport escapeWhitespace from \"../utils/escapeWhitespace.js\";\n\n/** A set of utility routines useful for all kinds of ANTLR trees. */\nconst Trees = {\n    /**\n     * Print out a whole tree in LISP form. {@link //getNodeText} is used on the\n     *  node payloads to get the text for the nodes.  Detect\n     *  parse trees and extract data appropriately.\n     */\n    toStringTree: function(tree, ruleNames, recog) {\n        ruleNames = ruleNames || null;\n        recog = recog || null;\n        if(recog!==null) {\n            ruleNames = recog.ruleNames;\n        }\n        let s = Trees.getNodeText(tree, ruleNames);\n        s = escapeWhitespace(s, false);\n        const c = tree.getChildCount();\n        if(c===0) {\n            return s;\n        }\n        let res = \"(\" + s + ' ';\n        if(c>0) {\n            s = Trees.toStringTree(tree.getChild(0), ruleNames);\n            res = res.concat(s);\n        }\n        for(let i=1;i<c;i++) {\n            s = Trees.toStringTree(tree.getChild(i), ruleNames);\n            res = res.concat(' ' + s);\n        }\n        res = res.concat(\")\");\n        return res;\n    },\n\n    getNodeText: function(t, ruleNames, recog) {\n        ruleNames = ruleNames || null;\n        recog = recog || null;\n        if(recog!==null) {\n            ruleNames = recog.ruleNames;\n        }\n        if(ruleNames!==null) {\n            if (t instanceof RuleNode) {\n                const context = t.ruleContext;\n                const altNumber = context.getAltNumber();\n                // use const value of ATN.INVALID_ALT_NUMBER to avoid circular dependency\n                if ( altNumber != 0 ) {\n                    return ruleNames[t.ruleIndex]+\":\"+altNumber;\n                }\n                return ruleNames[t.ruleIndex];\n            } else if ( t instanceof ErrorNode) {\n                return t.toString();\n            } else if(t instanceof TerminalNode) {\n                if(t.symbol!==null) {\n                    return t.symbol.text;\n                }\n            }\n        }\n        // no recog for rule names\n        const payload = t.getPayload();\n        if (payload instanceof Token ) {\n            return payload.text;\n        }\n        return t.getPayload().toString();\n    },\n\n    /**\n     * Return ordered list of all children of this node\n     */\n    getChildren: function(t) {\n        const list = [];\n        for(let i=0;i<t.getChildCount();i++) {\n            list.push(t.getChild(i));\n        }\n        return list;\n    },\n\n    /**\n     * Return a list of all ancestors of this node.  The first node of\n     * list is the root and the last is the parent of this node.\n     */\n    getAncestors: function(t) {\n        let ancestors = [];\n        t = t.getParent();\n        while(t!==null) {\n            ancestors = [t].concat(ancestors);\n            t = t.getParent();\n        }\n        return ancestors;\n    },\n\n    findAllTokenNodes: function(t, ttype) {\n        return Trees.findAllNodes(t, ttype, true);\n    },\n\n    findAllRuleNodes: function(t, ruleIndex) {\n        return Trees.findAllNodes(t, ruleIndex, false);\n    },\n\n    findAllNodes: function(t, index, findTokens) {\n        const nodes = [];\n        Trees._findAllNodes(t, index, findTokens, nodes);\n        return nodes;\n    },\n\n    _findAllNodes: function(t, index, findTokens, nodes) {\n        // check this node (the root) first\n        if(findTokens && (t instanceof TerminalNode)) {\n            if(t.symbol.type===index) {\n                nodes.push(t);\n            }\n        } else if(!findTokens && (t instanceof RuleNode)) {\n            if(t.ruleIndex===index) {\n                nodes.push(t);\n            }\n        }\n        // check children\n        for(let i=0;i<t.getChildCount();i++) {\n            Trees._findAllNodes(t.getChild(i), index, findTokens, nodes);\n        }\n    },\n\n    descendants: function(t) {\n        let nodes = [t];\n        for(let i=0;i<t.getChildCount();i++) {\n            nodes = nodes.concat(Trees.descendants(t.getChild(i)));\n        }\n        return nodes;\n    }\n}\n\nexport default Trees;\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nexport default function escapeWhitespace(s, escapeSpaces) {\n    s = s.replace(/\\t/g, \"\\\\t\")\n        .replace(/\\n/g, \"\\\\n\")\n        .replace(/\\r/g, \"\\\\r\");\n    if (escapeSpaces) {\n        s = s.replace(/ /g, \"\\u00B7\");\n    }\n    return s;\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport RuleNode from '../tree/RuleNode.js';\nimport Interval from '../misc/Interval.js';\nimport Trees from '../tree/Trees.js';\n\nexport default class RuleContext extends RuleNode {\n    /** A rule context is a record of a single rule invocation. It knows\n     * which context invoked it, if any. If there is no parent context, then\n     * naturally the invoking state is not valid.  The parent link\n     * provides a chain upwards from the current rule invocation to the root\n     * of the invocation tree, forming a stack. We actually carry no\n     * information about the rule associated with this context (except\n     * when parsing). We keep only the state number of the invoking state from\n     * the ATN submachine that invoked this. Contrast this with the s\n     * pointer inside ParserRuleContext that tracks the current state\n     * being \"executed\" for the current rule.\n     *\n     * The parent contexts are useful for computing lookahead sets and\n     * getting error information.\n     *\n     * These objects are used during parsing and prediction.\n     * For the special case of parsers, we use the subclass\n     * ParserRuleContext.\n     *\n     * @see ParserRuleContext\n     */\n    constructor(parent, invokingState) {\n        // What context invoked this rule?\n        super();\n        this.parentCtx = parent || null;\n        /**\n         * What state invoked the rule associated with this context?\n         * The \"return address\" is the followState of invokingState\n         * If parent is null, this should be -1.\n         */\n        this.invokingState = invokingState || -1;\n    }\n\n    depth() {\n        let n = 0;\n        let p = this;\n        while (p !== null) {\n            p = p.parentCtx;\n            n += 1;\n        }\n        return n;\n    }\n\n    /**\n     * A context is empty if there is no invoking state; meaning nobody call\n     * current context.\n     */\n    isEmpty() {\n        return this.invokingState === -1;\n    }\n\n// satisfy the ParseTree / SyntaxTree interface\n    getSourceInterval() {\n        return Interval.INVALID_INTERVAL;\n    }\n\n    get ruleContext() {\n        return this;\n    }\n\n    getPayload() {\n        return this;\n    }\n\n    /**\n     * Return the combined text of all child nodes. This method only considers\n     * tokens which have been added to the parse tree.\n     * <p>\n     * Since tokens on hidden channels (e.g. whitespace or comments) are not\n     * added to the parse trees, they will not appear in the output of this\n     * method.\n     */\n    getText() {\n        if (this.getChildCount() === 0) {\n            return \"\";\n        } else {\n            return this.children.map(function (child) {\n                return child.getText();\n            }).join(\"\");\n        }\n    }\n\n    /**\n     * For rule associated with this parse tree internal node, return\n     * the outer alternative number used to match the input. Default\n     * implementation does not compute nor store this alt num. Create\n     * a subclass of ParserRuleContext with backing field and set\n     * option contextSuperClass.\n     * to set it.\n     */\n    getAltNumber() {\n        // use constant value of ATN.INVALID_ALT_NUMBER to avoid circular dependency\n        return 0;\n    }\n\n    /**\n     * Set the outer alternative number for this context node. Default\n     * implementation does nothing to avoid backing field overhead for\n     * trees that don't need it.  Create\n     * a subclass of ParserRuleContext with backing field and set\n     * option contextSuperClass.\n     */\n    setAltNumber(altNumber) {\n    }\n\n    getChild(i) {\n        return null;\n    }\n\n    getChildCount() {\n        return 0;\n    }\n\n    accept(visitor) {\n        return visitor.visitChildren(this);\n    }\n\n    /**\n     * Print out a whole tree, not just a node, in LISP format\n     * (root child1 .. childN). Print just a node if this is a leaf.\n     */\n    toStringTree(ruleNames, recog) {\n        return Trees.toStringTree(this, ruleNames, recog);\n    }\n\n    toString(ruleNames, stop) {\n        ruleNames = ruleNames || null;\n        stop = stop || null;\n        let p = this;\n        let s = \"[\";\n        while (p !== null && p !== stop) {\n            if (ruleNames === null) {\n                if (!p.isEmpty()) {\n                    s += p.invokingState;\n                }\n            } else {\n                const ri = p.ruleIndex;\n                const ruleName = (ri >= 0 && ri < ruleNames.length) ? ruleNames[ri]\n                    : \"\" + ri;\n                s += ruleName;\n            }\n            if (p.parentCtx !== null && (ruleNames !== null || !p.parentCtx.isEmpty())) {\n                s += \" \";\n            }\n            p = p.parentCtx;\n        }\n        s += \"]\";\n        return s;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nexport default class PredictionContext {\n\n\tconstructor(cachedHashCode) {\n\t\tthis.cachedHashCode = cachedHashCode;\n\t}\n\n\t/**\n\t * Stores the computed hash code of this {@link PredictionContext}. The hash\n\t * code is computed in parts to match the following reference algorithm.\n\t *\n\t * <pre>\n\t * private int referenceHashCode() {\n\t * int hash = {@link MurmurHash//initialize MurmurHash.initialize}({@link\n\t * //INITIAL_HASH});\n\t *\n\t * for (int i = 0; i &lt; {@link //size()}; i++) {\n\t * hash = {@link MurmurHash//update MurmurHash.update}(hash, {@link //getParent\n\t * getParent}(i));\n\t * }\n\t *\n\t * for (int i = 0; i &lt; {@link //size()}; i++) {\n\t * hash = {@link MurmurHash//update MurmurHash.update}(hash, {@link\n\t * //getReturnState getReturnState}(i));\n\t * }\n\t *\n\t * hash = {@link MurmurHash//finish MurmurHash.finish}(hash, 2// {@link\n\t * //size()});\n\t * return hash;\n\t * }\n\t * </pre>\n\t * This means only the {@link //EMPTY} context is in set.\n\t */\n\tisEmpty() {\n\t\treturn this === PredictionContext.EMPTY;\n\t}\n\n\thasEmptyPath() {\n\t\treturn this.getReturnState(this.length - 1) === PredictionContext.EMPTY_RETURN_STATE;\n\t}\n\n\thashCode() {\n\t\treturn this.cachedHashCode;\n\t}\n\n\tupdateHashCode(hash) {\n\t\thash.update(this.cachedHashCode);\n\t}\n}\n\n/**\n * Represents {@code $} in local context prediction, which means wildcard.\n * {@code//+x =//}.\n */\nPredictionContext.EMPTY = null;\n\n/**\n * Represents {@code $} in an array in full context mode, when {@code $}\n * doesn't mean wildcard: {@code $ + x = [$,x]}. Here,\n * {@code $} = {@link //EMPTY_RETURN_STATE}.\n */\nPredictionContext.EMPTY_RETURN_STATE = 0x7FFFFFFF;\n\nPredictionContext.globalNodeCount = 1;\nPredictionContext.id = PredictionContext.globalNodeCount;\nPredictionContext.trace_atn_sim = false;", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport PredictionContext from \"./PredictionContext.js\";\nimport equalArrays from \"../utils/equalArrays.js\";\nimport HashCode from \"../misc/HashCode.js\";\n\nexport default class ArrayPredictionContext extends PredictionContext {\n\n    constructor(parents, returnStates) {\n        /**\n         * Parent can be null only if full ctx mode and we make an array\n         * from {@link //EMPTY} and non-empty. We merge {@link //EMPTY} by using\n         * null parent and\n         * returnState == {@link //EMPTY_RETURN_STATE}.\n         */\n        const h = new HashCode();\n        h.update(parents, returnStates);\n        const hashCode = h.finish();\n        super(hashCode);\n        this.parents = parents;\n        this.returnStates = returnStates;\n        return this;\n    }\n\n    isEmpty() {\n        // since EMPTY_RETURN_STATE can only appear in the last position, we\n        // don't need to verify that size==1\n        return this.returnStates[0] === PredictionContext.EMPTY_RETURN_STATE;\n    }\n\n    getParent(index) {\n        return this.parents[index];\n    }\n\n    getReturnState(index) {\n        return this.returnStates[index];\n    }\n\n    equals(other) {\n        if (this === other) {\n            return true;\n        } else if (!(other instanceof ArrayPredictionContext)) {\n            return false;\n        } else if (this.hashCode() !== other.hashCode()) {\n            return false; // can't be same if hash is different\n        } else {\n            return equalArrays(this.returnStates, other.returnStates) &&\n                equalArrays(this.parents, other.parents);\n        }\n    }\n\n    toString() {\n        if (this.isEmpty()) {\n            return \"[]\";\n        } else {\n            let s = \"[\";\n            for (let i = 0; i < this.returnStates.length; i++) {\n                if (i > 0) {\n                    s = s + \", \";\n                }\n                if (this.returnStates[i] === PredictionContext.EMPTY_RETURN_STATE) {\n                    s = s + \"$\";\n                    continue;\n                }\n                s = s + this.returnStates[i];\n                if (this.parents[i] !== null) {\n                    s = s + \" \" + this.parents[i];\n                } else {\n                    s = s + \"null\";\n                }\n            }\n            return s + \"]\";\n        }\n    }\n\n    get length(){\n        return this.returnStates.length;\n    }\n}\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport PredictionContext from './PredictionContext.js';\nimport HashCode from \"../misc/HashCode.js\";\n\nexport default class SingletonPredictionContext extends PredictionContext {\n\n    constructor(parent, returnState) {\n        let hashCode = 0;\n        const hash = new HashCode();\n        if(parent !== null) {\n            hash.update(parent, returnState);\n        } else {\n            hash.update(1);\n        }\n        hashCode = hash.finish();\n        super(hashCode);\n        this.parentCtx = parent;\n        this.returnState = returnState;\n    }\n\n    getParent(index) {\n        return this.parentCtx;\n    }\n\n    getReturnState(index) {\n        return this.returnState;\n    }\n\n    equals(other) {\n        if (this === other) {\n            return true;\n        } else if (!(other instanceof SingletonPredictionContext)) {\n            return false;\n        } else if (this.hashCode() !== other.hashCode()) {\n            return false; // can't be same if hash is different\n        } else {\n            if(this.returnState !== other.returnState)\n                return false;\n            else if(this.parentCtx==null)\n                return other.parentCtx==null\n            else\n                return this.parentCtx.equals(other.parentCtx);\n        }\n    }\n\n    toString() {\n        const up = this.parentCtx === null ? \"\" : this.parentCtx.toString();\n        if (up.length === 0) {\n            if (this.returnState === PredictionContext.EMPTY_RETURN_STATE) {\n                return \"$\";\n            } else {\n                return \"\" + this.returnState;\n            }\n        } else {\n            return \"\" + this.returnState + \" \" + up;\n        }\n    }\n\n    get length(){\n        return 1;\n    }\n\n    static create(parent, returnState) {\n        if (returnState === PredictionContext.EMPTY_RETURN_STATE && parent === null) {\n            // someone can pass in the bits of an array ctx that mean $\n            return PredictionContext.EMPTY;\n        } else {\n            return new SingletonPredictionContext(parent, returnState);\n        }\n    }\n}\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport PredictionContext from \"./PredictionContext.js\";\nimport SingletonPredictionContext from \"./SingletonPredictionContext.js\";\n\nexport default class EmptyPredictionContext extends SingletonPredictionContext {\n\n    constructor() {\n        super(null, PredictionContext.EMPTY_RETURN_STATE);\n    }\n\n    isEmpty() {\n        return true;\n    }\n\n    getParent(index) {\n        return null;\n    }\n\n    getReturnState(index) {\n        return this.returnState;\n    }\n\n    equals(other) {\n        return this === other;\n    }\n\n    toString() {\n        return \"$\";\n    }\n}\n\n\nPredictionContext.EMPTY = new EmptyPredictionContext();\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport standardEqualsFunction from \"../utils/standardEqualsFunction.js\";\nimport standardHashCodeFunction from \"../utils/standardHashCodeFunction.js\";\n\nconst DEFAULT_LOAD_FACTOR = 0.75;\nconst INITIAL_CAPACITY = 16\n\nexport default class HashMap {\n\n    constructor(hashFunction, equalsFunction) {\n        this.buckets = new Array(INITIAL_CAPACITY);\n        this.threshold = Math.floor(INITIAL_CAPACITY * DEFAULT_LOAD_FACTOR);\n        this.itemCount = 0;\n        this.hashFunction = hashFunction || standardHashCodeFunction;\n        this.equalsFunction = equalsFunction || standardEqualsFunction;\n    }\n\n    set(key, value) {\n        this._expand();\n        const slot = this._getSlot(key);\n        let bucket = this.buckets[slot];\n        if (!bucket) {\n            bucket = [[key, value]];\n            this.buckets[slot] = bucket;\n            this.itemCount++;\n            return value;\n        }\n        const existing = bucket.find(pair => this.equalsFunction(pair[0], key), this);\n        if(existing) {\n            const result = existing[1];\n            existing[1] = value;\n            return result;\n        } else {\n            bucket.push([key, value]);\n            this.itemCount++;\n            return value;\n        }\n    }\n\n    containsKey(key) {\n        const bucket = this._getBucket(key);\n        if(!bucket) {\n            return false;\n        }\n        const existing = bucket.find(pair => this.equalsFunction(pair[0], key), this);\n        return !!existing;\n    }\n\n    get(key) {\n        const bucket = this._getBucket(key);\n        if(!bucket) {\n            return null;\n        }\n        const existing = bucket.find(pair => this.equalsFunction(pair[0], key), this);\n        return existing ? existing[1] : null;\n    }\n\n    entries() {\n        return this.buckets.filter(b => b != null).flat(1);\n    }\n\n    getKeys() {\n        return this.entries().map(pair => pair[0]);\n    }\n\n    getValues() {\n        return this.entries().map(pair => pair[1]);\n    }\n\n    toString() {\n        const ss = this.entries().map(e => '{' + e[0] + ':' + e[1] + '}');\n        return '[' + ss.join(\", \") + ']';\n    }\n\n    get length() {\n        return this.itemCount;\n    }\n\n    _getSlot(key) {\n        const hash = this.hashFunction(key);\n        return hash & this.buckets.length - 1;\n    }\n    _getBucket(key) {\n        return this.buckets[this._getSlot(key)];\n    }\n\n    _expand() {\n        if (this.itemCount <= this.threshold) {\n            return;\n        }\n        const old_buckets = this.buckets;\n        const newCapacity = this.buckets.length * 2;\n        this.buckets = new Array(newCapacity);\n        this.threshold = Math.floor(newCapacity * DEFAULT_LOAD_FACTOR);\n        for (const bucket of old_buckets) {\n            if (!bucket) {\n                continue;\n            }\n            for (const pair of bucket) {\n                const slot = this._getSlot(pair[0]);\n                let newBucket = this.buckets[slot];\n                if (!newBucket) {\n                    newBucket = [];\n                    this.buckets[slot] = newBucket;\n                }\n                newBucket.push(pair);\n            }\n        }\n    }\n\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport RuleContext from \"./RuleContext.js\";\nimport PredictionContext from \"./PredictionContext.js\";\nimport ArrayPredictionContext from \"./ArrayPredictionContext.js\";\nimport SingletonPredictionContext from \"./SingletonPredictionContext.js\";\nimport EmptyPredictionContext from \"./EmptyPredictionContext.js\";\nimport HashMap from \"../misc/HashMap.js\";\n\n/**\n * Convert a {@link RuleContext} tree to a {@link PredictionContext} graph.\n * Return {@link //EMPTY} if {@code outerContext} is empty or null.\n */\nexport function predictionContextFromRuleContext(atn, outerContext) {\n    if (outerContext === undefined || outerContext === null) {\n        outerContext = RuleContext.EMPTY;\n    }\n    // if we are in RuleContext of start rule, s, then PredictionContext\n    // is EMPTY. Nobody called us. (if we are empty, return empty)\n    if (outerContext.parentCtx === null || outerContext === RuleContext.EMPTY) {\n        return PredictionContext.EMPTY;\n    }\n    // If we have a parent, convert it to a PredictionContext graph\n    const parent = predictionContextFromRuleContext(atn, outerContext.parentCtx);\n    const state = atn.states[outerContext.invokingState];\n    const transition = state.transitions[0];\n    return SingletonPredictionContext.create(parent, transition.followState.stateNumber);\n}\n\n\nexport function getCachedPredictionContext(context, contextCache, visited) {\n    if (context.isEmpty()) {\n        return context;\n    }\n    let existing = visited.get(context) || null;\n    if (existing !== null) {\n        return existing;\n    }\n    existing = contextCache.get(context);\n    if (existing !== null) {\n        visited.set(context, existing);\n        return existing;\n    }\n    let changed = false;\n    let parents = [];\n    for (let i = 0; i < parents.length; i++) {\n        const parent = getCachedPredictionContext(context.getParent(i), contextCache, visited);\n        if (changed || parent !== context.getParent(i)) {\n            if (!changed) {\n                parents = [];\n                for (let j = 0; j < context.length; j++) {\n                    parents[j] = context.getParent(j);\n                }\n                changed = true;\n            }\n            parents[i] = parent;\n        }\n    }\n    if (!changed) {\n        contextCache.add(context);\n        visited.set(context, context);\n        return context;\n    }\n    let updated = null;\n    if (parents.length === 0) {\n        updated = PredictionContext.EMPTY;\n    } else if (parents.length === 1) {\n        updated = SingletonPredictionContext.create(parents[0], context\n            .getReturnState(0));\n    } else {\n        updated = new ArrayPredictionContext(parents, context.returnStates);\n    }\n    contextCache.add(updated);\n    visited.set(updated, updated);\n    visited.set(context, updated);\n\n    return updated;\n}\n\nexport function merge(a, b, rootIsWildcard, mergeCache) {\n    // share same graph if both same\n    if (a === b) {\n        return a;\n    }\n    if (a instanceof SingletonPredictionContext && b instanceof SingletonPredictionContext) {\n        return mergeSingletons(a, b, rootIsWildcard, mergeCache);\n    }\n    // At least one of a or b is array\n    // If one is $ and rootIsWildcard, return $ as * wildcard\n    if (rootIsWildcard) {\n        if (a instanceof EmptyPredictionContext) {\n            return a;\n        }\n        if (b instanceof EmptyPredictionContext) {\n            return b;\n        }\n    }\n    // convert singleton so both are arrays to normalize\n    if (a instanceof SingletonPredictionContext) {\n        a = new ArrayPredictionContext([a.getParent()], [a.returnState]);\n    }\n    if (b instanceof SingletonPredictionContext) {\n        b = new ArrayPredictionContext([b.getParent()], [b.returnState]);\n    }\n    return mergeArrays(a, b, rootIsWildcard, mergeCache);\n}\n\n\n/**\n * Merge two {@link ArrayPredictionContext} instances.\n *\n * <p>Different tops, different parents.<br>\n * <embed src=\"images/ArrayMerge_DiffTopDiffPar.svg\" type=\"image/svg+xml\"/></p>\n *\n * <p>Shared top, same parents.<br>\n * <embed src=\"images/ArrayMerge_ShareTopSamePar.svg\" type=\"image/svg+xml\"/></p>\n *\n * <p>Shared top, different parents.<br>\n * <embed src=\"images/ArrayMerge_ShareTopDiffPar.svg\" type=\"image/svg+xml\"/></p>\n *\n * <p>Shared top, all shared parents.<br>\n * <embed src=\"images/ArrayMerge_ShareTopSharePar.svg\"\n * type=\"image/svg+xml\"/></p>\n *\n * <p>Equal tops, merge parents and reduce top to\n * {@link SingletonPredictionContext}.<br>\n * <embed src=\"images/ArrayMerge_EqualTop.svg\" type=\"image/svg+xml\"/></p>\n */\nfunction mergeArrays(a, b, rootIsWildcard, mergeCache) {\n    if (mergeCache !== null) {\n        let previous = mergeCache.get(a, b);\n        if (previous !== null) {\n            if ( PredictionContext.trace_atn_sim ) console.log(\"mergeArrays a=\"+a+\",b=\"+b+\" -> previous\");\n            return previous;\n        }\n        previous = mergeCache.get(b, a);\n        if (previous !== null) {\n            if ( PredictionContext.trace_atn_sim ) console.log(\"mergeArrays a=\"+a+\",b=\"+b+\" -> previous\");\n            return previous;\n        }\n    }\n    // merge sorted payloads a + b => M\n    let i = 0; // walks a\n    let j = 0; // walks b\n    let k = 0; // walks target M array\n\n    let mergedReturnStates = new Array(a.returnStates.length + b.returnStates.length).fill(0);\n    let mergedParents = new Array(a.returnStates.length + b.returnStates.length).fill(null);\n    // walk and merge to yield mergedParents, mergedReturnStates\n    while (i < a.returnStates.length && j < b.returnStates.length) {\n        const a_parent = a.parents[i];\n        const b_parent = b.parents[j];\n        if (a.returnStates[i] === b.returnStates[j]) {\n            // same payload (stack tops are equal), must yield merged singleton\n            const payload = a.returnStates[i];\n            // $+$ = $\n            const bothDollars = payload === PredictionContext.EMPTY_RETURN_STATE &&\n                a_parent === null && b_parent === null;\n            const ax_ax = (a_parent !== null && b_parent !== null && a_parent === b_parent); // ax+ax\n            // ->\n            // ax\n            if (bothDollars || ax_ax) {\n                mergedParents[k] = a_parent; // choose left\n                mergedReturnStates[k] = payload;\n            } else { // ax+ay -> a'[x,y]\n                mergedParents[k] = merge(a_parent, b_parent, rootIsWildcard, mergeCache);\n                mergedReturnStates[k] = payload;\n            }\n            i += 1; // hop over left one as usual\n            j += 1; // but also skip one in right side since we merge\n        } else if (a.returnStates[i] < b.returnStates[j]) { // copy a[i] to M\n            mergedParents[k] = a_parent;\n            mergedReturnStates[k] = a.returnStates[i];\n            i += 1;\n        } else { // b > a, copy b[j] to M\n            mergedParents[k] = b_parent;\n            mergedReturnStates[k] = b.returnStates[j];\n            j += 1;\n        }\n        k += 1;\n    }\n    // copy over any payloads remaining in either array\n    if (i < a.returnStates.length) {\n        for (let p = i; p < a.returnStates.length; p++) {\n            mergedParents[k] = a.parents[p];\n            mergedReturnStates[k] = a.returnStates[p];\n            k += 1;\n        }\n    } else {\n        for (let p = j; p < b.returnStates.length; p++) {\n            mergedParents[k] = b.parents[p];\n            mergedReturnStates[k] = b.returnStates[p];\n            k += 1;\n        }\n    }\n    // trim merged if we combined a few that had same stack tops\n    if (k < mergedParents.length) { // write index < last position; trim\n        if (k === 1) { // for just one merged element, return singleton top\n            const a_ = SingletonPredictionContext.create(mergedParents[0],\n                mergedReturnStates[0]);\n            if (mergeCache !== null) {\n                mergeCache.set(a, b, a_);\n            }\n            return a_;\n        }\n        mergedParents = mergedParents.slice(0, k);\n        mergedReturnStates = mergedReturnStates.slice(0, k);\n    }\n\n    const M = new ArrayPredictionContext(mergedParents, mergedReturnStates);\n\n    // if we created same array as a or b, return that instead\n    // TODO: track whether this is possible above during merge sort for speed\n    if (M.equals(a)) {\n        if (mergeCache !== null) {\n            mergeCache.set(a, b, a);\n        }\n        if ( PredictionContext.trace_atn_sim ) console.log(\"mergeArrays a=\"+a+\",b=\"+b+\" -> a\");\n        return a;\n    }\n    if (M.equals(b)) {\n        if (mergeCache !== null) {\n            mergeCache.set(a, b, b);\n        }\n        if ( PredictionContext.trace_atn_sim ) console.log(\"mergeArrays a=\"+a+\",b=\"+b+\" -> b\");\n        return b;\n    }\n    combineCommonParents(mergedParents);\n\n    if (mergeCache !== null) {\n        mergeCache.set(a, b, M);\n    }\n\n    if ( PredictionContext.trace_atn_sim ) console.log(\"mergeArrays a=\"+a+\",b=\"+b+\" -> \"+M);\n\n    return M;\n}\n\n\n/**\n * Make pass over all <em>M</em> {@code parents}; merge any {@code equals()}\n * ones.\n */\nfunction combineCommonParents(parents) {\n    const uniqueParents = new HashMap();\n\n    for (let p = 0; p < parents.length; p++) {\n        const parent = parents[p];\n        if (!(uniqueParents.containsKey(parent))) {\n            uniqueParents.set(parent, parent);\n        }\n    }\n    for (let q = 0; q < parents.length; q++) {\n        parents[q] = uniqueParents.get(parents[q]);\n    }\n}\n\n\n/**\n * Merge two {@link SingletonPredictionContext} instances.\n *\n * <p>Stack tops equal, parents merge is same; return left graph.<br>\n * <embed src=\"images/SingletonMerge_SameRootSamePar.svg\"\n * type=\"image/svg+xml\"/></p>\n *\n * <p>Same stack top, parents differ; merge parents giving array node, then\n * remainders of those graphs. A new root node is created to point to the\n * merged parents.<br>\n * <embed src=\"images/SingletonMerge_SameRootDiffPar.svg\"\n * type=\"image/svg+xml\"/></p>\n *\n * <p>Different stack tops pointing to same parent. Make array node for the\n * root where both element in the root point to the same (original)\n * parent.<br>\n * <embed src=\"images/SingletonMerge_DiffRootSamePar.svg\"\n * type=\"image/svg+xml\"/></p>\n *\n * <p>Different stack tops pointing to different parents. Make array node for\n * the root where each element points to the corresponding original\n * parent.<br>\n * <embed src=\"images/SingletonMerge_DiffRootDiffPar.svg\"\n * type=\"image/svg+xml\"/></p>\n *\n * @param a the first {@link SingletonPredictionContext}\n * @param b the second {@link SingletonPredictionContext}\n * @param rootIsWildcard {@code true} if this is a local-context merge,\n * otherwise false to indicate a full-context merge\n * @param mergeCache\n */\nfunction mergeSingletons(a, b, rootIsWildcard, mergeCache) {\n    if (mergeCache !== null) {\n        let previous = mergeCache.get(a, b);\n        if (previous !== null) {\n            return previous;\n        }\n        previous = mergeCache.get(b, a);\n        if (previous !== null) {\n            return previous;\n        }\n    }\n\n    const rootMerge = mergeRoot(a, b, rootIsWildcard);\n    if (rootMerge !== null) {\n        if (mergeCache !== null) {\n            mergeCache.set(a, b, rootMerge);\n        }\n        return rootMerge;\n    }\n    if (a.returnState === b.returnState) {\n        const parent = merge(a.parentCtx, b.parentCtx, rootIsWildcard, mergeCache);\n        // if parent is same as existing a or b parent or reduced to a parent,\n        // return it\n        if (parent === a.parentCtx) {\n            return a; // ax + bx = ax, if a=b\n        }\n        if (parent === b.parentCtx) {\n            return b; // ax + bx = bx, if a=b\n        }\n        // else: ax + ay = a'[x,y]\n        // merge parents x and y, giving array node with x,y then remainders\n        // of those graphs. dup a, a' points at merged array\n        // new joined parent so create new singleton pointing to it, a'\n        const spc = SingletonPredictionContext.create(parent, a.returnState);\n        if (mergeCache !== null) {\n            mergeCache.set(a, b, spc);\n        }\n        return spc;\n    } else { // a != b payloads differ\n        // see if we can collapse parents due to $+x parents if local ctx\n        let singleParent = null;\n        if (a === b || (a.parentCtx !== null && a.parentCtx === b.parentCtx)) { // ax +\n            // bx =\n            // [a,b]x\n            singleParent = a.parentCtx;\n        }\n        if (singleParent !== null) { // parents are same\n            // sort payloads and use same parent\n            const payloads = [ a.returnState, b.returnState ];\n            if (a.returnState > b.returnState) {\n                payloads[0] = b.returnState;\n                payloads[1] = a.returnState;\n            }\n            const parents = [ singleParent, singleParent ];\n            const apc = new ArrayPredictionContext(parents, payloads);\n            if (mergeCache !== null) {\n                mergeCache.set(a, b, apc);\n            }\n            return apc;\n        }\n        // parents differ and can't merge them. Just pack together\n        // into array; can't merge.\n        // ax + by = [ax,by]\n        const payloads = [ a.returnState, b.returnState ];\n        let parents = [ a.parentCtx, b.parentCtx ];\n        if (a.returnState > b.returnState) { // sort by payload\n            payloads[0] = b.returnState;\n            payloads[1] = a.returnState;\n            parents = [ b.parentCtx, a.parentCtx ];\n        }\n        const a_ = new ArrayPredictionContext(parents, payloads);\n        if (mergeCache !== null) {\n            mergeCache.set(a, b, a_);\n        }\n        return a_;\n    }\n}\n\n\n/**\n * Handle case where at least one of {@code a} or {@code b} is\n * {@link //EMPTY}. In the following diagrams, the symbol {@code $} is used\n * to represent {@link //EMPTY}.\n *\n * <h2>Local-Context Merges</h2>\n *\n * <p>These local-context merge operations are used when {@code rootIsWildcard}\n * is true.</p>\n *\n * <p>{@link //EMPTY} is superset of any graph; return {@link //EMPTY}.<br>\n * <embed src=\"images/LocalMerge_EmptyRoot.svg\" type=\"image/svg+xml\"/></p>\n *\n * <p>{@link //EMPTY} and anything is {@code //EMPTY}, so merged parent is\n * {@code //EMPTY}; return left graph.<br>\n * <embed src=\"images/LocalMerge_EmptyParent.svg\" type=\"image/svg+xml\"/></p>\n *\n * <p>Special case of last merge if local context.<br>\n * <embed src=\"images/LocalMerge_DiffRoots.svg\" type=\"image/svg+xml\"/></p>\n *\n * <h2>Full-Context Merges</h2>\n *\n * <p>These full-context merge operations are used when {@code rootIsWildcard}\n * is false.</p>\n *\n * <p><embed src=\"images/FullMerge_EmptyRoots.svg\" type=\"image/svg+xml\"/></p>\n *\n * <p>Must keep all contexts; {@link //EMPTY} in array is a special value (and\n * null parent).<br>\n * <embed src=\"images/FullMerge_EmptyRoot.svg\" type=\"image/svg+xml\"/></p>\n *\n * <p><embed src=\"images/FullMerge_SameRoot.svg\" type=\"image/svg+xml\"/></p>\n *\n * @param a the first {@link SingletonPredictionContext}\n * @param b the second {@link SingletonPredictionContext}\n * @param rootIsWildcard {@code true} if this is a local-context merge,\n * otherwise false to indicate a full-context merge\n */\nfunction mergeRoot(a, b, rootIsWildcard) {\n    if (rootIsWildcard) {\n        if (a === PredictionContext.EMPTY) {\n            return PredictionContext.EMPTY; // // + b =//\n        }\n        if (b === PredictionContext.EMPTY) {\n            return PredictionContext.EMPTY; // a +// =//\n        }\n    } else {\n        if (a === PredictionContext.EMPTY && b === PredictionContext.EMPTY) {\n            return PredictionContext.EMPTY; // $ + $ = $\n        } else if (a === PredictionContext.EMPTY) { // $ + x = [$,x]\n            const payloads = [ b.returnState,\n                PredictionContext.EMPTY_RETURN_STATE ];\n            const parents = [ b.parentCtx, null ];\n            return new ArrayPredictionContext(parents, payloads);\n        } else if (b === PredictionContext.EMPTY) { // x + $ = [$,x] ($ is always first if present)\n            const payloads = [ a.returnState, PredictionContext.EMPTY_RETURN_STATE ];\n            const parents = [ a.parentCtx, null ];\n            return new ArrayPredictionContext(parents, payloads);\n        }\n    }\n    return null;\n}\n\n\n// ter's recursive version of Sam's getAllNodes()\nexport function getAllContextNodes(context, nodes, visited) {\n    if (nodes === null) {\n        nodes = [];\n        return getAllContextNodes(context, nodes, visited);\n    } else if (visited === null) {\n        visited = new HashMap();\n        return getAllContextNodes(context, nodes, visited);\n    } else {\n        if (context === null || visited.containsKey(context)) {\n            return nodes;\n        }\n        visited.set(context, context);\n        nodes.push(context);\n        for (let i = 0; i < context.length; i++) {\n            getAllContextNodes(context.getParent(i), nodes, visited);\n        }\n        return nodes;\n    }\n}\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport HashCode from \"./HashCode.js\";\nimport equalArrays from \"../utils/equalArrays.js\";\n\nexport default class BitSet {\n\n    constructor() {\n        this.data = new Uint32Array(1);\n    }\n\n    set(index) {\n        BitSet._checkIndex(index)\n        this._resize(index);\n        this.data[index >>> 5] |= 1 << index % 32;\n    }\n\n    get(index) {\n        BitSet._checkIndex(index)\n        const slot = index >>> 5;\n        if (slot >= this.data.length) {\n            return false;\n        }\n        return (this.data[slot] & 1 << index % 32) !== 0;\n    }\n\n    clear(index) {\n        BitSet._checkIndex(index)\n        const slot = index >>> 5;\n        if (slot < this.data.length) {\n            this.data[slot] &= ~(1 << index);\n        }\n    }\n\n    or(set) {\n        const minCount = Math.min(this.data.length, set.data.length);\n        for (let k = 0; k < minCount; ++k) {\n            this.data[k] |= set.data[k];\n        }\n        if (this.data.length < set.data.length) {\n            this._resize((set.data.length << 5) - 1);\n            const c = set.data.length;\n            for (let k = minCount; k < c; ++k) {\n                this.data[k] = set.data[k];\n            }\n        }\n    }\n\n    values() {\n        const result = new Array(this.length);\n        let pos = 0;\n        const length = this.data.length;\n        for (let k = 0; k < length; ++k) {\n            let l = this.data[k];\n            while (l !== 0) {\n                const t = l & -l;\n                result[pos++] = (k << 5) + BitSet._bitCount(t - 1);\n                l ^= t;\n            }\n        }\n        return result;\n    }\n\n    minValue() {\n        for (let k = 0; k < this.data.length; ++k) {\n            let l = this.data[k];\n            if (l !== 0) {\n                let result = 0;\n                while ((l & 1) === 0) {\n                    result++;\n                    l >>= 1;\n                }\n                return result + (32 * k);\n            }\n        }\n        return 0;\n    }\n\n    hashCode() {\n        return HashCode.hashStuff(this.values());\n    }\n\n    equals(other) {\n        return other instanceof BitSet && equalArrays(this.data, other.data);\n    }\n\n    toString() {\n        return \"{\" + this.values().join(\", \") + \"}\";\n    }\n\n    get length() {\n        return this.data.map(l => BitSet._bitCount(l)).reduce((s, v) => s + v, 0);\n    }\n\n    _resize(index) {\n        const count = index + 32 >>> 5;\n        if (count <= this.data.length) {\n            return;\n        }\n        const data = new Uint32Array(count);\n        data.set(this.data);\n        data.fill(0, this.data.length);\n        this.data = data;\n    }\n\n    static _checkIndex(index) {\n        if (index < 0)\n            throw new RangeError(\"index cannot be negative\");\n    }\n\n    static _bitCount(l) {\n        // see https://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetParallel\n        let count = 0;\n        l = l - ((l >> 1) & 0x55555555);\n        l = (l & 0x33333333) + ((l >> 2) & 0x33333333);\n        l = (l + (l >> 4)) & 0x0f0f0f0f;\n        l = l + (l >> 8);\n        l = l + (l >> 16);\n        return count + l & 0x3f;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport Token from '../Token.js';\nimport ATNConfig from './ATNConfig.js';\nimport IntervalSet from '../misc/IntervalSet.js';\nimport RuleStopState from '../state/RuleStopState.js';\nimport RuleTransition from '../transition/RuleTransition.js';\nimport NotSetTransition from '../transition/NotSetTransition.js';\nimport WildcardTransition from '../transition/WildcardTransition.js';\nimport AbstractPredicateTransition from './AbstractPredicateTransition.js';\nimport { predictionContextFromRuleContext } from '../context/PredictionContextUtils.js';\nimport PredictionContext from '../context/PredictionContext.js';\nimport SingletonPredictionContext from '../context/SingletonPredictionContext.js';\nimport BitSet from \"../misc/BitSet.js\";\nimport HashSet from \"../misc/HashSet.js\";\n\nexport default class LL1Analyzer {\n    constructor(atn) {\n        this.atn = atn;\n    }\n\n    /**\n     * Calculates the SLL(1) expected lookahead set for each outgoing transition\n     * of an {@link ATNState}. The returned array has one element for each\n     * outgoing transition in {@code s}. If the closure from transition\n     * <em>i</em> leads to a semantic predicate before matching a symbol, the\n     * element at index <em>i</em> of the result will be {@code null}.\n     *\n     * @param s the ATN state\n     * @return the expected symbols for each outgoing transition of {@code s}.\n     */\n    getDecisionLookahead(s) {\n        if (s === null) {\n            return null;\n        }\n        const count = s.transitions.length;\n        const look = [];\n        for(let alt=0; alt< count; alt++) {\n            look[alt] = new IntervalSet();\n            const lookBusy = new HashSet();\n            const seeThruPreds = false; // fail to get lookahead upon pred\n            this._LOOK(s.transition(alt).target, null, PredictionContext.EMPTY,\n                  look[alt], lookBusy, new BitSet(), seeThruPreds, false);\n            // Wipe out lookahead for this alternative if we found nothing\n            // or we had a predicate when we !seeThruPreds\n            if (look[alt].length===0 || look[alt].contains(LL1Analyzer.HIT_PRED)) {\n                look[alt] = null;\n            }\n        }\n        return look;\n    }\n\n    /**\n     * Compute set of tokens that can follow {@code s} in the ATN in the\n     * specified {@code ctx}.\n     *\n     * <p>If {@code ctx} is {@code null} and the end of the rule containing\n     * {@code s} is reached, {@link Token//EPSILON} is added to the result set.\n     * If {@code ctx} is not {@code null} and the end of the outermost rule is\n     * reached, {@link Token//EOF} is added to the result set.</p>\n     *\n     * @param s the ATN state\n     * @param stopState the ATN state to stop at. This can be a\n     * {@link BlockEndState} to detect epsilon paths through a closure.\n     * @param ctx the complete parser context, or {@code null} if the context\n     * should be ignored\n     *\n     * @return The set of tokens that can follow {@code s} in the ATN in the\n     * specified {@code ctx}.\n     */\n    LOOK(s, stopState, ctx) {\n        const r = new IntervalSet();\n        const seeThruPreds = true; // ignore preds; get all lookahead\n        ctx = ctx || null;\n        const lookContext = ctx!==null ? predictionContextFromRuleContext(s.atn, ctx) : null;\n        this._LOOK(s, stopState, lookContext, r, new HashSet(), new BitSet(), seeThruPreds, true);\n        return r;\n    }\n\n    /**\n     * Compute set of tokens that can follow {@code s} in the ATN in the\n     * specified {@code ctx}.\n     *\n     * <p>If {@code ctx} is {@code null} and {@code stopState} or the end of the\n     * rule containing {@code s} is reached, {@link Token//EPSILON} is added to\n     * the result set. If {@code ctx} is not {@code null} and {@code addEOF} is\n     * {@code true} and {@code stopState} or the end of the outermost rule is\n     * reached, {@link Token//EOF} is added to the result set.</p>\n     *\n     * @param s the ATN state.\n     * @param stopState the ATN state to stop at. This can be a\n     * {@link BlockEndState} to detect epsilon paths through a closure.\n     * @param ctx The outer context, or {@code null} if the outer context should\n     * not be used.\n     * @param look The result lookahead set.\n     * @param lookBusy A set used for preventing epsilon closures in the ATN\n     * from causing a stack overflow. Outside code should pass\n     * {@code new CustomizedSet<ATNConfig>} for this argument.\n     * @param calledRuleStack A set used for preventing left recursion in the\n     * ATN from causing a stack overflow. Outside code should pass\n     * {@code new BitSet()} for this argument.\n     * @param seeThruPreds {@code true} to true semantic predicates as\n     * implicitly {@code true} and \"see through them\", otherwise {@code false}\n     * to treat semantic predicates as opaque and add {@link //HIT_PRED} to the\n     * result if one is encountered.\n     * @param addEOF Add {@link Token//EOF} to the result if the end of the\n     * outermost context is reached. This parameter has no effect if {@code ctx}\n     * is {@code null}.\n     */\n    _LOOK(s, stopState , ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF) {\n        const c = new ATNConfig({state:s, alt:0, context: ctx}, null);\n        if (lookBusy.has(c)) {\n            return;\n        }\n        lookBusy.add(c);\n        if (s === stopState) {\n            if (ctx ===null) {\n                look.addOne(Token.EPSILON);\n                return;\n            } else if (ctx.isEmpty() && addEOF) {\n                look.addOne(Token.EOF);\n                return;\n            }\n        }\n        if (s instanceof RuleStopState ) {\n            if (ctx ===null) {\n                look.addOne(Token.EPSILON);\n                return;\n            } else if (ctx.isEmpty() && addEOF) {\n                look.addOne(Token.EOF);\n                return;\n            }\n            if (ctx !== PredictionContext.EMPTY) {\n                const removed = calledRuleStack.get(s.ruleIndex);\n                try {\n                    calledRuleStack.clear(s.ruleIndex);\n                    // run thru all possible stack tops in ctx\n                    for (let i = 0; i < ctx.length; i++) {\n                        const returnState = this.atn.states[ctx.getReturnState(i)];\n                        this._LOOK(returnState, stopState, ctx.getParent(i), look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n                    }\n                }finally {\n                    if (removed) {\n                        calledRuleStack.set(s.ruleIndex);\n                    }\n                }\n                return;\n            }\n        }\n        for(let j=0; j<s.transitions.length; j++) {\n            const t = s.transitions[j];\n            if (t.constructor === RuleTransition) {\n                if (calledRuleStack.get(t.target.ruleIndex)) {\n                    continue;\n                }\n                const newContext = SingletonPredictionContext.create(ctx, t.followState.stateNumber);\n                try {\n                    calledRuleStack.set(t.target.ruleIndex);\n                    this._LOOK(t.target, stopState, newContext, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n                } finally {\n                    calledRuleStack.clear(t.target.ruleIndex);\n                }\n            } else if (t instanceof AbstractPredicateTransition ) {\n                if (seeThruPreds) {\n                    this._LOOK(t.target, stopState, ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n                } else {\n                    look.addOne(LL1Analyzer.HIT_PRED);\n                }\n            } else if( t.isEpsilon) {\n                this._LOOK(t.target, stopState, ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n            } else if (t.constructor === WildcardTransition) {\n                look.addRange( Token.MIN_USER_TOKEN_TYPE, this.atn.maxTokenType );\n            } else {\n                let set = t.label;\n                if (set !== null) {\n                    if (t instanceof NotSetTransition) {\n                        set = set.complement(Token.MIN_USER_TOKEN_TYPE, this.atn.maxTokenType);\n                    }\n                    look.addSet(set);\n                }\n            }\n        }\n    }\n}\n\n/**\n * Special value added to the lookahead sets to indicate that we hit\n * a predicate during analysis if {@code seeThruPreds==false}.\n */\nLL1Analyzer.HIT_PRED = Token.INVALID_TYPE;\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport LL1Analyzer from './LL1Analyzer.js';\nimport IntervalSet from '../misc/IntervalSet.js';\nimport Token from '../Token.js';\n\nexport default class ATN {\n\n    constructor(grammarType , maxTokenType) {\n        /**\n         * Used for runtime deserialization of ATNs from strings\n         * The type of the ATN.\n        */\n        this.grammarType = grammarType;\n        // The maximum value for any symbol recognized by a transition in the ATN.\n        this.maxTokenType = maxTokenType;\n        this.states = [];\n        /**\n         * Each subrule/rule is a decision point and we must track them so we\n         * can go back later and build DFA predictors for them.  This includes\n         * all the rules, subrules, optional blocks, ()+, ()* etc...\n         */\n        this.decisionToState = [];\n        // Maps from rule index to starting state number.\n        this.ruleToStartState = [];\n        // Maps from rule index to stop state number.\n        this.ruleToStopState = null;\n        this.modeNameToStartState = {};\n        /**\n         * For lexer ATNs, this maps the rule index to the resulting token type.\n         * For parser ATNs, this maps the rule index to the generated bypass token\n         * type if the {@link ATNDeserializationOptions//isGenerateRuleBypassTransitions}\n         * deserialization option was specified; otherwise, this is {@code null}\n         */\n        this.ruleToTokenType = null;\n        /**\n         * For lexer ATNs, this is an array of {@link LexerAction} objects which may\n         * be referenced by action transitions in the ATN\n         */\n        this.lexerActions = null;\n        this.modeToStartState = [];\n    }\n\n    /**\n     * Compute the set of valid tokens that can occur starting in state {@code s}.\n     * If {@code ctx} is null, the set of tokens will not include what can follow\n     * the rule surrounding {@code s}. In other words, the set will be\n     * restricted to tokens reachable staying within {@code s}'s rule\n     */\n    nextTokensInContext(s, ctx) {\n        const anal = new LL1Analyzer(this);\n        return anal.LOOK(s, null, ctx);\n    }\n\n    /**\n     * Compute the set of valid tokens that can occur starting in {@code s} and\n     * staying in same rule. {@link Token//EPSILON} is in set if we reach end of\n     * rule\n     */\n    nextTokensNoContext(s) {\n        if (s.nextTokenWithinRule !== null ) {\n            return s.nextTokenWithinRule;\n        }\n        s.nextTokenWithinRule = this.nextTokensInContext(s, null);\n        s.nextTokenWithinRule.readOnly = true;\n        return s.nextTokenWithinRule;\n    }\n\n    nextTokens(s, ctx) {\n        if ( ctx===undefined ) {\n            return this.nextTokensNoContext(s);\n        } else {\n            return this.nextTokensInContext(s, ctx);\n        }\n    }\n\n    addState(state) {\n        if ( state !== null ) {\n            state.atn = this;\n            state.stateNumber = this.states.length;\n        }\n        this.states.push(state);\n    }\n\n    removeState(state) {\n        this.states[state.stateNumber] = null; // just free mem, don't shift states in list\n    }\n\n    defineDecisionState(s) {\n        this.decisionToState.push(s);\n        s.decision = this.decisionToState.length-1;\n        return s.decision;\n    }\n\n    getDecisionState(decision) {\n        if (this.decisionToState.length===0) {\n            return null;\n        } else {\n            return this.decisionToState[decision];\n        }\n    }\n\n    /**\n     * Computes the set of input symbols which could follow ATN state number\n     * {@code stateNumber} in the specified full {@code context}. This method\n     * considers the complete parser context, but does not evaluate semantic\n     * predicates (i.e. all predicates encountered during the calculation are\n     * assumed true). If a path in the ATN exists from the starting state to the\n     * {@link RuleStopState} of the outermost context without matching any\n     * symbols, {@link Token//EOF} is added to the returned set.\n     *\n     * <p>If {@code context} is {@code null}, it is treated as\n     * {@link ParserRuleContext//EMPTY}.</p>\n     *\n     * @param stateNumber the ATN state number\n     * @param ctx the full parse context\n     *\n     * @return {IntervalSet} The set of potentially valid input symbols which could follow the\n     * specified state in the specified context.\n     *\n     * @throws IllegalArgumentException if the ATN does not contain a state with\n     * number {@code stateNumber}\n     */\n    getExpectedTokens(stateNumber, ctx ) {\n        if ( stateNumber < 0 || stateNumber >= this.states.length ) {\n            throw(\"Invalid state number.\");\n        }\n        const s = this.states[stateNumber];\n        let following = this.nextTokens(s);\n        if (!following.contains(Token.EPSILON)) {\n            return following;\n        }\n        const expected = new IntervalSet();\n        expected.addSet(following);\n        expected.removeOne(Token.EPSILON);\n        while (ctx !== null && ctx.invokingState >= 0 && following.contains(Token.EPSILON)) {\n            const invokingState = this.states[ctx.invokingState];\n            const rt = invokingState.transitions[0];\n            following = this.nextTokens(rt.followState);\n            expected.addSet(following);\n            expected.removeOne(Token.EPSILON);\n            ctx = ctx.parentCtx;\n        }\n        if (following.contains(Token.EPSILON)) {\n            expected.addOne(Token.EOF);\n        }\n        return expected;\n    }\n}\n\nATN.INVALID_ALT_NUMBER = 0;\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport ATNState from \"./ATNState.js\";\n\nexport default class BasicState extends ATNState {\n    constructor() {\n        super();\n        this.stateType = ATNState.BASIC;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport ATNState from \"./ATNState.js\";\n\nexport default class DecisionState extends ATNState {\n    constructor() {\n        super();\n        this.decision = -1;\n        this.nonGreedy = false;\n        return this;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport DecisionState from \"./DecisionState.js\";\n\n/**\n *  The start of a regular {@code (...)} block\n */\nexport default class BlockStartState extends DecisionState {\n    constructor() {\n        super();\n        this.endState = null;\n        return this;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport ATNState from \"./ATNState.js\";\n\n/**\n * Terminal node of a simple {@code (a|b|c)} block\n */\nexport default class BlockEndState extends ATNState {\n    constructor() {\n        super();\n        this.stateType = ATNState.BLOCK_END;\n        this.startState = null;\n        return this;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport ATNState from \"./ATNState.js\";\n\n/**\n * Mark the end of a * or + loop\n */\nexport default class LoopEndState extends ATNState {\n    constructor() {\n        super();\n        this.stateType = ATNState.LOOP_END;\n        this.loopBackState = null;\n        return this;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport ATNState from \"./ATNState.js\";\n\nexport default class RuleStartState extends ATNState {\n    constructor() {\n        super();\n        this.stateType = ATNState.RULE_START;\n        this.stopState = null;\n        this.isPrecedenceRule = false;\n        return this;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport DecisionState from \"./DecisionState.js\";\nimport ATNState from \"./ATNState.js\";\n\n/**\n * The Tokens rule start state linking to each lexer rule start state\n */\nexport default class TokensStartState extends DecisionState {\n    constructor() {\n        super();\n        this.stateType = ATNState.TOKEN_START;\n        return this;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport DecisionState from \"./DecisionState.js\";\nimport ATNState from \"./ATNState.js\";\n\n/**\n * Decision state for {@code A+} and {@code (A|B)+}.  It has two transitions:\n * one to the loop back to start of the block and one to exit.\n */\nexport default class PlusLoopbackState extends DecisionState {\n    constructor() {\n        super();\n        this.stateType = ATNState.PLUS_LOOP_BACK;\n        return this;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport ATNState from \"./ATNState.js\";\n\nexport default class StarLoopbackState extends ATNState {\n    constructor() {\n        super();\n        this.stateType = ATNState.STAR_LOOP_BACK;\n        return this;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport DecisionState from \"./DecisionState.js\";\nimport ATNState from \"./ATNState.js\";\n\nexport default class StarLoopEntryState extends DecisionState {\n    constructor() {\n        super();\n        this.stateType = ATNState.STAR_LOOP_ENTRY;\n        this.loopBackState = null;\n        // Indicates whether this state can benefit from a precedence DFA during SLL decision making.\n        this.isPrecedenceDecision = null;\n        return this;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport BlockStartState from \"./BlockStartState.js\";\nimport ATNState from \"./ATNState.js\";\n\n/**\n * Start of {@code (A|B|...)+} loop. Technically a decision state, but\n * we don't use for code generation; somebody might need it, so I'm defining\n * it for completeness. In reality, the {@link PlusLoopbackState} node is the\n * real decision-making note for {@code A+}\n */\nexport default class PlusBlockStartState extends BlockStartState {\n    constructor() {\n        super();\n        this.stateType = ATNState.PLUS_BLOCK_START;\n        this.loopBackState = null;\n        return this;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport BlockStartState from \"./BlockStartState.js\";\nimport ATNState from \"./ATNState.js\";\n\n/**\n * The block that begins a closure loop\n */\nexport default class StarBlockStartState extends BlockStartState {\n    constructor() {\n        super();\n        this.stateType = ATNState.STAR_BLOCK_START;\n        return this;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport ATNState from \"./ATNState.js\";\nimport BlockStartState from \"./BlockStartState.js\";\n\nexport default class BasicBlockStartState extends BlockStartState {\n    constructor() {\n        super();\n        this.stateType = ATNState.BLOCK_START;\n        return this;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport IntervalSet from \"../misc/IntervalSet.js\";\nimport Transition from \"./Transition.js\";\n\nexport default class AtomTransition extends Transition {\n    constructor(target, label) {\n        super(target);\n        // The token type or character value; or, signifies special label.\n        this.label_ = label;\n        this.label = this.makeLabel();\n        this.serializationType = Transition.ATOM;\n    }\n\n    makeLabel() {\n        const s = new IntervalSet();\n        s.addOne(this.label_);\n        return s;\n    }\n\n    matches(symbol, minVocabSymbol, maxVocabSymbol) {\n        return this.label_ === symbol;\n    }\n\n    toString() {\n        return this.label_;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport IntervalSet from \"../misc/IntervalSet.js\";\nimport Transition from \"./Transition.js\";\n\nexport default class RangeTransition extends Transition {\n    constructor(target, start, stop) {\n        super(target);\n        this.serializationType = Transition.RANGE;\n        this.start = start;\n        this.stop = stop;\n        this.label = this.makeLabel();\n    }\n\n    makeLabel() {\n        const s = new IntervalSet();\n        s.addRange(this.start, this.stop);\n        return s;\n    }\n\n    matches(symbol, minVocabSymbol, maxVocabSymbol) {\n        return symbol >= this.start && symbol <= this.stop;\n    }\n\n    toString() {\n        return \"'\" + String.fromCharCode(this.start) + \"'..'\" + String.fromCharCode(this.stop) + \"'\";\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport Transition from \"./Transition.js\";\n\nexport default class ActionTransition extends Transition {\n    constructor(target, ruleIndex, actionIndex, isCtxDependent) {\n        super(target);\n        this.serializationType = Transition.ACTION;\n        this.ruleIndex = ruleIndex;\n        this.actionIndex = actionIndex===undefined ? -1 : actionIndex;\n        this.isCtxDependent = isCtxDependent===undefined ? false : isCtxDependent; // e.g., $i ref in pred\n        this.isEpsilon = true;\n    }\n\n    matches(symbol, minVocabSymbol, maxVocabSymbol) {\n        return false;\n    }\n\n    toString() {\n        return \"action_\" + this.ruleIndex + \":\" + this.actionIndex;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport Transition from \"./Transition.js\";\n\nexport default class EpsilonTransition extends Transition {\n    constructor(target, outermostPrecedenceReturn) {\n        super(target);\n        this.serializationType = Transition.EPSILON;\n        this.isEpsilon = true;\n        this.outermostPrecedenceReturn = outermostPrecedenceReturn;\n    }\n\n    matches(symbol, minVocabSymbol, maxVocabSymbol) {\n        return false;\n    }\n\n    toString() {\n        return \"epsilon\";\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport SemanticContext from \"./SemanticContext.js\";\n\nexport default class Predicate extends SemanticContext {\n\n    constructor(ruleIndex, predIndex, isCtxDependent) {\n        super();\n        this.ruleIndex = ruleIndex === undefined ? -1 : ruleIndex;\n        this.predIndex = predIndex === undefined ? -1 : predIndex;\n        this.isCtxDependent = isCtxDependent === undefined ? false : isCtxDependent; // e.g., $i ref in pred\n    }\n\n    evaluate(parser, outerContext) {\n        const localctx = this.isCtxDependent ? outerContext : null;\n        return parser.sempred(localctx, this.ruleIndex, this.predIndex);\n    }\n\n    updateHashCode(hash) {\n        hash.update(this.ruleIndex, this.predIndex, this.isCtxDependent);\n    }\n\n    equals(other) {\n        if (this === other) {\n            return true;\n        } else if (!(other instanceof Predicate)) {\n            return false;\n        } else {\n            return this.ruleIndex === other.ruleIndex &&\n                this.predIndex === other.predIndex &&\n                this.isCtxDependent === other.isCtxDependent;\n        }\n    }\n\n    toString() {\n        return \"{\" + this.ruleIndex + \":\" + this.predIndex + \"}?\";\n    }\n}\n\n/**\n * The default {@link SemanticContext}, which is semantically equivalent to\n * a predicate of the form {@code {true}?}\n */\nSemanticContext.NONE = new Predicate();\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport Predicate from \"../atn/Predicate.js\";\nimport Transition from \"./Transition.js\";\nimport AbstractPredicateTransition from \"../atn/AbstractPredicateTransition.js\";\n\nexport default class PredicateTransition extends AbstractPredicateTransition {\n    constructor(target, ruleIndex, predIndex, isCtxDependent) {\n        super(target);\n        this.serializationType = Transition.PREDICATE;\n        this.ruleIndex = ruleIndex;\n        this.predIndex = predIndex;\n        this.isCtxDependent = isCtxDependent; // e.g., $i ref in pred\n        this.isEpsilon = true;\n    }\n\n    matches(symbol, minVocabSymbol, maxVocabSymbol) {\n        return false;\n    }\n\n    getPredicate() {\n        return new Predicate(this.ruleIndex, this.predIndex, this.isCtxDependent);\n    }\n\n    toString() {\n        return \"pred_\" + this.ruleIndex + \":\" + this.predIndex;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport SemanticContext from \"./SemanticContext.js\";\n\nexport default class PrecedencePredicate extends SemanticContext {\n\n    constructor(precedence) {\n        super();\n        this.precedence = precedence === undefined ? 0 : precedence;\n    }\n\n    evaluate(parser, outerContext) {\n        return parser.precpred(outerContext, this.precedence);\n    }\n\n    evalPrecedence(parser, outerContext) {\n        if (parser.precpred(outerContext, this.precedence)) {\n            return SemanticContext.NONE;\n        } else {\n            return null;\n        }\n    }\n\n    compareTo(other) {\n        return this.precedence - other.precedence;\n    }\n\n    updateHashCode(hash) {\n        hash.update(this.precedence);\n    }\n\n    equals(other) {\n        if (this === other) {\n            return true;\n        } else if (!(other instanceof PrecedencePredicate)) {\n            return false;\n        } else {\n            return this.precedence === other.precedence;\n        }\n    }\n\n    toString() {\n        return \"{\" + this.precedence + \">=prec}?\";\n    }\n\n}\n\n// HORRIBLE workaround circular import, avoiding dynamic import\nSemanticContext.PrecedencePredicate = PrecedencePredicate;\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport PrecedencePredicate from \"../atn/PrecedencePredicate.js\";\nimport Transition from \"./Transition.js\";\nimport AbstractPredicateTransition from \"../atn/AbstractPredicateTransition.js\";\n\nexport default class PrecedencePredicateTransition extends AbstractPredicateTransition {\n    constructor(target, precedence) {\n        super(target);\n        this.serializationType = Transition.PRECEDENCE;\n        this.precedence = precedence;\n        this.isEpsilon = true;\n    }\n\n    matches(symbol, minVocabSymbol, maxVocabSymbol) {\n        return false;\n    }\n\n    getPredicate() {\n        return new PrecedencePredicate(this.precedence);\n    }\n\n    toString() {\n        return this.precedence + \" >= _p\";\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nexport default class ATNDeserializationOptions {\n\tconstructor(copyFrom) {\n\t\tif(copyFrom===undefined) {\n\t\t\tcopyFrom = null;\n\t\t}\n\t\tthis.readOnly = false;\n\t\tthis.verifyATN = copyFrom===null ? true : copyFrom.verifyATN;\n\t\tthis.generateRuleBypassTransitions = copyFrom===null ? false : copyFrom.generateRuleBypassTransitions;\n\t}\n}\n\nATNDeserializationOptions.defaultOptions = new ATNDeserializationOptions();\nATNDeserializationOptions.defaultOptions.readOnly = true;\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport HashCode from \"../misc/HashCode.js\";\n\n/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n\nexport default class LexerAction {\n    constructor(action) {\n        this.actionType = action;\n        this.isPositionDependent = false;\n    }\n\n    hashCode() {\n        const hash = new HashCode();\n        this.updateHashCode(hash);\n        return hash.finish()\n    }\n\n    updateHashCode(hash) {\n        hash.update(this.actionType);\n    }\n\n    equals(other) {\n        return this === other;\n    }\n}\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport {default as LexerActionType } from \"../atn/LexerActionType.js\";\nimport LexerAction from \"./LexerAction.js\";\n\n/**\n * Implements the {@code skip} lexer action by calling {@link Lexer//skip}.\n *\n * <p>The {@code skip} command does not have any parameters, so this action is\n * implemented as a singleton instance exposed by {@link //INSTANCE}.</p>\n */\nexport default class LexerSkipAction extends LexerAction {\n    constructor() {\n        super(LexerActionType.SKIP);\n    }\n\n    execute(lexer) {\n        lexer.skip();\n    }\n\n    toString() {\n        return \"skip\";\n    }\n}\n\n// Provides a singleton instance of this parameterless lexer action.\nLexerSkipAction.INSTANCE = new LexerSkipAction();\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nexport default {\n    // The type of a {@link LexerChannelAction} action.\n    CHANNEL: 0,\n    // The type of a {@link LexerCustomAction} action\n    CUSTOM: 1,\n    // The type of a {@link LexerModeAction} action.\n    MODE: 2,\n    //The type of a {@link LexerMoreAction} action.\n    MORE: 3,\n    //The type of a {@link LexerPopModeAction} action.\n    POP_MODE: 4,\n    //The type of a {@link LexerPushModeAction} action.\n    PUSH_MODE: 5,\n    //The type of a {@link LexerSkipAction} action.\n    SKIP: 6,\n    //The type of a {@link LexerTypeAction} action.\n    TYPE: 7\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport {default as LexerActionType } from \"../atn/LexerActionType.js\";\nimport LexerAction from \"./LexerAction.js\";\n\n/**\n * Implements the {@code channel} lexer action by calling\n * {@link Lexer//setChannel} with the assigned channel.\n * Constructs a new {@code channel} action with the specified channel value.\n * @param channel The channel value to pass to {@link Lexer//setChannel}\n */\nexport default class LexerChannelAction extends LexerAction {\n    constructor(channel) {\n        super(LexerActionType.CHANNEL);\n        this.channel = channel;\n    }\n\n    /**\n     * <p>This action is implemented by calling {@link Lexer//setChannel} with the\n     * value provided by {@link //getChannel}.</p>\n     */\n    execute(lexer) {\n        lexer._channel = this.channel;\n    }\n\n    updateHashCode(hash) {\n        hash.update(this.actionType, this.channel);\n    }\n\n    equals(other) {\n        if (this === other) {\n            return true;\n        } else if (! (other instanceof LexerChannelAction)) {\n            return false;\n        } else {\n            return this.channel === other.channel;\n        }\n    }\n\n    toString() {\n        return \"channel(\" + this.channel + \")\";\n    }\n}\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport {default as LexerActionType } from \"../atn/LexerActionType.js\";\nimport LexerAction from \"./LexerAction.js\";\n\n/**\n * Executes a custom lexer action by calling {@link Recognizer//action} with the\n * rule and action indexes assigned to the custom action. The implementation of\n * a custom action is added to the generated code for the lexer in an override\n * of {@link Recognizer//action} when the grammar is compiled.\n *\n * <p>This class may represent embedded actions created with the <code>{...}</code>\n * syntax in ANTLR 4, as well as actions created for lexer commands where the\n * command argument could not be evaluated when the grammar was compiled.</p>\n */\nexport default class LexerCustomAction extends LexerAction {\n    /**\n     * Constructs a custom lexer action with the specified rule and action\n     * indexes.\n     *\n     * @param ruleIndex The rule index to use for calls to\n     * {@link Recognizer//action}.\n     * @param actionIndex The action index to use for calls to\n     * {@link Recognizer//action}.\n     */\n    constructor(ruleIndex, actionIndex) {\n        super(LexerActionType.CUSTOM);\n        this.ruleIndex = ruleIndex;\n        this.actionIndex = actionIndex;\n        this.isPositionDependent = true;\n    }\n\n    /**\n     * <p>Custom actions are implemented by calling {@link Lexer//action} with the\n     * appropriate rule and action indexes.</p>\n     */\n    execute(lexer) {\n        lexer.action(null, this.ruleIndex, this.actionIndex);\n    }\n\n    updateHashCode(hash) {\n        hash.update(this.actionType, this.ruleIndex, this.actionIndex);\n    }\n\n    equals(other) {\n        if (this === other) {\n            return true;\n        } else if (! (other instanceof LexerCustomAction)) {\n            return false;\n        } else {\n            return this.ruleIndex === other.ruleIndex && this.actionIndex === other.actionIndex;\n        }\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport {default as LexerActionType } from \"../atn/LexerActionType.js\";\nimport LexerAction from \"./LexerAction.js\";\n\n/**\n * Implements the {@code more} lexer action by calling {@link Lexer//more}.\n *\n * <p>The {@code more} command does not have any parameters, so this action is\n * implemented as a singleton instance exposed by {@link //INSTANCE}.</p>\n */\nexport default class LexerMoreAction extends LexerAction {\n    constructor() {\n        super(LexerActionType.MORE);\n    }\n\n    /**\n     * <p>This action is implemented by calling {@link Lexer//popMode}.</p>\n     */\n    execute(lexer) {\n        lexer.more();\n    }\n\n    toString() {\n        return \"more\";\n    }\n}\n\nLexerMoreAction.INSTANCE = new LexerMoreAction();\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport {default as LexerActionType } from \"../atn/LexerActionType.js\";\nimport LexerAction from \"./LexerAction.js\";\n\n/**\n * Implements the {@code type} lexer action by calling {@link Lexer//setType}\n * with the assigned type\n */\n\nexport default class LexerTypeAction extends LexerAction {\n    constructor(type) {\n        super(LexerActionType.TYPE);\n        this.type = type;\n    }\n\n    execute(lexer) {\n        lexer.type = this.type;\n    }\n\n    updateHashCode(hash) {\n        hash.update(this.actionType, this.type);\n    }\n\n    equals(other) {\n        if(this === other) {\n            return true;\n        } else if (! (other instanceof LexerTypeAction)) {\n            return false;\n        } else {\n            return this.type === other.type;\n        }\n    }\n\n    toString() {\n        return \"type(\" + this.type + \")\";\n    }\n}\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport {default as LexerActionType } from \"../atn/LexerActionType.js\";\nimport LexerAction from \"./LexerAction.js\";\n\n/**\n * Implements the {@code pushMode} lexer action by calling\n * {@link Lexer//pushMode} with the assigned mode\n */\nexport default class LexerPushModeAction extends LexerAction {\n    constructor(mode) {\n        super(LexerActionType.PUSH_MODE);\n        this.mode = mode;\n    }\n\n    /**\n     * <p>This action is implemented by calling {@link Lexer//pushMode} with the\n     * value provided by {@link //getMode}.</p>\n     */\n    execute(lexer) {\n        lexer.pushMode(this.mode);\n    }\n\n    updateHashCode(hash) {\n        hash.update(this.actionType, this.mode);\n    }\n\n    equals(other) {\n        if (this === other) {\n            return true;\n        } else if (! (other instanceof LexerPushModeAction)) {\n            return false;\n        } else {\n            return this.mode === other.mode;\n        }\n    }\n\n    toString() {\n        return \"pushMode(\" + this.mode + \")\";\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport {default as LexerActionType } from \"../atn/LexerActionType.js\";\nimport LexerAction from \"./LexerAction.js\";\n\n/**\n * Implements the {@code popMode} lexer action by calling {@link Lexer//popMode}.\n *\n * <p>The {@code popMode} command does not have any parameters, so this action is\n * implemented as a singleton instance exposed by {@link //INSTANCE}.</p>\n */\nexport default class LexerPopModeAction extends LexerAction {\n    constructor() {\n        super(LexerActionType.POP_MODE);\n    }\n\n    /**\n     * <p>This action is implemented by calling {@link Lexer//popMode}.</p>\n     */\n    execute(lexer) {\n        lexer.popMode();\n    }\n\n    toString() {\n        return \"popMode\";\n    }\n}\n\nLexerPopModeAction.INSTANCE = new LexerPopModeAction();\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport {default as LexerActionType } from \"../atn/LexerActionType.js\";\nimport LexerAction from \"./LexerAction.js\";\n\n/**\n * Implements the {@code mode} lexer action by calling {@link Lexer//mode} with\n * the assigned mode\n */\nexport default class LexerModeAction extends LexerAction {\n    constructor(mode) {\n        super(LexerActionType.MODE);\n        this.mode = mode;\n    }\n\n    /**\n     * <p>This action is implemented by calling {@link Lexer//mode} with the\n     * value provided by {@link //getMode}.</p>\n     */\n    execute(lexer) {\n        lexer.setMode(this.mode);\n    }\n\n    updateHashCode(hash) {\n        hash.update(this.actionType, this.mode);\n    }\n\n    equals(other) {\n        if (this === other) {\n            return true;\n        } else if (! (other instanceof LexerModeAction)) {\n            return false;\n        } else {\n            return this.mode === other.mode;\n        }\n    }\n\n    toString() {\n        return \"mode(\" + this.mode + \")\";\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport Token from '../Token.js';\nimport ATN from './ATN.js';\nimport ATNType from './ATNType.js';\n\nimport ATNState from '../state/ATNState.js';\nimport BasicState from '../state/BasicState.js';\nimport DecisionState from '../state/DecisionState.js';\nimport BlockStartState from '../state/BlockStartState.js';\nimport BlockEndState from '../state/BlockEndState.js';\nimport LoopEndState from '../state/LoopEndState.js';\nimport RuleStartState from '../state/RuleStartState.js';\nimport RuleStopState from '../state/RuleStopState.js';\nimport TokensStartState from '../state/TokensStartState.js';\nimport PlusLoopbackState from '../state/PlusLoopbackState.js';\nimport StarLoopbackState from '../state/StarLoopbackState.js';\nimport StarLoopEntryState from '../state/StarLoopEntryState.js';\nimport PlusBlockStartState from '../state/PlusBlockStartState.js';\nimport StarBlockStartState from '../state/StarBlockStartState.js';\nimport BasicBlockStartState from '../state/BasicBlockStartState.js';\n\nimport Transition from '../transition/Transition.js';\nimport AtomTransition from '../transition/AtomTransition.js';\nimport SetTransition from '../transition/SetTransition.js';\nimport NotSetTransition from '../transition/NotSetTransition.js';\nimport RuleTransition from '../transition/RuleTransition.js';\nimport RangeTransition from '../transition/RangeTransition.js';\nimport ActionTransition from '../transition/ActionTransition.js';\nimport EpsilonTransition from '../transition/EpsilonTransition.js';\nimport WildcardTransition from '../transition/WildcardTransition.js';\nimport PredicateTransition from '../transition/PredicateTransition.js';\nimport PrecedencePredicateTransition from '../transition/PrecedencePredicateTransition.js';\n\n\nimport IntervalSet from '../misc/IntervalSet.js';\nimport ATNDeserializationOptions from './ATNDeserializationOptions.js';\n\nimport LexerActionType from './LexerActionType.js';\nimport LexerSkipAction from '../action/LexerSkipAction.js';\nimport LexerChannelAction from '../action/LexerChannelAction.js';\nimport LexerCustomAction from '../action/LexerCustomAction.js';\nimport LexerMoreAction from '../action/LexerMoreAction.js';\nimport LexerTypeAction from '../action/LexerTypeAction.js';\nimport LexerPushModeAction from '../action/LexerPushModeAction.js';\nimport LexerPopModeAction from '../action/LexerPopModeAction.js';\nimport LexerModeAction from '../action/LexerModeAction.js';\n\nconst SERIALIZED_VERSION = 4;\n\nfunction initArray( length, value) {\n\tconst tmp = [];\n\ttmp[length-1] = value;\n\treturn tmp.map(function(i) {return value;});\n}\n\nexport default class ATNDeserializer {\n\n    constructor(options) {\n        if ( options=== undefined || options === null ) {\n            options = ATNDeserializationOptions.defaultOptions;\n        }\n        this.deserializationOptions = options;\n        this.stateFactories = null;\n        this.actionFactories = null;\n    }\n\n    deserialize(data) {\n        const legacy = this.reset(data);\n        this.checkVersion(legacy);\n        if(legacy)\n            this.skipUUID();\n        const atn = this.readATN();\n        this.readStates(atn, legacy);\n        this.readRules(atn, legacy);\n        this.readModes(atn);\n        const sets = [];\n        this.readSets(atn, sets, this.readInt.bind(this));\n        if(legacy)\n            this.readSets(atn, sets, this.readInt32.bind(this));\n        this.readEdges(atn, sets);\n        this.readDecisions(atn);\n        this.readLexerActions(atn, legacy);\n        this.markPrecedenceDecisions(atn);\n        this.verifyATN(atn);\n        if (this.deserializationOptions.generateRuleBypassTransitions && atn.grammarType === ATNType.PARSER ) {\n            this.generateRuleBypassTransitions(atn);\n            // re-verify after modification\n            this.verifyATN(atn);\n        }\n        return atn;\n    }\n\n    reset(data) {\n        const version = data.charCodeAt ? data.charCodeAt(0) : data[0];\n        if(version === SERIALIZED_VERSION - 1) {\n            const adjust = function (c) {\n                const v = c.charCodeAt(0);\n                return v > 1 ? v - 2 : v + 65534;\n            };\n            const temp = data.split(\"\").map(adjust);\n            // don't adjust the first value since that's the version number\n            temp[0] = data.charCodeAt(0);\n            this.data = temp;\n            this.pos = 0;\n            return true;\n        } else {\n            this.data = data\n            this.pos = 0;\n            return false;\n        }\n    }\n\n    skipUUID() {\n        let count = 0;\n        while(count++ < 8)\n            this.readInt();\n    }\n\n    checkVersion(legacy) {\n        const version = this.readInt();\n        if ( !legacy && version !== SERIALIZED_VERSION ) {\n            throw (\"Could not deserialize ATN with version \" + version + \" (expected \" + SERIALIZED_VERSION + \").\");\n        }\n    }\n\n    readATN() {\n        const grammarType = this.readInt();\n        const maxTokenType = this.readInt();\n        return new ATN(grammarType, maxTokenType);\n    }\n\n    readStates(atn, legacy) {\n        let j, pair, stateNumber;\n        const  loopBackStateNumbers = [];\n        const  endStateNumbers = [];\n        const  nstates = this.readInt();\n        for(let i=0; i<nstates; i++) {\n            const  stype = this.readInt();\n            // ignore bad type of states\n            if (stype===ATNState.INVALID_TYPE) {\n                atn.addState(null);\n                continue;\n            }\n            let ruleIndex = this.readInt();\n            if (legacy && ruleIndex === 0xFFFF) {\n                ruleIndex = -1;\n            }\n            const  s = this.stateFactory(stype, ruleIndex);\n            if (stype === ATNState.LOOP_END) { // special case\n                const  loopBackStateNumber = this.readInt();\n                loopBackStateNumbers.push([s, loopBackStateNumber]);\n            } else if(s instanceof BlockStartState) {\n                const  endStateNumber = this.readInt();\n                endStateNumbers.push([s, endStateNumber]);\n            }\n            atn.addState(s);\n        }\n        // delay the assignment of loop back and end states until we know all the\n        // state instances have been initialized\n        for (j=0; j<loopBackStateNumbers.length; j++) {\n            pair = loopBackStateNumbers[j];\n            pair[0].loopBackState = atn.states[pair[1]];\n        }\n\n        for (j=0; j<endStateNumbers.length; j++) {\n            pair = endStateNumbers[j];\n            pair[0].endState = atn.states[pair[1]];\n        }\n\n        let numNonGreedyStates = this.readInt();\n        for (j=0; j<numNonGreedyStates; j++) {\n            stateNumber = this.readInt();\n            atn.states[stateNumber].nonGreedy = true;\n        }\n\n        let numPrecedenceStates = this.readInt();\n        for (j=0; j<numPrecedenceStates; j++) {\n            stateNumber = this.readInt();\n            atn.states[stateNumber].isPrecedenceRule = true;\n        }\n    }\n\n    readRules(atn, legacy) {\n        let i;\n        const nrules = this.readInt();\n        if (atn.grammarType === ATNType.LEXER ) {\n            atn.ruleToTokenType = initArray(nrules, 0);\n        }\n        atn.ruleToStartState = initArray(nrules, 0);\n        for (i=0; i<nrules; i++) {\n            const s = this.readInt();\n            atn.ruleToStartState[i] = atn.states[s];\n            if ( atn.grammarType === ATNType.LEXER ) {\n                let tokenType = this.readInt();\n                if (legacy && tokenType === 0xFFFF) {\n                    tokenType = Token.EOF;\n                }\n                atn.ruleToTokenType[i] = tokenType;\n            }\n        }\n        atn.ruleToStopState = initArray(nrules, 0);\n        for (i=0; i<atn.states.length; i++) {\n            const state = atn.states[i];\n            if (!(state instanceof RuleStopState)) {\n                continue;\n            }\n            atn.ruleToStopState[state.ruleIndex] = state;\n            atn.ruleToStartState[state.ruleIndex].stopState = state;\n        }\n    }\n\n    readModes(atn) {\n        const nmodes = this.readInt();\n        for (let i=0; i<nmodes; i++) {\n            let s = this.readInt();\n            atn.modeToStartState.push(atn.states[s]);\n        }\n    }\n\n    readSets(atn, sets, reader) {\n        const m = this.readInt();\n        for (let i=0; i<m; i++) {\n            const iset = new IntervalSet();\n            sets.push(iset);\n            const n = this.readInt();\n            const containsEof = this.readInt();\n            if (containsEof!==0) {\n                iset.addOne(-1);\n            }\n            for (let j=0; j<n; j++) {\n                const i1 = reader();\n                const i2 = reader();\n                iset.addRange(i1, i2);\n            }\n        }\n    }\n\n    readEdges(atn, sets) {\n        let i, j, state, trans, target;\n        const nedges = this.readInt();\n        for (i=0; i<nedges; i++) {\n            const src = this.readInt();\n            const trg = this.readInt();\n            const ttype = this.readInt();\n            const arg1 = this.readInt();\n            const arg2 = this.readInt();\n            const arg3 = this.readInt();\n            trans = this.edgeFactory(atn, ttype, src, trg, arg1, arg2, arg3, sets);\n            const srcState = atn.states[src];\n            srcState.addTransition(trans);\n        }\n        // edges for rule stop states can be derived, so they aren't serialized\n        for (i=0; i<atn.states.length; i++) {\n            state = atn.states[i];\n            for (j=0; j<state.transitions.length; j++) {\n                const t = state.transitions[j];\n                if (!(t instanceof RuleTransition)) {\n                    continue;\n                }\n                let outermostPrecedenceReturn = -1;\n                if (atn.ruleToStartState[t.target.ruleIndex].isPrecedenceRule) {\n                    if (t.precedence === 0) {\n                        outermostPrecedenceReturn = t.target.ruleIndex;\n                    }\n                }\n\n                trans = new EpsilonTransition(t.followState, outermostPrecedenceReturn);\n                atn.ruleToStopState[t.target.ruleIndex].addTransition(trans);\n            }\n        }\n\n        for (i=0; i<atn.states.length; i++) {\n            state = atn.states[i];\n            if (state instanceof BlockStartState) {\n                // we need to know the end state to set its start state\n                if (state.endState === null) {\n                    throw (\"IllegalState\");\n                }\n                // block end states can only be associated to a single block start\n                // state\n                if ( state.endState.startState !== null) {\n                    throw (\"IllegalState\");\n                }\n                state.endState.startState = state;\n            }\n            if (state instanceof PlusLoopbackState) {\n                for (j=0; j<state.transitions.length; j++) {\n                    target = state.transitions[j].target;\n                    if (target instanceof PlusBlockStartState) {\n                        target.loopBackState = state;\n                    }\n                }\n            } else if (state instanceof StarLoopbackState) {\n                for (j=0; j<state.transitions.length; j++) {\n                    target = state.transitions[j].target;\n                    if (target instanceof StarLoopEntryState) {\n                        target.loopBackState = state;\n                    }\n                }\n            }\n        }\n    }\n\n    readDecisions(atn) {\n        const ndecisions = this.readInt();\n        for (let i=0; i<ndecisions; i++) {\n            const s = this.readInt();\n            const decState = atn.states[s];\n            atn.decisionToState.push(decState);\n            decState.decision = i;\n        }\n    }\n\n    readLexerActions(atn, legacy) {\n        if (atn.grammarType === ATNType.LEXER) {\n            const count = this.readInt();\n            atn.lexerActions = initArray(count, null);\n            for (let i=0; i<count; i++) {\n                const actionType = this.readInt();\n                let data1 = this.readInt();\n                if (legacy && data1 === 0xFFFF) {\n                    data1 = -1;\n                }\n                let data2 = this.readInt();\n                if (legacy && data2 === 0xFFFF) {\n                    data2 = -1;\n                }\n                atn.lexerActions[i] = this.lexerActionFactory(actionType, data1, data2);\n            }\n        }\n    }\n\n    generateRuleBypassTransitions(atn) {\n        let i;\n        const count = atn.ruleToStartState.length;\n        for(i=0; i<count; i++) {\n            atn.ruleToTokenType[i] = atn.maxTokenType + i + 1;\n        }\n        for(i=0; i<count; i++) {\n            this.generateRuleBypassTransition(atn, i);\n        }\n    }\n\n    generateRuleBypassTransition(atn, idx) {\n        let i, state;\n        const bypassStart = new BasicBlockStartState();\n        bypassStart.ruleIndex = idx;\n        atn.addState(bypassStart);\n\n        const bypassStop = new BlockEndState();\n        bypassStop.ruleIndex = idx;\n        atn.addState(bypassStop);\n\n        bypassStart.endState = bypassStop;\n        atn.defineDecisionState(bypassStart);\n\n        bypassStop.startState = bypassStart;\n\n        let excludeTransition = null;\n        let endState = null;\n\n        if (atn.ruleToStartState[idx].isPrecedenceRule) {\n            // wrap from the beginning of the rule to the StarLoopEntryState\n            endState = null;\n            for(i=0; i<atn.states.length; i++) {\n                state = atn.states[i];\n                if (this.stateIsEndStateFor(state, idx)) {\n                    endState = state;\n                    excludeTransition = state.loopBackState.transitions[0];\n                    break;\n                }\n            }\n            if (excludeTransition === null) {\n                throw (\"Couldn't identify final state of the precedence rule prefix section.\");\n            }\n        } else {\n            endState = atn.ruleToStopState[idx];\n        }\n\n        // all non-excluded transitions that currently target end state need to\n        // target blockEnd instead\n        for(i=0; i<atn.states.length; i++) {\n            state = atn.states[i];\n            for(let j=0; j<state.transitions.length; j++) {\n                const transition = state.transitions[j];\n                if (transition === excludeTransition) {\n                    continue;\n                }\n                if (transition.target === endState) {\n                    transition.target = bypassStop;\n                }\n            }\n        }\n\n        // all transitions leaving the rule start state need to leave blockStart\n        // instead\n        const ruleToStartState = atn.ruleToStartState[idx];\n        const count = ruleToStartState.transitions.length;\n        while ( count > 0) {\n            bypassStart.addTransition(ruleToStartState.transitions[count-1]);\n            ruleToStartState.transitions = ruleToStartState.transitions.slice(-1);\n        }\n        // link the new states\n        atn.ruleToStartState[idx].addTransition(new EpsilonTransition(bypassStart));\n        bypassStop.addTransition(new EpsilonTransition(endState));\n\n        const matchState = new BasicState();\n        atn.addState(matchState);\n        matchState.addTransition(new AtomTransition(bypassStop, atn.ruleToTokenType[idx]));\n        bypassStart.addTransition(new EpsilonTransition(matchState));\n    }\n\n    stateIsEndStateFor(state, idx) {\n        if ( state.ruleIndex !== idx) {\n            return null;\n        }\n        if (!( state instanceof StarLoopEntryState)) {\n            return null;\n        }\n        const maybeLoopEndState = state.transitions[state.transitions.length - 1].target;\n        if (!( maybeLoopEndState instanceof LoopEndState)) {\n            return null;\n        }\n        if (maybeLoopEndState.epsilonOnlyTransitions &&\n            (maybeLoopEndState.transitions[0].target instanceof RuleStopState)) {\n            return state;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Analyze the {@link StarLoopEntryState} states in the specified ATN to set\n     * the {@link StarLoopEntryState//isPrecedenceDecision} field to the\n     * correct value.\n     * @param atn The ATN.\n     */\n    markPrecedenceDecisions(atn) {\n        for(let i=0; i<atn.states.length; i++) {\n            const state = atn.states[i];\n            if (!( state instanceof StarLoopEntryState)) {\n                continue;\n            }\n            // We analyze the ATN to determine if this ATN decision state is the\n            // decision for the closure block that determines whether a\n            // precedence rule should continue or complete.\n            if ( atn.ruleToStartState[state.ruleIndex].isPrecedenceRule) {\n                const maybeLoopEndState = state.transitions[state.transitions.length - 1].target;\n                if (maybeLoopEndState instanceof LoopEndState) {\n                    if ( maybeLoopEndState.epsilonOnlyTransitions &&\n                            (maybeLoopEndState.transitions[0].target instanceof RuleStopState)) {\n                        state.isPrecedenceDecision = true;\n                    }\n                }\n            }\n        }\n    }\n\n    verifyATN(atn) {\n        if (!this.deserializationOptions.verifyATN) {\n            return;\n        }\n        // verify assumptions\n        for(let i=0; i<atn.states.length; i++) {\n            const state = atn.states[i];\n            if (state === null) {\n                continue;\n            }\n            this.checkCondition(state.epsilonOnlyTransitions || state.transitions.length <= 1);\n            if (state instanceof PlusBlockStartState) {\n                this.checkCondition(state.loopBackState !== null);\n            } else  if (state instanceof StarLoopEntryState) {\n                this.checkCondition(state.loopBackState !== null);\n                this.checkCondition(state.transitions.length === 2);\n                if (state.transitions[0].target instanceof StarBlockStartState) {\n                    this.checkCondition(state.transitions[1].target instanceof LoopEndState);\n                    this.checkCondition(!state.nonGreedy);\n                } else if (state.transitions[0].target instanceof LoopEndState) {\n                    this.checkCondition(state.transitions[1].target instanceof StarBlockStartState);\n                    this.checkCondition(state.nonGreedy);\n                } else {\n                    throw(\"IllegalState\");\n                }\n            } else if (state instanceof StarLoopbackState) {\n                this.checkCondition(state.transitions.length === 1);\n                this.checkCondition(state.transitions[0].target instanceof StarLoopEntryState);\n            } else if (state instanceof LoopEndState) {\n                this.checkCondition(state.loopBackState !== null);\n            } else if (state instanceof RuleStartState) {\n                this.checkCondition(state.stopState !== null);\n            } else if (state instanceof BlockStartState) {\n                this.checkCondition(state.endState !== null);\n            } else if (state instanceof BlockEndState) {\n                this.checkCondition(state.startState !== null);\n            } else if (state instanceof DecisionState) {\n                this.checkCondition(state.transitions.length <= 1 || state.decision >= 0);\n            } else {\n                this.checkCondition(state.transitions.length <= 1 || (state instanceof RuleStopState));\n            }\n        }\n    }\n\n    checkCondition(condition, message) {\n        if (!condition) {\n            if (message === undefined || message===null) {\n                message = \"IllegalState\";\n            }\n            throw (message);\n        }\n    }\n\n    readInt() {\n        return this.data[this.pos++];\n    }\n\n    readInt32() {\n        const low = this.readInt();\n        const high = this.readInt();\n        return low | (high << 16);\n    }\n\n    edgeFactory(atn, type, src, trg, arg1, arg2, arg3, sets) {\n        const target = atn.states[trg];\n        switch(type) {\n        case Transition.EPSILON:\n            return new EpsilonTransition(target);\n        case Transition.RANGE:\n            return arg3 !== 0 ? new RangeTransition(target, Token.EOF, arg2) : new RangeTransition(target, arg1, arg2);\n        case Transition.RULE:\n            return new RuleTransition(atn.states[arg1], arg2, arg3, target);\n        case Transition.PREDICATE:\n            return new PredicateTransition(target, arg1, arg2, arg3 !== 0);\n        case Transition.PRECEDENCE:\n            return new PrecedencePredicateTransition(target, arg1);\n        case Transition.ATOM:\n            return arg3 !== 0 ? new AtomTransition(target, Token.EOF) : new AtomTransition(target, arg1);\n        case Transition.ACTION:\n            return new ActionTransition(target, arg1, arg2, arg3 !== 0);\n        case Transition.SET:\n            return new SetTransition(target, sets[arg1]);\n        case Transition.NOT_SET:\n            return new NotSetTransition(target, sets[arg1]);\n        case Transition.WILDCARD:\n            return new WildcardTransition(target);\n        default:\n            throw \"The specified transition type: \" + type + \" is not valid.\";\n        }\n    }\n\n    stateFactory(type, ruleIndex) {\n        if (this.stateFactories === null) {\n            const sf = [];\n            sf[ATNState.INVALID_TYPE] = null;\n            sf[ATNState.BASIC] = () => new BasicState();\n            sf[ATNState.RULE_START] = () => new RuleStartState();\n            sf[ATNState.BLOCK_START] = () => new BasicBlockStartState();\n            sf[ATNState.PLUS_BLOCK_START] = () => new PlusBlockStartState();\n            sf[ATNState.STAR_BLOCK_START] = () => new StarBlockStartState();\n            sf[ATNState.TOKEN_START] = () => new TokensStartState();\n            sf[ATNState.RULE_STOP] = () => new RuleStopState();\n            sf[ATNState.BLOCK_END] = () => new BlockEndState();\n            sf[ATNState.STAR_LOOP_BACK] = () => new StarLoopbackState();\n            sf[ATNState.STAR_LOOP_ENTRY] = () => new StarLoopEntryState();\n            sf[ATNState.PLUS_LOOP_BACK] = () => new PlusLoopbackState();\n            sf[ATNState.LOOP_END] = () => new LoopEndState();\n            this.stateFactories = sf;\n        }\n        if (type>this.stateFactories.length || this.stateFactories[type] === null) {\n            throw(\"The specified state type \" + type + \" is not valid.\");\n        } else {\n            const s = this.stateFactories[type]();\n            if (s!==null) {\n                s.ruleIndex = ruleIndex;\n                return s;\n            }\n        }\n    }\n\n    lexerActionFactory(type, data1, data2) {\n        if (this.actionFactories === null) {\n            const af = [];\n            af[LexerActionType.CHANNEL] = (data1, data2) => new LexerChannelAction(data1);\n            af[LexerActionType.CUSTOM] = (data1, data2) => new LexerCustomAction(data1, data2);\n            af[LexerActionType.MODE] = (data1, data2) => new LexerModeAction(data1);\n            af[LexerActionType.MORE] = (data1, data2) => LexerMoreAction.INSTANCE;\n            af[LexerActionType.POP_MODE] = (data1, data2) => LexerPopModeAction.INSTANCE;\n            af[LexerActionType.PUSH_MODE] = (data1, data2) => new LexerPushModeAction(data1);\n            af[LexerActionType.SKIP] = (data1, data2) => LexerSkipAction.INSTANCE;\n            af[LexerActionType.TYPE] = (data1, data2) => new LexerTypeAction(data1);\n            this.actionFactories = af;\n        }\n        if (type>this.actionFactories.length || this.actionFactories[type] === null) {\n            throw(\"The specified lexer action type \" + type + \" is not valid.\");\n        } else {\n            return this.actionFactories[type](data1, data2);\n        }\n    }\n}\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n/**\n * Represents the type of recognizer an ATN applies to\n */\nexport default {\n    LEXER: 0,\n    PARSER: 1\n};\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n/**\n * Provides an empty default implementation of {@link ANTLRErrorListener}. The\n * default implementation of each method does nothing, but can be overridden as\n * necessary.\n */\nexport default class ErrorListener {\n    syntaxError(recognizer, offendingSymbol, line, column, msg, e) {\n    }\n\n    reportAmbiguity(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs) {\n    }\n\n    reportAttemptingFullContext(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {\n    }\n\n    reportContextSensitivity(recognizer, dfa, startIndex, stopIndex, prediction, configs) {\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport ErrorListener from \"./ErrorListener.js\";\n\n/**\n * {@inheritDoc}\n *\n * <p>\n * This implementation prints messages to {@link System//err} containing the\n * values of {@code line}, {@code charPositionInLine}, and {@code msg} using\n * the following format.</p>\n *\n * <pre>\n * line <em>line</em>:<em>charPositionInLine</em> <em>msg</em>\n * </pre>\n *\n */\nexport default class ConsoleErrorListener extends ErrorListener {\n    constructor() {\n        super();\n    }\n\n    syntaxError(recognizer, offendingSymbol, line, column, msg, e) {\n        console.error(\"line \" + line + \":\" + column + \" \" + msg);\n    }\n}\n\n\n/**\n * Provides a default instance of {@link ConsoleErrorListener}.\n */\nConsoleErrorListener.INSTANCE = new ConsoleErrorListener();\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport ErrorListener from \"./ErrorListener.js\";\n\nexport default class ProxyErrorListener extends ErrorListener {\n    constructor(delegates) {\n        super();\n        if (delegates===null) {\n            throw \"delegates\";\n        }\n        this.delegates = delegates;\n        return this;\n    }\n\n    syntaxError(recognizer, offendingSymbol, line, column, msg, e) {\n        this.delegates.map(d => d.syntaxError(recognizer, offendingSymbol, line, column, msg, e));\n    }\n\n    reportAmbiguity(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs) {\n        this.delegates.map(d => d.reportAmbiguity(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs));\n    }\n\n    reportAttemptingFullContext(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {\n        this.delegates.map(d => d.reportAttemptingFullContext(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs));\n    }\n\n    reportContextSensitivity(recognizer, dfa, startIndex, stopIndex, prediction, configs) {\n        this.delegates.map(d => d.reportContextSensitivity(recognizer, dfa, startIndex, stopIndex, prediction, configs));\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport Token from './Token.js';\nimport ConsoleErrorListener from './error/ConsoleErrorListener.js';\nimport ProxyErrorListener from './error/ProxyErrorListener.js';\n\nexport default class Recognizer {\n    constructor() {\n        this._listeners = [ ConsoleErrorListener.INSTANCE ];\n        this._interp = null;\n        this._stateNumber = -1;\n    }\n\n    checkVersion(toolVersion) {\n        const runtimeVersion = \"4.13.2\";\n        if (runtimeVersion!==toolVersion) {\n            console.log(\"ANTLR runtime and generated code versions disagree: \"+runtimeVersion+\"!=\"+toolVersion);\n        }\n    }\n\n    addErrorListener(listener) {\n        this._listeners.push(listener);\n    }\n\n    removeErrorListeners() {\n        this._listeners = [];\n    }\n\n    getLiteralNames() {\n        return Object.getPrototypeOf(this).constructor.literalNames || [];\n    }\n\n    getSymbolicNames() {\n        return Object.getPrototypeOf(this).constructor.symbolicNames || [];\n    }\n\n    getTokenNames() {\n        if(!this.tokenNames) {\n            const literalNames = this.getLiteralNames();\n            const symbolicNames = this.getSymbolicNames();\n            const length = literalNames.length > symbolicNames.length ? literalNames.length : symbolicNames.length;\n            this.tokenNames = [];\n            for(let i=0; i<length; i++) {\n                this.tokenNames[i] = literalNames[i] || symbolicNames[i] || \"<INVALID\";\n            }\n        }\n        return this.tokenNames;\n    }\n\n    getTokenTypeMap() {\n        const tokenNames = this.getTokenNames();\n        if (tokenNames===null) {\n            throw(\"The current recognizer does not provide a list of token names.\");\n        }\n        let result = this.tokenTypeMapCache[tokenNames];\n        if(result===undefined) {\n            result = tokenNames.reduce(function(o, k, i) { o[k] = i; });\n            result.EOF = Token.EOF;\n            this.tokenTypeMapCache[tokenNames] = result;\n        }\n        return result;\n    }\n\n    /**\n     * Get a map from rule names to rule indexes.\n     * <p>Used for XPath and tree pattern compilation.</p>\n     */\n    getRuleIndexMap() {\n        const ruleNames = this.ruleNames;\n        if (ruleNames===null) {\n            throw(\"The current recognizer does not provide a list of rule names.\");\n        }\n        let result = this.ruleIndexMapCache[ruleNames]; // todo: should it be Recognizer.ruleIndexMapCache ?\n        if(result===undefined) {\n            result = ruleNames.reduce(function(o, k, i) { o[k] = i; });\n            this.ruleIndexMapCache[ruleNames] = result;\n        }\n        return result;\n    }\n\n    getTokenType(tokenName) {\n        const ttype = this.getTokenTypeMap()[tokenName];\n        if (ttype !==undefined) {\n            return ttype;\n        } else {\n            return Token.INVALID_TYPE;\n        }\n    }\n\n    // What is the error header, normally line/character position information?\n    getErrorHeader(e) {\n        const line = e.getOffendingToken().line;\n        const column = e.getOffendingToken().column;\n        return \"line \" + line + \":\" + column;\n    }\n\n    /**\n     * How should a token be displayed in an error message? The default\n     * is to display just the text, but during development you might\n     * want to have a lot of information spit out.  Override in that case\n     * to use t.toString() (which, for CommonToken, dumps everything about\n     * the token). This is better than forcing you to override a method in\n     * your token objects because you don't have to go modify your lexer\n     * so that it creates a new Java type.\n     *\n     * @deprecated This method is not called by the ANTLR 4 Runtime. Specific\n     * implementations of {@link ANTLRErrorStrategy} may provide a similar\n     * feature when necessary. For example, see\n     * {@link DefaultErrorStrategy//getTokenErrorDisplay}.*/\n    getTokenErrorDisplay(t) {\n        if (t===null) {\n            return \"<no token>\";\n        }\n        let s = t.text;\n        if (s===null) {\n            if (t.type===Token.EOF) {\n                s = \"<EOF>\";\n            } else {\n                s = \"<\" + t.type + \">\";\n            }\n        }\n        s = s.replace(\"\\n\",\"\\\\n\").replace(\"\\r\",\"\\\\r\").replace(\"\\t\",\"\\\\t\");\n        return \"'\" + s + \"'\";\n    }\n\n    /**\n     * @deprecated since ANTLR 4.13.2; use getErrorListener instead\n     */\n    getErrorListenerDispatch() {\n        console.warn(\"Calling deprecated method in Recognizer class: getErrorListenerDispatch()\");\n        return this.getErrorListener();\n    }\n\n    getErrorListener() {\n        return new ProxyErrorListener(this._listeners);\n    }\n\n    /**\n     * subclass needs to override these if there are sempreds or actions\n     * that the ATN interp needs to execute\n     */\n    sempred(localctx, ruleIndex, actionIndex) {\n        return true;\n    }\n\n    precpred(localctx , precedence) {\n        return true;\n    }\n\n    get atn() {\n        return this._interp.atn;\n    }\n\n    get state(){\n        return this._stateNumber;\n    }\n\n    set state(state) {\n        this._stateNumber = state;\n    }\n}\n\nRecognizer.tokenTypeMapCache = {};\nRecognizer.ruleIndexMapCache = {};\n", "import Token from \"./Token.js\";\n\nexport default class CommonToken extends Token {\n    constructor(source, type, channel, start, stop) {\n        super();\n        this.source = source !== undefined ? source : CommonToken.EMPTY_SOURCE;\n        this.type = type !== undefined ? type : null;\n        this.channel = channel !== undefined ? channel : Token.DEFAULT_CHANNEL;\n        this.start = start !== undefined ? start : -1;\n        this.stop = stop !== undefined ? stop : -1;\n        this.tokenIndex = -1;\n        if (this.source[0] !== null) {\n            this.line = source[0].line;\n            this.column = source[0].column;\n        } else {\n            this.column = -1;\n        }\n    }\n\n    /**\n     * Constructs a new {@link CommonToken} as a copy of another {@link Token}.\n     *\n     * <p>\n     * If {@code oldToken} is also a {@link CommonToken} instance, the newly\n     * constructed token will share a reference to the {@link //text} field and\n     * the {@link Pair} stored in {@link //source}. Otherwise, {@link //text} will\n     * be assigned the result of calling {@link //getText}, and {@link //source}\n     * will be constructed from the result of {@link Token//getTokenSource} and\n     * {@link Token//getInputStream}.</p>\n     *\n     * @param oldToken The token to copy.\n     */\n    clone() {\n        const t = new CommonToken(this.source, this.type, this.channel, this.start, this.stop);\n        t.tokenIndex = this.tokenIndex;\n        t.line = this.line;\n        t.column = this.column;\n        t.text = this.text;\n        return t;\n    }\n\n    cloneWithType(type) {\n        const t = new CommonToken(this.source, type, this.channel, this.start, this.stop);\n        t.tokenIndex = this.tokenIndex;\n        t.line = this.line;\n        t.column = this.column;\n        if (type === Token.EOF)\n            t.text = \"\";\n        return t;\n    }\n\n    toString() {\n        let txt = this.text;\n        if (txt !== null) {\n            txt = txt.replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/\\t/g, \"\\\\t\");\n        } else {\n            txt = \"<no text>\";\n        }\n        return \"[@\" + this.tokenIndex + \",\" + this.start + \":\" + this.stop + \"='\" +\n            txt + \"',<\" + this.type + \">\" +\n            (this.channel > 0 ? \",channel=\" + this.channel : \"\") + \",\" +\n            this.line + \":\" + this.column + \"]\";\n    }\n\n    get text(){\n        if (this._text !== null) {\n            return this._text;\n        }\n        const input = this.getInputStream();\n        if (input === null) {\n            return null;\n        }\n        const n = input.size;\n        if (this.start < n && this.stop < n) {\n            return input.getText(this.start, this.stop);\n        } else {\n            return \"<EOF>\";\n        }\n    }\n\n    set text(text) {\n        this._text = text;\n    }\n}\n\n/**\n * An empty {@link Pair} which is used as the default value of\n * {@link //source} for tokens that do not have a source.\n */\nCommonToken.EMPTY_SOURCE = [ null, null ];\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport CommonToken from './CommonToken.js';\n\nclass TokenFactory {}\n\n/**\n * This default implementation of {@link TokenFactory} creates\n * {@link CommonToken} objects.\n */\nexport default class CommonTokenFactory extends TokenFactory {\n    constructor(copyText) {\n        super();\n        /**\n         * Indicates whether {@link CommonToken//setText} should be called after\n         * constructing tokens to explicitly set the text. This is useful for cases\n         * where the input stream might not be able to provide arbitrary substrings\n         * of text from the input after the lexer creates a token (e.g. the\n         * implementation of {@link CharStream//getText} in\n         * {@link UnbufferedCharStream} throws an\n         * {@link UnsupportedOperationException}). Explicitly setting the token text\n         * allows {@link Token//getText} to be called at any time regardless of the\n         * input stream implementation.\n         *\n         * <p>\n         * The default value is {@code false} to avoid the performance and memory\n         * overhead of copying text for every token unless explicitly requested.</p>\n         */\n        this.copyText = copyText===undefined ? false : copyText;\n    }\n\n    create(source, type, text, channel, start, stop, line, column) {\n        const t = new CommonToken(source, type, channel, start, stop);\n        t.line = line;\n        t.column = column;\n        if (text !==null) {\n            t.text = text;\n        } else if (this.copyText && source[1] !==null) {\n            t.text = source[1].getText(start,stop);\n        }\n        return t;\n    }\n\n    createThin(type, text) {\n        const t = new CommonToken(null, type);\n        t.text = text;\n        return t;\n    }\n}\n\n/**\n * The default {@link CommonTokenFactory} instance.\n *\n * <p>\n * This token factory does not explicitly copy token text when constructing\n * tokens.</p>\n */\nCommonTokenFactory.DEFAULT = new CommonTokenFactory();\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n/**\n * The root of the ANTLR exception hierarchy. In general, ANTLR tracks just\n *  3 kinds of errors: prediction errors, failed predicate errors, and\n *  mismatched input errors. In each case, the parser knows where it is\n *  in the input, where it is in the ATN, the rule invocation stack,\n *  and what kind of problem occurred.\n */\n\nexport default class RecognitionException extends Error {\n\n    constructor(params) {\n        super(params.message);\n        if (Error.captureStackTrace)\n            Error.captureStackTrace(this, RecognitionException);\n        this.message = params.message;\n        this.recognizer = params.recognizer;\n        this.input = params.input;\n        this.ctx = params.ctx;\n        /**\n         * The current {@link Token} when an error occurred. Since not all streams\n         * support accessing symbols by index, we have to track the {@link Token}\n         * instance itself\n        */\n        this.offendingToken = null;\n        /**\n         * Get the ATN state number the parser was in at the time the error\n         * occurred. For {@link NoViableAltException} and\n         * {@link LexerNoViableAltException} exceptions, this is the\n         * {@link DecisionState} number. For others, it is the state whose outgoing\n         * edge we couldn't match.\n         */\n        this.offendingState = -1;\n        if (this.recognizer!==null) {\n            this.offendingState = this.recognizer.state;\n        }\n    }\n\n    /**\n     * Gets the set of input symbols which could potentially follow the\n     * previously matched symbol at the time this exception was thrown.\n     *\n     * <p>If the set of expected tokens is not known and could not be computed,\n     * this method returns {@code null}.</p>\n     *\n     * @return The set of token types that could potentially follow the current\n     * state in the ATN, or {@code null} if the information is not available.\n     */\n    getExpectedTokens() {\n        if (this.recognizer!==null) {\n            return this.recognizer.atn.getExpectedTokens(this.offendingState, this.ctx);\n        } else {\n            return null;\n        }\n    }\n\n    // <p>If the state number is not known, this method returns -1.</p>\n    toString() {\n        return this.message;\n    }\n}\n\n\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport Interval from \"../misc/Interval.js\";\nimport RecognitionException from \"./RecognitionException.js\";\n\nexport default class LexerNoViableAltException extends RecognitionException {\n    constructor(lexer, input, startIndex, deadEndConfigs) {\n        super({message: \"\", recognizer: lexer, input: input, ctx: null});\n        this.startIndex = startIndex;\n        this.deadEndConfigs = deadEndConfigs;\n    }\n\n    toString() {\n        let symbol = \"\";\n        if (this.startIndex >= 0 && this.startIndex < this.input.size) {\n            symbol = this.input.getText(new Interval(this.startIndex,this.startIndex));\n        }\n        return \"LexerNoViableAltException\" + symbol;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport Token from './Token.js';\nimport Recognizer from './Recognizer.js';\nimport CommonTokenFactory from './CommonTokenFactory.js';\nimport RecognitionException from './error/RecognitionException.js';\nimport LexerNoViableAltException from './error/LexerNoViableAltException.js';\n\n/**\n * A lexer is recognizer that draws input symbols from a character stream.\n * lexer grammars result in a subclass of this object. A Lexer object\n * uses simplified match() and error recovery mechanisms in the interest of speed.\n */\nexport default class Lexer extends Recognizer {\n\tconstructor(input) {\n\t\tsuper();\n\t\tthis._input = input;\n\t\tthis._factory = CommonTokenFactory.DEFAULT;\n\t\tthis._tokenFactorySourcePair = [ this, input ];\n\n\t\tthis._interp = null; // child classes must populate this\n\n\t\t/**\n\t\t * The goal of all lexer rules/methods is to create a token object.\n\t\t * this is an instance variable as multiple rules may collaborate to\n\t\t * create a single token. nextToken will return this object after\n\t\t * matching lexer rule(s). If you subclass to allow multiple token\n\t\t * emissions, then set this to the last token to be matched or\n\t\t * something nonnull so that the auto token emit mechanism will not\n\t\t * emit another token.\n\t\t */\n\t\tthis._token = null;\n\n\t\t/**\n\t\t * What character index in the stream did the current token start at?\n\t\t * Needed, for example, to get the text for current token. Set at\n\t\t * the start of nextToken.\n\t\t */\n\t\tthis._tokenStartCharIndex = -1;\n\n\t\t// The line on which the first character of the token resides///\n\t\tthis._tokenStartLine = -1;\n\n\t\t// The character position of first character within the line///\n\t\tthis._tokenStartColumn = -1;\n\n\t\t// Once we see EOF on char stream, next token will be EOF.\n\t\t// If you have DONE : EOF ; then you see DONE EOF.\n\t\tthis._hitEOF = false;\n\n\t\t// The channel number for the current token///\n\t\tthis._channel = Token.DEFAULT_CHANNEL;\n\n\t\t// The token type for the current token///\n\t\tthis._type = Token.INVALID_TYPE;\n\n\t\tthis._modeStack = [];\n\t\tthis._mode = Lexer.DEFAULT_MODE;\n\n\t\t/**\n\t\t * You can set the text for the current token to override what is in\n\t\t * the input char buffer. Use setText() or can set this instance var.\n\t\t */\n\t\tthis._text = null;\n\t}\n\n\treset() {\n\t\t// wack Lexer state variables\n\t\tif (this._input !== null) {\n\t\t\tthis._input.seek(0); // rewind the input\n\t\t}\n\t\tthis._token = null;\n\t\tthis._type = Token.INVALID_TYPE;\n\t\tthis._channel = Token.DEFAULT_CHANNEL;\n\t\tthis._tokenStartCharIndex = -1;\n\t\tthis._tokenStartColumn = -1;\n\t\tthis._tokenStartLine = -1;\n\t\tthis._text = null;\n\n\t\tthis._hitEOF = false;\n\t\tthis._mode = Lexer.DEFAULT_MODE;\n\t\tthis._modeStack = [];\n\n\t\tthis._interp.reset();\n\t}\n\n// Return a token from this source; i.e., match a token on the char stream.\n\tnextToken() {\n\t\tif (this._input === null) {\n\t\t\tthrow \"nextToken requires a non-null input stream.\";\n\t\t}\n\n\t\t/**\n\t\t * Mark start location in char stream so unbuffered streams are\n\t\t * guaranteed at least have text of current token\n\t\t */\n\t\tconst tokenStartMarker = this._input.mark();\n\t\ttry {\n\t\t\tfor (;;) {\n\t\t\t\tif (this._hitEOF) {\n\t\t\t\t\tthis.emitEOF();\n\t\t\t\t\treturn this._token;\n\t\t\t\t}\n\t\t\t\tthis._token = null;\n\t\t\t\tthis._channel = Token.DEFAULT_CHANNEL;\n\t\t\t\tthis._tokenStartCharIndex = this._input.index;\n\t\t\t\tthis._tokenStartColumn = this._interp.column;\n\t\t\t\tthis._tokenStartLine = this._interp.line;\n\t\t\t\tthis._text = null;\n\t\t\t\tlet continueOuter = false;\n\t\t\t\tfor (;;) {\n\t\t\t\t\tthis._type = Token.INVALID_TYPE;\n\t\t\t\t\tlet ttype = Lexer.SKIP;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tttype = this._interp.match(this._input, this._mode);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tif(e instanceof RecognitionException) {\n\t\t\t\t\t\t\tthis.notifyListeners(e); // report error\n\t\t\t\t\t\t\tthis.recover(e);\n\t\t\t\t\t\t} else {\n                            console.log(e.stack);\n\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this._input.LA(1) === Token.EOF) {\n\t\t\t\t\t\tthis._hitEOF = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (this._type === Token.INVALID_TYPE) {\n\t\t\t\t\t\tthis._type = ttype;\n\t\t\t\t\t}\n\t\t\t\t\tif (this._type === Lexer.SKIP) {\n\t\t\t\t\t\tcontinueOuter = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (this._type !== Lexer.MORE) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (continueOuter) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (this._token === null) {\n\t\t\t\t\tthis.emit();\n\t\t\t\t}\n\t\t\t\treturn this._token;\n\t\t\t}\n\t\t} finally {\n\t\t\t// make sure we release marker after match or\n\t\t\t// unbuffered char stream will keep buffering\n\t\t\tthis._input.release(tokenStartMarker);\n\t\t}\n\t}\n\n\t/**\n\t * Instruct the lexer to skip creating a token for current lexer rule\n\t * and look for another token. nextToken() knows to keep looking when\n\t * a lexer rule finishes with token set to SKIP_TOKEN. Recall that\n\t * if token==null at end of any token rule, it creates one for you\n\t * and emits it.\n\t */\n\tskip() {\n\t\tthis._type = Lexer.SKIP;\n\t}\n\n\tmore() {\n\t\tthis._type = Lexer.MORE;\n\t}\n\n    /**\n     * @deprecated since ANTLR 4.13.2; use setMode instead\n     */\n\tmode(m) {\n\t\tconsole.warn(\"Calling deprecated method in Lexer class: mode(...)\");\n\t\tthis.setMode(m);\n\t}\n\n\tsetMode(m) {\n\t\tthis._mode = m;\n\t}\n\n\tgetMode() {\n\t\treturn this._mode;\n\t}\n\n\tgetModeStack() {\n\t\treturn this._modeStack;\n\t}\n\n\tpushMode(m) {\n\t\tif (this._interp.debug) {\n\t\t\tconsole.log(\"pushMode \" + m);\n\t\t}\n\t\tthis._modeStack.push(this._mode);\n\t\tthis.setMode(m);\n\t}\n\n\tpopMode() {\n\t\tif (this._modeStack.length === 0) {\n\t\t\tthrow \"Empty Stack\";\n\t\t}\n\t\tif (this._interp.debug) {\n\t\t\tconsole.log(\"popMode back to \" + this._modeStack.slice(0, -1));\n\t\t}\n\t\tthis.setMode(this._modeStack.pop());\n\t\treturn this._mode;\n\t}\n\n\t/**\n\t * By default does not support multiple emits per nextToken invocation\n\t * for efficiency reasons. Subclass and override this method, nextToken,\n\t * and getToken (to push tokens into a list and pull from that list\n\t * rather than a single variable as this implementation does).\n\t */\n\temitToken(token) {\n\t\tthis._token = token;\n\t}\n\n\t/**\n\t * The standard method called to automatically emit a token at the\n\t * outermost lexical rule. The token object should point into the\n\t * char buffer start..stop. If there is a text override in 'text',\n\t * use that to set the token's text. Override this method to emit\n\t * custom Token objects or provide a new factory.\n\t */\n\temit() {\n\t\tconst t = this._factory.create(this._tokenFactorySourcePair, this._type,\n\t\t\t\tthis._text, this._channel, this._tokenStartCharIndex, this\n\t\t\t\t\t\t.getCharIndex() - 1, this._tokenStartLine,\n\t\t\t\tthis._tokenStartColumn);\n\t\tthis.emitToken(t);\n\t\treturn t;\n\t}\n\n\temitEOF() {\n\t\tconst cpos = this.column;\n\t\tconst lpos = this.line;\n\t\tconst eof = this._factory.create(this._tokenFactorySourcePair, Token.EOF,\n\t\t\t\tnull, Token.DEFAULT_CHANNEL, this._input.index,\n\t\t\t\tthis._input.index - 1, lpos, cpos);\n\t\tthis.emitToken(eof);\n\t\treturn eof;\n\t}\n\n// What is the index of the current character of lookahead?///\n\tgetCharIndex() {\n\t\treturn this._input.index;\n\t}\n\n\t/**\n\t * Return a list of all Token objects in input char stream.\n\t * Forces load of all tokens. Does not include EOF token.\n\t */\n\tgetAllTokens() {\n\t\tconst tokens = [];\n\t\tlet t = this.nextToken();\n\t\twhile (t.type !== Token.EOF) {\n\t\t\ttokens.push(t);\n\t\t\tt = this.nextToken();\n\t\t}\n\t\treturn tokens;\n\t}\n\n\tnotifyListeners(e) {\n\t\tconst start = this._tokenStartCharIndex;\n\t\tconst stop = this._input.index;\n\t\tconst text = this._input.getText(start, stop);\n\t\tconst msg = \"token recognition error at: '\" + this.getErrorDisplay(text) + \"'\";\n\t\tconst listener = this.getErrorListener();\n\t\tlistener.syntaxError(this, null, this._tokenStartLine,\n\t\t\t\tthis._tokenStartColumn, msg, e);\n\t}\n\n\tgetErrorDisplay(s) {\n\t\tconst d = [];\n\t\tfor (let i = 0; i < s.length; i++) {\n\t\t\td.push(s[i]);\n\t\t}\n\t\treturn d.join('');\n\t}\n\n\tgetErrorDisplayForChar(c) {\n\t\tif (c.charCodeAt(0) === Token.EOF) {\n\t\t\treturn \"<EOF>\";\n\t\t} else if (c === '\\n') {\n\t\t\treturn \"\\\\n\";\n\t\t} else if (c === '\\t') {\n\t\t\treturn \"\\\\t\";\n\t\t} else if (c === '\\r') {\n\t\t\treturn \"\\\\r\";\n\t\t} else {\n\t\t\treturn c;\n\t\t}\n\t}\n\n\tgetCharErrorDisplay(c) {\n\t\treturn \"'\" + this.getErrorDisplayForChar(c) + \"'\";\n\t}\n\n\t/**\n\t * Lexers can normally match any char in it's vocabulary after matching\n\t * a token, so do the easy thing and just kill a character and hope\n\t * it all works out. You can instead use the rule invocation stack\n\t * to do sophisticated error recovery if you are in a fragment rule.\n\t */\n\trecover(re) {\n\t\tif (this._input.LA(1) !== Token.EOF) {\n\t\t\tif (re instanceof LexerNoViableAltException) {\n\t\t\t\t// skip a char and try again\n\t\t\t\tthis._interp.consume(this._input);\n\t\t\t} else {\n\t\t\t\t// TODO: Do we lose character or line position information?\n\t\t\t\tthis._input.consume();\n\t\t\t}\n\t\t}\n\t}\n\n\tget inputStream(){\n\t\treturn this._input;\n\t}\n\n\tset inputStream(input) {\n\t\tthis._input = null;\n\t\tthis._tokenFactorySourcePair = [ this, this._input ];\n\t\tthis.reset();\n\t\tthis._input = input;\n\t\tthis._tokenFactorySourcePair = [ this, this._input ];\n\t}\n\n\tget sourceName(){\n\t\treturn this._input.sourceName;\n\t}\n\n\tget type(){\n\t\treturn this._type;\n\t}\n\n\tset type(type) {\n\t\tthis._type = type;\n\t}\n\n\tget line(){\n\t\treturn this._interp.line;\n\t}\n\n\tset line(line) {\n\t\tthis._interp.line = line;\n\t}\n\n\tget column(){\n\t\treturn this._interp.column;\n\t}\n\n\tset column(column) {\n\t\tthis._interp.column = column;\n\t}\n\n\tget text(){\n\t\tif (this._text !== null) {\n\t\t\treturn this._text;\n\t\t} else {\n\t\t\treturn this._interp.getText(this._input);\n\t\t}\n\t}\n\n\tset text(text) {\n\t\tthis._text = text;\n\t}\n}\n\n\n\n\nLexer.DEFAULT_MODE = 0;\nLexer.MORE = -2;\nLexer.SKIP = -3;\n\nLexer.DEFAULT_TOKEN_CHANNEL = Token.DEFAULT_CHANNEL;\nLexer.HIDDEN = Token.HIDDEN_CHANNEL;\nLexer.MIN_CHAR_VALUE = 0x0000;\nLexer.MAX_CHAR_VALUE = 0x10FFFF;\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport ATN from './ATN.js';\nimport SemanticContext from './SemanticContext.js';\nimport { merge } from '../context/PredictionContextUtils.js';\nimport arrayToString from \"../utils/arrayToString.js\";\nimport HashSet from \"../misc/HashSet.js\";\nimport equalArrays from \"../utils/equalArrays.js\";\nimport HashCode from \"../misc/HashCode.js\";\n\nfunction hashATNConfig(c) {\n\treturn c.hashCodeForConfigSet();\n}\n\nfunction equalATNConfigs(a, b) {\n\tif ( a===b ) {\n\t\treturn true;\n\t} else if ( a===null || b===null ) {\n\t\treturn false;\n\t} else\n       return a.equalsForConfigSet(b);\n }\n\n/**\n * Specialized {@link Set}{@code <}{@link ATNConfig}{@code >} that can track\n * info about the set, with support for combining similar configurations using a\n * graph-structured stack\n */\nexport default class ATNConfigSet {\n\tconstructor(fullCtx) {\n\t\t/**\n\t\t * The reason that we need this is because we don't want the hash map to use\n\t\t * the standard hash code and equals. We need all configurations with the\n\t\t * same\n\t\t * {@code (s,i,_,semctx)} to be equal. Unfortunately, this key effectively\n\t\t * doubles\n\t\t * the number of objects associated with ATNConfigs. The other solution is\n\t\t * to\n\t\t * use a hash table that lets us specify the equals/hashcode operation.\n\t\t * All configs but hashed by (s, i, _, pi) not including context. Wiped out\n\t\t * when we go readonly as this set becomes a DFA state\n\t\t */\n\t\tthis.configLookup = new HashSet(hashATNConfig, equalATNConfigs);\n\t\t/**\n\t\t * Indicates that this configuration set is part of a full context\n\t\t * LL prediction. It will be used to determine how to merge $. With SLL\n\t\t * it's a wildcard whereas it is not for LL context merge\n\t\t */\n\t\tthis.fullCtx = fullCtx === undefined ? true : fullCtx;\n\t\t/**\n\t\t * Indicates that the set of configurations is read-only. Do not\n\t\t * allow any code to manipulate the set; DFA states will point at\n\t\t * the sets and they must not change. This does not protect the other\n\t\t * fields; in particular, conflictingAlts is set after\n\t\t * we've made this readonly\n\t\t */\n\t\tthis.readOnly = false;\n\t\t// Track the elements as they are added to the set; supports get(i)///\n\t\tthis.configs = [];\n\n\t\t// TODO: these fields make me pretty uncomfortable but nice to pack up info\n\t\t// together, saves recomputation\n\t\t// TODO: can we track conflicts as they are added to save scanning configs\n\t\t// later?\n\t\tthis.uniqueAlt = 0;\n\t\tthis.conflictingAlts = null;\n\n\t\t/**\n\t\t * Used in parser and lexer. In lexer, it indicates we hit a pred\n\t\t * while computing a closure operation. Don't make a DFA state from this\n\t\t */\n\t\tthis.hasSemanticContext = false;\n\t\tthis.dipsIntoOuterContext = false;\n\n\t\tthis.cachedHashCode = -1;\n\t}\n\n\t/**\n\t * Adding a new config means merging contexts with existing configs for\n\t * {@code (s, i, pi, _)}, where {@code s} is the\n\t * {@link ATNConfig//state}, {@code i} is the {@link ATNConfig//alt}, and\n\t * {@code pi} is the {@link ATNConfig//semanticContext}. We use\n\t * {@code (s,i,pi)} as key.\n\t *\n\t * <p>This method updates {@link //dipsIntoOuterContext} and\n\t * {@link //hasSemanticContext} when necessary.</p>\n\t */\n\tadd(config, mergeCache) {\n\t\tif (mergeCache === undefined) {\n\t\t\tmergeCache = null;\n\t\t}\n\t\tif (this.readOnly) {\n\t\t\tthrow \"This set is readonly\";\n\t\t}\n\t\tif (config.semanticContext !== SemanticContext.NONE) {\n\t\t\tthis.hasSemanticContext = true;\n\t\t}\n\t\tif (config.reachesIntoOuterContext > 0) {\n\t\t\tthis.dipsIntoOuterContext = true;\n\t\t}\n\t\tconst existing = this.configLookup.getOrAdd(config);\n\t\tif (existing === config) {\n\t\t\tthis.cachedHashCode = -1;\n\t\t\tthis.configs.push(config); // track order here\n\t\t\treturn true;\n\t\t}\n\t\t// a previous (s,i,pi,_), merge with it and save result\n\t\tconst rootIsWildcard = !this.fullCtx;\n\t\tconst merged = merge(existing.context, config.context, rootIsWildcard, mergeCache);\n\t\t/**\n\t\t * no need to check for existing.context, config.context in cache\n\t\t * since only way to create new graphs is \"call rule\" and here. We\n\t\t * cache at both places\n\t\t */\n\t\texisting.reachesIntoOuterContext = Math.max( existing.reachesIntoOuterContext, config.reachesIntoOuterContext);\n\t\t// make sure to preserve the precedence filter suppression during the merge\n\t\tif (config.precedenceFilterSuppressed) {\n\t\t\texisting.precedenceFilterSuppressed = true;\n\t\t}\n\t\texisting.context = merged; // replace context; no need to alt mapping\n\t\treturn true;\n\t}\n\n\tgetStates() {\n\t\tconst states = new HashSet();\n\t\tfor (let i = 0; i < this.configs.length; i++) {\n\t\t\tstates.add(this.configs[i].state);\n\t\t}\n\t\treturn states;\n\t}\n\n\tgetPredicates() {\n\t\tconst preds = [];\n\t\tfor (let i = 0; i < this.configs.length; i++) {\n\t\t\tconst c = this.configs[i].semanticContext;\n\t\t\tif (c !== SemanticContext.NONE) {\n\t\t\t\tpreds.push(c.semanticContext);\n\t\t\t}\n\t\t}\n\t\treturn preds;\n\t}\n\n\toptimizeConfigs(interpreter) {\n\t\tif (this.readOnly) {\n\t\t\tthrow \"This set is readonly\";\n\t\t}\n\t\tif (this.configLookup.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tfor (let i = 0; i < this.configs.length; i++) {\n\t\t\tconst config = this.configs[i];\n\t\t\tconfig.context = interpreter.getCachedContext(config.context);\n\t\t}\n\t}\n\n\taddAll(coll) {\n\t\tfor (let i = 0; i < coll.length; i++) {\n\t\t\tthis.add(coll[i]);\n\t\t}\n\t\treturn false;\n\t}\n\n\tequals(other) {\n\t\treturn this === other ||\n\t\t\t(other instanceof ATNConfigSet &&\n\t\t\tequalArrays(this.configs, other.configs) &&\n\t\t\tthis.fullCtx === other.fullCtx &&\n\t\t\tthis.uniqueAlt === other.uniqueAlt &&\n\t\t\tthis.conflictingAlts === other.conflictingAlts &&\n\t\t\tthis.hasSemanticContext === other.hasSemanticContext &&\n\t\t\tthis.dipsIntoOuterContext === other.dipsIntoOuterContext);\n\t}\n\n\thashCode() {\n\t\tconst hash = new HashCode();\n\t\thash.update(this.configs);\n\t\treturn hash.finish();\n\t}\n\n\tupdateHashCode(hash) {\n\t\tif (this.readOnly) {\n\t\t\tif (this.cachedHashCode === -1) {\n\t\t\t\tthis.cachedHashCode = this.hashCode();\n\t\t\t}\n\t\t\thash.update(this.cachedHashCode);\n\t\t} else {\n\t\t\thash.update(this.hashCode());\n\t\t}\n\t}\n\n\tisEmpty() {\n\t\treturn this.configs.length === 0;\n\t}\n\n\tcontains(item) {\n\t\tif (this.configLookup === null) {\n\t\t\tthrow \"This method is not implemented for readonly sets.\";\n\t\t}\n\t\treturn this.configLookup.contains(item);\n\t}\n\n\tcontainsFast(item) {\n\t\tif (this.configLookup === null) {\n\t\t\tthrow \"This method is not implemented for readonly sets.\";\n\t\t}\n\t\treturn this.configLookup.containsFast(item);\n\t}\n\n\tclear() {\n\t\tif (this.readOnly) {\n\t\t\tthrow \"This set is readonly\";\n\t\t}\n\t\tthis.configs = [];\n\t\tthis.cachedHashCode = -1;\n\t\tthis.configLookup = new HashSet();\n\t}\n\n\tsetReadonly(readOnly) {\n\t\tthis.readOnly = readOnly;\n\t\tif (readOnly) {\n\t\t\tthis.configLookup = null; // can't mod, no need for lookup cache\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn arrayToString(this.configs) +\n\t\t\t(this.hasSemanticContext ? \",hasSemanticContext=\" + this.hasSemanticContext : \"\") +\n\t\t\t(this.uniqueAlt !== ATN.INVALID_ALT_NUMBER ? \",uniqueAlt=\" + this.uniqueAlt : \"\") +\n\t\t\t(this.conflictingAlts !== null ? \",conflictingAlts=\" + this.conflictingAlts : \"\") +\n\t\t\t(this.dipsIntoOuterContext ? \",dipsIntoOuterContext\" : \"\");\n\t}\n\n\tget items(){\n\t\treturn this.configs;\n\t}\n\n\tget length(){\n\t\treturn this.configs.length;\n\t}\n}\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport ATNConfigSet from '../atn/ATNConfigSet.js';\nimport HashCode from \"../misc/HashCode.js\";\nimport HashSet from \"../misc/HashSet.js\";\n\n\n/**\n * A DFA state represents a set of possible ATN configurations.\n * As Aho, Sethi, Ullman p. 117 says \"The DFA uses its state\n * to keep track of all possible states the ATN can be in after\n * reading each input symbol. That is to say, after reading\n * input a1a2..an, the DFA is in a state that represents the\n * subset T of the states of the ATN that are reachable from the\n * ATN's start state along some path labeled a1a2..an.\"\n * In conventional NFA&rarr;DFA conversion, therefore, the subset T\n * would be a bitset representing the set of states the\n * ATN could be in. We need to track the alt predicted by each\n * state as well, however. More importantly, we need to maintain\n * a stack of states, tracking the closure operations as they\n * jump from rule to rule, emulating rule invocations (method calls).\n * I have to add a stack to simulate the proper lookahead sequences for\n * the underlying LL grammar from which the ATN was derived.\n *\n * <p>I use a set of ATNConfig objects not simple states. An ATNConfig\n * is both a state (ala normal conversion) and a RuleContext describing\n * the chain of rules (if any) followed to arrive at that state.</p>\n *\n * <p>A DFA state may have multiple references to a particular state,\n * but with different ATN contexts (with same or different alts)\n * meaning that state was reached via a different set of rule invocations.</p>\n */\nexport default class DFAState {\n\tconstructor(stateNumber, configs) {\n\t\tif (stateNumber === null) {\n\t\t\tstateNumber = -1;\n\t\t}\n\t\tif (configs === null) {\n\t\t\tconfigs = new ATNConfigSet();\n\t\t}\n\t\tthis.stateNumber = stateNumber;\n\t\tthis.configs = configs;\n\t\t/**\n\t\t * {@code edges[symbol]} points to target of symbol. Shift up by 1 so (-1)\n\t\t * {@link Token//EOF} maps to {@code edges[0]}.\n\t\t */\n\t\tthis.edges = null;\n\t\tthis.isAcceptState = false;\n\t\t/**\n\t\t * if accept state, what ttype do we match or alt do we predict?\n\t\t * This is set to {@link ATN//INVALID_ALT_NUMBER} when {@link//predicates}\n\t\t * {@code !=null} or {@link //requiresFullContext}.\n\t\t */\n\t\tthis.prediction = 0;\n\t\tthis.lexerActionExecutor = null;\n\t\t/**\n\t\t * Indicates that this state was created during SLL prediction that\n\t\t * discovered a conflict between the configurations in the state. Future\n\t\t * {@link ParserATNSimulator//execATN} invocations immediately jumped doing\n\t\t * full context prediction if this field is true.\n\t\t */\n\t\tthis.requiresFullContext = false;\n\t\t/**\n\t\t * During SLL parsing, this is a list of predicates associated with the\n\t\t * ATN configurations of the DFA state. When we have predicates,\n\t\t * {@link //requiresFullContext} is {@code false} since full context\n\t\t * prediction evaluates predicates\n\t\t * on-the-fly. If this is not null, then {@link //prediction} is\n\t\t * {@link ATN//INVALID_ALT_NUMBER}.\n\t\t *\n\t\t * <p>We only use these for non-{@link //requiresFullContext} but\n\t\t * conflicting states. That\n\t\t * means we know from the context (it's $ or we don't dip into outer\n\t\t * context) that it's an ambiguity not a conflict.</p>\n\t\t *\n\t\t * <p>This list is computed by {@link\n\t\t * ParserATNSimulator//predicateDFAState}.</p>\n\t\t */\n\t\tthis.predicates = null;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the set of all alts mentioned by all ATN configurations in this\n\t * DFA state.\n\t */\n\tgetAltSet() {\n\t\tconst alts = new HashSet();\n\t\tif (this.configs !== null) {\n\t\t\tfor (let i = 0; i < this.configs.length; i++) {\n\t\t\t\tconst c = this.configs[i];\n\t\t\t\talts.add(c.alt);\n\t\t\t}\n\t\t}\n\t\tif (alts.length === 0) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn alts;\n\t\t}\n\t}\n\n\t/**\n\t * Two {@link DFAState} instances are equal if their ATN configuration sets\n\t * are the same. This method is used to see if a state already exists.\n\t *\n\t * <p>Because the number of alternatives and number of ATN configurations are\n\t * finite, there is a finite number of DFA states that can be processed.\n\t * This is necessary to show that the algorithm terminates.</p>\n\t *\n\t * <p>Cannot test the DFA state numbers here because in\n\t * {@link ParserATNSimulator//addDFAState} we need to know if any other state\n\t * exists that has this exact set of ATN configurations. The\n\t * {@link //stateNumber} is irrelevant.</p>\n\t */\n\tequals(other) {\n\t\t// compare set of ATN configurations in this set with other\n\t\treturn this === other ||\n\t\t\t\t(other instanceof DFAState &&\n\t\t\t\t\tthis.configs.equals(other.configs));\n\t}\n\n\ttoString() {\n\t\tlet s = \"\" + this.stateNumber + \":\" + this.configs;\n\t\tif(this.isAcceptState) {\n\t\t\ts = s + \"=>\";\n\t\t\tif (this.predicates !== null)\n\t\t\t\ts = s + this.predicates;\n\t\t\telse\n\t\t\t\ts = s + this.prediction;\n\t\t}\n\t\treturn s;\n\t}\n\n\thashCode() {\n\t\tconst hash = new HashCode();\n\t\thash.update(this.configs);\n\t\treturn hash.finish();\n\t}\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport DFAState from '../dfa/DFAState.js';\nimport ATNConfigSet from './ATNConfigSet.js';\nimport { getCachedPredictionContext } from '../context/PredictionContextUtils.js';\nimport HashMap from \"../misc/HashMap.js\";\n\nexport default class ATNSimulator {\n    constructor(atn, sharedContextCache) {\n        /**\n         * The context cache maps all PredictionContext objects that are ==\n         * to a single cached copy. This cache is shared across all contexts\n         * in all ATNConfigs in all DFA states.  We rebuild each ATNConfigSet\n         * to use only cached nodes/graphs in addDFAState(). We don't want to\n         * fill this during closure() since there are lots of contexts that\n         * pop up but are not used ever again. It also greatly slows down closure().\n         *\n         * <p>This cache makes a huge difference in memory and a little bit in speed.\n         * For the Java grammar on java.*, it dropped the memory requirements\n         * at the end from 25M to 16M. We don't store any of the full context\n         * graphs in the DFA because they are limited to local context only,\n         * but apparently there's a lot of repetition there as well. We optimize\n         * the config contexts before storing the config set in the DFA states\n         * by literally rebuilding them with cached subgraphs only.</p>\n         *\n         * <p>I tried a cache for use during closure operations, that was\n         * whacked after each adaptivePredict(). It cost a little bit\n         * more time I think and doesn't save on the overall footprint\n         * so it's not worth the complexity.</p>\n         */\n        this.atn = atn;\n        this.sharedContextCache = sharedContextCache;\n        return this;\n    }\n\n    getCachedContext(context) {\n        if (this.sharedContextCache ===null) {\n            return context;\n        }\n        const visited = new HashMap();\n        return getCachedPredictionContext(context, this.sharedContextCache, visited);\n    }\n}\n\n// Must distinguish between missing edge and edge we know leads nowhere///\nATNSimulator.ERROR = new DFAState(0x7FFFFFFF, new ATNConfigSet());\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport ATNConfigSet from \"./ATNConfigSet.js\";\nimport HashSet from \"../misc/HashSet.js\";\n\nexport default class OrderedATNConfigSet extends ATNConfigSet {\n    constructor() {\n        super();\n        this.configLookup = new HashSet();\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport DecisionState from \"../state/DecisionState.js\";\nimport ATNConfig from \"./ATNConfig.js\";\n\nexport default class LexerATNConfig extends ATNConfig {\n    constructor(params, config) {\n        super(params, config);\n\n        // This is the backing field for {@link //getLexerActionExecutor}.\n        const lexerActionExecutor = params.lexerActionExecutor || null;\n        this.lexerActionExecutor = lexerActionExecutor || (config!==null ? config.lexerActionExecutor : null);\n        this.passedThroughNonGreedyDecision = config!==null ? this.checkNonGreedyDecision(config, this.state) : false;\n        this.hashCodeForConfigSet = LexerATNConfig.prototype.hashCode;\n        this.equalsForConfigSet = LexerATNConfig.prototype.equals;\n        return this;\n    }\n\n    updateHashCode(hash) {\n        hash.update(this.state.stateNumber, this.alt, this.context, this.semanticContext, this.passedThroughNonGreedyDecision, this.lexerActionExecutor);\n    }\n\n    equals(other) {\n        return this === other ||\n            (other instanceof LexerATNConfig &&\n                this.passedThroughNonGreedyDecision === other.passedThroughNonGreedyDecision &&\n                (this.lexerActionExecutor ? this.lexerActionExecutor.equals(other.lexerActionExecutor) : !other.lexerActionExecutor) &&\n                super.equals(other));\n    }\n\n    checkNonGreedyDecision(source, target) {\n        return source.passedThroughNonGreedyDecision ||\n            (target instanceof DecisionState) && target.nonGreedy;\n    }\n}\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n/**\n * This implementation of {@link LexerAction} is used for tracking input offsets\n * for position-dependent actions within a {@link LexerActionExecutor}.\n *\n * <p>This action is not serialized as part of the ATN, and is only required for\n * position-dependent lexer actions which appear at a location other than the\n * end of a rule. For more information about DFA optimizations employed for\n * lexer actions, see {@link LexerActionExecutor//append} and\n * {@link LexerActionExecutor//fixOffsetBeforeMatch}.</p>\n *\n * Constructs a new indexed custom action by associating a character offset\n * with a {@link LexerAction}.\n *\n * <p>Note: This class is only required for lexer actions for which\n * {@link LexerAction//isPositionDependent} returns {@code true}.</p>\n *\n * @param offset The offset into the input {@link CharStream}, relative to\n * the token start index, at which the specified lexer action should be\n * executed.\n * @param action The lexer action to execute at a particular offset in the\n * input {@link CharStream}.\n */\nimport LexerAction from \"./LexerAction.js\";\n\n\nexport default class LexerIndexedCustomAction extends LexerAction {\n    constructor(offset, action) {\n        super(action.actionType);\n        this.offset = offset;\n        this.action = action;\n        this.isPositionDependent = true;\n    }\n\n    /**\n     * <p>This method calls {@link //execute} on the result of {@link //getAction}\n     * using the provided {@code lexer}.</p>\n     */\n    execute(lexer) {\n        // assume the input stream position was properly set by the calling code\n        this.action.execute(lexer);\n    }\n\n    updateHashCode(hash) {\n        hash.update(this.actionType, this.offset, this.action);\n    }\n\n    equals(other) {\n        if (this === other) {\n            return true;\n        } else if (! (other instanceof LexerIndexedCustomAction)) {\n            return false;\n        } else {\n            return this.offset === other.offset && this.action === other.action;\n        }\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport LexerIndexedCustomAction from '../action/LexerIndexedCustomAction.js';\nimport HashCode from \"../misc/HashCode.js\";\n\nexport default class LexerActionExecutor {\n\t/**\n\t * Represents an executor for a sequence of lexer actions which traversed during\n\t * the matching operation of a lexer rule (token).\n\t *\n\t * <p>The executor tracks position information for position-dependent lexer actions\n\t * efficiently, ensuring that actions appearing only at the end of the rule do\n\t * not cause bloating of the {@link DFA} created for the lexer.</p>\n\t */\n\tconstructor(lexerActions) {\n\t\tthis.lexerActions = lexerActions === null ? [] : lexerActions;\n\t\t/**\n\t\t * Caches the result of {@link //hashCode} since the hash code is an element\n\t\t * of the performance-critical {@link LexerATNConfig//hashCode} operation\n\t\t */\n\t\tthis.cachedHashCode = HashCode.hashStuff(lexerActions); // \"\".join([str(la) for la in\n\t\t// lexerActions]))\n\t\treturn this;\n\t}\n\n\t/**\n\t * Creates a {@link LexerActionExecutor} which encodes the current offset\n\t * for position-dependent lexer actions.\n\t *\n\t * <p>Normally, when the executor encounters lexer actions where\n\t * {@link LexerAction//isPositionDependent} returns {@code true}, it calls\n\t * {@link IntStream//seek} on the input {@link CharStream} to set the input\n\t * position to the <em>end</em> of the current token. This behavior provides\n\t * for efficient DFA representation of lexer actions which appear at the end\n\t * of a lexer rule, even when the lexer rule matches a variable number of\n\t * characters.</p>\n\t *\n\t * <p>Prior to traversing a match transition in the ATN, the current offset\n\t * from the token start index is assigned to all position-dependent lexer\n\t * actions which have not already been assigned a fixed offset. By storing\n\t * the offsets relative to the token start index, the DFA representation of\n\t * lexer actions which appear in the middle of tokens remains efficient due\n\t * to sharing among tokens of the same length, regardless of their absolute\n\t * position in the input stream.</p>\n\t *\n\t * <p>If the current executor already has offsets assigned to all\n\t * position-dependent lexer actions, the method returns {@code this}.</p>\n\t *\n\t * @param offset The current offset to assign to all position-dependent\n\t * lexer actions which do not already have offsets assigned.\n\t *\n\t * @return {LexerActionExecutor} A {@link LexerActionExecutor} which stores input stream offsets\n\t * for all position-dependent lexer actions.\n\t */\n\tfixOffsetBeforeMatch(offset) {\n\t\tlet updatedLexerActions = null;\n\t\tfor (let i = 0; i < this.lexerActions.length; i++) {\n\t\t\tif (this.lexerActions[i].isPositionDependent &&\n\t\t\t\t\t!(this.lexerActions[i] instanceof LexerIndexedCustomAction)) {\n\t\t\t\tif (updatedLexerActions === null) {\n\t\t\t\t\tupdatedLexerActions = this.lexerActions.concat([]);\n\t\t\t\t}\n\t\t\t\tupdatedLexerActions[i] = new LexerIndexedCustomAction(offset,\n\t\t\t\t\t\tthis.lexerActions[i]);\n\t\t\t}\n\t\t}\n\t\tif (updatedLexerActions === null) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn new LexerActionExecutor(updatedLexerActions);\n\t\t}\n\t}\n\n\t/**\n\t * Execute the actions encapsulated by this executor within the context of a\n\t * particular {@link Lexer}.\n\t *\n\t * <p>This method calls {@link IntStream//seek} to set the position of the\n\t * {@code input} {@link CharStream} prior to calling\n\t * {@link LexerAction//execute} on a position-dependent action. Before the\n\t * method returns, the input position will be restored to the same position\n\t * it was in when the method was invoked.</p>\n\t *\n\t * @param lexer The lexer instance.\n\t * @param input The input stream which is the source for the current token.\n\t * When this method is called, the current {@link IntStream//index} for\n\t * {@code input} should be the start of the following token, i.e. 1\n\t * character past the end of the current token.\n\t * @param startIndex The token start index. This value may be passed to\n\t * {@link IntStream//seek} to set the {@code input} position to the beginning\n\t * of the token.\n\t */\n\texecute(lexer, input, startIndex) {\n\t\tlet requiresSeek = false;\n\t\tconst stopIndex = input.index;\n\t\ttry {\n\t\t\tfor (let i = 0; i < this.lexerActions.length; i++) {\n\t\t\t\tlet lexerAction = this.lexerActions[i];\n\t\t\t\tif (lexerAction instanceof LexerIndexedCustomAction) {\n\t\t\t\t\tconst offset = lexerAction.offset;\n\t\t\t\t\tinput.seek(startIndex + offset);\n\t\t\t\t\tlexerAction = lexerAction.action;\n\t\t\t\t\trequiresSeek = (startIndex + offset) !== stopIndex;\n\t\t\t\t} else if (lexerAction.isPositionDependent) {\n\t\t\t\t\tinput.seek(stopIndex);\n\t\t\t\t\trequiresSeek = false;\n\t\t\t\t}\n\t\t\t\tlexerAction.execute(lexer);\n\t\t\t}\n\t\t} finally {\n\t\t\tif (requiresSeek) {\n\t\t\t\tinput.seek(stopIndex);\n\t\t\t}\n\t\t}\n\t}\n\n\thashCode() {\n\t\treturn this.cachedHashCode;\n\t}\n\n\tupdateHashCode(hash) {\n\t\thash.update(this.cachedHashCode);\n\t}\n\n\tequals(other) {\n\t\tif (this === other) {\n\t\t\treturn true;\n\t\t} else if (!(other instanceof LexerActionExecutor)) {\n\t\t\treturn false;\n\t\t} else if (this.cachedHashCode != other.cachedHashCode) {\n\t\t\treturn false;\n\t\t} else if (this.lexerActions.length != other.lexerActions.length) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tconst numActions = this.lexerActions.length\n\t\t\tfor (let idx = 0; idx < numActions; ++idx) {\n\t\t\t\tif (!this.lexerActions[idx].equals(other.lexerActions[idx])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Creates a {@link LexerActionExecutor} which executes the actions for\n\t * the input {@code lexerActionExecutor} followed by a specified\n\t * {@code lexerAction}.\n\t *\n\t * @param lexerActionExecutor The executor for actions already traversed by\n\t * the lexer while matching a token within a particular\n\t * {@link LexerATNConfig}. If this is {@code null}, the method behaves as\n\t * though it were an empty executor.\n\t * @param lexerAction The lexer action to execute after the actions\n\t * specified in {@code lexerActionExecutor}.\n\t *\n\t * @return {LexerActionExecutor} A {@link LexerActionExecutor} for executing the combine actions\n\t * of {@code lexerActionExecutor} and {@code lexerAction}.\n\t */\n\tstatic append(lexerActionExecutor, lexerAction) {\n\t\tif (lexerActionExecutor === null) {\n\t\t\treturn new LexerActionExecutor([ lexerAction ]);\n\t\t}\n\t\tconst lexerActions = lexerActionExecutor.lexerActions.concat([ lexerAction ]);\n\t\treturn new LexerActionExecutor(lexerActions);\n\t}\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport Token from '../Token.js';\nimport Lexer from './../Lexer.js';\nimport ATN from './ATN.js';\nimport ATNSimulator from './ATNSimulator.js';\nimport DFAState from '../dfa/DFAState.js';\nimport OrderedATNConfigSet from './OrderedATNConfigSet.js';\nimport PredictionContext from '../context/PredictionContext.js';\nimport SingletonPredictionContext from '../context/SingletonPredictionContext.js';\nimport RuleStopState from '../state/RuleStopState.js';\nimport LexerATNConfig from './LexerATNConfig.js';\nimport Transition from '../transition/Transition.js';\nimport LexerActionExecutor from './LexerActionExecutor.js';\nimport LexerNoViableAltException from '../error/LexerNoViableAltException.js';\n\nfunction resetSimState(sim) {\n    sim.index = -1;\n    sim.line = 0;\n    sim.column = -1;\n    sim.dfaState = null;\n}\n\nclass SimState {\n    constructor() {\n        resetSimState(this);\n    }\n\n    reset() {\n        resetSimState(this);\n    }\n}\n\nexport default class LexerATNSimulator extends ATNSimulator {\n    /**\n     * When we hit an accept state in either the DFA or the ATN, we\n     * have to notify the character stream to start buffering characters\n     * via {@link IntStream//mark} and record the current state. The current sim state\n     * includes the current index into the input, the current line,\n     * and current character position in that line. Note that the Lexer is\n     * tracking the starting line and characterization of the token. These\n     * variables track the \"state\" of the simulator when it hits an accept state.\n     *\n     * <p>We track these variables separately for the DFA and ATN simulation\n     * because the DFA simulation often has to fail over to the ATN\n     * simulation. If the ATN simulation fails, we need the DFA to fall\n     * back to its previously accepted state, if any. If the ATN succeeds,\n     * then the ATN does the accept and the DFA simulator that invoked it\n     * can simply return the predicted token type.</p>\n     */\n    constructor(recog, atn, decisionToDFA, sharedContextCache) {\n        super(atn, sharedContextCache);\n        this.decisionToDFA = decisionToDFA;\n        this.recog = recog;\n        /**\n         * The current token's starting index into the character stream.\n         * Shared across DFA to ATN simulation in case the ATN fails and the\n         * DFA did not have a previous accept state. In this case, we use the\n         * ATN-generated exception object\n         */\n        this.startIndex = -1;\n        // line number 1..n within the input///\n        this.line = 1;\n        /**\n         * The index of the character relative to the beginning of the line\n         * 0..n-1\n         */\n        this.column = 0;\n        this.mode = Lexer.DEFAULT_MODE;\n        /**\n         * Used during DFA/ATN exec to record the most recent accept configuration\n         * info\n         */\n        this.prevAccept = new SimState();\n    }\n\n    copyState(simulator) {\n        this.column = simulator.column;\n        this.line = simulator.line;\n        this.mode = simulator.mode;\n        this.startIndex = simulator.startIndex;\n    }\n\n    match(input, mode) {\n        this.mode = mode;\n        const mark = input.mark();\n        try {\n            this.startIndex = input.index;\n            this.prevAccept.reset();\n            const dfa = this.decisionToDFA[mode];\n            if (dfa.s0 === null) {\n                return this.matchATN(input);\n            } else {\n                return this.execATN(input, dfa.s0);\n            }\n        } finally {\n            input.release(mark);\n        }\n    }\n\n    reset() {\n        this.prevAccept.reset();\n        this.startIndex = -1;\n        this.line = 1;\n        this.column = 0;\n        this.mode = Lexer.DEFAULT_MODE;\n    }\n\n    matchATN(input) {\n        const startState = this.atn.modeToStartState[this.mode];\n\n        if (LexerATNSimulator.debug) {\n            console.log(\"matchATN mode \" + this.mode + \" start: \" + startState);\n        }\n        const old_mode = this.mode;\n        const s0_closure = this.computeStartState(input, startState);\n        const suppressEdge = s0_closure.hasSemanticContext;\n        s0_closure.hasSemanticContext = false;\n\n        const next = this.addDFAState(s0_closure);\n        if (!suppressEdge) {\n            this.decisionToDFA[this.mode].s0 = next;\n        }\n\n        const predict = this.execATN(input, next);\n\n        if (LexerATNSimulator.debug) {\n            console.log(\"DFA after matchATN: \" + this.decisionToDFA[old_mode].toLexerString());\n        }\n        return predict;\n    }\n\n    execATN(input, ds0) {\n        if (LexerATNSimulator.debug) {\n            console.log(\"start state closure=\" + ds0.configs);\n        }\n        if (ds0.isAcceptState) {\n            // allow zero-length tokens\n            this.captureSimState(this.prevAccept, input, ds0);\n        }\n        let t = input.LA(1);\n        let s = ds0; // s is current/from DFA state\n\n        for (; ;) { // while more work\n            if (LexerATNSimulator.debug) {\n                console.log(\"execATN loop starting closure: \" + s.configs);\n            }\n\n            /**\n             * As we move src->trg, src->trg, we keep track of the previous trg to\n             * avoid looking up the DFA state again, which is expensive.\n             * If the previous target was already part of the DFA, we might\n             * be able to avoid doing a reach operation upon t. If s!=null,\n             * it means that semantic predicates didn't prevent us from\n             * creating a DFA state. Once we know s!=null, we check to see if\n             * the DFA state has an edge already for t. If so, we can just reuse\n             * it's configuration set; there's no point in re-computing it.\n             * This is kind of like doing DFA simulation within the ATN\n             * simulation because DFA simulation is really just a way to avoid\n             * computing reach/closure sets. Technically, once we know that\n             * we have a previously added DFA state, we could jump over to\n             * the DFA simulator. But, that would mean popping back and forth\n             * a lot and making things more complicated algorithmically.\n             * This optimization makes a lot of sense for loops within DFA.\n             * A character will take us back to an existing DFA state\n             * that already has lots of edges out of it. e.g., .* in comments.\n             * print(\"Target for:\" + str(s) + \" and:\" + str(t))\n             */\n            let target = this.getExistingTargetState(s, t);\n            // print(\"Existing:\" + str(target))\n            if (target === null) {\n                target = this.computeTargetState(input, s, t);\n                // print(\"Computed:\" + str(target))\n            }\n            if (target === ATNSimulator.ERROR) {\n                break;\n            }\n            // If this is a consumable input element, make sure to consume before\n            // capturing the accept state so the input index, line, and char\n            // position accurately reflect the state of the interpreter at the\n            // end of the token.\n            if (t !== Token.EOF) {\n                this.consume(input);\n            }\n            if (target.isAcceptState) {\n                this.captureSimState(this.prevAccept, input, target);\n                if (t === Token.EOF) {\n                    break;\n                }\n            }\n            t = input.LA(1);\n            s = target; // flip; current DFA target becomes new src/from state\n        }\n        return this.failOrAccept(this.prevAccept, input, s.configs, t);\n    }\n\n    /**\n     * Get an existing target state for an edge in the DFA. If the target state\n     * for the edge has not yet been computed or is otherwise not available,\n     * this method returns {@code null}.\n     *\n     * @param s The current DFA state\n     * @param t The next input symbol\n     * @return The existing target DFA state for the given input symbol\n     * {@code t}, or {@code null} if the target state for this edge is not\n     * already cached\n     */\n    getExistingTargetState(s, t) {\n        if (s.edges === null || t < LexerATNSimulator.MIN_DFA_EDGE || t > LexerATNSimulator.MAX_DFA_EDGE) {\n            return null;\n        }\n\n        let target = s.edges[t - LexerATNSimulator.MIN_DFA_EDGE];\n        if (target === undefined) {\n            target = null;\n        }\n        if (LexerATNSimulator.debug && target !== null) {\n            console.log(\"reuse state \" + s.stateNumber + \" edge to \" + target.stateNumber);\n        }\n        return target;\n    }\n\n    /**\n     * Compute a target state for an edge in the DFA, and attempt to add the\n     * computed state and corresponding edge to the DFA.\n     *\n     * @param input The input stream\n     * @param s The current DFA state\n     * @param t The next input symbol\n     *\n     * @return The computed target DFA state for the given input symbol\n     * {@code t}. If {@code t} does not lead to a valid DFA state, this method\n     * returns {@link //ERROR}.\n     */\n    computeTargetState(input, s, t) {\n        const reach = new OrderedATNConfigSet();\n        // if we don't find an existing DFA state\n        // Fill reach starting from closure, following t transitions\n        this.getReachableConfigSet(input, s.configs, reach, t);\n\n        if (reach.items.length === 0) { // we got nowhere on t from s\n            if (!reach.hasSemanticContext) {\n                // we got nowhere on t, don't throw out this knowledge; it'd\n                // cause a failover from DFA later.\n                this.addDFAEdge(s, t, ATNSimulator.ERROR);\n            }\n            // stop when we can't match any more char\n            return ATNSimulator.ERROR;\n        }\n        // Add an edge from s to target DFA found/created for reach\n        return this.addDFAEdge(s, t, null, reach);\n    }\n\n    failOrAccept(prevAccept, input, reach, t) {\n        if (this.prevAccept.dfaState !== null) {\n            const lexerActionExecutor = prevAccept.dfaState.lexerActionExecutor;\n            this.accept(input, lexerActionExecutor, this.startIndex,\n                prevAccept.index, prevAccept.line, prevAccept.column);\n            return prevAccept.dfaState.prediction;\n        } else {\n            // if no accept and EOF is first char, return EOF\n            if (t === Token.EOF && input.index === this.startIndex) {\n                return Token.EOF;\n            }\n            throw new LexerNoViableAltException(this.recog, input, this.startIndex, reach);\n        }\n    }\n\n    /**\n     * Given a starting configuration set, figure out all ATN configurations\n     * we can reach upon input {@code t}. Parameter {@code reach} is a return\n     * parameter.\n     */\n    getReachableConfigSet(input, closure, reach, t) {\n        // this is used to skip processing for configs which have a lower priority\n        // than a config that already reached an accept state for the same rule\n        let skipAlt = ATN.INVALID_ALT_NUMBER;\n        for (let i = 0; i < closure.items.length; i++) {\n            const cfg = closure.items[i];\n            const currentAltReachedAcceptState = (cfg.alt === skipAlt);\n            if (currentAltReachedAcceptState && cfg.passedThroughNonGreedyDecision) {\n                continue;\n            }\n            if (LexerATNSimulator.debug) {\n                console.log(\"testing %s at %s\\n\", this.getTokenName(t), cfg\n                    .toString(this.recog, true));\n            }\n            for (let j = 0; j < cfg.state.transitions.length; j++) {\n                const trans = cfg.state.transitions[j]; // for each transition\n                const target = this.getReachableTarget(trans, t);\n                if (target !== null) {\n                    let lexerActionExecutor = cfg.lexerActionExecutor;\n                    if (lexerActionExecutor !== null) {\n                        lexerActionExecutor = lexerActionExecutor.fixOffsetBeforeMatch(input.index - this.startIndex);\n                    }\n                    const treatEofAsEpsilon = (t === Token.EOF);\n                    const config = new LexerATNConfig({state: target, lexerActionExecutor: lexerActionExecutor}, cfg);\n                    if (this.closure(input, config, reach,\n                        currentAltReachedAcceptState, true, treatEofAsEpsilon)) {\n                        // any remaining configs for this alt have a lower priority\n                        // than the one that just reached an accept state.\n                        skipAlt = cfg.alt;\n                    }\n                }\n            }\n        }\n    }\n\n    accept(input, lexerActionExecutor, startIndex, index, line, charPos) {\n        if (LexerATNSimulator.debug) {\n            console.log(\"ACTION %s\\n\", lexerActionExecutor);\n        }\n        // seek to after last char in token\n        input.seek(index);\n        this.line = line;\n        this.column = charPos;\n        if (lexerActionExecutor !== null && this.recog !== null) {\n            lexerActionExecutor.execute(this.recog, input, startIndex);\n        }\n    }\n\n    getReachableTarget(trans, t) {\n        if (trans.matches(t, 0, Lexer.MAX_CHAR_VALUE)) {\n            return trans.target;\n        } else {\n            return null;\n        }\n    }\n\n    computeStartState(input, p) {\n        const initialContext = PredictionContext.EMPTY;\n        const configs = new OrderedATNConfigSet();\n        for (let i = 0; i < p.transitions.length; i++) {\n            const target = p.transitions[i].target;\n            const cfg = new LexerATNConfig({state: target, alt: i + 1, context: initialContext}, null);\n            this.closure(input, cfg, configs, false, false, false);\n        }\n        return configs;\n    }\n\n    /**\n     * Since the alternatives within any lexer decision are ordered by\n     * preference, this method stops pursuing the closure as soon as an accept\n     * state is reached. After the first accept state is reached by depth-first\n     * search from {@code config}, all other (potentially reachable) states for\n     * this rule would have a lower priority.\n     *\n     * @return {Boolean} {@code true} if an accept state is reached, otherwise\n     * {@code false}.\n     */\n    closure(input, config, configs,\n            currentAltReachedAcceptState, speculative, treatEofAsEpsilon) {\n        let cfg = null;\n        if (LexerATNSimulator.debug) {\n            console.log(\"closure(\" + config.toString(this.recog, true) + \")\");\n        }\n        if (config.state instanceof RuleStopState) {\n            if (LexerATNSimulator.debug) {\n                if (this.recog !== null) {\n                    console.log(\"closure at %s rule stop %s\\n\", this.recog.ruleNames[config.state.ruleIndex], config);\n                } else {\n                    console.log(\"closure at rule stop %s\\n\", config);\n                }\n            }\n            if (config.context === null || config.context.hasEmptyPath()) {\n                if (config.context === null || config.context.isEmpty()) {\n                    configs.add(config);\n                    return true;\n                } else {\n                    configs.add(new LexerATNConfig({state: config.state, context: PredictionContext.EMPTY}, config));\n                    currentAltReachedAcceptState = true;\n                }\n            }\n            if (config.context !== null && !config.context.isEmpty()) {\n                for (let i = 0; i < config.context.length; i++) {\n                    if (config.context.getReturnState(i) !== PredictionContext.EMPTY_RETURN_STATE) {\n                        const newContext = config.context.getParent(i); // \"pop\" return state\n                        const returnState = this.atn.states[config.context.getReturnState(i)];\n                        cfg = new LexerATNConfig({state: returnState, context: newContext}, config);\n                        currentAltReachedAcceptState = this.closure(input, cfg,\n                            configs, currentAltReachedAcceptState, speculative,\n                            treatEofAsEpsilon);\n                    }\n                }\n            }\n            return currentAltReachedAcceptState;\n        }\n        // optimization\n        if (!config.state.epsilonOnlyTransitions) {\n            if (!currentAltReachedAcceptState || !config.passedThroughNonGreedyDecision) {\n                configs.add(config);\n            }\n        }\n        for (let j = 0; j < config.state.transitions.length; j++) {\n            const trans = config.state.transitions[j];\n            cfg = this.getEpsilonTarget(input, config, trans, configs, speculative, treatEofAsEpsilon);\n            if (cfg !== null) {\n                currentAltReachedAcceptState = this.closure(input, cfg, configs,\n                    currentAltReachedAcceptState, speculative, treatEofAsEpsilon);\n            }\n        }\n        return currentAltReachedAcceptState;\n    }\n\n    // side-effect: can alter configs.hasSemanticContext\n    getEpsilonTarget(input, config, trans,\n                     configs, speculative, treatEofAsEpsilon) {\n        let cfg = null;\n        if (trans.serializationType === Transition.RULE) {\n            const newContext = SingletonPredictionContext.create(config.context, trans.followState.stateNumber);\n            cfg = new LexerATNConfig({state: trans.target, context: newContext}, config);\n        } else if (trans.serializationType === Transition.PRECEDENCE) {\n            throw \"Precedence predicates are not supported in lexers.\";\n        } else if (trans.serializationType === Transition.PREDICATE) {\n            // Track traversing semantic predicates. If we traverse,\n            // we cannot add a DFA state for this \"reach\" computation\n            // because the DFA would not test the predicate again in the\n            // future. Rather than creating collections of semantic predicates\n            // like v3 and testing them on prediction, v4 will test them on the\n            // fly all the time using the ATN not the DFA. This is slower but\n            // semantically it's not used that often. One of the key elements to\n            // this predicate mechanism is not adding DFA states that see\n            // predicates immediately afterwards in the ATN. For example,\n\n            // a : ID {p1}? | ID {p2}? ;\n\n            // should create the start state for rule 'a' (to save start state\n            // competition), but should not create target of ID state. The\n            // collection of ATN states the following ID references includes\n            // states reached by traversing predicates. Since this is when we\n            // test them, we cannot cash the DFA state target of ID.\n\n            if (LexerATNSimulator.debug) {\n                console.log(\"EVAL rule \" + trans.ruleIndex + \":\" + trans.predIndex);\n            }\n            configs.hasSemanticContext = true;\n            if (this.evaluatePredicate(input, trans.ruleIndex, trans.predIndex, speculative)) {\n                cfg = new LexerATNConfig({state: trans.target}, config);\n            }\n        } else if (trans.serializationType === Transition.ACTION) {\n            if (config.context === null || config.context.hasEmptyPath()) {\n                // execute actions anywhere in the start rule for a token.\n                //\n                // TODO: if the entry rule is invoked recursively, some\n                // actions may be executed during the recursive call. The\n                // problem can appear when hasEmptyPath() is true but\n                // isEmpty() is false. In this case, the config needs to be\n                // split into two contexts - one with just the empty path\n                // and another with everything but the empty path.\n                // Unfortunately, the current algorithm does not allow\n                // getEpsilonTarget to return two configurations, so\n                // additional modifications are needed before we can support\n                // the split operation.\n                const lexerActionExecutor = LexerActionExecutor.append(config.lexerActionExecutor,\n                    this.atn.lexerActions[trans.actionIndex]);\n                cfg = new LexerATNConfig({state: trans.target, lexerActionExecutor: lexerActionExecutor}, config);\n            } else {\n                // ignore actions in referenced rules\n                cfg = new LexerATNConfig({state: trans.target}, config);\n            }\n        } else if (trans.serializationType === Transition.EPSILON) {\n            cfg = new LexerATNConfig({state: trans.target}, config);\n        } else if (trans.serializationType === Transition.ATOM ||\n            trans.serializationType === Transition.RANGE ||\n            trans.serializationType === Transition.SET) {\n            if (treatEofAsEpsilon) {\n                if (trans.matches(Token.EOF, 0, Lexer.MAX_CHAR_VALUE)) {\n                    cfg = new LexerATNConfig({state: trans.target}, config);\n                }\n            }\n        }\n        return cfg;\n    }\n\n    /**\n     * Evaluate a predicate specified in the lexer.\n     *\n     * <p>If {@code speculative} is {@code true}, this method was called before\n     * {@link //consume} for the matched character. This method should call\n     * {@link //consume} before evaluating the predicate to ensure position\n     * sensitive values, including {@link Lexer//getText}, {@link Lexer//getLine},\n     * and {@link Lexer//getcolumn}, properly reflect the current\n     * lexer state. This method should restore {@code input} and the simulator\n     * to the original state before returning (i.e. undo the actions made by the\n     * call to {@link //consume}.</p>\n     *\n     * @param input The input stream.\n     * @param ruleIndex The rule containing the predicate.\n     * @param predIndex The index of the predicate within the rule.\n     * @param speculative {@code true} if the current index in {@code input} is\n     * one character before the predicate's location.\n     *\n     * @return {@code true} if the specified predicate evaluates to\n     * {@code true}.\n     */\n    evaluatePredicate(input, ruleIndex,\n                      predIndex, speculative) {\n        // assume true if no recognizer was provided\n        if (this.recog === null) {\n            return true;\n        }\n        if (!speculative) {\n            return this.recog.sempred(null, ruleIndex, predIndex);\n        }\n        const savedcolumn = this.column;\n        const savedLine = this.line;\n        const index = input.index;\n        const marker = input.mark();\n        try {\n            this.consume(input);\n            return this.recog.sempred(null, ruleIndex, predIndex);\n        } finally {\n            this.column = savedcolumn;\n            this.line = savedLine;\n            input.seek(index);\n            input.release(marker);\n        }\n    }\n\n    captureSimState(settings, input, dfaState) {\n        settings.index = input.index;\n        settings.line = this.line;\n        settings.column = this.column;\n        settings.dfaState = dfaState;\n    }\n\n    addDFAEdge(from_, tk, to, cfgs) {\n        if (to === undefined) {\n            to = null;\n        }\n        if (cfgs === undefined) {\n            cfgs = null;\n        }\n        if (to === null && cfgs !== null) {\n            // leading to this call, ATNConfigSet.hasSemanticContext is used as a\n            // marker indicating dynamic predicate evaluation makes this edge\n            // dependent on the specific input sequence, so the static edge in the\n            // DFA should be omitted. The target DFAState is still created since\n            // execATN has the ability to resynchronize with the DFA state cache\n            // following the predicate evaluation step.\n            //\n            // TJP notes: next time through the DFA, we see a pred again and eval.\n            // If that gets us to a previously created (but dangling) DFA\n            // state, we can continue in pure DFA mode from there.\n            // /\n            const suppressEdge = cfgs.hasSemanticContext;\n            cfgs.hasSemanticContext = false;\n\n            to = this.addDFAState(cfgs);\n\n            if (suppressEdge) {\n                return to;\n            }\n        }\n        // add the edge\n        if (tk < LexerATNSimulator.MIN_DFA_EDGE || tk > LexerATNSimulator.MAX_DFA_EDGE) {\n            // Only track edges within the DFA bounds\n            return to;\n        }\n        if (LexerATNSimulator.debug) {\n            console.log(\"EDGE \" + from_ + \" -> \" + to + \" upon \" + tk);\n        }\n        if (from_.edges === null) {\n            // make room for tokens 1..n and -1 masquerading as index 0\n            from_.edges = [];\n        }\n        from_.edges[tk - LexerATNSimulator.MIN_DFA_EDGE] = to; // connect\n\n        return to;\n    }\n\n    /**\n     * Add a new DFA state if there isn't one with this set of\n     * configurations already. This method also detects the first\n     * configuration containing an ATN rule stop state. Later, when\n     * traversing the DFA, we will know which rule to accept.\n     */\n    addDFAState(configs) {\n        const proposed = new DFAState(null, configs);\n        let firstConfigWithRuleStopState = null;\n        for (let i = 0; i < configs.items.length; i++) {\n            const cfg = configs.items[i];\n            if (cfg.state instanceof RuleStopState) {\n                firstConfigWithRuleStopState = cfg;\n                break;\n            }\n        }\n        if (firstConfigWithRuleStopState !== null) {\n            proposed.isAcceptState = true;\n            proposed.lexerActionExecutor = firstConfigWithRuleStopState.lexerActionExecutor;\n            proposed.prediction = this.atn.ruleToTokenType[firstConfigWithRuleStopState.state.ruleIndex];\n        }\n        const dfa = this.decisionToDFA[this.mode];\n        const existing = dfa.states.get(proposed);\n        if (existing !== null) {\n            return existing;\n        }\n        const newState = proposed;\n        newState.stateNumber = dfa.states.length;\n        configs.setReadonly(true);\n        newState.configs = configs;\n        dfa.states.add(newState);\n        return newState;\n    }\n\n    getDFA(mode) {\n        return this.decisionToDFA[mode];\n    }\n\n// Get the text matched so far for the current token.\n    getText(input) {\n        // index is first lookahead char, don't include.\n        return input.getText(this.startIndex, input.index - 1);\n    }\n\n    consume(input) {\n        const curChar = input.LA(1);\n        if (curChar === \"\\n\".charCodeAt(0)) {\n            this.line += 1;\n            this.column = 0;\n        } else {\n            this.column += 1;\n        }\n        input.consume();\n    }\n\n    getTokenName(tt) {\n        if (tt === -1) {\n            return \"EOF\";\n        } else {\n            return \"'\" + String.fromCharCode(tt) + \"'\";\n        }\n    }\n}\n\nLexerATNSimulator.debug = false;\nLexerATNSimulator.dfa_debug = false;\n\nLexerATNSimulator.MIN_DFA_EDGE = 0;\nLexerATNSimulator.MAX_DFA_EDGE = 127; // forces unicode to stay in ATN\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n/**\n * Map a predicate to a predicted alternative.\n */\nexport default class PredPrediction {\n    constructor(pred, alt) {\n        this.alt = alt;\n        this.pred = pred;\n    }\n\n    toString() {\n        return \"(\" + this.pred + \", \" + this.alt + \")\";\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nexport default class AltDict {\n\n    constructor() {\n        this.data = {};\n    }\n\n    get(key) {\n        return this.data[\"k-\" + key] || null;\n    }\n\n    set(key, value) {\n        this.data[\"k-\" + key] = value;\n    }\n\n    values() {\n        return Object.keys(this.data).filter(key => key.startsWith(\"k-\")).map(key => this.data[key], this);\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport ATN from './ATN.js';\nimport RuleStopState from '../state/RuleStopState.js';\nimport ATNConfigSet from './ATNConfigSet.js';\nimport ATNConfig from './ATNConfig.js';\nimport SemanticContext from './SemanticContext.js';\nimport BitSet from \"../misc/BitSet.js\";\nimport AltDict from \"../misc/AltDict.js\";\nimport HashCode from \"../misc/HashCode.js\";\nimport HashMap from \"../misc/HashMap.js\";\n\n/**\n * This enumeration defines the prediction modes available in ANTLR 4 along with\n * utility methods for analyzing configuration sets for conflicts and/or\n * ambiguities.\n */\nconst PredictionMode = {\n    /**\n     * The SLL(*) prediction mode. This prediction mode ignores the current\n     * parser context when making predictions. This is the fastest prediction\n     * mode, and provides correct results for many grammars. This prediction\n     * mode is more powerful than the prediction mode provided by ANTLR 3, but\n     * may result in syntax errors for grammar and input combinations which are\n     * not SLL.\n     *\n     * <p>\n     * When using this prediction mode, the parser will either return a correct\n     * parse tree (i.e. the same parse tree that would be returned with the\n     * {@link //LL} prediction mode), or it will report a syntax error. If a\n     * syntax error is encountered when using the {@link //SLL} prediction mode,\n     * it may be due to either an actual syntax error in the input or indicate\n     * that the particular combination of grammar and input requires the more\n     * powerful {@link //LL} prediction abilities to complete successfully.</p>\n     *\n     * <p>\n     * This prediction mode does not provide any guarantees for prediction\n     * behavior for syntactically-incorrect inputs.</p>\n     */\n    SLL: 0,\n\n    /**\n     * The LL(*) prediction mode. This prediction mode allows the current parser\n     * context to be used for resolving SLL conflicts that occur during\n     * prediction. This is the fastest prediction mode that guarantees correct\n     * parse results for all combinations of grammars with syntactically correct\n     * inputs.\n     *\n     * <p>\n     * When using this prediction mode, the parser will make correct decisions\n     * for all syntactically-correct grammar and input combinations. However, in\n     * cases where the grammar is truly ambiguous this prediction mode might not\n     * report a precise answer for <em>exactly which</em> alternatives are\n     * ambiguous.</p>\n     *\n     * <p>\n     * This prediction mode does not provide any guarantees for prediction\n     * behavior for syntactically-incorrect inputs.</p>\n     */\n    LL: 1,\n\n    /**\n     *\n     * The LL(*) prediction mode with exact ambiguity detection. In addition to\n     * the correctness guarantees provided by the {@link //LL} prediction mode,\n     * this prediction mode instructs the prediction algorithm to determine the\n     * complete and exact set of ambiguous alternatives for every ambiguous\n     * decision encountered while parsing.\n     *\n     * <p>\n     * This prediction mode may be used for diagnosing ambiguities during\n     * grammar development. Due to the performance overhead of calculating sets\n     * of ambiguous alternatives, this prediction mode should be avoided when\n     * the exact results are not necessary.</p>\n     *\n     * <p>\n     * This prediction mode does not provide any guarantees for prediction\n     * behavior for syntactically-incorrect inputs.</p>\n     */\n    LL_EXACT_AMBIG_DETECTION: 2,\n\n    /**\n     *\n     * Computes the SLL prediction termination condition.\n     *\n     * <p>\n     * This method computes the SLL prediction termination condition for both of\n     * the following cases.</p>\n     *\n     * <ul>\n     * <li>The usual SLL+LL fallback upon SLL conflict</li>\n     * <li>Pure SLL without LL fallback</li>\n     * </ul>\n     *\n     * <p><strong>COMBINED SLL+LL PARSING</strong></p>\n     *\n     * <p>When LL-fallback is enabled upon SLL conflict, correct predictions are\n     * ensured regardless of how the termination condition is computed by this\n     * method. Due to the substantially higher cost of LL prediction, the\n     * prediction should only fall back to LL when the additional lookahead\n     * cannot lead to a unique SLL prediction.</p>\n     *\n     * <p>Assuming combined SLL+LL parsing, an SLL configuration set with only\n     * conflicting subsets should fall back to full LL, even if the\n     * configuration sets don't resolve to the same alternative (e.g.\n     * {@code {1,2}} and {@code {3,4}}. If there is at least one non-conflicting\n     * configuration, SLL could continue with the hopes that more lookahead will\n     * resolve via one of those non-conflicting configurations.</p>\n     *\n     * <p>Here's the prediction termination rule them: SLL (for SLL+LL parsing)\n     * stops when it sees only conflicting configuration subsets. In contrast,\n     * full LL keeps going when there is uncertainty.</p>\n     *\n     * <p><strong>HEURISTIC</strong></p>\n     *\n     * <p>As a heuristic, we stop prediction when we see any conflicting subset\n     * unless we see a state that only has one alternative associated with it.\n     * The single-alt-state thing lets prediction continue upon rules like\n     * (otherwise, it would admit defeat too soon):</p>\n     *\n     * <p>{@code [12|1|[], 6|2|[], 12|2|[]]. s : (ID | ID ID?) ';' ;}</p>\n     *\n     * <p>When the ATN simulation reaches the state before {@code ';'}, it has a\n     * DFA state that looks like: {@code [12|1|[], 6|2|[], 12|2|[]]}. Naturally\n     * {@code 12|1|[]} and {@code 12|2|[]} conflict, but we cannot stop\n     * processing this node because alternative to has another way to continue,\n     * via {@code [6|2|[]]}.</p>\n     *\n     * <p>It also let's us continue for this rule:</p>\n     *\n     * <p>{@code [1|1|[], 1|2|[], 8|3|[]] a : A | A | A B ;}</p>\n     *\n     * <p>After matching input A, we reach the stop state for rule A, state 1.\n     * State 8 is the state right before B. Clearly alternatives 1 and 2\n     * conflict and no amount of further lookahead will separate the two.\n     * However, alternative 3 will be able to continue and so we do not stop\n     * working on this state. In the previous example, we're concerned with\n     * states associated with the conflicting alternatives. Here alt 3 is not\n     * associated with the conflicting configs, but since we can continue\n     * looking for input reasonably, don't declare the state done.</p>\n     *\n     * <p><strong>PURE SLL PARSING</strong></p>\n     *\n     * <p>To handle pure SLL parsing, all we have to do is make sure that we\n     * combine stack contexts for configurations that differ only by semantic\n     * predicate. From there, we can do the usual SLL termination heuristic.</p>\n     *\n     * <p><strong>PREDICATES IN SLL+LL PARSING</strong></p>\n     *\n     * <p>SLL decisions don't evaluate predicates until after they reach DFA stop\n     * states because they need to create the DFA cache that works in all\n     * semantic situations. In contrast, full LL evaluates predicates collected\n     * during start state computation so it can ignore predicates thereafter.\n     * This means that SLL termination detection can totally ignore semantic\n     * predicates.</p>\n     *\n     * <p>Implementation-wise, {@link ATNConfigSet} combines stack contexts but not\n     * semantic predicate contexts so we might see two configurations like the\n     * following.</p>\n     *\n     * <p>{@code (s, 1, x, {}), (s, 1, x', {p})}</p>\n     *\n     * <p>Before testing these configurations against others, we have to merge\n     * {@code x} and {@code x'} (without modifying the existing configurations).\n     * For example, we test {@code (x+x')==x''} when looking for conflicts in\n     * the following configurations.</p>\n     *\n     * <p>{@code (s, 1, x, {}), (s, 1, x', {p}), (s, 2, x'', {})}</p>\n     *\n     * <p>If the configuration set has predicates (as indicated by\n     * {@link ATNConfigSet//hasSemanticContext}), this algorithm makes a copy of\n     * the configurations to strip out all of the predicates so that a standard\n     * {@link ATNConfigSet} will merge everything ignoring predicates.</p>\n     */\n    hasSLLConflictTerminatingPrediction: function( mode, configs) {\n        // Configs in rule stop states indicate reaching the end of the decision\n        // rule (local context) or end of start rule (full context). If all\n        // configs meet this condition, then none of the configurations is able\n        // to match additional input so we terminate prediction.\n        //\n        if (PredictionMode.allConfigsInRuleStopStates(configs)) {\n            return true;\n        }\n        // pure SLL mode parsing\n        if (mode === PredictionMode.SLL) {\n            // Don't bother with combining configs from different semantic\n            // contexts if we can fail over to full LL; costs more time\n            // since we'll often fail over anyway.\n            if (configs.hasSemanticContext) {\n                // dup configs, tossing out semantic predicates\n                const dup = new ATNConfigSet();\n                for(let i=0;i<configs.items.length;i++) {\n                    let c = configs.items[i];\n                    c = new ATNConfig({semanticContext:SemanticContext.NONE}, c);\n                    dup.add(c);\n                }\n                configs = dup;\n            }\n            // now we have combined contexts for configs with dissimilar preds\n        }\n        // pure SLL or combined SLL+LL mode parsing\n        const altsets = PredictionMode.getConflictingAltSubsets(configs);\n        return PredictionMode.hasConflictingAltSet(altsets) && !PredictionMode.hasStateAssociatedWithOneAlt(configs);\n    },\n\n    /**\n     * Checks if any configuration in {@code configs} is in a\n     * {@link RuleStopState}. Configurations meeting this condition have reached\n     * the end of the decision rule (local context) or end of start rule (full\n     * context).\n     *\n     * @param configs the configuration set to test\n     * @return {@code true} if any configuration in {@code configs} is in a\n     * {@link RuleStopState}, otherwise {@code false}\n     */\n    hasConfigInRuleStopState: function(configs) {\n        for(let i=0;i<configs.items.length;i++) {\n            const c = configs.items[i];\n            if (c.state instanceof RuleStopState) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    /**\n     * Checks if all configurations in {@code configs} are in a\n     * {@link RuleStopState}. Configurations meeting this condition have reached\n     * the end of the decision rule (local context) or end of start rule (full\n     * context).\n     *\n     * @param configs the configuration set to test\n     * @return {@code true} if all configurations in {@code configs} are in a\n     * {@link RuleStopState}, otherwise {@code false}\n     */\n    allConfigsInRuleStopStates: function(configs) {\n        for(let i=0;i<configs.items.length;i++) {\n            const c = configs.items[i];\n            if (!(c.state instanceof RuleStopState)) {\n                return false;\n            }\n        }\n        return true;\n    },\n\n    /**\n     *\n     * Full LL prediction termination.\n     *\n     * <p>Can we stop looking ahead during ATN simulation or is there some\n     * uncertainty as to which alternative we will ultimately pick, after\n     * consuming more input? Even if there are partial conflicts, we might know\n     * that everything is going to resolve to the same minimum alternative. That\n     * means we can stop since no more lookahead will change that fact. On the\n     * other hand, there might be multiple conflicts that resolve to different\n     * minimums. That means we need more look ahead to decide which of those\n     * alternatives we should predict.</p>\n     *\n     * <p>The basic idea is to split the set of configurations {@code C}, into\n     * conflicting subsets {@code (s, _, ctx, _)} and singleton subsets with\n     * non-conflicting configurations. Two configurations conflict if they have\n     * identical {@link ATNConfig//state} and {@link ATNConfig//context} values\n     * but different {@link ATNConfig//alt} value, e.g. {@code (s, i, ctx, _)}\n     * and {@code (s, j, ctx, _)} for {@code i!=j}.</p>\n     *\n     * <p>Reduce these configuration subsets to the set of possible alternatives.\n     * You can compute the alternative subsets in one pass as follows:</p>\n     *\n     * <p>{@code A_s,ctx = {i | (s, i, ctx, _)}} for each configuration in\n     * {@code C} holding {@code s} and {@code ctx} fixed.</p>\n     *\n     * <p>Or in pseudo-code, for each configuration {@code c} in {@code C}:</p>\n     *\n     * <pre>\n     * map[c] U= c.{@link ATNConfig//alt alt} // map hash/equals uses s and x, not\n     * alt and not pred\n     * </pre>\n     *\n     * <p>The values in {@code map} are the set of {@code A_s,ctx} sets.</p>\n     *\n     * <p>If {@code |A_s,ctx|=1} then there is no conflict associated with\n     * {@code s} and {@code ctx}.</p>\n     *\n     * <p>Reduce the subsets to singletons by choosing a minimum of each subset. If\n     * the union of these alternative subsets is a singleton, then no amount of\n     * more lookahead will help us. We will always pick that alternative. If,\n     * however, there is more than one alternative, then we are uncertain which\n     * alternative to predict and must continue looking for resolution. We may\n     * or may not discover an ambiguity in the future, even if there are no\n     * conflicting subsets this round.</p>\n     *\n     * <p>The biggest sin is to terminate early because it means we've made a\n     * decision but were uncertain as to the eventual outcome. We haven't used\n     * enough lookahead. On the other hand, announcing a conflict too late is no\n     * big deal; you will still have the conflict. It's just inefficient. It\n     * might even look until the end of file.</p>\n     *\n     * <p>No special consideration for semantic predicates is required because\n     * predicates are evaluated on-the-fly for full LL prediction, ensuring that\n     * no configuration contains a semantic context during the termination\n     * check.</p>\n     *\n     * <p><strong>CONFLICTING CONFIGS</strong></p>\n     *\n     * <p>Two configurations {@code (s, i, x)} and {@code (s, j, x')}, conflict\n     * when {@code i!=j} but {@code x=x'}. Because we merge all\n     * {@code (s, i, _)} configurations together, that means that there are at\n     * most {@code n} configurations associated with state {@code s} for\n     * {@code n} possible alternatives in the decision. The merged stacks\n     * complicate the comparison of configuration contexts {@code x} and\n     * {@code x'}. Sam checks to see if one is a subset of the other by calling\n     * merge and checking to see if the merged result is either {@code x} or\n     * {@code x'}. If the {@code x} associated with lowest alternative {@code i}\n     * is the superset, then {@code i} is the only possible prediction since the\n     * others resolve to {@code min(i)} as well. However, if {@code x} is\n     * associated with {@code j>i} then at least one stack configuration for\n     * {@code j} is not in conflict with alternative {@code i}. The algorithm\n     * should keep going, looking for more lookahead due to the uncertainty.</p>\n     *\n     * <p>For simplicity, I'm doing a equality check between {@code x} and\n     * {@code x'} that lets the algorithm continue to consume lookahead longer\n     * than necessary. The reason I like the equality is of course the\n     * simplicity but also because that is the test you need to detect the\n     * alternatives that are actually in conflict.</p>\n     *\n     * <p><strong>CONTINUE/STOP RULE</strong></p>\n     *\n     * <p>Continue if union of resolved alternative sets from non-conflicting and\n     * conflicting alternative subsets has more than one alternative. We are\n     * uncertain about which alternative to predict.</p>\n     *\n     * <p>The complete set of alternatives, {@code [i for (_,i,_)]}, tells us which\n     * alternatives are still in the running for the amount of input we've\n     * consumed at this point. The conflicting sets let us to strip away\n     * configurations that won't lead to more states because we resolve\n     * conflicts to the configuration with a minimum alternate for the\n     * conflicting set.</p>\n     *\n     * <p><strong>CASES</strong></p>\n     *\n     * <ul>\n     *\n     * <li>no conflicts and more than 1 alternative in set =&gt; continue</li>\n     *\n     * <li> {@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s, 3, z)},\n     * {@code (s', 1, y)}, {@code (s', 2, y)} yields non-conflicting set\n     * {@code {3}} U conflicting sets {@code min({1,2})} U {@code min({1,2})} =\n     * {@code {1,3}} =&gt; continue\n     * </li>\n     *\n     * <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 1, y)},\n     * {@code (s', 2, y)}, {@code (s'', 1, z)} yields non-conflicting set\n     * {@code {1}} U conflicting sets {@code min({1,2})} U {@code min({1,2})} =\n     * {@code {1}} =&gt; stop and predict 1</li>\n     *\n     * <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 1, y)},\n     * {@code (s', 2, y)} yields conflicting, reduced sets {@code {1}} U\n     * {@code {1}} = {@code {1}} =&gt; stop and predict 1, can announce\n     * ambiguity {@code {1,2}}</li>\n     *\n     * <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 2, y)},\n     * {@code (s', 3, y)} yields conflicting, reduced sets {@code {1}} U\n     * {@code {2}} = {@code {1,2}} =&gt; continue</li>\n     *\n     * <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 3, y)},\n     * {@code (s', 4, y)} yields conflicting, reduced sets {@code {1}} U\n     * {@code {3}} = {@code {1,3}} =&gt; continue</li>\n     *\n     * </ul>\n     *\n     * <p><strong>EXACT AMBIGUITY DETECTION</strong></p>\n     *\n     * <p>If all states report the same conflicting set of alternatives, then we\n     * know we have the exact ambiguity set.</p>\n     *\n     * <p><code>|A_<em>i</em>|&gt;1</code> and\n     * <code>A_<em>i</em> = A_<em>j</em></code> for all <em>i</em>, <em>j</em>.</p>\n     *\n     * <p>In other words, we continue examining lookahead until all {@code A_i}\n     * have more than one alternative and all {@code A_i} are the same. If\n     * {@code A={{1,2}, {1,3}}}, then regular LL prediction would terminate\n     * because the resolved set is {@code {1}}. To determine what the real\n     * ambiguity is, we have to know whether the ambiguity is between one and\n     * two or one and three so we keep going. We can only stop prediction when\n     * we need exact ambiguity detection when the sets look like\n     * {@code A={{1,2}}} or {@code {{1,2},{1,2}}}, etc...</p>\n     */\n    resolvesToJustOneViableAlt: function(altsets) {\n        return PredictionMode.getSingleViableAlt(altsets);\n    },\n\n    /**\n     * Determines if every alternative subset in {@code altsets} contains more\n     * than one alternative.\n     *\n     * @param altsets a collection of alternative subsets\n     * @return {@code true} if every {@link BitSet} in {@code altsets} has\n     * {@link BitSet//cardinality cardinality} &gt; 1, otherwise {@code false}\n     */\n    allSubsetsConflict: function(altsets) {\n        return ! PredictionMode.hasNonConflictingAltSet(altsets);\n    },\n    /**\n     * Determines if any single alternative subset in {@code altsets} contains\n     * exactly one alternative.\n     *\n     * @param altsets a collection of alternative subsets\n     * @return {@code true} if {@code altsets} contains a {@link BitSet} with\n     * {@link BitSet//cardinality cardinality} 1, otherwise {@code false}\n     */\n    hasNonConflictingAltSet: function(altsets) {\n        for(let i=0;i<altsets.length;i++) {\n            const alts = altsets[i];\n            if (alts.length===1) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n\n    /**\n     * Determines if any single alternative subset in {@code altsets} contains\n     * more than one alternative.\n     *\n     * @param altsets a collection of alternative subsets\n     * @return {@code true} if {@code altsets} contains a {@link BitSet} with\n     * {@link BitSet//cardinality cardinality} &gt; 1, otherwise {@code false}\n     */\n    hasConflictingAltSet: function(altsets) {\n        for(let i=0;i<altsets.length;i++) {\n            const alts = altsets[i];\n            if (alts.length>1) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n\n    /**\n     * Determines if every alternative subset in {@code altsets} is equivalent.\n     *\n     * @param altsets a collection of alternative subsets\n     * @return {@code true} if every member of {@code altsets} is equal to the\n     * others, otherwise {@code false}\n     */\n    allSubsetsEqual: function(altsets) {\n        let first = null;\n        for(let i=0;i<altsets.length;i++) {\n            const alts = altsets[i];\n            if (first === null) {\n                first = alts;\n            } else if (alts!==first) {\n                return false;\n            }\n        }\n        return true;\n    },\n\n\n    /**\n     * Returns the unique alternative predicted by all alternative subsets in\n     * {@code altsets}. If no such alternative exists, this method returns\n     * {@link ATN//INVALID_ALT_NUMBER}.\n     *\n     * @param altsets a collection of alternative subsets\n     */\n    getUniqueAlt: function(altsets) {\n        const all = PredictionMode.getAlts(altsets);\n        if (all.length===1) {\n            return all.minValue();\n        } else {\n            return ATN.INVALID_ALT_NUMBER;\n        }\n    },\n\n    /**\n     * Gets the complete set of represented alternatives for a collection of\n     * alternative subsets. This method returns the union of each {@link BitSet}\n     * in {@code altsets}.\n     *\n     * @param altsets a collection of alternative subsets\n     * @return the set of represented alternatives in {@code altsets}\n     */\n    getAlts: function(altsets) {\n        const all = new BitSet();\n        altsets.map( function(alts) { all.or(alts); });\n        return all;\n    },\n\n    /**\n     * This function gets the conflicting alt subsets from a configuration set.\n     * For each configuration {@code c} in {@code configs}:\n     *\n     * <pre>\n     * map[c] U= c.{@link ATNConfig//alt alt} // map hash/equals uses s and x, not\n     * alt and not pred\n     * </pre>\n     */\n    getConflictingAltSubsets: function(configs) {\n        const configToAlts = new HashMap();\n        configToAlts.hashFunction = function(cfg) { HashCode.hashStuff(cfg.state.stateNumber, cfg.context); };\n        configToAlts.equalsFunction = function(c1, c2) { return c1.state.stateNumber === c2.state.stateNumber && c1.context.equals(c2.context);};\n        configs.items.map(function(cfg) {\n            let alts = configToAlts.get(cfg);\n            if (alts === null) {\n                alts = new BitSet();\n                configToAlts.set(cfg, alts);\n            }\n            alts.set(cfg.alt);\n        });\n        return configToAlts.getValues();\n    },\n\n    /**\n     * Get a map from state to alt subset from a configuration set. For each\n     * configuration {@code c} in {@code configs}:\n     *\n     * <pre>\n     * map[c.{@link ATNConfig//state state}] U= c.{@link ATNConfig//alt alt}\n     * </pre>\n     */\n    getStateToAltMap: function(configs) {\n        const m = new AltDict();\n        configs.items.map(function(c) {\n            let alts = m.get(c.state);\n            if (alts === null) {\n                alts = new BitSet();\n                m.set(c.state, alts);\n            }\n            alts.set(c.alt);\n        });\n        return m;\n    },\n\n    hasStateAssociatedWithOneAlt: function(configs) {\n        const values = PredictionMode.getStateToAltMap(configs).values();\n        for(let i=0;i<values.length;i++) {\n            if (values[i].length===1) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    getSingleViableAlt: function(altsets) {\n        let result = null;\n        for(let i=0;i<altsets.length;i++) {\n            const alts = altsets[i];\n            const minAlt = alts.minValue();\n            if(result===null) {\n                result = minAlt;\n            } else if(result!==minAlt) { // more than 1 viable alt\n                return ATN.INVALID_ALT_NUMBER;\n            }\n        }\n        return result;\n    }\n};\n\nexport default PredictionMode;\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport RecognitionException from \"./RecognitionException.js\";\n\n/**\n * Indicates that the parser could not decide which of two or more paths\n * to take based upon the remaining input. It tracks the starting token\n * of the offending input and also knows where the parser was\n * in the various paths when the error. Reported by reportNoViableAlternative()\n */\n\nexport default class NoViableAltException extends RecognitionException {\n    constructor(recognizer, input, startToken, offendingToken, deadEndConfigs, ctx) {\n        ctx = ctx || recognizer._ctx;\n        offendingToken = offendingToken || recognizer.getCurrentToken();\n        startToken = startToken || recognizer.getCurrentToken();\n        input = input || recognizer.getInputStream();\n        super({message: \"\", recognizer: recognizer, input: input, ctx: ctx});\n        // Which configurations did we try at input.index() that couldn't match\n        // input.LT(1)?//\n        this.deadEndConfigs = deadEndConfigs;\n        // The token object at the start index; the input stream might\n        // not be buffering tokens so get a reference to it. (At the\n        // time the error occurred, of course the stream needs to keep a\n        // buffer all of the tokens but later we might not have access to those.)\n        this.startToken = startToken;\n        this.offendingToken = offendingToken;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport HashMap from \"../misc/HashMap.js\";\n\nexport default class DoubleDict {\n\n    constructor(defaultMapCtor) {\n        this.defaultMapCtor = defaultMapCtor || HashMap;\n        this.cacheMap = new this.defaultMapCtor();\n    }\n\n    get(a, b) {\n        const d = this.cacheMap.get(a) || null;\n        return d === null ? null : (d.get(b) || null);\n    }\n\n    set(a, b, o) {\n        let d = this.cacheMap.get(a) || null;\n        if (d === null) {\n            d = new this.defaultMapCtor();\n            this.cacheMap.set(a, d);\n        }\n        d.set(b, o);\n    }\n\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport ATN from './ATN.js';\nimport ATNState from '../state/ATNState.js';\nimport RuleStopState from '../state/RuleStopState.js';\nimport ATNConfig from './ATNConfig.js';\nimport ATNConfigSet from './ATNConfigSet.js';\nimport Token from '../Token.js';\nimport DFAState from '../dfa/DFAState.js';\nimport PredPrediction from '../dfa/PredPrediction.js';\nimport ATNSimulator from './ATNSimulator.js';\nimport PredictionMode from './PredictionMode.js';\nimport RuleContext from '../context/RuleContext.js';\nimport SemanticContext from './SemanticContext.js';\nimport PredictionContext from '../context/PredictionContext.js';\nimport Interval from '../misc/Interval.js';\nimport Transition from '../transition/Transition.js';\nimport SetTransition from '../transition/SetTransition.js';\nimport NotSetTransition from '../transition/NotSetTransition.js';\nimport RuleTransition from '../transition/RuleTransition.js';\nimport ActionTransition from '../transition/ActionTransition.js';\nimport NoViableAltException from '../error/NoViableAltException.js';\nimport SingletonPredictionContext from '../context/SingletonPredictionContext.js';\nimport {predictionContextFromRuleContext} from '../context/PredictionContextUtils.js';\nimport AtomTransition from \"../transition/AtomTransition.js\";\nimport arrayToString from \"../utils/arrayToString.js\";\nimport BitSet from \"../misc/BitSet.js\";\nimport DoubleDict from \"../utils/DoubleDict.js\";\nimport HashSet from \"../misc/HashSet.js\";\n\n/**\n * The embodiment of the adaptive LL(*), ALL(*), parsing strategy.\n *\n * <p>\n * The basic complexity of the adaptive strategy makes it harder to understand.\n * We begin with ATN simulation to build paths in a DFA. Subsequent prediction\n * requests go through the DFA first. If they reach a state without an edge for\n * the current symbol, the algorithm fails over to the ATN simulation to\n * complete the DFA path for the current input (until it finds a conflict state\n * or uniquely predicting state).</p>\n *\n * <p>\n * All of that is done without using the outer context because we want to create\n * a DFA that is not dependent upon the rule invocation stack when we do a\n * prediction. One DFA works in all contexts. We avoid using context not\n * necessarily because it's slower, although it can be, but because of the DFA\n * caching problem. The closure routine only considers the rule invocation stack\n * created during prediction beginning in the decision rule. For example, if\n * prediction occurs without invoking another rule's ATN, there are no context\n * stacks in the configurations. When lack of context leads to a conflict, we\n * don't know if it's an ambiguity or a weakness in the strong LL(*) parsing\n * strategy (versus full LL(*)).</p>\n *\n * <p>\n * When SLL yields a configuration set with conflict, we rewind the input and\n * retry the ATN simulation, this time using full outer context without adding\n * to the DFA. Configuration context stacks will be the full invocation stacks\n * from the start rule. If we get a conflict using full context, then we can\n * definitively say we have a true ambiguity for that input sequence. If we\n * don't get a conflict, it implies that the decision is sensitive to the outer\n * context. (It is not context-sensitive in the sense of context-sensitive\n * grammars.)</p>\n *\n * <p>\n * The next time we reach this DFA state with an SLL conflict, through DFA\n * simulation, we will again retry the ATN simulation using full context mode.\n * This is slow because we can't save the results and have to \"interpret\" the\n * ATN each time we get that input.</p>\n *\n * <p>\n * <strong>CACHING FULL CONTEXT PREDICTIONS</strong></p>\n *\n * <p>\n * We could cache results from full context to predicted alternative easily and\n * that saves a lot of time but doesn't work in presence of predicates. The set\n * of visible predicates from the ATN start state changes depending on the\n * context, because closure can fall off the end of a rule. I tried to cache\n * tuples (stack context, semantic context, predicted alt) but it was slower\n * than interpreting and much more complicated. Also required a huge amount of\n * memory. The goal is not to create the world's fastest parser anyway. I'd like\n * to keep this algorithm simple. By launching multiple threads, we can improve\n * the speed of parsing across a large number of files.</p>\n *\n * <p>\n * There is no strict ordering between the amount of input used by SLL vs LL,\n * which makes it really hard to build a cache for full context. Let's say that\n * we have input A B C that leads to an SLL conflict with full context X. That\n * implies that using X we might only use A B but we could also use A B C D to\n * resolve conflict. Input A B C D could predict alternative 1 in one position\n * in the input and A B C E could predict alternative 2 in another position in\n * input. The conflicting SLL configurations could still be non-unique in the\n * full context prediction, which would lead us to requiring more input than the\n * original A B C.\tTo make a\tprediction cache work, we have to track\tthe exact\n * input\tused during the previous prediction. That amounts to a cache that maps\n * X to a specific DFA for that context.</p>\n *\n * <p>\n * Something should be done for left-recursive expression predictions. They are\n * likely LL(1) + pred eval. Easier to do the whole SLL unless error and retry\n * with full LL thing Sam does.</p>\n *\n * <p>\n * <strong>AVOIDING FULL CONTEXT PREDICTION</strong></p>\n *\n * <p>\n * We avoid doing full context retry when the outer context is empty, we did not\n * dip into the outer context by falling off the end of the decision state rule,\n * or when we force SLL mode.</p>\n *\n * <p>\n * As an example of the not dip into outer context case, consider as super\n * constructor calls versus function calls. One grammar might look like\n * this:</p>\n *\n * <pre>\n * ctorBody\n *   : '{' superCall? stat* '}'\n *   ;\n * </pre>\n *\n * <p>\n * Or, you might see something like</p>\n *\n * <pre>\n * stat\n *   : superCall ';'\n *   | expression ';'\n *   | ...\n *   ;\n * </pre>\n *\n * <p>\n * In both cases I believe that no closure operations will dip into the outer\n * context. In the first case ctorBody in the worst case will stop at the '}'.\n * In the 2nd case it should stop at the ';'. Both cases should stay within the\n * entry rule and not dip into the outer context.</p>\n *\n * <p>\n * <strong>PREDICATES</strong></p>\n *\n * <p>\n * Predicates are always evaluated if present in either SLL or LL both. SLL and\n * LL simulation deals with predicates differently. SLL collects predicates as\n * it performs closure operations like ANTLR v3 did. It delays predicate\n * evaluation until it reaches and accept state. This allows us to cache the SLL\n * ATN simulation whereas, if we had evaluated predicates on-the-fly during\n * closure, the DFA state configuration sets would be different and we couldn't\n * build up a suitable DFA.</p>\n *\n * <p>\n * When building a DFA accept state during ATN simulation, we evaluate any\n * predicates and return the sole semantically valid alternative. If there is\n * more than 1 alternative, we report an ambiguity. If there are 0 alternatives,\n * we throw an exception. Alternatives without predicates act like they have\n * true predicates. The simple way to think about it is to strip away all\n * alternatives with false predicates and choose the minimum alternative that\n * remains.</p>\n *\n * <p>\n * When we start in the DFA and reach an accept state that's predicated, we test\n * those and return the minimum semantically viable alternative. If no\n * alternatives are viable, we throw an exception.</p>\n *\n * <p>\n * During full LL ATN simulation, closure always evaluates predicates and\n * on-the-fly. This is crucial to reducing the configuration set size during\n * closure. It hits a landmine when parsing with the Java grammar, for example,\n * without this on-the-fly evaluation.</p>\n *\n * <p>\n * <strong>SHARING DFA</strong></p>\n *\n * <p>\n * All instances of the same parser share the same decision DFAs through a\n * static field. Each instance gets its own ATN simulator but they share the\n * same {@link //decisionToDFA} field. They also share a\n * {@link PredictionContextCache} object that makes sure that all\n * {@link PredictionContext} objects are shared among the DFA states. This makes\n * a big size difference.</p>\n *\n * <p>\n * <strong>THREAD SAFETY</strong></p>\n *\n * <p>\n * The {@link ParserATNSimulator} locks on the {@link //decisionToDFA} field when\n * it adds a new DFA object to that array. {@link //addDFAEdge}\n * locks on the DFA for the current decision when setting the\n * {@link DFAState//edges} field. {@link //addDFAState} locks on\n * the DFA for the current decision when looking up a DFA state to see if it\n * already exists. We must make sure that all requests to add DFA states that\n * are equivalent result in the same shared DFA object. This is because lots of\n * threads will be trying to update the DFA at once. The\n * {@link //addDFAState} method also locks inside the DFA lock\n * but this time on the shared context cache when it rebuilds the\n * configurations' {@link PredictionContext} objects using cached\n * subgraphs/nodes. No other locking occurs, even during DFA simulation. This is\n * safe as long as we can guarantee that all threads referencing\n * {@code s.edge[t]} get the same physical target {@link DFAState}, or\n * {@code null}. Once into the DFA, the DFA simulation does not reference the\n * {@link DFA//states} map. It follows the {@link DFAState//edges} field to new\n * targets. The DFA simulator will either find {@link DFAState//edges} to be\n * {@code null}, to be non-{@code null} and {@code dfa.edges[t]} null, or\n * {@code dfa.edges[t]} to be non-null. The\n * {@link //addDFAEdge} method could be racing to set the field\n * but in either case the DFA simulator works; if {@code null}, and requests ATN\n * simulation. It could also race trying to get {@code dfa.edges[t]}, but either\n * way it will work because it's not doing a test and set operation.</p>\n *\n * <p>\n * <strong>Starting with SLL then failing to combined SLL/LL (Two-Stage\n * Parsing)</strong></p>\n *\n * <p>\n * Sam pointed out that if SLL does not give a syntax error, then there is no\n * point in doing full LL, which is slower. We only have to try LL if we get a\n * syntax error. For maximum speed, Sam starts the parser set to pure SLL\n * mode with the {@link BailErrorStrategy}:</p>\n *\n * <pre>\n * parser.{@link Parser//getInterpreter() getInterpreter()}.{@link //setPredictionMode setPredictionMode}{@code (}{@link PredictionMode//SLL}{@code )};\n * parser.{@link Parser//setErrorHandler setErrorHandler}(new {@link BailErrorStrategy}());\n * </pre>\n *\n * <p>\n * If it does not get a syntax error, then we're done. If it does get a syntax\n * error, we need to retry with the combined SLL/LL strategy.</p>\n *\n * <p>\n * The reason this works is as follows. If there are no SLL conflicts, then the\n * grammar is SLL (at least for that input set). If there is an SLL conflict,\n * the full LL analysis must yield a set of viable alternatives which is a\n * subset of the alternatives reported by SLL. If the LL set is a singleton,\n * then the grammar is LL but not SLL. If the LL set is the same size as the SLL\n * set, the decision is SLL. If the LL set has size &gt; 1, then that decision\n * is truly ambiguous on the current input. If the LL set is smaller, then the\n * SLL conflict resolution might choose an alternative that the full LL would\n * rule out as a possibility based upon better context information. If that's\n * the case, then the SLL parse will definitely get an error because the full LL\n * analysis says it's not viable. If SLL conflict resolution chooses an\n * alternative within the LL set, them both SLL and LL would choose the same\n * alternative because they both choose the minimum of multiple conflicting\n * alternatives.</p>\n *\n * <p>\n * Let's say we have a set of SLL conflicting alternatives {@code {1, 2, 3}} and\n * a smaller LL set called <em>s</em>. If <em>s</em> is {@code {2, 3}}, then SLL\n * parsing will get an error because SLL will pursue alternative 1. If\n * <em>s</em> is {@code {1, 2}} or {@code {1, 3}} then both SLL and LL will\n * choose the same alternative because alternative one is the minimum of either\n * set. If <em>s</em> is {@code {2}} or {@code {3}} then SLL will get a syntax\n * error. If <em>s</em> is {@code {1}} then SLL will succeed.</p>\n *\n * <p>\n * Of course, if the input is invalid, then we will get an error for sure in\n * both SLL and LL parsing. Erroneous input will therefore require 2 passes over\n * the input.</p>\n */\nexport default class ParserATNSimulator extends ATNSimulator {\n    constructor(parser, atn, decisionToDFA, sharedContextCache) {\n        super(atn, sharedContextCache);\n        this.parser = parser;\n        this.decisionToDFA = decisionToDFA;\n        // SLL, LL, or LL + exact ambig detection?//\n        this.predictionMode = PredictionMode.LL;\n        // LAME globals to avoid parameters!!!!! I need these down deep in predTransition\n        this._input = null;\n        this._startIndex = 0;\n        this._outerContext = null;\n        this._dfa = null;\n        /**\n         * Each prediction operation uses a cache for merge of prediction contexts.\n         *  Don't keep around as it wastes huge amounts of memory. DoubleKeyMap\n         *  isn't synchronized but we're ok since two threads shouldn't reuse same\n         *  parser/atnsim object because it can only handle one input at a time.\n         *  This maps graphs a and b to merged result c. (a,b)&rarr;c. We can avoid\n         *  the merge if we ever see a and b again.  Note that (b,a)&rarr;c should\n         *  also be examined during cache lookup.\n         */\n        this.mergeCache = null;\n        this.debug = false;\n        this.debug_closure = false;\n        this.debug_add = false;\n        this.trace_atn_sim = false;\n        this.dfa_debug = false;\n        this.retry_debug = false;\n    }\n\n    reset() {}\n\n    adaptivePredict(input, decision, outerContext) {\n        if (this.debug || this.trace_atn_sim) {\n            console.log(\"adaptivePredict decision \" + decision +\n                                   \" exec LA(1)==\" + this.getLookaheadName(input) +\n                                   \" line \" + input.LT(1).line + \":\" +\n                                   input.LT(1).column);\n        }\n        this._input = input;\n        this._startIndex = input.index;\n        this._outerContext = outerContext;\n\n        const dfa = this.decisionToDFA[decision];\n        this._dfa = dfa;\n        const m = input.mark();\n        const index = input.index;\n\n        // Now we are certain to have a specific decision's DFA\n        // But, do we still need an initial state?\n        try {\n            let s0;\n            if (dfa.precedenceDfa) {\n                // the start state for a precedence DFA depends on the current\n                // parser precedence, and is provided by a DFA method.\n                s0 = dfa.getPrecedenceStartState(this.parser.getPrecedence());\n            } else {\n                // the start state for a \"regular\" DFA is just s0\n                s0 = dfa.s0;\n            }\n            if (s0===null) {\n                if (outerContext===null) {\n                    outerContext = RuleContext.EMPTY;\n                }\n                if (this.debug ) {\n                    console.log(\"predictATN decision \" + dfa.decision +\n                                       \" exec LA(1)==\" + this.getLookaheadName(input) +\n                                       \", outerContext=\" + outerContext.toString(this.parser.ruleNames));\n                }\n\n                const fullCtx = false;\n                let s0_closure = this.computeStartState(dfa.atnStartState, RuleContext.EMPTY, fullCtx);\n\n                if( dfa.precedenceDfa) {\n                    // If this is a precedence DFA, we use applyPrecedenceFilter\n                    // to convert the computed start state to a precedence start\n                    // state. We then use DFA.setPrecedenceStartState to set the\n                    // appropriate start state for the precedence level rather\n                    // than simply setting DFA.s0.\n                    //\n                    dfa.s0.configs = s0_closure; // not used for prediction but useful to know start configs anyway\n                    s0_closure = this.applyPrecedenceFilter(s0_closure);\n                    s0 = this.addDFAState(dfa, new DFAState(null, s0_closure));\n                    dfa.setPrecedenceStartState(this.parser.getPrecedence(), s0);\n                } else {\n                    s0 = this.addDFAState(dfa, new DFAState(null, s0_closure));\n                    dfa.s0 = s0;\n                }\n            }\n            const alt = this.execATN(dfa, s0, input, index, outerContext);\n            if (this.debug) {\n                console.log(\"DFA after predictATN: \" + dfa.toString(this.parser.literalNames, this.parser.symbolicNames));\n            }\n            return alt;\n        } finally {\n            this._dfa = null;\n            this.mergeCache = null; // wack cache after each prediction\n            input.seek(index);\n            input.release(m);\n        }\n    }\n\n    /**\n     * Performs ATN simulation to compute a predicted alternative based\n     *  upon the remaining input, but also updates the DFA cache to avoid\n     *  having to traverse the ATN again for the same input sequence.\n     *\n     * There are some key conditions we're looking for after computing a new\n     * set of ATN configs (proposed DFA state):\n     *       if the set is empty, there is no viable alternative for current symbol\n     *       does the state uniquely predict an alternative?\n     *       does the state have a conflict that would prevent us from\n     *         putting it on the work list?\n     *\n     * We also have some key operations to do:\n     *       add an edge from previous DFA state to potentially new DFA state, D,\n     *         upon current symbol but only if adding to work list, which means in all\n     *         cases except no viable alternative (and possibly non-greedy decisions?)\n     *       collecting predicates and adding semantic context to DFA accept states\n     *       adding rule context to context-sensitive DFA accept states\n     *       consuming an input symbol\n     *       reporting a conflict\n     *       reporting an ambiguity\n     *       reporting a context sensitivity\n     *       reporting insufficient predicates\n     *\n     * cover these cases:\n     *    dead end\n     *    single alt\n     *    single alt + preds\n     *    conflict\n     *    conflict + preds\n     *\n     */\n    execATN(dfa, s0, input, startIndex, outerContext ) {\n        if (this.debug || this.trace_atn_sim) {\n            console.log(\"execATN decision \" + dfa.decision +\n                        \", DFA state \" + s0 +\n                        \", LA(1)==\" + this.getLookaheadName(input) +\n                        \" line \" + input.LT(1).line + \":\" + input.LT(1).column);\n        }\n        let alt;\n        let previousD = s0;\n\n        if (this.debug) {\n            console.log(\"s0 = \" + s0);\n        }\n        let t = input.LA(1);\n        for(;;) { // while more work\n            let D = this.getExistingTargetState(previousD, t);\n            if(D===null) {\n                D = this.computeTargetState(dfa, previousD, t);\n            }\n            if(D===ATNSimulator.ERROR) {\n                // if any configs in previous dipped into outer context, that\n                // means that input up to t actually finished entry rule\n                // at least for SLL decision. Full LL doesn't dip into outer\n                // so don't need special case.\n                // We will get an error no matter what so delay until after\n                // decision; better error message. Also, no reachable target\n                // ATN states in SLL implies LL will also get nowhere.\n                // If conflict in states that dip out, choose min since we\n                // will get error no matter what.\n                const e = this.noViableAlt(input, outerContext, previousD.configs, startIndex);\n                input.seek(startIndex);\n                alt = this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(previousD.configs, outerContext);\n                if(alt!==ATN.INVALID_ALT_NUMBER) {\n                    return alt;\n                } else {\n                    throw e;\n                }\n            }\n            if(D.requiresFullContext && this.predictionMode !== PredictionMode.SLL) {\n                // IF PREDS, MIGHT RESOLVE TO SINGLE ALT => SLL (or syntax error)\n                let conflictingAlts = null;\n                if (D.predicates!==null) {\n                    if (this.debug) {\n                        console.log(\"DFA state has preds in DFA sim LL failover\");\n                    }\n                    const conflictIndex = input.index;\n                    if(conflictIndex !== startIndex) {\n                        input.seek(startIndex);\n                    }\n                    conflictingAlts = this.evalSemanticContext(D.predicates, outerContext, true);\n                    if (conflictingAlts.length===1) {\n                        if(this.debug) {\n                            console.log(\"Full LL avoided\");\n                        }\n                        return conflictingAlts.minValue();\n                    }\n                    if (conflictIndex !== startIndex) {\n                        // restore the index so reporting the fallback to full\n                        // context occurs with the index at the correct spot\n                        input.seek(conflictIndex);\n                    }\n                }\n                if (this.dfa_debug) {\n                    console.log(\"ctx sensitive state \" + outerContext +\" in \" + D);\n                }\n                const fullCtx = true;\n                const s0_closure = this.computeStartState(dfa.atnStartState, outerContext, fullCtx);\n                this.reportAttemptingFullContext(dfa, conflictingAlts, D.configs, startIndex, input.index);\n                alt = this.execATNWithFullContext(dfa, D, s0_closure, input, startIndex, outerContext);\n                return alt;\n            }\n            if (D.isAcceptState) {\n                if (D.predicates===null) {\n                    return D.prediction;\n                }\n                const stopIndex = input.index;\n                input.seek(startIndex);\n                const alts = this.evalSemanticContext(D.predicates, outerContext, true);\n                if (alts.length===0) {\n                    throw this.noViableAlt(input, outerContext, D.configs, startIndex);\n                } else if (alts.length===1) {\n                    return alts.minValue();\n                } else {\n                    // report ambiguity after predicate evaluation to make sure the correct set of ambig alts is reported.\n                    this.reportAmbiguity(dfa, D, startIndex, stopIndex, false, alts, D.configs);\n                    return alts.minValue();\n                }\n            }\n            previousD = D;\n\n            if (t !== Token.EOF) {\n                input.consume();\n                t = input.LA(1);\n            }\n        }\n    }\n\n    /**\n     * Get an existing target state for an edge in the DFA. If the target state\n     * for the edge has not yet been computed or is otherwise not available,\n     * this method returns {@code null}.\n     *\n     * @param previousD The current DFA state\n     * @param t The next input symbol\n     * @return The existing target DFA state for the given input symbol\n     * {@code t}, or {@code null} if the target state for this edge is not\n     * already cached\n     */\n    getExistingTargetState(previousD, t) {\n        const edges = previousD.edges;\n        if (edges===null) {\n            return null;\n        } else {\n            return edges[t + 1] || null;\n        }\n    }\n\n    /**\n     * Compute a target state for an edge in the DFA, and attempt to add the\n     * computed state and corresponding edge to the DFA.\n     *\n     * @param dfa The DFA\n     * @param previousD The current DFA state\n     * @param t The next input symbol\n     *\n     * @return The computed target DFA state for the given input symbol\n     * {@code t}. If {@code t} does not lead to a valid DFA state, this method\n     * returns {@link //ERROR\n     */\n    computeTargetState(dfa, previousD, t) {\n       const reach = this.computeReachSet(previousD.configs, t, false);\n        if(reach===null) {\n            this.addDFAEdge(dfa, previousD, t, ATNSimulator.ERROR);\n            return ATNSimulator.ERROR;\n        }\n        // create new target state; we'll add to DFA after it's complete\n        let D = new DFAState(null, reach);\n\n        const predictedAlt = this.getUniqueAlt(reach);\n\n        if (this.debug) {\n            const altSubSets = PredictionMode.getConflictingAltSubsets(reach);\n            console.log(\"SLL altSubSets=\" + arrayToString(altSubSets) +\n                        /*\", previous=\" + previousD.configs + */\n                        \", configs=\" + reach +\n                        \", predict=\" + predictedAlt +\n                        \", allSubsetsConflict=\" +\n                        PredictionMode.allSubsetsConflict(altSubSets) + \", conflictingAlts=\" +\n                        this.getConflictingAlts(reach));\n        }\n        if (predictedAlt!==ATN.INVALID_ALT_NUMBER) {\n            // NO CONFLICT, UNIQUELY PREDICTED ALT\n            D.isAcceptState = true;\n            D.configs.uniqueAlt = predictedAlt;\n            D.prediction = predictedAlt;\n        } else if (PredictionMode.hasSLLConflictTerminatingPrediction(this.predictionMode, reach)) {\n            // MORE THAN ONE VIABLE ALTERNATIVE\n            D.configs.conflictingAlts = this.getConflictingAlts(reach);\n            D.requiresFullContext = true;\n            // in SLL-only mode, we will stop at this state and return the minimum alt\n            D.isAcceptState = true;\n            D.prediction = D.configs.conflictingAlts.minValue();\n        }\n        if (D.isAcceptState && D.configs.hasSemanticContext) {\n            this.predicateDFAState(D, this.atn.getDecisionState(dfa.decision));\n            if( D.predicates!==null) {\n                D.prediction = ATN.INVALID_ALT_NUMBER;\n            }\n        }\n        // all adds to dfa are done after we've created full D state\n        D = this.addDFAEdge(dfa, previousD, t, D);\n        return D;\n    }\n\n    predicateDFAState(dfaState, decisionState) {\n        // We need to test all predicates, even in DFA states that\n        // uniquely predict alternative.\n        const nalts = decisionState.transitions.length;\n        // Update DFA so reach becomes accept state with (predicate,alt)\n        // pairs if preds found for conflicting alts\n        const altsToCollectPredsFrom = this.getConflictingAltsOrUniqueAlt(dfaState.configs);\n        const altToPred = this.getPredsForAmbigAlts(altsToCollectPredsFrom, dfaState.configs, nalts);\n        if (altToPred!==null) {\n            dfaState.predicates = this.getPredicatePredictions(altsToCollectPredsFrom, altToPred);\n            dfaState.prediction = ATN.INVALID_ALT_NUMBER; // make sure we use preds\n        } else {\n            // There are preds in configs but they might go away\n            // when OR'd together like {p}? || NONE == NONE. If neither\n            // alt has preds, resolve to min alt\n            dfaState.prediction = altsToCollectPredsFrom.minValue();\n        }\n    }\n\n// comes back with reach.uniqueAlt set to a valid alt\n    execATNWithFullContext(dfa, D, // how far we got before failing over\n                                         s0,\n                                         input,\n                                         startIndex,\n                                         outerContext) {\n        if (this.debug || this.trace_atn_sim) {\n            console.log(\"execATNWithFullContext \"+s0);\n        }\n        const fullCtx = true;\n        let foundExactAmbig = false;\n        let reach;\n        let previous = s0;\n        input.seek(startIndex);\n        let t = input.LA(1);\n        let predictedAlt = -1;\n        for (;;) { // while more work\n            reach = this.computeReachSet(previous, t, fullCtx);\n            if (reach===null) {\n                // if any configs in previous dipped into outer context, that\n                // means that input up to t actually finished entry rule\n                // at least for LL decision. Full LL doesn't dip into outer\n                // so don't need special case.\n                // We will get an error no matter what so delay until after\n                // decision; better error message. Also, no reachable target\n                // ATN states in SLL implies LL will also get nowhere.\n                // If conflict in states that dip out, choose min since we\n                // will get error no matter what.\n                const e = this.noViableAlt(input, outerContext, previous, startIndex);\n                input.seek(startIndex);\n                const alt = this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(previous, outerContext);\n                if(alt!==ATN.INVALID_ALT_NUMBER) {\n                    return alt;\n                } else {\n                    throw e;\n                }\n            }\n            const altSubSets = PredictionMode.getConflictingAltSubsets(reach);\n            if(this.debug) {\n                console.log(\"LL altSubSets=\" + altSubSets + \", predict=\" +\n                      PredictionMode.getUniqueAlt(altSubSets) + \", resolvesToJustOneViableAlt=\" +\n                      PredictionMode.resolvesToJustOneViableAlt(altSubSets));\n            }\n            reach.uniqueAlt = this.getUniqueAlt(reach);\n            // unique prediction?\n            if(reach.uniqueAlt!==ATN.INVALID_ALT_NUMBER) {\n                predictedAlt = reach.uniqueAlt;\n                break;\n            } else if (this.predictionMode !== PredictionMode.LL_EXACT_AMBIG_DETECTION) {\n                predictedAlt = PredictionMode.resolvesToJustOneViableAlt(altSubSets);\n                if(predictedAlt !== ATN.INVALID_ALT_NUMBER) {\n                    break;\n                }\n            } else {\n                // In exact ambiguity mode, we never try to terminate early.\n                // Just keeps scarfing until we know what the conflict is\n                if (PredictionMode.allSubsetsConflict(altSubSets) && PredictionMode.allSubsetsEqual(altSubSets)) {\n                    foundExactAmbig = true;\n                    predictedAlt = PredictionMode.getSingleViableAlt(altSubSets);\n                    break;\n                }\n                // else there are multiple non-conflicting subsets or\n                // we're not sure what the ambiguity is yet.\n                // So, keep going.\n            }\n            previous = reach;\n            if( t !== Token.EOF) {\n                input.consume();\n                t = input.LA(1);\n            }\n        }\n        // If the configuration set uniquely predicts an alternative,\n        // without conflict, then we know that it's a full LL decision\n        // not SLL.\n        if (reach.uniqueAlt !== ATN.INVALID_ALT_NUMBER ) {\n            this.reportContextSensitivity(dfa, predictedAlt, reach, startIndex, input.index);\n            return predictedAlt;\n        }\n        // We do not check predicates here because we have checked them\n        // on-the-fly when doing full context prediction.\n\n        //\n        // In non-exact ambiguity detection mode, we might\tactually be able to\n        // detect an exact ambiguity, but I'm not going to spend the cycles\n        // needed to check. We only emit ambiguity warnings in exact ambiguity\n        // mode.\n        //\n        // For example, we might know that we have conflicting configurations.\n        // But, that does not mean that there is no way forward without a\n        // conflict. It's possible to have nonconflicting alt subsets as in:\n\n        // altSubSets=[{1, 2}, {1, 2}, {1}, {1, 2}]\n\n        // from\n        //\n        //    [(17,1,[5 $]), (13,1,[5 10 $]), (21,1,[5 10 $]), (11,1,[$]),\n        //     (13,2,[5 10 $]), (21,2,[5 10 $]), (11,2,[$])]\n        //\n        // In this case, (17,1,[5 $]) indicates there is some next sequence that\n        // would resolve this without conflict to alternative 1. Any other viable\n        // next sequence, however, is associated with a conflict.  We stop\n        // looking for input because no amount of further lookahead will alter\n        // the fact that we should predict alternative 1.  We just can't say for\n        // sure that there is an ambiguity without looking further.\n\n        this.reportAmbiguity(dfa, D, startIndex, input.index, foundExactAmbig, null, reach);\n\n        return predictedAlt;\n    }\n\n    computeReachSet(closure, t, fullCtx) {\n        if (this.debug) {\n            console.log(\"in computeReachSet, starting closure: \" + closure);\n        }\n        if( this.mergeCache===null) {\n            this.mergeCache = new DoubleDict();\n        }\n        const intermediate = new ATNConfigSet(fullCtx);\n\n        // Configurations already in a rule stop state indicate reaching the end\n        // of the decision rule (local context) or end of the start rule (full\n        // context). Once reached, these configurations are never updated by a\n        // closure operation, so they are handled separately for the performance\n        // advantage of having a smaller intermediate set when calling closure.\n        //\n        // For full-context reach operations, separate handling is required to\n        // ensure that the alternative matching the longest overall sequence is\n        // chosen when multiple such configurations can match the input.\n\n        let skippedStopStates = null;\n\n        // First figure out where we can reach on input t\n        for (let i=0; i<closure.items.length;i++) {\n            const c = closure.items[i];\n            if(this.debug) {\n                console.log(\"testing \" + this.getTokenName(t) + \" at \" + c);\n            }\n            if (c.state instanceof RuleStopState) {\n                if (fullCtx || t === Token.EOF) {\n                    if (skippedStopStates===null) {\n                        skippedStopStates = [];\n                    }\n                    skippedStopStates.push(c);\n                    if(this.debug_add) {\n                        console.log(\"added \" + c + \" to skippedStopStates\");\n                    }\n                }\n                continue;\n            }\n            for(let j=0;j<c.state.transitions.length;j++) {\n                const trans = c.state.transitions[j];\n                const target = this.getReachableTarget(trans, t);\n                if (target!==null) {\n                    const cfg = new ATNConfig({state:target}, c);\n                    intermediate.add(cfg, this.mergeCache);\n                    if(this.debug_add) {\n                        console.log(\"added \" + cfg + \" to intermediate\");\n                    }\n                }\n            }\n        }\n        // Now figure out where the reach operation can take us...\n        let reach = null;\n\n        // This block optimizes the reach operation for intermediate sets which\n        // trivially indicate a termination state for the overall\n        // adaptivePredict operation.\n        //\n        // The conditions assume that intermediate\n        // contains all configurations relevant to the reach set, but this\n        // condition is not true when one or more configurations have been\n        // withheld in skippedStopStates, or when the current symbol is EOF.\n        //\n        if (skippedStopStates===null && t!==Token.EOF) {\n            if (intermediate.items.length===1) {\n                // Don't pursue the closure if there is just one state.\n                // It can only have one alternative; just add to result\n                // Also don't pursue the closure if there is unique alternative\n                // among the configurations.\n                reach = intermediate;\n            } else if (this.getUniqueAlt(intermediate)!==ATN.INVALID_ALT_NUMBER) {\n                // Also don't pursue the closure if there is unique alternative\n                // among the configurations.\n                reach = intermediate;\n            }\n        }\n        // If the reach set could not be trivially determined, perform a closure\n        // operation on the intermediate set to compute its initial value.\n        //\n        if (reach===null) {\n            reach = new ATNConfigSet(fullCtx);\n            const closureBusy = new HashSet();\n            const treatEofAsEpsilon = t === Token.EOF;\n            for (let k=0; k<intermediate.items.length;k++) {\n                this.closure(intermediate.items[k], reach, closureBusy, false, fullCtx, treatEofAsEpsilon);\n            }\n        }\n        if (t === Token.EOF) {\n            // After consuming EOF no additional input is possible, so we are\n            // only interested in configurations which reached the end of the\n            // decision rule (local context) or end of the start rule (full\n            // context). Update reach to contain only these configurations. This\n            // handles both explicit EOF transitions in the grammar and implicit\n            // EOF transitions following the end of the decision or start rule.\n            //\n            // When reach==intermediate, no closure operation was performed. In\n            // this case, removeAllConfigsNotInRuleStopState needs to check for\n            // reachable rule stop states as well as configurations already in\n            // a rule stop state.\n            //\n            // This is handled before the configurations in skippedStopStates,\n            // because any configurations potentially added from that list are\n            // already guaranteed to meet this condition whether or not it's\n            // required.\n            //\n            reach = this.removeAllConfigsNotInRuleStopState(reach, reach === intermediate);\n        }\n        // If skippedStopStates!==null, then it contains at least one\n        // configuration. For full-context reach operations, these\n        // configurations reached the end of the start rule, in which case we\n        // only add them back to reach if no configuration during the current\n        // closure operation reached such a state. This ensures adaptivePredict\n        // chooses an alternative matching the longest overall sequence when\n        // multiple alternatives are viable.\n        //\n        if (skippedStopStates!==null && ( (! fullCtx) || (! PredictionMode.hasConfigInRuleStopState(reach)))) {\n            for (let l=0; l<skippedStopStates.length;l++) {\n                reach.add(skippedStopStates[l], this.mergeCache);\n            }\n        }\n\n        if ( this.trace_atn_sim ) {\n            console.log(\"computeReachSet \"+closure+\" -> \"+reach);\n        }\n\n        if (reach.items.length===0) {\n            return null;\n        } else {\n            return reach;\n        }\n    }\n\n    /**\n     * Return a configuration set containing only the configurations from\n     * {@code configs} which are in a {@link RuleStopState}. If all\n     * configurations in {@code configs} are already in a rule stop state, this\n     * method simply returns {@code configs}.\n     *\n     * <p>When {@code lookToEndOfRule} is true, this method uses\n     * {@link ATN//nextTokens} for each configuration in {@code configs} which is\n     * not already in a rule stop state to see if a rule stop state is reachable\n     * from the configuration via epsilon-only transitions.</p>\n     *\n     * @param configs the configuration set to update\n     * @param lookToEndOfRule when true, this method checks for rule stop states\n     * reachable by epsilon-only transitions from each configuration in\n     * {@code configs}.\n     *\n     * @return {@code configs} if all configurations in {@code configs} are in a\n     * rule stop state, otherwise return a new configuration set containing only\n     * the configurations from {@code configs} which are in a rule stop state\n     */\n    removeAllConfigsNotInRuleStopState(configs, lookToEndOfRule) {\n        if (PredictionMode.allConfigsInRuleStopStates(configs)) {\n            return configs;\n        }\n        const result = new ATNConfigSet(configs.fullCtx);\n        for(let i=0; i<configs.items.length;i++) {\n            const config = configs.items[i];\n            if (config.state instanceof RuleStopState) {\n                result.add(config, this.mergeCache);\n                continue;\n            }\n            if (lookToEndOfRule && config.state.epsilonOnlyTransitions) {\n                const nextTokens = this.atn.nextTokens(config.state);\n                if (nextTokens.contains(Token.EPSILON)) {\n                    const endOfRuleState = this.atn.ruleToStopState[config.state.ruleIndex];\n                    result.add(new ATNConfig({state:endOfRuleState}, config), this.mergeCache);\n                }\n            }\n        }\n        return result;\n    }\n\n    computeStartState(p, ctx, fullCtx) {\n        // always at least the implicit call to start rule\n        const initialContext = predictionContextFromRuleContext(this.atn, ctx);\n        const configs = new ATNConfigSet(fullCtx);\n\n        if ( this.trace_atn_sim ) {\n            console.log(\"computeStartState from ATN state \" + p + \" initialContext=\" + initialContext.toString(this.parser));\n        }\n\n        for(let i=0;i<p.transitions.length;i++) {\n            const target = p.transitions[i].target;\n            const c = new ATNConfig({ state:target, alt:i+1, context:initialContext }, null);\n            const closureBusy = new HashSet();\n            this.closure(c, configs, closureBusy, true, fullCtx, false);\n        }\n        return configs;\n    }\n\n    /**\n     * This method transforms the start state computed by\n     * {@link //computeStartState} to the special start state used by a\n     * precedence DFA for a particular precedence value. The transformation\n     * process applies the following changes to the start state's configuration\n     * set.\n     *\n     * <ol>\n     * <li>Evaluate the precedence predicates for each configuration using\n     * {@link SemanticContext//evalPrecedence}.</li>\n     * <li>Remove all configurations which predict an alternative greater than\n     * 1, for which another configuration that predicts alternative 1 is in the\n     * same ATN state with the same prediction context. This transformation is\n     * valid for the following reasons:\n     * <ul>\n     * <li>The closure block cannot contain any epsilon transitions which bypass\n     * the body of the closure, so all states reachable via alternative 1 are\n     * part of the precedence alternatives of the transformed left-recursive\n     * rule.</li>\n     * <li>The \"primary\" portion of a left recursive rule cannot contain an\n     * epsilon transition, so the only way an alternative other than 1 can exist\n     * in a state that is also reachable via alternative 1 is by nesting calls\n     * to the left-recursive rule, with the outer calls not being at the\n     * preferred precedence level.</li>\n     * </ul>\n     * </li>\n     * </ol>\n     *\n     * <p>\n     * The prediction context must be considered by this filter to address\n     * situations like the following.\n     * </p>\n     * <code>\n     * <pre>\n     * grammar TA;\n     * prog: statement* EOF;\n     * statement: letterA | statement letterA 'b' ;\n     * letterA: 'a';\n     * </pre>\n     * </code>\n     * <p>\n     * If the above grammar, the ATN state immediately before the token\n     * reference {@code 'a'} in {@code letterA} is reachable from the left edge\n     * of both the primary and closure blocks of the left-recursive rule\n     * {@code statement}. The prediction context associated with each of these\n     * configurations distinguishes between them, and prevents the alternative\n     * which stepped out to {@code prog} (and then back in to {@code statement}\n     * from being eliminated by the filter.\n     * </p>\n     *\n     * @param configs The configuration set computed by\n     * {@link //computeStartState} as the start state for the DFA.\n     * @return The transformed configuration set representing the start state\n     * for a precedence DFA at a particular precedence level (determined by\n     * calling {@link Parser//getPrecedence})\n     */\n    applyPrecedenceFilter(configs) {\n        let config;\n        const statesFromAlt1 = [];\n        const configSet = new ATNConfigSet(configs.fullCtx);\n        for(let i=0; i<configs.items.length; i++) {\n            config = configs.items[i];\n            // handle alt 1 first\n            if (config.alt !== 1) {\n                continue;\n            }\n            const updatedContext = config.semanticContext.evalPrecedence(this.parser, this._outerContext);\n            if (updatedContext===null) {\n                // the configuration was eliminated\n                continue;\n            }\n            statesFromAlt1[config.state.stateNumber] = config.context;\n            if (updatedContext !== config.semanticContext) {\n                configSet.add(new ATNConfig({semanticContext:updatedContext}, config), this.mergeCache);\n            } else {\n                configSet.add(config, this.mergeCache);\n            }\n        }\n        for(let i=0; i<configs.items.length; i++) {\n            config = configs.items[i];\n            if (config.alt === 1) {\n                // already handled\n                continue;\n            }\n            // In the future, this elimination step could be updated to also\n            // filter the prediction context for alternatives predicting alt>1\n            // (basically a graph subtraction algorithm).\n            if (!config.precedenceFilterSuppressed) {\n                const context = statesFromAlt1[config.state.stateNumber] || null;\n                if (context!==null && context.equals(config.context)) {\n                    // eliminated\n                    continue;\n                }\n            }\n            configSet.add(config, this.mergeCache);\n        }\n        return configSet;\n    }\n\n    getReachableTarget(trans, ttype) {\n        if (trans.matches(ttype, 0, this.atn.maxTokenType)) {\n            return trans.target;\n        } else {\n            return null;\n        }\n    }\n\n    getPredsForAmbigAlts(ambigAlts, configs, nalts) {\n        // REACH=[1|1|[]|0:0, 1|2|[]|0:1]\n        // altToPred starts as an array of all null contexts. The entry at index i\n        // corresponds to alternative i. altToPred[i] may have one of three values:\n        //   1. null: no ATNConfig c is found such that c.alt==i\n        //   2. SemanticContext.NONE: At least one ATNConfig c exists such that\n        //      c.alt==i and c.semanticContext==SemanticContext.NONE. In other words,\n        //      alt i has at least one unpredicated config.\n        //   3. Non-NONE Semantic Context: There exists at least one, and for all\n        //      ATNConfig c such that c.alt==i, c.semanticContext!=SemanticContext.NONE.\n        //\n        // From this, it is clear that NONE||anything==NONE.\n        //\n        let altToPred = [];\n        for(let i=0;i<configs.items.length;i++) {\n            const c = configs.items[i];\n            if(ambigAlts.get( c.alt )) {\n                altToPred[c.alt] = SemanticContext.orContext(altToPred[c.alt] || null, c.semanticContext);\n            }\n        }\n        let nPredAlts = 0;\n        for (let i =1;i< nalts+1;i++) {\n            const pred = altToPred[i] || null;\n            if (pred===null) {\n                altToPred[i] = SemanticContext.NONE;\n            } else if (pred !== SemanticContext.NONE) {\n                nPredAlts += 1;\n            }\n        }\n        // nonambig alts are null in altToPred\n        if (nPredAlts===0) {\n            altToPred = null;\n        }\n        if (this.debug) {\n            console.log(\"getPredsForAmbigAlts result \" + arrayToString(altToPred));\n        }\n        return altToPred;\n    }\n\n    getPredicatePredictions(ambigAlts, altToPred) {\n        const pairs = [];\n        let containsPredicate = false;\n        for (let i=1; i<altToPred.length;i++) {\n            const pred = altToPred[i];\n            // unpredicated is indicated by SemanticContext.NONE\n            if( ambigAlts!==null && ambigAlts.get( i )) {\n                pairs.push(new PredPrediction(pred, i));\n            }\n            if (pred !== SemanticContext.NONE) {\n                containsPredicate = true;\n            }\n        }\n        if (! containsPredicate) {\n            return null;\n        }\n        return pairs;\n    }\n\n    /**\n     * This method is used to improve the localization of error messages by\n     * choosing an alternative rather than throwing a\n     * {@link NoViableAltException} in particular prediction scenarios where the\n     * {@link //ERROR} state was reached during ATN simulation.\n     *\n     * <p>\n     * The default implementation of this method uses the following\n     * algorithm to identify an ATN configuration which successfully parsed the\n     * decision entry rule. Choosing such an alternative ensures that the\n     * {@link ParserRuleContext} returned by the calling rule will be complete\n     * and valid, and the syntax error will be reported later at a more\n     * localized location.</p>\n     *\n     * <ul>\n     * <li>If a syntactically valid path or paths reach the end of the decision rule and\n     * they are semantically valid if predicated, return the min associated alt.</li>\n     * <li>Else, if a semantically invalid but syntactically valid path exist\n     * or paths exist, return the minimum associated alt.\n     * </li>\n     * <li>Otherwise, return {@link ATN//INVALID_ALT_NUMBER}.</li>\n     * </ul>\n     *\n     * <p>\n     * In some scenarios, the algorithm described above could predict an\n     * alternative which will result in a {@link FailedPredicateException} in\n     * the parser. Specifically, this could occur if the <em>only</em> configuration\n     * capable of successfully parsing to the end of the decision rule is\n     * blocked by a semantic predicate. By choosing this alternative within\n     * {@link //adaptivePredict} instead of throwing a\n     * {@link NoViableAltException}, the resulting\n     * {@link FailedPredicateException} in the parser will identify the specific\n     * predicate which is preventing the parser from successfully parsing the\n     * decision rule, which helps developers identify and correct logic errors\n     * in semantic predicates.\n     * </p>\n     *\n     * @param configs The ATN configurations which were valid immediately before\n     * the {@link //ERROR} state was reached\n     * @param outerContext The is the \\gamma_0 initial parser context from the paper\n     * or the parser stack at the instant before prediction commences.\n     *\n     * @return The value to return from {@link //adaptivePredict}, or\n     * {@link ATN//INVALID_ALT_NUMBER} if a suitable alternative was not\n     * identified and {@link //adaptivePredict} should report an error instead\n     */\n    getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(configs, outerContext) {\n        const cfgs = this.splitAccordingToSemanticValidity(configs, outerContext);\n        const semValidConfigs = cfgs[0];\n        const semInvalidConfigs = cfgs[1];\n        let alt = this.getAltThatFinishedDecisionEntryRule(semValidConfigs);\n        if (alt!==ATN.INVALID_ALT_NUMBER) { // semantically/syntactically viable path exists\n            return alt;\n        }\n        // Is there a syntactically valid path with a failed pred?\n        if (semInvalidConfigs.items.length>0) {\n            alt = this.getAltThatFinishedDecisionEntryRule(semInvalidConfigs);\n            if (alt!==ATN.INVALID_ALT_NUMBER) { // syntactically viable path exists\n                return alt;\n            }\n        }\n        return ATN.INVALID_ALT_NUMBER;\n    }\n\n    getAltThatFinishedDecisionEntryRule(configs) {\n        const alts = [];\n        for(let i=0;i<configs.items.length; i++) {\n            const c = configs.items[i];\n            if (c.reachesIntoOuterContext>0 || ((c.state instanceof RuleStopState) && c.context.hasEmptyPath())) {\n                if(alts.indexOf(c.alt)<0) {\n                    alts.push(c.alt);\n                }\n            }\n        }\n        if (alts.length===0) {\n            return ATN.INVALID_ALT_NUMBER;\n        } else {\n            return Math.min.apply(null, alts);\n        }\n    }\n\n    /**\n     * Walk the list of configurations and split them according to\n     * those that have preds evaluating to true/false.  If no pred, assume\n     * true pred and include in succeeded set.  Returns Pair of sets.\n     *\n     * Create a new set so as not to alter the incoming parameter.\n     *\n     * Assumption: the input stream has been restored to the starting point\n     * prediction, which is where predicates need to evaluate.*/\n    splitAccordingToSemanticValidity( configs, outerContext) {\n        const succeeded = new ATNConfigSet(configs.fullCtx);\n        const failed = new ATNConfigSet(configs.fullCtx);\n        for(let i=0;i<configs.items.length; i++) {\n            const c = configs.items[i];\n            if (c.semanticContext !== SemanticContext.NONE) {\n                const predicateEvaluationResult = c.semanticContext.evaluate(this.parser, outerContext);\n                if (predicateEvaluationResult) {\n                    succeeded.add(c);\n                } else {\n                    failed.add(c);\n                }\n            } else {\n                succeeded.add(c);\n            }\n        }\n        return [succeeded, failed];\n    }\n\n    /**\n     * Look through a list of predicate/alt pairs, returning alts for the\n     * pairs that win. A {@code NONE} predicate indicates an alt containing an\n     * unpredicated config which behaves as \"always true.\" If !complete\n     * then we stop at the first predicate that evaluates to true. This\n     * includes pairs with null predicates.\n     */\n    evalSemanticContext(predPredictions, outerContext, complete) {\n        const predictions = new BitSet();\n        for(let i=0;i<predPredictions.length;i++) {\n            const pair = predPredictions[i];\n            if (pair.pred === SemanticContext.NONE) {\n                predictions.set(pair.alt);\n                if (! complete) {\n                    break;\n                }\n                continue;\n            }\n            const predicateEvaluationResult = pair.pred.evaluate(this.parser, outerContext);\n            if (this.debug || this.dfa_debug) {\n                console.log(\"eval pred \" + pair + \"=\" + predicateEvaluationResult);\n            }\n            if (predicateEvaluationResult) {\n                if (this.debug || this.dfa_debug) {\n                    console.log(\"PREDICT \" + pair.alt);\n                }\n                predictions.set(pair.alt);\n                if (! complete) {\n                    break;\n                }\n            }\n        }\n        return predictions;\n    }\n\n// TODO: If we are doing predicates, there is no point in pursuing\n//     closure operations if we reach a DFA state that uniquely predicts\n//     alternative. We will not be caching that DFA state and it is a\n//     waste to pursue the closure. Might have to advance when we do\n//     ambig detection thought :(\n//\n    closure(config, configs, closureBusy, collectPredicates, fullCtx, treatEofAsEpsilon) {\n        const initialDepth = 0;\n        this.closureCheckingStopState(config, configs, closureBusy, collectPredicates,\n                                 fullCtx, initialDepth, treatEofAsEpsilon);\n    }\n\n    closureCheckingStopState(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon) {\n        if (this.trace_atn_sim || this.debug_closure) {\n            console.log(\"closure(\" + config.toString(this.parser,true) + \")\");\n        }\n        if (config.state instanceof RuleStopState) {\n            // We hit rule end. If we have context info, use it\n            // run thru all possible stack tops in ctx\n            if (! config.context.isEmpty()) {\n                for (let i =0; i<config.context.length; i++) {\n                    if (config.context.getReturnState(i) === PredictionContext.EMPTY_RETURN_STATE) {\n                        if (fullCtx) {\n                            configs.add(new ATNConfig({state:config.state, context:PredictionContext.EMPTY}, config), this.mergeCache);\n                            continue;\n                        } else {\n                            // we have no context info, just chase follow links (if greedy)\n                            if (this.debug) {\n                                console.log(\"FALLING off rule \" + this.getRuleName(config.state.ruleIndex));\n                            }\n                            this.closure_(config, configs, closureBusy, collectPredicates,\n                                     fullCtx, depth, treatEofAsEpsilon);\n                        }\n                        continue;\n                    }\n                    const returnState = this.atn.states[config.context.getReturnState(i)];\n                    const newContext = config.context.getParent(i); // \"pop\" return state\n                    const parms = {state:returnState, alt:config.alt, context:newContext, semanticContext:config.semanticContext};\n                    const c = new ATNConfig(parms, null);\n                    // While we have context to pop back from, we may have\n                    // gotten that context AFTER having falling off a rule.\n                    // Make sure we track that we are now out of context.\n                    c.reachesIntoOuterContext = config.reachesIntoOuterContext;\n                    this.closureCheckingStopState(c, configs, closureBusy, collectPredicates, fullCtx, depth - 1, treatEofAsEpsilon);\n                }\n                return;\n            } else if( fullCtx) {\n                // reached end of start rule\n                configs.add(config, this.mergeCache);\n                return;\n            } else {\n                // else if we have no context info, just chase follow links (if greedy)\n                if (this.debug) {\n                    console.log(\"FALLING off rule \" + this.getRuleName(config.state.ruleIndex));\n                }\n            }\n        }\n        this.closure_(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon);\n    }\n\n    // Do the actual work of walking epsilon edges//\n    closure_(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon) {\n        const p = config.state;\n        // optimization\n        if (! p.epsilonOnlyTransitions) {\n            configs.add(config, this.mergeCache);\n            // make sure to not return here, because EOF transitions can act as\n            // both epsilon transitions and non-epsilon transitions.\n        }\n        for(let i = 0;i<p.transitions.length; i++) {\n            if(i === 0 && this.canDropLoopEntryEdgeInLeftRecursiveRule(config))\n                continue;\n\n            const t = p.transitions[i];\n            const continueCollecting = collectPredicates && !(t instanceof ActionTransition);\n            const c = this.getEpsilonTarget(config, t, continueCollecting, depth === 0, fullCtx, treatEofAsEpsilon);\n            if (c!==null) {\n                let newDepth = depth;\n                if ( config.state instanceof RuleStopState) {\n                    // target fell off end of rule; mark resulting c as having dipped into outer context\n                    // We can't get here if incoming config was rule stop and we had context\n                    // track how far we dip into outer context.  Might\n                    // come in handy and we avoid evaluating context dependent\n                    // preds if this is > 0.\n                    if (this._dfa !== null && this._dfa.precedenceDfa) {\n                        if (t.outermostPrecedenceReturn === this._dfa.atnStartState.ruleIndex) {\n                            c.precedenceFilterSuppressed = true;\n                        }\n                    }\n\n                    c.reachesIntoOuterContext += 1;\n                    if (closureBusy.getOrAdd(c)!==c) {\n                        // avoid infinite recursion for right-recursive rules\n                        continue;\n                    }\n                    configs.dipsIntoOuterContext = true; // TODO: can remove? only care when we add to set per middle of this method\n                    newDepth -= 1;\n                    if (this.debug) {\n                        console.log(\"dips into outer ctx: \" + c);\n                    }\n                } else {\n                    if (!t.isEpsilon && closureBusy.getOrAdd(c)!==c){\n                        // avoid infinite recursion for EOF* and EOF+\n                        continue;\n                    }\n                    if (t instanceof RuleTransition) {\n                        // latch when newDepth goes negative - once we step out of the entry context we can't return\n                        if (newDepth >= 0) {\n                            newDepth += 1;\n                        }\n                    }\n                }\n                this.closureCheckingStopState(c, configs, closureBusy, continueCollecting, fullCtx, newDepth, treatEofAsEpsilon);\n            }\n        }\n    }\n\n    canDropLoopEntryEdgeInLeftRecursiveRule(config) {\n        // return False\n        const p = config.state;\n        // First check to see if we are in StarLoopEntryState generated during\n        // left-recursion elimination. For efficiency, also check if\n        // the context has an empty stack case. If so, it would mean\n        // global FOLLOW so we can't perform optimization\n        // Are we the special loop entry/exit state? or SLL wildcard\n        if(p.stateType !== ATNState.STAR_LOOP_ENTRY)\n            return false;\n        if(p.stateType !== ATNState.STAR_LOOP_ENTRY || !p.isPrecedenceDecision ||\n               config.context.isEmpty() || config.context.hasEmptyPath())\n            return false;\n\n        // Require all return states to return back to the same rule that p is in.\n        const numCtxs = config.context.length;\n        for(let i=0; i<numCtxs; i++) { // for each stack context\n            const returnState = this.atn.states[config.context.getReturnState(i)];\n            if (returnState.ruleIndex !== p.ruleIndex)\n                return false;\n        }\n\n        const decisionStartState = p.transitions[0].target;\n        const blockEndStateNum = decisionStartState.endState.stateNumber;\n        const blockEndState = this.atn.states[blockEndStateNum];\n\n        // Verify that the top of each stack context leads to loop entry/exit\n        // state through epsilon edges and w/o leaving rule.\n        for(let i=0; i<numCtxs; i++) { // for each stack context\n            const returnStateNumber = config.context.getReturnState(i);\n            const returnState = this.atn.states[returnStateNumber];\n            // all states must have single outgoing epsilon edge\n            if (returnState.transitions.length !== 1 || !returnState.transitions[0].isEpsilon)\n                return false;\n\n            // Look for prefix op case like 'not expr', (' type ')' expr\n            const returnStateTarget = returnState.transitions[0].target;\n            if ( returnState.stateType === ATNState.BLOCK_END && returnStateTarget === p )\n                continue;\n\n            // Look for 'expr op expr' or case where expr's return state is block end\n            // of (...)* internal block; the block end points to loop back\n            // which points to p but we don't need to check that\n            if ( returnState === blockEndState )\n                continue;\n\n            // Look for ternary expr ? expr : expr. The return state points at block end,\n            // which points at loop entry state\n            if ( returnStateTarget === blockEndState )\n                continue;\n\n            // Look for complex prefix 'between expr and expr' case where 2nd expr's\n            // return state points at block end state of (...)* internal block\n            if (returnStateTarget.stateType === ATNState.BLOCK_END && returnStateTarget.transitions.length === 1\n                    && returnStateTarget.transitions[0].isEpsilon && returnStateTarget.transitions[0].target === p)\n                continue;\n\n            // anything else ain't conforming\n            return false;\n        }\n        return true;\n    }\n\n    getRuleName(index) {\n        if (this.parser!==null && index>=0) {\n            return this.parser.ruleNames[index];\n        } else {\n            return \"<rule \" + index + \">\";\n        }\n    }\n\n    getEpsilonTarget(config, t, collectPredicates, inContext, fullCtx, treatEofAsEpsilon) {\n        switch(t.serializationType) {\n        case Transition.RULE:\n            return this.ruleTransition(config, t);\n        case Transition.PRECEDENCE:\n            return this.precedenceTransition(config, t, collectPredicates, inContext, fullCtx);\n        case Transition.PREDICATE:\n            return this.predTransition(config, t, collectPredicates, inContext, fullCtx);\n        case Transition.ACTION:\n            return this.actionTransition(config, t);\n        case Transition.EPSILON:\n            return new ATNConfig({state:t.target}, config);\n        case Transition.ATOM:\n        case Transition.RANGE:\n        case Transition.SET:\n            // EOF transitions act like epsilon transitions after the first EOF\n            // transition is traversed\n            if (treatEofAsEpsilon) {\n                if (t.matches(Token.EOF, 0, 1)) {\n                    return new ATNConfig({state: t.target}, config);\n                }\n            }\n            return null;\n        default:\n            return null;\n        }\n    }\n\n    actionTransition(config, t) {\n        if (this.debug) {\n            const index = t.actionIndex === -1 ? 65535 : t.actionIndex;\n            console.log(\"ACTION edge \" + t.ruleIndex + \":\" + index);\n        }\n        return new ATNConfig({state:t.target}, config);\n    }\n\n    precedenceTransition(config, pt, collectPredicates, inContext, fullCtx) {\n        if (this.debug) {\n            console.log(\"PRED (collectPredicates=\" + collectPredicates + \") \" +\n                    pt.precedence + \">=_p, ctx dependent=true\");\n            if (this.parser!==null) {\n                console.log(\"context surrounding pred is \" + arrayToString(this.parser.getRuleInvocationStack()));\n            }\n        }\n        let c = null;\n        if (collectPredicates && inContext) {\n            if (fullCtx) {\n                // In full context mode, we can evaluate predicates on-the-fly\n                // during closure, which dramatically reduces the size of\n                // the config sets. It also obviates the need to test predicates\n                // later during conflict resolution.\n                const currentPosition = this._input.index;\n                this._input.seek(this._startIndex);\n                const predSucceeds = pt.getPredicate().evaluate(this.parser, this._outerContext);\n                this._input.seek(currentPosition);\n                if (predSucceeds) {\n                    c = new ATNConfig({state:pt.target}, config); // no pred context\n                }\n            } else {\n                const newSemCtx = SemanticContext.andContext(config.semanticContext, pt.getPredicate());\n                c = new ATNConfig({state:pt.target, semanticContext:newSemCtx}, config);\n            }\n        } else {\n            c = new ATNConfig({state:pt.target}, config);\n        }\n        if (this.debug) {\n            console.log(\"config from pred transition=\" + c);\n        }\n        return c;\n    }\n\n    predTransition(config, pt, collectPredicates, inContext, fullCtx) {\n        if (this.debug) {\n            console.log(\"PRED (collectPredicates=\" + collectPredicates + \") \" + pt.ruleIndex +\n                    \":\" + pt.predIndex + \", ctx dependent=\" + pt.isCtxDependent);\n            if (this.parser!==null) {\n                console.log(\"context surrounding pred is \" + arrayToString(this.parser.getRuleInvocationStack()));\n            }\n        }\n        let c = null;\n        if (collectPredicates && ((pt.isCtxDependent && inContext) || ! pt.isCtxDependent)) {\n            if (fullCtx) {\n                // In full context mode, we can evaluate predicates on-the-fly\n                // during closure, which dramatically reduces the size of\n                // the config sets. It also obviates the need to test predicates\n                // later during conflict resolution.\n                const currentPosition = this._input.index;\n                this._input.seek(this._startIndex);\n                const predSucceeds = pt.getPredicate().evaluate(this.parser, this._outerContext);\n                this._input.seek(currentPosition);\n                if (predSucceeds) {\n                    c = new ATNConfig({state:pt.target}, config); // no pred context\n                }\n            } else {\n                const newSemCtx = SemanticContext.andContext(config.semanticContext, pt.getPredicate());\n                c = new ATNConfig({state:pt.target, semanticContext:newSemCtx}, config);\n            }\n        } else {\n            c = new ATNConfig({state:pt.target}, config);\n        }\n        if (this.debug) {\n            console.log(\"config from pred transition=\" + c);\n        }\n        return c;\n    }\n\n    ruleTransition(config, t) {\n        if (this.debug) {\n            console.log(\"CALL rule \" + this.getRuleName(t.target.ruleIndex) + \", ctx=\" + config.context);\n        }\n        const returnState = t.followState;\n        const newContext = SingletonPredictionContext.create(config.context, returnState.stateNumber);\n        return new ATNConfig({state:t.target, context:newContext}, config );\n    }\n\n    getConflictingAlts(configs) {\n        const altsets = PredictionMode.getConflictingAltSubsets(configs);\n        return PredictionMode.getAlts(altsets);\n    }\n\n    /**\n     * Sam pointed out a problem with the previous definition, v3, of\n     * ambiguous states. If we have another state associated with conflicting\n     * alternatives, we should keep going. For example, the following grammar\n     *\n     * s : (ID | ID ID?) ';' ;\n     *\n     * When the ATN simulation reaches the state before ';', it has a DFA\n     * state that looks like: [12|1|[], 6|2|[], 12|2|[]]. Naturally\n     * 12|1|[] and 12|2|[] conflict, but we cannot stop processing this node\n     * because alternative to has another way to continue, via [6|2|[]].\n     * The key is that we have a single state that has config's only associated\n     * with a single alternative, 2, and crucially the state transitions\n     * among the configurations are all non-epsilon transitions. That means\n     * we don't consider any conflicts that include alternative 2. So, we\n     * ignore the conflict between alts 1 and 2. We ignore a set of\n     * conflicting alts when there is an intersection with an alternative\n     * associated with a single alt state in the state&rarr;config-list map.\n     *\n     * It's also the case that we might have two conflicting configurations but\n     * also a 3rd nonconflicting configuration for a different alternative:\n     * [1|1|[], 1|2|[], 8|3|[]]. This can come about from grammar:\n     *\n     * a : A | A | A B ;\n     *\n     * After matching input A, we reach the stop state for rule A, state 1.\n     * State 8 is the state right before B. Clearly alternatives 1 and 2\n     * conflict and no amount of further lookahead will separate the two.\n     * However, alternative 3 will be able to continue and so we do not\n     * stop working on this state. In the previous example, we're concerned\n     * with states associated with the conflicting alternatives. Here alt\n     * 3 is not associated with the conflicting configs, but since we can continue\n     * looking for input reasonably, I don't declare the state done. We\n     * ignore a set of conflicting alts when we have an alternative\n     * that we still need to pursue\n     */\n    getConflictingAltsOrUniqueAlt(configs) {\n        let conflictingAlts = null;\n        if (configs.uniqueAlt!== ATN.INVALID_ALT_NUMBER) {\n            conflictingAlts = new BitSet();\n            conflictingAlts.set(configs.uniqueAlt);\n        } else {\n            conflictingAlts = configs.conflictingAlts;\n        }\n        return conflictingAlts;\n    }\n\n    getTokenName(t) {\n        if (t===Token.EOF) {\n            return \"EOF\";\n        }\n        if( this.parser!==null && this.parser.literalNames!==null) {\n            if (t >= this.parser.literalNames.length && t >= this.parser.symbolicNames.length) {\n                console.log(\"\" + t + \" ttype out of range: \" + this.parser.literalNames);\n                console.log(\"\" + this.parser.getInputStream().getTokens());\n            } else {\n                const name = this.parser.literalNames[t] || this.parser.symbolicNames[t];\n                return name + \"<\" + t + \">\";\n            }\n        }\n        return \"\" + t;\n    }\n\n    getLookaheadName(input) {\n        return this.getTokenName(input.LA(1));\n    }\n\n    /**\n     * Used for debugging in adaptivePredict around execATN but I cut\n     * it out for clarity now that alg. works well. We can leave this\n     * \"dead\" code for a bit\n     */\n    dumpDeadEndConfigs(nvae) {\n        console.log(\"dead end configs: \");\n        const decs = nvae.getDeadEndConfigs();\n        for(let i=0; i<decs.length; i++) {\n            const c = decs[i];\n            let trans = \"no edges\";\n            if (c.state.transitions.length>0) {\n                const t = c.state.transitions[0];\n                if (t instanceof AtomTransition) {\n                    trans = \"Atom \"+ this.getTokenName(t.label);\n                } else if (t instanceof SetTransition) {\n                    const neg = (t instanceof NotSetTransition);\n                    trans = (neg ? \"~\" : \"\") + \"Set \" + t.set;\n                }\n            }\n            console.error(c.toString(this.parser, true) + \":\" + trans);\n        }\n    }\n\n    noViableAlt(input, outerContext, configs, startIndex) {\n        return new NoViableAltException(this.parser, input, input.get(startIndex), input.LT(1), configs, outerContext);\n    }\n\n    getUniqueAlt(configs) {\n        let alt = ATN.INVALID_ALT_NUMBER;\n        for(let i=0;i<configs.items.length;i++) {\n            const c = configs.items[i];\n            if (alt === ATN.INVALID_ALT_NUMBER) {\n                alt = c.alt // found first alt\n            } else if( c.alt!==alt) {\n                return ATN.INVALID_ALT_NUMBER;\n            }\n        }\n        return alt;\n    }\n\n    /**\n     * Add an edge to the DFA, if possible. This method calls\n     * {@link //addDFAState} to ensure the {@code to} state is present in the\n     * DFA. If {@code from} is {@code null}, or if {@code t} is outside the\n     * range of edges that can be represented in the DFA tables, this method\n     * returns without adding the edge to the DFA.\n     *\n     * <p>If {@code to} is {@code null}, this method returns {@code null}.\n     * Otherwise, this method returns the {@link DFAState} returned by calling\n     * {@link //addDFAState} for the {@code to} state.</p>\n     *\n     * @param dfa The DFA\n     * @param from_ The source state for the edge\n     * @param t The input symbol\n     * @param to The target state for the edge\n     *\n     * @return If {@code to} is {@code null}, this method returns {@code null};\n     * otherwise this method returns the result of calling {@link //addDFAState}\n     * on {@code to}\n     */\n    addDFAEdge(dfa, from_, t, to) {\n        if( this.debug) {\n            console.log(\"EDGE \" + from_ + \" -> \" + to + \" upon \" + this.getTokenName(t));\n        }\n        if (to===null) {\n            return null;\n        }\n        to = this.addDFAState(dfa, to); // used existing if possible not incoming\n        if (from_===null || t < -1 || t > this.atn.maxTokenType) {\n            return to;\n        }\n        if (from_.edges===null) {\n            from_.edges = [];\n        }\n        from_.edges[t+1] = to; // connect\n\n        if (this.debug) {\n            const literalNames = this.parser===null ? null : this.parser.literalNames;\n            const symbolicNames = this.parser===null ? null : this.parser.symbolicNames;\n            console.log(\"DFA=\\n\" + dfa.toString(literalNames, symbolicNames));\n        }\n        return to;\n    }\n\n    /**\n     * Add state {@code D} to the DFA if it is not already present, and return\n     * the actual instance stored in the DFA. If a state equivalent to {@code D}\n     * is already in the DFA, the existing state is returned. Otherwise this\n     * method returns {@code D} after adding it to the DFA.\n     *\n     * <p>If {@code D} is {@link //ERROR}, this method returns {@link //ERROR} and\n     * does not change the DFA.</p>\n     *\n     * @param dfa The dfa\n     * @param D The DFA state to add\n     * @return The state stored in the DFA. This will be either the existing\n     * state if {@code D} is already in the DFA, or {@code D} itself if the\n     * state was not already present\n     */\n    addDFAState(dfa, D) {\n        if (D === ATNSimulator.ERROR) {\n            return D;\n        }\n        const existing = dfa.states.get(D);\n        if(existing!==null) {\n            if ( this.trace_atn_sim ) console.log(\"addDFAState \" + D + \" exists\");\n            return existing;\n        }\n        D.stateNumber = dfa.states.length;\n        if (! D.configs.readOnly) {\n            D.configs.optimizeConfigs(this);\n            D.configs.setReadonly(true);\n        }\n\n        if ( this.trace_atn_sim ) console.log(\"addDFAState new \" + D);\n\n        dfa.states.add(D);\n        if (this.debug) {\n            console.log(\"adding new DFA state: \" + D);\n        }\n        return D;\n    }\n\n    reportAttemptingFullContext(dfa, conflictingAlts, configs, startIndex, stopIndex) {\n        if (this.debug || this.retry_debug) {\n            const interval = new Interval(startIndex, stopIndex + 1);\n            console.log(\"reportAttemptingFullContext decision=\" + dfa.decision + \":\" + configs +\n                               \", input=\" + this.parser.getTokenStream().getText(interval));\n        }\n        if (this.parser!==null) {\n            this.parser.getErrorListener().reportAttemptingFullContext(this.parser, dfa, startIndex, stopIndex, conflictingAlts, configs);\n        }\n    }\n\n    reportContextSensitivity(dfa, prediction, configs, startIndex, stopIndex) {\n        if (this.debug || this.retry_debug) {\n            const interval = new Interval(startIndex, stopIndex + 1);\n            console.log(\"reportContextSensitivity decision=\" + dfa.decision + \":\" + configs +\n                               \", input=\" + this.parser.getTokenStream().getText(interval));\n        }\n        if (this.parser!==null) {\n            this.parser.getErrorListener().reportContextSensitivity(this.parser, dfa, startIndex, stopIndex, prediction, configs);\n        }\n    }\n\n    // If context sensitive parsing, we know it's ambiguity not conflict//\n    reportAmbiguity(dfa, D, startIndex, stopIndex,\n                                   exact, ambigAlts, configs ) {\n        if (this.debug || this.retry_debug) {\n            const interval = new Interval(startIndex, stopIndex + 1);\n            console.log(\"reportAmbiguity \" + ambigAlts + \":\" + configs +\n                               \", input=\" + this.parser.getTokenStream().getText(interval));\n        }\n        if (this.parser!==null) {\n            this.parser.getErrorListener().reportAmbiguity(this.parser, dfa, startIndex, stopIndex, exact, ambigAlts, configs);\n        }\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport PredictionContext from \"../context/PredictionContext.js\";\nimport HashMap from \"../misc/HashMap.js\";\n\n/**\n * Used to cache {@link PredictionContext} objects. Its used for the shared\n * context cash associated with contexts in DFA states. This cache\n * can be used for both lexers and parsers.\n */\nexport default class PredictionContextCache {\n\n    constructor() {\n        this.cache = new HashMap();\n    }\n\n    /**\n     * Add a context to the cache and return it. If the context already exists,\n     * return that one instead and do not add a new context to the cache.\n     * Protect shared cache from unsafe thread access.\n     */\n    add(ctx) {\n        if (ctx === PredictionContext.EMPTY) {\n            return PredictionContext.EMPTY;\n        }\n        const existing = this.cache.get(ctx) || null;\n        if (existing !== null) {\n            return existing;\n        }\n        this.cache.set(ctx, ctx);\n        return ctx;\n    }\n\n    get(ctx) {\n        return this.cache.get(ctx) || null;\n    }\n\n    get length(){\n        return this.cache.length;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport ATN from './ATN.js';\nimport ATNDeserializer from './ATNDeserializer.js';\nimport LexerATNSimulator from './LexerATNSimulator.js';\nimport ParserATNSimulator from './ParserATNSimulator.js';\nimport PredictionMode from './PredictionMode.js';\nimport PredictionContextCache from './PredictionContextCache.js';\n\nexport default { ATN, ATNDeserializer, LexerATNSimulator, ParserATNSimulator, PredictionMode, PredictionContextCache }\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n\nimport arrayToString from \"../utils/arrayToString.js\";\n\n/**\n * A DFA walker that knows how to dump them to serialized strings.\n */\nexport default class DFASerializer {\n    constructor(dfa, literalNames, symbolicNames) {\n        this.dfa = dfa;\n        this.literalNames = literalNames || [];\n        this.symbolicNames = symbolicNames || [];\n    }\n\n    toString() {\n       if(this.dfa.s0 === null) {\n           return null;\n       }\n       let buf = \"\";\n       const states = this.dfa.sortedStates();\n       for(let i=0; i<states.length; i++) {\n           const s = states[i];\n           if(s.edges!==null) {\n                const n = s.edges.length;\n                for(let j=0;j<n;j++) {\n                    const t = s.edges[j] || null;\n                    if(t!==null && t.stateNumber !== 0x7FFFFFFF) {\n                        buf = buf.concat(this.getStateString(s));\n                        buf = buf.concat(\"-\");\n                        buf = buf.concat(this.getEdgeLabel(j));\n                        buf = buf.concat(\"->\");\n                        buf = buf.concat(this.getStateString(t));\n                        buf = buf.concat('\\n');\n                    }\n                }\n           }\n       }\n       return buf.length===0 ? null : buf;\n    }\n\n    getEdgeLabel(i) {\n        if (i===0) {\n            return \"EOF\";\n        } else if(this.literalNames !==null || this.symbolicNames!==null) {\n            return this.literalNames[i-1] || this.symbolicNames[i-1];\n        } else {\n            return String.fromCharCode(i-1);\n        }\n    }\n\n    getStateString(s) {\n        const baseStateStr = ( s.isAcceptState ? \":\" : \"\") + \"s\" + s.stateNumber + ( s.requiresFullContext ? \"^\" : \"\");\n        if(s.isAcceptState) {\n            if (s.predicates !== null) {\n                return baseStateStr + \"=>\" + arrayToString(s.predicates);\n            } else {\n                return baseStateStr + \"=>\" + s.prediction.toString();\n            }\n        } else {\n            return baseStateStr;\n        }\n    }\n}\n\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport DFASerializer from \"./DFASerializer.js\";\n\nexport default class LexerDFASerializer extends DFASerializer {\n    constructor(dfa) {\n        super(dfa, null);\n    }\n\n    getEdgeLabel(i) {\n        return \"'\" + String.fromCharCode(i) + \"'\";\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport DFAState from './DFAState.js';\nimport StarLoopEntryState from '../state/StarLoopEntryState.js';\nimport ATNConfigSet from './../atn/ATNConfigSet.js';\nimport DFASerializer from './DFASerializer.js';\nimport LexerDFASerializer from './LexerDFASerializer.js';\nimport HashSet from \"../misc/HashSet.js\";\n\nexport default class DFA {\n\tconstructor(atnStartState, decision) {\n\t\tif (decision === undefined) {\n\t\t\tdecision = 0;\n\t\t}\n\t\t/**\n\t\t * From which ATN state did we create this DFA?\n\t\t */\n\t\tthis.atnStartState = atnStartState;\n\t\tthis.decision = decision;\n\t\t/**\n\t\t * A set of all DFA states. Use {@link Map} so we can get old state back\n\t\t * ({@link Set} only allows you to see if it's there).\n\t\t */\n\t\tthis._states = new HashSet();\n\t\tthis.s0 = null;\n\t\t/**\n\t\t * {@code true} if this DFA is for a precedence decision; otherwise,\n\t\t * {@code false}. This is the backing field for {@link //isPrecedenceDfa},\n\t\t * {@link //setPrecedenceDfa}\n\t\t */\n\t\tthis.precedenceDfa = false;\n\t\tif (atnStartState instanceof StarLoopEntryState)\n\t\t{\n\t\t\tif (atnStartState.isPrecedenceDecision) {\n\t\t\t\tthis.precedenceDfa = true;\n\t\t\t\tconst precedenceState = new DFAState(null, new ATNConfigSet());\n\t\t\t\tprecedenceState.edges = [];\n\t\t\t\tprecedenceState.isAcceptState = false;\n\t\t\t\tprecedenceState.requiresFullContext = false;\n\t\t\t\tthis.s0 = precedenceState;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get the start state for a specific precedence value.\n\t *\n\t * @param precedence The current precedence.\n\t * @return The start state corresponding to the specified precedence, or\n\t * {@code null} if no start state exists for the specified precedence.\n\t *\n\t * @throws IllegalStateException if this is not a precedence DFA.\n\t * @see //isPrecedenceDfa()\n\t */\n\tgetPrecedenceStartState(precedence) {\n\t\tif (!(this.precedenceDfa)) {\n\t\t\tthrow (\"Only precedence DFAs may contain a precedence start state.\");\n\t\t}\n\t\t// s0.edges is never null for a precedence DFA\n\t\tif (precedence < 0 || precedence >= this.s0.edges.length) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.s0.edges[precedence] || null;\n\t}\n\n\t/**\n\t * Set the start state for a specific precedence value.\n\t *\n\t * @param precedence The current precedence.\n\t * @param startState The start state corresponding to the specified\n\t * precedence.\n\t *\n\t * @throws IllegalStateException if this is not a precedence DFA.\n\t * @see //isPrecedenceDfa()\n\t */\n\tsetPrecedenceStartState(precedence, startState) {\n\t\tif (!(this.precedenceDfa)) {\n\t\t\tthrow (\"Only precedence DFAs may contain a precedence start state.\");\n\t\t}\n\t\tif (precedence < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * synchronization on s0 here is ok. when the DFA is turned into a\n\t\t * precedence DFA, s0 will be initialized once and not updated again\n\t\t * s0.edges is never null for a precedence DFA\n\t\t */\n\t\tthis.s0.edges[precedence] = startState;\n\t}\n\n\t/**\n\t * Sets whether this is a precedence DFA. If the specified value differs\n\t * from the current DFA configuration, the following actions are taken;\n\t * otherwise no changes are made to the current DFA.\n\t *\n\t * <ul>\n\t * <li>The {@link //states} map is cleared</li>\n\t * <li>If {@code precedenceDfa} is {@code false}, the initial state\n\t * {@link //s0} is set to {@code null}; otherwise, it is initialized to a new\n\t * {@link DFAState} with an empty outgoing {@link DFAState//edges} array to\n\t * store the start states for individual precedence values.</li>\n\t * <li>The {@link //precedenceDfa} field is updated</li>\n\t * </ul>\n\t *\n\t * @param precedenceDfa {@code true} if this is a precedence DFA; otherwise,\n\t * {@code false}\n\t */\n\tsetPrecedenceDfa(precedenceDfa) {\n\t\tif (this.precedenceDfa!==precedenceDfa) {\n\t\t\tthis._states = new HashSet();\n\t\t\tif (precedenceDfa) {\n\t\t\t\tconst precedenceState = new DFAState(null, new ATNConfigSet());\n\t\t\t\tprecedenceState.edges = [];\n\t\t\t\tprecedenceState.isAcceptState = false;\n\t\t\t\tprecedenceState.requiresFullContext = false;\n\t\t\t\tthis.s0 = precedenceState;\n\t\t\t} else {\n\t\t\t\tthis.s0 = null;\n\t\t\t}\n\t\t\tthis.precedenceDfa = precedenceDfa;\n\t\t}\n\t}\n\n\t/**\n\t * Return a list of all states in this DFA, ordered by state number.\n\t */\n\tsortedStates() {\n\t\tconst list = this._states.values();\n\t\treturn list.sort(function(a, b) {\n\t\t\treturn a.stateNumber - b.stateNumber;\n\t\t});\n\t}\n\n\ttoString(literalNames, symbolicNames) {\n\t\tliteralNames = literalNames || null;\n\t\tsymbolicNames = symbolicNames || null;\n\t\tif (this.s0 === null) {\n\t\t\treturn \"\";\n\t\t}\n\t\tconst serializer = new DFASerializer(this, literalNames, symbolicNames);\n\t\treturn serializer.toString();\n\t}\n\n\ttoLexerString() {\n\t\tif (this.s0 === null) {\n\t\t\treturn \"\";\n\t\t}\n\t\tconst serializer = new LexerDFASerializer(this);\n\t\treturn serializer.toString();\n\t}\n\n\tget states(){\n\t\treturn this._states;\n\t}\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport DFA from './DFA.js';\nimport DFASerializer from './DFASerializer.js';\nimport LexerDFASerializer from './LexerDFASerializer.js';\nimport PredPrediction from './PredPrediction.js';\n\nexport default { DFA, DFASerializer, LexerDFASerializer, PredPrediction };\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport PredictionContext from './PredictionContext.js';\n\nexport default { PredictionContext }\n", "import Interval from './Interval.js';\nimport IntervalSet from './IntervalSet.js';\n\nexport default { Interval, IntervalSet }\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nexport default class ParseTreeListener {\n    visitTerminal(node) {\n    }\n\n    visitErrorNode(node) {\n    }\n\n    enterEveryRule(node) {\n    }\n\n    exitEveryRule(node) {\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nexport default class ParseTreeVisitor {\n    visit(ctx) {\n        if (Array.isArray(ctx)) {\n            return ctx.map(function(child) {\n                return child.accept(this);\n            }, this);\n        } else {\n            return ctx.accept(this);\n        }\n    }\n\n    visitChildren(ctx) {\n        if (ctx.children) {\n            return this.visit(ctx.children);\n        } else {\n            return null;\n        }\n    }\n\n    visitTerminal(node) {\n    }\n\n    visitErrorNode(node) {\n    }\n}\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport TerminalNode from \"./TerminalNode.js\";\nimport ErrorNode from \"./ErrorNode.js\";\n\nexport default class ParseTreeWalker {\n\n    /**\n     * Performs a walk on the given parse tree starting at the root and going down recursively\n     * with depth-first search. On each node, {@link ParseTreeWalker//enterRule} is called before\n     * recursively walking down into child nodes, then\n     * {@link ParseTreeWalker//exitRule} is called after the recursive call to wind up.\n     * @param listener The listener used by the walker to process grammar rules\n     * @param t The parse tree to be walked on\n     */\n    walk(listener, t) {\n        const errorNode = t instanceof ErrorNode ||\n            (t.isErrorNode !== undefined && t.isErrorNode());\n        if (errorNode) {\n            listener.visitErrorNode(t);\n        } else if (t instanceof TerminalNode) {\n            listener.visitTerminal(t);\n        } else {\n            this.enterRule(listener, t);\n            for (let i = 0; i < t.getChildCount(); i++) {\n                const child = t.getChild(i);\n                this.walk(listener, child);\n            }\n            this.exitRule(listener, t);\n        }\n    }\n\n    /**\n     * Enters a grammar rule by first triggering the generic event {@link ParseTreeListener//enterEveryRule}\n     * then by triggering the event specific to the given parse tree node\n     * @param listener The listener responding to the trigger events\n     * @param r The grammar rule containing the rule context\n     */\n    enterRule(listener, r) {\n        const ctx = r.ruleContext;\n        listener.enterEveryRule(ctx);\n        ctx.enterRule(listener);\n    }\n\n    /**\n     * Exits a grammar rule by first triggering the event specific to the given parse tree node\n     * then by triggering the generic event {@link ParseTreeListener//exitEveryRule}\n     * @param listener The listener responding to the trigger events\n     * @param r The grammar rule containing the rule context\n     */\n    exitRule(listener, r) {\n        const ctx = r.ruleContext;\n        ctx.exitRule(listener);\n        listener.exitEveryRule(ctx);\n    }\n}\n\nParseTreeWalker.DEFAULT = new ParseTreeWalker();\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport RuleNode from './RuleNode.js';\nimport ErrorNode from './ErrorNode.js';\nimport TerminalNode from './TerminalNode.js';\nimport ParseTreeListener from './ParseTreeListener.js';\nimport ParseTreeVisitor from './ParseTreeVisitor.js';\nimport ParseTreeWalker from './ParseTreeWalker.js';\nimport { default as Trees } from './Trees.js';\n\nexport default { Trees, RuleNode, ErrorNode, TerminalNode, ParseTreeListener, ParseTreeVisitor, ParseTreeWalker }\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport RecognitionException from \"./RecognitionException.js\";\n\n/**\n * This signifies any kind of mismatched input exceptions such as\n * when the current input does not match the expected token.\n */\nexport default class InputMismatchException extends RecognitionException {\n    constructor(recognizer) {\n        super({message: \"\", recognizer: recognizer, input: recognizer.getInputStream(), ctx: recognizer._ctx});\n        this.offendingToken = recognizer.getCurrentToken();\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport PredicateTransition from \"../transition/PredicateTransition.js\";\nimport RecognitionException from \"./RecognitionException.js\";\n\n/**\n * A semantic predicate failed during validation. Validation of predicates\n * occurs when normally parsing the alternative just like matching a token.\n * Disambiguating predicate evaluation occurs when we test a predicate during\n * prediction.\n */\nexport default class FailedPredicateException extends RecognitionException {\n\n    constructor(recognizer, predicate, message) {\n        super({\n            message: formatMessage(predicate, message || null),\n            recognizer: recognizer,\n            input: recognizer.getInputStream(), ctx: recognizer._ctx\n        });\n        const s = recognizer._interp.atn.states[recognizer.state]\n        const trans = s.transitions[0]\n        if (trans instanceof PredicateTransition) {\n            this.ruleIndex = trans.ruleIndex;\n            this.predicateIndex = trans.predIndex;\n        } else {\n            this.ruleIndex = 0;\n            this.predicateIndex = 0;\n        }\n        this.predicate = predicate;\n        this.offendingToken = recognizer.getCurrentToken();\n    }\n}\n\n\nfunction formatMessage(predicate, message) {\n    if (message !==null) {\n        return message;\n    } else {\n        return \"failed predicate: {\" + predicate + \"}?\";\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport ErrorListener from './ErrorListener.js';\nimport Interval from '../misc/Interval.js';\nimport BitSet from \"../misc/BitSet.js\";\n\n\n/**\n * This implementation of {@link ANTLRErrorListener} can be used to identify\n *  certain potential correctness and performance problems in grammars. \"Reports\"\n *  are made by calling {@link Parser//notifyErrorListeners} with the appropriate\n *  message.\n *\n *  <ul>\n *  <li><b>Ambiguities</b>: These are cases where more than one path through the\n *  grammar can match the input.</li>\n *  <li><b>Weak context sensitivity</b>: These are cases where full-context\n *  prediction resolved an SLL conflict to a unique alternative which equaled the\n *  minimum alternative of the SLL conflict.</li>\n *  <li><b>Strong (forced) context sensitivity</b>: These are cases where the\n *  full-context prediction resolved an SLL conflict to a unique alternative,\n *  <em>and</em> the minimum alternative of the SLL conflict was found to not be\n *  a truly viable alternative. Two-stage parsing cannot be used for inputs where\n *  this situation occurs.</li>\n *  </ul>\n */\nexport default class DiagnosticErrorListener extends ErrorListener {\n\tconstructor(exactOnly) {\n\t\tsuper();\n\t\texactOnly = exactOnly || true;\n\t\t// whether all ambiguities or only exact ambiguities are reported.\n\t\tthis.exactOnly = exactOnly;\n\t}\n\n\treportAmbiguity(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs) {\n\t\tif (this.exactOnly && !exact) {\n\t\t\treturn;\n\t\t}\n\t\tconst msg = \"reportAmbiguity d=\" +\n\t\t\tthis.getDecisionDescription(recognizer, dfa) +\n\t\t\t\": ambigAlts=\" +\n\t\t\tthis.getConflictingAlts(ambigAlts, configs) +\n\t\t\t\", input='\" +\n\t\t\trecognizer.getTokenStream().getText(new Interval(startIndex, stopIndex)) + \"'\"\n\t\trecognizer.notifyErrorListeners(msg);\n\t}\n\n\treportAttemptingFullContext(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {\n\t\tconst msg = \"reportAttemptingFullContext d=\" +\n\t\t\tthis.getDecisionDescription(recognizer, dfa) +\n\t\t\t\", input='\" +\n\t\t\trecognizer.getTokenStream().getText(new Interval(startIndex, stopIndex)) + \"'\"\n\t\trecognizer.notifyErrorListeners(msg);\n\t}\n\n\treportContextSensitivity(recognizer, dfa, startIndex, stopIndex, prediction, configs) {\n\t\tconst msg = \"reportContextSensitivity d=\" +\n\t\t\tthis.getDecisionDescription(recognizer, dfa) +\n\t\t\t\", input='\" +\n\t\t\trecognizer.getTokenStream().getText(new Interval(startIndex, stopIndex)) + \"'\"\n\t\trecognizer.notifyErrorListeners(msg);\n\t}\n\n\tgetDecisionDescription(recognizer, dfa) {\n\t\tconst decision = dfa.decision\n\t\tconst ruleIndex = dfa.atnStartState.ruleIndex\n\n\t\tconst ruleNames = recognizer.ruleNames\n\t\tif (ruleIndex < 0 || ruleIndex >= ruleNames.length) {\n\t\t\treturn \"\" + decision;\n\t\t}\n\t\tconst ruleName = ruleNames[ruleIndex] || null\n\t\tif (ruleName === null || ruleName.length === 0) {\n\t\t\treturn \"\" + decision;\n\t\t}\n\t\treturn `${decision} (${ruleName})`;\n\t}\n\n\t/**\n\t * Computes the set of conflicting or ambiguous alternatives from a\n\t * configuration set, if that information was not already provided by the\n\t * parser.\n\t *\n\t * @param reportedAlts The set of conflicting or ambiguous alternatives, as\n\t * reported by the parser.\n\t * @param configs The conflicting or ambiguous configuration set.\n\t * @return Returns {@code reportedAlts} if it is not {@code null}, otherwise\n\t * returns the set of alternatives represented in {@code configs}.\n     */\n\tgetConflictingAlts(reportedAlts, configs) {\n\t\tif (reportedAlts !== null) {\n\t\t\treturn reportedAlts;\n\t\t}\n\t\tconst result = new BitSet()\n\t\tfor (let i = 0; i < configs.items.length; i++) {\n\t\t\tresult.set(configs.items[i].alt);\n\t\t}\n\t\treturn `{${result.values().join(\", \")}}`;\n\t}\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nexport default class ParseCancellationException extends Error {\n    constructor() {\n        super()\n        Error.captureStackTrace(this, ParseCancellationException);\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nexport default class ErrorStrategy {\n\n    reset(recognizer) {\n    }\n\n    recoverInline(recognizer) {\n    }\n\n    recover(recognizer, e) {\n    }\n\n    sync(recognizer) {\n    }\n\n    inErrorRecoveryMode(recognizer) {\n    }\n\n    reportError(recognizer) {\n    }\n}\n\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport FailedPredicateException from \"./FailedPredicateException.js\";\nimport InputMismatchException from \"./InputMismatchException.js\";\nimport NoViableAltException from \"./NoViableAltException.js\";\nimport ATNState from \"../state/ATNState.js\";\nimport Token from '../Token.js';\nimport Interval from \"../misc/Interval.js\";\nimport IntervalSet from \"../misc/IntervalSet.js\";\nimport ErrorStrategy from \"./ErrorStrategy.js\";\n\n/**\n * This is the default implementation of {@link ANTLRErrorStrategy} used for\n * error reporting and recovery in ANTLR parsers.\n */\nexport default class DefaultErrorStrategy extends ErrorStrategy {\n    constructor() {\n        super();\n        /**\n         * Indicates whether the error strategy is currently \"recovering from an\n         * error\". This is used to suppress reporting multiple error messages while\n         * attempting to recover from a detected syntax error.\n         *\n         * @see //inErrorRecoveryMode\n         */\n        this.errorRecoveryMode = false;\n\n        /**\n         * The index into the input stream where the last error occurred.\n         * This is used to prevent infinite loops where an error is found\n         * but no token is consumed during recovery...another error is found,\n         * ad nauseum. This is a failsafe mechanism to guarantee that at least\n         * one token/tree node is consumed for two errors.\n         */\n        this.lastErrorIndex = -1;\n        this.lastErrorStates = null;\n        this.nextTokensContext = null;\n        this.nextTokenState = 0;\n    }\n\n    /**\n     * <p>The default implementation simply calls {@link //endErrorCondition} to\n     * ensure that the handler is not in error recovery mode.</p>\n     */\n    reset(recognizer) {\n        this.endErrorCondition(recognizer);\n    }\n\n    /**\n     * This method is called to enter error recovery mode when a recognition\n     * exception is reported.\n     *\n     * @param recognizer the parser instance\n     */\n    beginErrorCondition(recognizer) {\n        this.errorRecoveryMode = true;\n    }\n\n    inErrorRecoveryMode(recognizer) {\n        return this.errorRecoveryMode;\n    }\n\n    /**\n     * This method is called to leave error recovery mode after recovering from\n     * a recognition exception.\n     * @param recognizer\n     */\n    endErrorCondition(recognizer) {\n        this.errorRecoveryMode = false;\n        this.lastErrorStates = null;\n        this.lastErrorIndex = -1;\n    }\n\n    /**\n     * {@inheritDoc}\n     * <p>The default implementation simply calls {@link //endErrorCondition}.</p>\n     */\n    reportMatch(recognizer) {\n        this.endErrorCondition(recognizer);\n    }\n\n    /**\n     * {@inheritDoc}\n     *\n     * <p>The default implementation returns immediately if the handler is already\n     * in error recovery mode. Otherwise, it calls {@link //beginErrorCondition}\n     * and dispatches the reporting task based on the runtime type of {@code e}\n     * according to the following table.</p>\n     *\n     * <ul>\n     * <li>{@link NoViableAltException}: Dispatches the call to\n     * {@link //reportNoViableAlternative}</li>\n     * <li>{@link InputMismatchException}: Dispatches the call to\n     * {@link //reportInputMismatch}</li>\n     * <li>{@link FailedPredicateException}: Dispatches the call to\n     * {@link //reportFailedPredicate}</li>\n     * <li>All other types: calls {@link Parser//notifyErrorListeners} to report\n     * the exception</li>\n     * </ul>\n     */\n    reportError(recognizer, e) {\n        // if we've already reported an error and have not matched a token\n        // yet successfully, don't report any errors.\n        if(this.inErrorRecoveryMode(recognizer)) {\n            return; // don't report spurious errors\n        }\n        this.beginErrorCondition(recognizer);\n        if ( e instanceof NoViableAltException ) {\n            this.reportNoViableAlternative(recognizer, e);\n        } else if ( e instanceof InputMismatchException ) {\n            this.reportInputMismatch(recognizer, e);\n        } else if ( e instanceof FailedPredicateException ) {\n            this.reportFailedPredicate(recognizer, e);\n        } else {\n            console.log(\"unknown recognition error type: \" + e.constructor.name);\n            console.log(e.stack);\n            recognizer.notifyErrorListeners(e.getOffendingToken(), e.getMessage(), e);\n        }\n    }\n\n    /**\n     *\n     * {@inheritDoc}\n     *\n     * <p>The default implementation resynchronizes the parser by consuming tokens\n     * until we find one in the resynchronization set--loosely the set of tokens\n     * that can follow the current rule.</p>\n     *\n     */\n    recover(recognizer, e) {\n        if (this.lastErrorIndex===recognizer.getInputStream().index &&\n            this.lastErrorStates !== null && this.lastErrorStates.indexOf(recognizer.state)>=0) {\n            // uh oh, another error at same token index and previously-visited\n            // state in ATN; must be a case where LT(1) is in the recovery\n            // token set so nothing got consumed. Consume a single token\n            // at least to prevent an infinite loop; this is a failsafe.\n            recognizer.consume();\n        }\n        this.lastErrorIndex = recognizer._input.index;\n        if (this.lastErrorStates === null) {\n            this.lastErrorStates = [];\n        }\n        this.lastErrorStates.push(recognizer.state);\n        const followSet = this.getErrorRecoverySet(recognizer)\n        this.consumeUntil(recognizer, followSet);\n    }\n\n    /**\n     * The default implementation of {@link ANTLRErrorStrategy//sync} makes sure\n     * that the current lookahead symbol is consistent with what were expecting\n     * at this point in the ATN. You can call this anytime but ANTLR only\n     * generates code to check before subrules/loops and each iteration.\n     *\n     * <p>Implements Jim Idle's magic sync mechanism in closures and optional\n     * subrules. E.g.,</p>\n     *\n     * <pre>\n     * a : sync ( stuff sync )* ;\n     * sync : {consume to what can follow sync} ;\n     * </pre>\n     *\n     * At the start of a sub rule upon error, {@link //sync} performs single\n     * token deletion, if possible. If it can't do that, it bails on the current\n     * rule and uses the default error recovery, which consumes until the\n     * resynchronization set of the current rule.\n     *\n     * <p>If the sub rule is optional ({@code (...)?}, {@code (...)*}, or block\n     * with an empty alternative), then the expected set includes what follows\n     * the subrule.</p>\n     *\n     * <p>During loop iteration, it consumes until it sees a token that can start a\n     * sub rule or what follows loop. Yes, that is pretty aggressive. We opt to\n     * stay in the loop as long as possible.</p>\n     *\n     * <p><strong>ORIGINS</strong></p>\n     *\n     * <p>Previous versions of ANTLR did a poor job of their recovery within loops.\n     * A single mismatch token or missing token would force the parser to bail\n     * out of the entire rules surrounding the loop. So, for rule</p>\n     *\n     * <pre>\n     * classDef : 'class' ID '{' member* '}'\n     * </pre>\n     *\n     * input with an extra token between members would force the parser to\n     * consume until it found the next class definition rather than the next\n     * member definition of the current class.\n     *\n     * <p>This functionality cost a little bit of effort because the parser has to\n     * compare token set at the start of the loop and at each iteration. If for\n     * some reason speed is suffering for you, you can turn off this\n     * functionality by simply overriding this method as a blank { }.</p>\n     *\n     */\n    sync(recognizer) {\n        // If already recovering, don't try to sync\n        if (this.inErrorRecoveryMode(recognizer)) {\n            return;\n        }\n        const s = recognizer._interp.atn.states[recognizer.state];\n        const la = recognizer.getTokenStream().LA(1);\n        // try cheaper subset first; might get lucky. seems to shave a wee bit off\n        const nextTokens = recognizer.atn.nextTokens(s);\n        if(nextTokens.contains(la)) {\n            this.nextTokensContext = null;\n            this.nextTokenState = ATNState.INVALID_STATE_NUMBER;\n            return;\n        } else if (nextTokens.contains(Token.EPSILON)) {\n            if(this.nextTokensContext === null) {\n                // It's possible the next token won't match information tracked\n                // by sync is restricted for performance.\n                this.nextTokensContext = recognizer._ctx;\n                this.nextTokensState = recognizer._stateNumber;\n            }\n            return;\n        }\n        switch (s.stateType) {\n            case ATNState.BLOCK_START:\n            case ATNState.STAR_BLOCK_START:\n            case ATNState.PLUS_BLOCK_START:\n            case ATNState.STAR_LOOP_ENTRY:\n                // report error and recover if possible\n                if( this.singleTokenDeletion(recognizer) !== null) {\n                    return;\n                } else {\n                    throw new InputMismatchException(recognizer);\n                }\n            case ATNState.PLUS_LOOP_BACK:\n            case ATNState.STAR_LOOP_BACK:\n                {\n                this.reportUnwantedToken(recognizer);\n                const expecting = new IntervalSet();\n                expecting.addSet(recognizer.getExpectedTokens());\n                const whatFollowsLoopIterationOrRule = expecting.addSet(this.getErrorRecoverySet(recognizer));\n                this.consumeUntil(recognizer, whatFollowsLoopIterationOrRule);\n                }\n                break;\n            default:\n            // do nothing if we can't identify the exact kind of ATN state\n        }\n    }\n\n    /**\n     * This is called by {@link //reportError} when the exception is a\n     * {@link NoViableAltException}.\n     *\n     * @see //reportError\n     *\n     * @param recognizer the parser instance\n     * @param e the recognition exception\n     */\n    reportNoViableAlternative(recognizer, e) {\n        const tokens = recognizer.getTokenStream()\n        let input\n        if(tokens !== null) {\n            if (e.startToken.type===Token.EOF) {\n                input = \"<EOF>\";\n            } else {\n                input = tokens.getText(new Interval(e.startToken.tokenIndex, e.offendingToken.tokenIndex));\n            }\n        } else {\n            input = \"<unknown input>\";\n        }\n        const msg = \"no viable alternative at input \" + this.escapeWSAndQuote(input)\n        recognizer.notifyErrorListeners(msg, e.offendingToken, e);\n    }\n\n    /**\n     * This is called by {@link //reportError} when the exception is an\n     * {@link InputMismatchException}.\n     *\n     * @see //reportError\n     *\n     * @param recognizer the parser instance\n     * @param e the recognition exception\n     */\n    reportInputMismatch(recognizer, e) {\n        const msg = \"mismatched input \" + this.getTokenErrorDisplay(e.offendingToken) +\n            \" expecting \" + e.getExpectedTokens().toString(recognizer.literalNames, recognizer.symbolicNames)\n        recognizer.notifyErrorListeners(msg, e.offendingToken, e);\n    }\n\n    /**\n     * This is called by {@link //reportError} when the exception is a\n     * {@link FailedPredicateException}.\n     *\n     * @see //reportError\n     *\n     * @param recognizer the parser instance\n     * @param e the recognition exception\n     */\n    reportFailedPredicate(recognizer, e) {\n        const ruleName = recognizer.ruleNames[recognizer._ctx.ruleIndex]\n        const msg = \"rule \" + ruleName + \" \" + e.message\n        recognizer.notifyErrorListeners(msg, e.offendingToken, e);\n    }\n\n    /**\n     * This method is called to report a syntax error which requires the removal\n     * of a token from the input stream. At the time this method is called, the\n     * erroneous symbol is current {@code LT(1)} symbol and has not yet been\n     * removed from the input stream. When this method returns,\n     * {@code recognizer} is in error recovery mode.\n     *\n     * <p>This method is called when {@link //singleTokenDeletion} identifies\n     * single-token deletion as a viable recovery strategy for a mismatched\n     * input error.</p>\n     *\n     * <p>The default implementation simply returns if the handler is already in\n     * error recovery mode. Otherwise, it calls {@link //beginErrorCondition} to\n     * enter error recovery mode, followed by calling\n     * {@link Parser//notifyErrorListeners}.</p>\n     *\n     * @param recognizer the parser instance\n     *\n     */\n    reportUnwantedToken(recognizer) {\n        if (this.inErrorRecoveryMode(recognizer)) {\n            return;\n        }\n        this.beginErrorCondition(recognizer);\n        const t = recognizer.getCurrentToken()\n        const tokenName = this.getTokenErrorDisplay(t)\n        const expecting = this.getExpectedTokens(recognizer)\n        const msg = \"extraneous input \" + tokenName + \" expecting \" +\n            expecting.toString(recognizer.literalNames, recognizer.symbolicNames)\n        recognizer.notifyErrorListeners(msg, t, null);\n    }\n\n    /**\n     * This method is called to report a syntax error which requires the\n     * insertion of a missing token into the input stream. At the time this\n     * method is called, the missing token has not yet been inserted. When this\n     * method returns, {@code recognizer} is in error recovery mode.\n     *\n     * <p>This method is called when {@link //singleTokenInsertion} identifies\n     * single-token insertion as a viable recovery strategy for a mismatched\n     * input error.</p>\n     *\n     * <p>The default implementation simply returns if the handler is already in\n     * error recovery mode. Otherwise, it calls {@link //beginErrorCondition} to\n     * enter error recovery mode, followed by calling\n     * {@link Parser//notifyErrorListeners}.</p>\n     *\n     * @param recognizer the parser instance\n     */\n    reportMissingToken(recognizer) {\n        if ( this.inErrorRecoveryMode(recognizer)) {\n            return;\n        }\n        this.beginErrorCondition(recognizer);\n        const t = recognizer.getCurrentToken()\n        const expecting = this.getExpectedTokens(recognizer)\n        const msg = \"missing \" + expecting.toString(recognizer.literalNames, recognizer.symbolicNames) +\n            \" at \" + this.getTokenErrorDisplay(t)\n        recognizer.notifyErrorListeners(msg, t, null);\n    }\n\n    /**\n     * <p>The default implementation attempts to recover from the mismatched input\n     * by using single token insertion and deletion as described below. If the\n     * recovery attempt fails, this method throws an\n     * {@link InputMismatchException}.</p>\n     *\n     * <p><strong>EXTRA TOKEN</strong> (single token deletion)</p>\n     *\n     * <p>{@code LA(1)} is not what we are looking for. If {@code LA(2)} has the\n     * right token, however, then assume {@code LA(1)} is some extra spurious\n     * token and delete it. Then consume and return the next token (which was\n     * the {@code LA(2)} token) as the successful result of the match operation.</p>\n     *\n     * <p>This recovery strategy is implemented by {@link\n        * //singleTokenDeletion}.</p>\n     *\n     * <p><strong>MISSING TOKEN</strong> (single token insertion)</p>\n     *\n     * <p>If current token (at {@code LA(1)}) is consistent with what could come\n     * after the expected {@code LA(1)} token, then assume the token is missing\n     * and use the parser's {@link TokenFactory} to create it on the fly. The\n     * \"insertion\" is performed by returning the created token as the successful\n     * result of the match operation.</p>\n     *\n     * <p>This recovery strategy is implemented by {@link\n        * //singleTokenInsertion}.</p>\n     *\n     * <p><strong>EXAMPLE</strong></p>\n     *\n     * <p>For example, Input {@code i=(3;} is clearly missing the {@code ')'}. When\n     * the parser returns from the nested call to {@code expr}, it will have\n     * call chain:</p>\n     *\n     * <pre>\n     * stat &rarr; expr &rarr; atom\n     * </pre>\n     *\n     * and it will be trying to match the {@code ')'} at this point in the\n     * derivation:\n     *\n     * <pre>\n     * =&gt; ID '=' '(' INT ')' ('+' atom)* ';'\n     * ^\n     * </pre>\n     *\n     * The attempt to match {@code ')'} will fail when it sees {@code ';'} and\n     * call {@link //recoverInline}. To recover, it sees that {@code LA(1)==';'}\n     * is in the set of tokens that can follow the {@code ')'} token reference\n     * in rule {@code atom}. It can assume that you forgot the {@code ')'}.\n     */\n    recoverInline(recognizer) {\n        // SINGLE TOKEN DELETION\n        const matchedSymbol = this.singleTokenDeletion(recognizer)\n        if (matchedSymbol !== null) {\n            // we have deleted the extra token.\n            // now, move past ttype token as if all were ok\n            recognizer.consume();\n            return matchedSymbol;\n        }\n        // SINGLE TOKEN INSERTION\n        if (this.singleTokenInsertion(recognizer)) {\n            return this.getMissingSymbol(recognizer);\n        }\n        // even that didn't work; must throw the exception\n        throw new InputMismatchException(recognizer);\n    }\n\n    /**\n     * This method implements the single-token insertion inline error recovery\n     * strategy. It is called by {@link //recoverInline} if the single-token\n     * deletion strategy fails to recover from the mismatched input. If this\n     * method returns {@code true}, {@code recognizer} will be in error recovery\n     * mode.\n     *\n     * <p>This method determines whether or not single-token insertion is viable by\n     * checking if the {@code LA(1)} input symbol could be successfully matched\n     * if it were instead the {@code LA(2)} symbol. If this method returns\n     * {@code true}, the caller is responsible for creating and inserting a\n     * token with the correct type to produce this behavior.</p>\n     *\n     * @param recognizer the parser instance\n     * @return {@code true} if single-token insertion is a viable recovery\n     * strategy for the current mismatched input, otherwise {@code false}\n     */\n    singleTokenInsertion(recognizer) {\n        const currentSymbolType = recognizer.getTokenStream().LA(1)\n        // if current token is consistent with what could come after current\n        // ATN state, then we know we're missing a token; error recovery\n        // is free to conjure up and insert the missing token\n        const atn = recognizer._interp.atn\n        const currentState = atn.states[recognizer.state]\n        const next = currentState.transitions[0].target\n        const expectingAtLL2 = atn.nextTokens(next, recognizer._ctx)\n        if (expectingAtLL2.contains(currentSymbolType) ){\n            this.reportMissingToken(recognizer);\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * This method implements the single-token deletion inline error recovery\n     * strategy. It is called by {@link //recoverInline} to attempt to recover\n     * from mismatched input. If this method returns null, the parser and error\n     * handler state will not have changed. If this method returns non-null,\n     * {@code recognizer} will <em>not</em> be in error recovery mode since the\n     * returned token was a successful match.\n     *\n     * <p>If the single-token deletion is successful, this method calls\n     * {@link //reportUnwantedToken} to report the error, followed by\n     * {@link Parser//consume} to actually \"delete\" the extraneous token. Then,\n     * before returning {@link //reportMatch} is called to signal a successful\n     * match.</p>\n     *\n     * @param recognizer the parser instance\n     * @return the successfully matched {@link Token} instance if single-token\n     * deletion successfully recovers from the mismatched input, otherwise\n     * {@code null}\n     */\n    singleTokenDeletion(recognizer) {\n        const nextTokenType = recognizer.getTokenStream().LA(2)\n        const expecting = this.getExpectedTokens(recognizer)\n        if (expecting.contains(nextTokenType)) {\n            this.reportUnwantedToken(recognizer);\n            // print(\"recoverFromMismatchedToken deleting \" \\\n            // + str(recognizer.getTokenStream().LT(1)) \\\n            // + \" since \" + str(recognizer.getTokenStream().LT(2)) \\\n            // + \" is what we want\", file=sys.stderr)\n            recognizer.consume(); // simply delete extra token\n            // we want to return the token we're actually matching\n            const matchedSymbol = recognizer.getCurrentToken()\n            this.reportMatch(recognizer); // we know current token is correct\n            return matchedSymbol;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Conjure up a missing token during error recovery.\n     *\n     * The recognizer attempts to recover from single missing\n     * symbols. But, actions might refer to that missing symbol.\n     * For example, x=ID {f($x);}. The action clearly assumes\n     * that there has been an identifier matched previously and that\n     * $x points at that token. If that token is missing, but\n     * the next token in the stream is what we want we assume that\n     * this token is missing and we keep going. Because we\n     * have to return some token to replace the missing token,\n     * we have to conjure one up. This method gives the user control\n     * over the tokens returned for missing tokens. Mostly,\n     * you will want to create something special for identifier\n     * tokens. For literals such as '{' and ',', the default\n     * action in the parser or tree parser works. It simply creates\n     * a CommonToken of the appropriate type. The text will be the token.\n     * If you change what tokens must be created by the lexer,\n     * override this method to create the appropriate tokens.\n     *\n     */\n    getMissingSymbol(recognizer) {\n        const currentSymbol = recognizer.getCurrentToken()\n        const expecting = this.getExpectedTokens(recognizer)\n        const expectedTokenType = expecting.first() // get any element\n        let tokenText\n        if (expectedTokenType===Token.EOF) {\n            tokenText = \"<missing EOF>\";\n        } else {\n            tokenText = \"<missing \" + recognizer.literalNames[expectedTokenType] + \">\";\n        }\n        let current = currentSymbol\n        const lookback = recognizer.getTokenStream().LT(-1)\n        if (current.type===Token.EOF && lookback !== null) {\n            current = lookback;\n        }\n        return recognizer.getTokenFactory().create(current.source,\n            expectedTokenType, tokenText, Token.DEFAULT_CHANNEL,\n            -1, -1, current.line, current.column);\n    }\n\n    getExpectedTokens(recognizer) {\n        return recognizer.getExpectedTokens();\n    }\n\n    /**\n     * How should a token be displayed in an error message? The default\n     * is to display just the text, but during development you might\n     * want to have a lot of information spit out. Override in that case\n     * to use t.toString() (which, for CommonToken, dumps everything about\n     * the token). This is better than forcing you to override a method in\n     * your token objects because you don't have to go modify your lexer\n     * so that it creates a new Java type.\n     */\n    getTokenErrorDisplay(t) {\n        if (t === null) {\n            return \"<no token>\";\n        }\n        let s = t.text\n        if (s === null) {\n            if (t.type===Token.EOF) {\n                s = \"<EOF>\";\n            } else {\n                s = \"<\" + t.type + \">\";\n            }\n        }\n        return this.escapeWSAndQuote(s);\n    }\n\n    escapeWSAndQuote(s) {\n        s = s.replace(/\\n/g,\"\\\\n\");\n        s = s.replace(/\\r/g,\"\\\\r\");\n        s = s.replace(/\\t/g,\"\\\\t\");\n        return \"'\" + s + \"'\";\n    }\n\n    /**\n     * Compute the error recovery set for the current rule. During\n     * rule invocation, the parser pushes the set of tokens that can\n     * follow that rule reference on the stack; this amounts to\n     * computing FIRST of what follows the rule reference in the\n     * enclosing rule. See LinearApproximator.FIRST().\n     * This local follow set only includes tokens\n     * from within the rule; i.e., the FIRST computation done by\n     * ANTLR stops at the end of a rule.\n     *\n     * EXAMPLE\n     *\n     * When you find a \"no viable alt exception\", the input is not\n     * consistent with any of the alternatives for rule r. The best\n     * thing to do is to consume tokens until you see something that\n     * can legally follow a call to r//or* any rule that called r.\n     * You don't want the exact set of viable next tokens because the\n     * input might just be missing a token--you might consume the\n     * rest of the input looking for one of the missing tokens.\n     *\n     * Consider grammar:\n     *\n     * a : '[' b ']'\n     * | '(' b ')'\n     * ;\n     * b : c '^' INT ;\n     * c : ID\n     * | INT\n     * ;\n     *\n     * At each rule invocation, the set of tokens that could follow\n     * that rule is pushed on a stack. Here are the various\n     * context-sensitive follow sets:\n     *\n     * FOLLOW(b1_in_a) = FIRST(']') = ']'\n     * FOLLOW(b2_in_a) = FIRST(')') = ')'\n     * FOLLOW(c_in_b) = FIRST('^') = '^'\n     *\n     * Upon erroneous input \"[]\", the call chain is\n     *\n     * a -> b -> c\n     *\n     * and, hence, the follow context stack is:\n     *\n     * depth follow set start of rule execution\n     * 0 <EOF> a (from main())\n     * 1 ']' b\n     * 2 '^' c\n     *\n     * Notice that ')' is not included, because b would have to have\n     * been called from a different context in rule a for ')' to be\n     * included.\n     *\n     * For error recovery, we cannot consider FOLLOW(c)\n     * (context-sensitive or otherwise). We need the combined set of\n     * all context-sensitive FOLLOW sets--the set of all tokens that\n     * could follow any reference in the call chain. We need to\n     * resync to one of those tokens. Note that FOLLOW(c)='^' and if\n     * we resync'd to that token, we'd consume until EOF. We need to\n     * sync to context-sensitive FOLLOWs for a, b, and c: {']','^'}.\n     * In this case, for input \"[]\", LA(1) is ']' and in the set, so we would\n     * not consume anything. After printing an error, rule c would\n     * return normally. Rule b would not find the required '^' though.\n     * At this point, it gets a mismatched token error and throws an\n     * exception (since LA(1) is not in the viable following token\n     * set). The rule exception handler tries to recover, but finds\n     * the same recovery set and doesn't consume anything. Rule b\n     * exits normally returning to rule a. Now it finds the ']' (and\n     * with the successful match exits errorRecovery mode).\n     *\n     * So, you can see that the parser walks up the call chain looking\n     * for the token that was a member of the recovery set.\n     *\n     * Errors are not generated in errorRecovery mode.\n     *\n     * ANTLR's error recovery mechanism is based upon original ideas:\n     *\n     * \"Algorithms + Data Structures = Programs\" by Niklaus Wirth\n     *\n     * and\n     *\n     * \"A note on error recovery in recursive descent parsers\":\n     * http://portal.acm.org/citation.cfm?id=947902.947905\n     *\n     * Later, Josef Grosch had some good ideas:\n     *\n     * \"Efficient and Comfortable Error Recovery in Recursive Descent\n     * Parsers\":\n     * ftp://www.cocolab.com/products/cocktail/doca4.ps/ell.ps.zip\n     *\n     * Like Grosch I implement context-sensitive FOLLOW sets that are combined\n     * at run-time upon error to avoid overhead during parsing.\n     */\n    getErrorRecoverySet(recognizer) {\n        const atn = recognizer._interp.atn\n        let ctx = recognizer._ctx\n        const recoverSet = new IntervalSet()\n        while (ctx !== null && ctx.invokingState>=0) {\n            // compute what follows who invoked us\n            const invokingState = atn.states[ctx.invokingState]\n            const rt = invokingState.transitions[0]\n            const follow = atn.nextTokens(rt.followState)\n            recoverSet.addSet(follow);\n            ctx = ctx.parentCtx;\n        }\n        recoverSet.removeOne(Token.EPSILON);\n        return recoverSet;\n    }\n\n// Consume tokens until one matches the given token set.//\n    consumeUntil(recognizer, set) {\n        let ttype = recognizer.getTokenStream().LA(1)\n        while( ttype !== Token.EOF && !set.contains(ttype)) {\n            recognizer.consume();\n            ttype = recognizer.getTokenStream().LA(1);\n        }\n    }\n}\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport InputMismatchException from \"./InputMismatchException.js\";\nimport ParseCancellationException from \"./ParseCancellationException.js\";\nimport DefaultErrorStrategy from \"./DefaultErrorStrategy.js\";\n\n/**\n * This implementation of {@link ANTLRErrorStrategy} responds to syntax errors\n * by immediately canceling the parse operation with a\n * {@link ParseCancellationException}. The implementation ensures that the\n * {@link ParserRuleContext//exception} field is set for all parse tree nodes\n * that were not completed prior to encountering the error.\n *\n * <p>\n * This error strategy is useful in the following scenarios.</p>\n *\n * <ul>\n * <li><strong>Two-stage parsing:</strong> This error strategy allows the first\n * stage of two-stage parsing to immediately terminate if an error is\n * encountered, and immediately fall back to the second stage. In addition to\n * avoiding wasted work by attempting to recover from errors here, the empty\n * implementation of {@link BailErrorStrategy//sync} improves the performance of\n * the first stage.</li>\n * <li><strong>Silent validation:</strong> When syntax errors are not being\n * reported or logged, and the parse result is simply ignored if errors occur,\n * the {@link BailErrorStrategy} avoids wasting work on recovering from errors\n * when the result will be ignored either way.</li>\n * </ul>\n *\n * <p>\n * {@code myparser.setErrorHandler(new BailErrorStrategy());}</p>\n *\n * @see Parser//setErrorHandler(ANTLRErrorStrategy)\n * */\nexport default class BailErrorStrategy extends DefaultErrorStrategy {\n\n    constructor() {\n        super();\n    }\n\n    /**\n     * Instead of recovering from exception {@code e}, re-throw it wrapped\n     * in a {@link ParseCancellationException} so it is not caught by the\n     * rule function catches. Use {@link Exception//getCause()} to get the\n     * original {@link RecognitionException}.\n     */\n    recover(recognizer, e) {\n        let context = recognizer._ctx\n        while (context !== null) {\n            context.exception = e;\n            context = context.parentCtx;\n        }\n        throw new ParseCancellationException(e);\n    }\n\n    /**\n     * Make sure we don't attempt to recover inline; if the parser\n     * successfully recovers, it won't throw an exception.\n     */\n    recoverInline(recognizer) {\n        this.recover(recognizer, new InputMismatchException(recognizer));\n    }\n\n// Make sure we don't attempt to recover from problems in subrules.//\n    sync(recognizer) {\n        // pass\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport RecognitionException from './RecognitionException.js';\nimport NoViableAltException from './NoViableAltException.js';\nimport LexerNoViableAltException from './LexerNoViableAltException.js';\nimport InputMismatchException from './InputMismatchException.js';\nimport FailedPredicateException from './FailedPredicateException.js';\nimport DiagnosticErrorListener from './DiagnosticErrorListener.js';\nimport BailErrorStrategy from './BailErrorStrategy.js';\nimport DefaultErrorStrategy from './DefaultErrorStrategy.js';\nimport ErrorListener from './ErrorListener.js';\n\nexport default {\n    RecognitionException, NoViableAltException, LexerNoViableAltException, InputMismatchException, FailedPredicateException,\n    DiagnosticErrorListener, BailErrorStrategy, DefaultErrorStrategy, ErrorListener\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport Token from './Token.js';\n\n/**\n * If decodeToUnicodeCodePoints is true, the input is treated\n * as a series of Unicode code points.\n *\n * Otherwise, the input is treated as a series of 16-bit UTF-16 code\n * units.\n */\nexport default class CharStream {\n    constructor(data, decodeToUnicodeCodePoints) {\n        this.name = \"<empty>\";\n        this.strdata = data;\n        this.decodeToUnicodeCodePoints = decodeToUnicodeCodePoints || false;\n        // _loadString - Vacuum all input from a string and then treat it like a buffer.\n        this._index = 0;\n        this.data = [];\n        if (this.decodeToUnicodeCodePoints) {\n            for (let i = 0; i < this.strdata.length; ) {\n                const codePoint = this.strdata.codePointAt(i);\n                this.data.push(codePoint);\n                i += codePoint <= 0xFFFF ? 1 : 2;\n            }\n        } else {\n            this.data = new Array(this.strdata.length);\n            for (let i = 0; i < this.strdata.length; i++) {\n                this.data[i] = this.strdata.charCodeAt(i);\n            }\n        }\n        this._size = this.data.length;\n    }\n\n    /**\n     * Reset the stream so that it's in the same state it was\n     * when the object was created *except* the data array is not\n     * touched.\n     */\n    reset() {\n        this._index = 0;\n    }\n\n    consume() {\n        if (this._index >= this._size) {\n            // assert this.LA(1) == Token.EOF\n            throw (\"cannot consume EOF\");\n        }\n        this._index += 1;\n    }\n\n    LA(offset) {\n        if (offset === 0) {\n            return 0; // undefined\n        }\n        if (offset < 0) {\n            offset += 1; // e.g., translate LA(-1) to use offset=0\n        }\n        const pos = this._index + offset - 1;\n        if (pos < 0 || pos >= this._size) { // invalid\n            return Token.EOF;\n        }\n        return this.data[pos];\n    }\n\n    LT(offset) {\n        return this.LA(offset);\n    }\n\n// mark/release do nothing; we have entire buffer\n    mark() {\n        return -1;\n    }\n\n    release(marker) {\n    }\n\n    /**\n     * consume() ahead until p==_index; can't just set p=_index as we must\n     * update line and column. If we seek backwards, just set p\n     */\n    seek(_index) {\n        if (_index <= this._index) {\n            this._index = _index; // just jump; don't update stream state (line,\n            // ...)\n            return;\n        }\n        // seek forward\n        this._index = Math.min(_index, this._size);\n    }\n\n    getText(start, stop) {\n        if (stop >= this._size) {\n            stop = this._size - 1;\n        }\n        if (start >= this._size) {\n            return \"\";\n        } else {\n            if (this.decodeToUnicodeCodePoints) {\n                let result = \"\";\n                for (let i = start; i <= stop; i++) {\n                    result += String.fromCodePoint(this.data[i]);\n                }\n                return result;\n            } else {\n                return this.strdata.slice(start, stop + 1);\n            }\n        }\n    }\n\n    toString() {\n        return this.strdata;\n    }\n\n    get index(){\n        return this._index;\n    }\n\n    get size(){\n        return this._size;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport CharStream from './CharStream.js';\n\n/**\n * @deprecated Use CharStream instead\n*/\nexport default class InputStream extends CharStream {\n\tconstructor(data, decodeToUnicodeCodePoints) {\n\t\tsuper(data, decodeToUnicodeCodePoints);\n\t}\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport InputStream from './InputStream.js';\nimport CharStream from './CharStream.js';\nconst isNode =\n\ttypeof process !== \"undefined\" &&\n\tprocess.versions != null &&\n\tprocess.versions.node != null;\nimport fs from 'fs';\n\n/**\n * This is an InputStream that is loaded from a file all at once\n * when you construct the object.\n */\nexport default class FileStream extends InputStream {\n\n\tstatic fromPath(path, encoding, callback) {\n\t\tif(!isNode)\n\t\t\tthrow new Error(\"FileStream is only available when running in Node!\");\n\t\tfs.readFile(path, encoding, function(err, data) {\n\t\t\tlet is = null;\n\t\t\tif (data !== null) {\n\t\t\t\tis = new CharStream(data, true);\n\t\t\t}\n\t\t\tcallback(err, is);\n\t\t});\n\n\t}\n\n\tconstructor(fileName, encoding, decodeToUnicodeCodePoints) {\n\t\tif(!isNode)\n\t\t\tthrow new Error(\"FileStream is only available when running in Node!\");\n\t\tconst data = fs.readFileSync(fileName, encoding || \"utf-8\" );\n\t\tsuper(data, decodeToUnicodeCodePoints);\n\t\tthis.fileName = fileName;\n\t}\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport CharStream from \"./CharStream.js\";\nimport FileStream from \"./FileStream.js\";\n\n/**\n * Utility functions to create InputStreams from various sources.\n *\n * All returned InputStreams support the full range of Unicode\n * up to U+10FFFF (the default behavior of InputStream only supports\n * code points up to U+FFFF).\n */\nexport default {\n  // Creates an InputStream from a string.\n  fromString: function(str) {\n    return new CharStream(str, true);\n  },\n\n  /**\n   * Asynchronously creates an InputStream from a blob given the\n   * encoding of the bytes in that blob (defaults to 'utf8' if\n   * encoding is null).\n   *\n   * Invokes onLoad(result) on success, onError(error) on\n   * failure.\n   */\n  fromBlob: function(blob, encoding, onLoad, onError) {\n    const reader = new window.FileReader();\n    reader.onload = function(e) {\n      const is = new CharStream(e.target.result, true);\n      onLoad(is);\n    };\n    reader.onerror = onError;\n    reader.readAsText(blob, encoding);\n  },\n\n  /**\n   * Creates an InputStream from a Buffer given the\n   * encoding of the bytes in that buffer (defaults to 'utf8' if\n   * encoding is null).\n   */\n  fromBuffer: function(buffer, encoding) {\n    return new CharStream(buffer.toString(encoding), true);\n  },\n\n  /** Asynchronously creates an InputStream from a file on disk given\n   * the encoding of the bytes in that file (defaults to 'utf8' if\n   * encoding is null).\n   *\n   * Invokes callback(error, result) on completion.\n   */\n  fromPath: function(path, encoding, callback) {\n    FileStream.fromPath(path, encoding, callback);\n  },\n\n  /**\n   * Synchronously creates an InputStream given a path to a file\n   * on disk and the encoding of the bytes in that file (defaults to\n   * 'utf8' if encoding is null).\n   */\n  fromPathSync: function(path, encoding) {\n    return new FileStream(path, encoding);\n  }\n};\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport arrayToString from \"./arrayToString.js\";\nimport stringToCharArray from \"./stringToCharArray.js\";\n\nexport default { arrayToString, stringToCharArray };\n", "export default function stringToCharArray(str) {\n    let result = new Uint16Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n        result[i] = str.charCodeAt(i);\n    }\n    return result;\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n// this is just to keep meaningful parameter types to Parser\nexport default class TokenStream {}\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport Token from './Token.js';\nimport Lexer from './Lexer.js';\nimport Interval from './misc/Interval.js';\nimport TokenStream from \"./TokenStream.js\";\n\n/**\n * This implementation of {@link TokenStream} loads tokens from a\n * {@link TokenSource} on-demand, and places the tokens in a buffer to provide\n * access to any previous token by index.\n *\n * <p>\n * This token stream ignores the value of {@link Token//getChannel}. If your\n * parser requires the token stream filter tokens to only those on a particular\n * channel, such as {@link Token//DEFAULT_CHANNEL} or\n * {@link Token//HIDDEN_CHANNEL}, use a filtering token stream such a\n * {@link CommonTokenStream}.</p>\n */\nexport default class BufferedTokenStream extends TokenStream {\n\tconstructor(tokenSource) {\n\n\t\tsuper();\n\t\t// The {@link TokenSource} from which tokens for this stream are fetched.\n\t\tthis.tokenSource = tokenSource;\n\t\t/**\n\t\t * A collection of all tokens fetched from the token source. The list is\n\t\t * considered a complete view of the input once {@link //fetchedEOF} is set\n\t\t * to {@code true}.\n\t\t */\n\t\tthis.tokens = [];\n\n\t\t/**\n\t\t * The index into {@link //tokens} of the current token (next token to\n\t\t * {@link //consume}). {@link //tokens}{@code [}{@link //p}{@code ]} should\n\t\t * be\n\t\t * {@link //LT LT(1)}.\n\t\t *\n\t\t * <p>This field is set to -1 when the stream is first constructed or when\n\t\t * {@link //setTokenSource} is called, indicating that the first token has\n\t\t * not yet been fetched from the token source. For additional information,\n\t\t * see the documentation of {@link IntStream} for a description of\n\t\t * Initializing Methods.</p>\n\t\t */\n\t\tthis.index = -1;\n\n\t\t/**\n\t\t * Indicates whether the {@link Token//EOF} token has been fetched from\n\t\t * {@link //tokenSource} and added to {@link //tokens}. This field improves\n\t\t * performance for the following cases:\n\t\t *\n\t\t * <ul>\n\t\t * <li>{@link //consume}: The lookahead check in {@link //consume} to\n\t\t * prevent\n\t\t * consuming the EOF symbol is optimized by checking the values of\n\t\t * {@link //fetchedEOF} and {@link //p} instead of calling {@link\n\t\t * //LA}.</li>\n\t\t * <li>{@link //fetch}: The check to prevent adding multiple EOF symbols\n\t\t * into\n\t\t * {@link //tokens} is trivial with this field.</li>\n\t\t * <ul>\n\t\t */\n\t\tthis.fetchedEOF = false;\n\t}\n\n\tmark() {\n\t\treturn 0;\n\t}\n\n\trelease(marker) {\n\t\t// no resources to release\n\t}\n\n\treset() {\n\t\tthis.seek(0);\n\t}\n\n\tseek(index) {\n\t\tthis.lazyInit();\n\t\tthis.index = this.adjustSeekIndex(index);\n\t}\n\n\tget size() {\n\t\treturn this.tokens.length;\n\t}\n\n\tget(index) {\n\t\tthis.lazyInit();\n\t\treturn this.tokens[index];\n\t}\n\n\tconsume() {\n\t\tlet skipEofCheck = false;\n\t\tif (this.index >= 0) {\n\t\t\tif (this.fetchedEOF) {\n\t\t\t\t// the last token in tokens is EOF. skip check if p indexes any\n\t\t\t\t// fetched token except the last.\n\t\t\t\tskipEofCheck = this.index < this.tokens.length - 1;\n\t\t\t} else {\n\t\t\t\t// no EOF token in tokens. skip check if p indexes a fetched token.\n\t\t\t\tskipEofCheck = this.index < this.tokens.length;\n\t\t\t}\n\t\t} else {\n\t\t\t// not yet initialized\n\t\t\tskipEofCheck = false;\n\t\t}\n\t\tif (!skipEofCheck && this.LA(1) === Token.EOF) {\n\t\t\tthrow \"cannot consume EOF\";\n\t\t}\n\t\tif (this.sync(this.index + 1)) {\n\t\t\tthis.index = this.adjustSeekIndex(this.index + 1);\n\t\t}\n\t}\n\n\t/**\n\t * Make sure index {@code i} in tokens has a token.\n\t *\n\t * @return {Boolean} {@code true} if a token is located at index {@code i}, otherwise\n\t * {@code false}.\n\t * @see //get(int i)\n\t */\n\tsync(i) {\n\t\tconst n = i - this.tokens.length + 1; // how many more elements we need?\n\t\tif (n > 0) {\n\t\t\tconst fetched = this.fetch(n);\n\t\t\treturn fetched >= n;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Add {@code n} elements to buffer.\n\t *\n\t * @return {Number} The actual number of elements added to the buffer.\n\t */\n\tfetch(n) {\n\t\tif (this.fetchedEOF) {\n\t\t\treturn 0;\n\t\t}\n\t\tfor (let i = 0; i < n; i++) {\n\t\t\tconst t = this.tokenSource.nextToken();\n\t\t\tt.tokenIndex = this.tokens.length;\n\t\t\tthis.tokens.push(t);\n\t\t\tif (t.type === Token.EOF) {\n\t\t\t\tthis.fetchedEOF = true;\n\t\t\t\treturn i + 1;\n\t\t\t}\n\t\t}\n\t\treturn n;\n\t}\n\n\t// Get all tokens from start..stop inclusively///\n\tgetTokens(start, stop, types) {\n\t\tif (types === undefined) {\n\t\t\ttypes = null;\n\t\t}\n\t\tif (start < 0 || stop < 0) {\n\t\t\treturn null;\n\t\t}\n\t\tthis.lazyInit();\n\t\tconst subset = [];\n\t\tif (stop >= this.tokens.length) {\n\t\t\tstop = this.tokens.length - 1;\n\t\t}\n\t\tfor (let i = start; i < stop; i++) {\n\t\t\tconst t = this.tokens[i];\n\t\t\tif (t.type === Token.EOF) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (types === null || types.contains(t.type)) {\n\t\t\t\tsubset.push(t);\n\t\t\t}\n\t\t}\n\t\treturn subset;\n\t}\n\n\tLA(i) {\n\t\treturn this.LT(i).type;\n\t}\n\n\tLB(k) {\n\t\tif (this.index - k < 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.tokens[this.index - k];\n\t}\n\n\tLT(k) {\n\t\tthis.lazyInit();\n\t\tif (k === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tif (k < 0) {\n\t\t\treturn this.LB(-k);\n\t\t}\n\t\tconst i = this.index + k - 1;\n\t\tthis.sync(i);\n\t\tif (i >= this.tokens.length) { // return EOF token\n\t\t\t// EOF must be last token\n\t\t\treturn this.tokens[this.tokens.length - 1];\n\t\t}\n\t\treturn this.tokens[i];\n\t}\n\n\t/**\n\t * Allowed derived classes to modify the behavior of operations which change\n\t * the current stream position by adjusting the target token index of a seek\n\t * operation. The default implementation simply returns {@code i}. If an\n\t * exception is thrown in this method, the current stream index should not be\n\t * changed.\n\t *\n\t * <p>For example, {@link CommonTokenStream} overrides this method to ensure\n\t * that\n\t * the seek target is always an on-channel token.</p>\n\t *\n\t * @param {Number} i The target token index.\n\t * @return {Number} The adjusted target token index.\n\t */\n\tadjustSeekIndex(i) {\n\t\treturn i;\n\t}\n\n\tlazyInit() {\n\t\tif (this.index === -1) {\n\t\t\tthis.setup();\n\t\t}\n\t}\n\n\tsetup() {\n\t\tthis.sync(0);\n\t\tthis.index = this.adjustSeekIndex(0);\n\t}\n\n\t// Reset this token stream by setting its token source.///\n\tsetTokenSource(tokenSource) {\n\t\tthis.tokenSource = tokenSource;\n\t\tthis.tokens = [];\n\t\tthis.index = -1;\n\t\tthis.fetchedEOF = false;\n\t}\n\n\t/**\n\t * Given a starting index, return the index of the next token on channel.\n\t * Return i if tokens[i] is on channel. Return -1 if there are no tokens\n\t * on channel between i and EOF.\n\t */\n\tnextTokenOnChannel(i, channel) {\n\t\tthis.sync(i);\n\t\tif (i >= this.tokens.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tlet token = this.tokens[i];\n\t\twhile (token.channel !== channel) {\n\t\t\tif (token.type === Token.EOF) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tthis.sync(i);\n\t\t\ttoken = this.tokens[i];\n\t\t}\n\t\treturn i;\n\t}\n\n\t/**\n\t * Given a starting index, return the index of the previous token on channel.\n\t * Return i if tokens[i] is on channel. Return -1 if there are no tokens\n\t * on channel between i and 0.\n\t */\n\tpreviousTokenOnChannel(i, channel) {\n\t\twhile (i >= 0 && this.tokens[i].channel !== channel) {\n\t\t\ti -= 1;\n\t\t}\n\t\treturn i;\n\t}\n\n\t/**\n\t * Collect all tokens on specified channel to the right of\n\t * the current token up until we see a token on DEFAULT_TOKEN_CHANNEL or\n\t * EOF. If channel is -1, find any non default channel token.\n\t */\n\tgetHiddenTokensToRight(tokenIndex,\n\t\tchannel) {\n\t\tif (channel === undefined) {\n\t\t\tchannel = -1;\n\t\t}\n\t\tthis.lazyInit();\n\t\tif (tokenIndex < 0 || tokenIndex >= this.tokens.length) {\n\t\t\tthrow \"\" + tokenIndex + \" not in 0..\" + this.tokens.length - 1;\n\t\t}\n\t\tconst nextOnChannel = this.nextTokenOnChannel(tokenIndex + 1, Lexer.DEFAULT_TOKEN_CHANNEL);\n\t\tconst from_ = tokenIndex + 1;\n\t\t// if none onchannel to right, nextOnChannel=-1 so set to = last token\n\t\tconst to = nextOnChannel === -1 ? this.tokens.length - 1 : nextOnChannel;\n\t\treturn this.filterForChannel(from_, to, channel);\n\t}\n\n\t/**\n\t * Collect all tokens on specified channel to the left of\n\t * the current token up until we see a token on DEFAULT_TOKEN_CHANNEL.\n\t * If channel is -1, find any non default channel token.\n\t */\n\tgetHiddenTokensToLeft(tokenIndex,\n\t\tchannel) {\n\t\tif (channel === undefined) {\n\t\t\tchannel = -1;\n\t\t}\n\t\tthis.lazyInit();\n\t\tif (tokenIndex < 0 || tokenIndex >= this.tokens.length) {\n\t\t\tthrow \"\" + tokenIndex + \" not in 0..\" + this.tokens.length - 1;\n\t\t}\n\t\tconst prevOnChannel = this.previousTokenOnChannel(tokenIndex - 1, Lexer.DEFAULT_TOKEN_CHANNEL);\n\t\tif (prevOnChannel === tokenIndex - 1) {\n\t\t\treturn null;\n\t\t}\n\t\t// if none on channel to left, prevOnChannel=-1 then from=0\n\t\tconst from_ = prevOnChannel + 1;\n\t\tconst to = tokenIndex - 1;\n\t\treturn this.filterForChannel(from_, to, channel);\n\t}\n\n\tfilterForChannel(left, right, channel) {\n\t\tconst hidden = [];\n\t\tfor (let i = left; i < right + 1; i++) {\n\t\t\tconst t = this.tokens[i];\n\t\t\tif (channel === -1) {\n\t\t\t\tif (t.channel !== Lexer.DEFAULT_TOKEN_CHANNEL) {\n\t\t\t\t\thidden.push(t);\n\t\t\t\t}\n\t\t\t} else if (t.channel === channel) {\n\t\t\t\thidden.push(t);\n\t\t\t}\n\t\t}\n\t\tif (hidden.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn hidden;\n\t}\n\n\tgetSourceName() {\n\t\treturn this.tokenSource.getSourceName();\n\t}\n\n\t// Get the text of all tokens in this buffer.///\n\tgetText(interval) {\n\t\tthis.lazyInit();\n\t\tthis.fill();\n\t\tif (!interval) {\n\t\t\tinterval = new Interval(0, this.tokens.length - 1);\n\t\t}\n\t\tlet start = interval.start;\n\t\tif (start instanceof Token) {\n\t\t\tstart = start.tokenIndex;\n\t\t}\n\t\tlet stop = interval.stop;\n\t\tif (stop instanceof Token) {\n\t\t\tstop = stop.tokenIndex;\n\t\t}\n\t\tif (start === null || stop === null || start < 0 || stop < 0) {\n\t\t\treturn \"\";\n\t\t}\n\t\tif (stop >= this.tokens.length) {\n\t\t\tstop = this.tokens.length - 1;\n\t\t}\n\t\tlet s = \"\";\n\t\tfor (let i = start; i < stop + 1; i++) {\n\t\t\tconst t = this.tokens[i];\n\t\t\tif (t.type === Token.EOF) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ts = s + t.text;\n\t\t}\n\t\treturn s;\n\t}\n\n\t// Get all tokens from lexer until EOF///\n\tfill() {\n\t\tthis.lazyInit();\n\t\t// noinspection StatementWithEmptyBodyJS\n\t\twhile (this.fetch(1000) === 1000);\n\t}\n}\n\nObject.defineProperty(BufferedTokenStream, \"size\", {\n\tget: function() {\n\t\treturn this.tokens.length;\n\t}\n})\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n\nimport Token from './Token.js';\nimport BufferedTokenStream from './BufferedTokenStream.js';\n\n/**\n * This class extends {@link BufferedTokenStream} with functionality to filter\n * token streams to tokens on a particular channel (tokens where\n * {@link Token//getChannel} returns a particular value).\n *\n * <p>\n * This token stream provides access to all tokens by index or when calling\n * methods like {@link //getText}. The channel filtering is only used for code\n * accessing tokens via the lookahead methods {@link //LA}, {@link //LT}, and\n * {@link //LB}.</p>\n *\n * <p>\n * By default, tokens are placed on the default channel\n * ({@link Token//DEFAULT_CHANNEL}), but may be reassigned by using the\n * {@code ->channel(HIDDEN)} lexer command, or by using an embedded action to\n * call {@link Lexer//setChannel}.\n * </p>\n *\n * <p>\n * Note: lexer rules which use the {@code ->skip} lexer command or call\n * {@link Lexer//skip} do not produce tokens at all, so input text matched by\n * such a rule will not be available as part of the token stream, regardless of\n * channel.</p>\n */\nexport default class CommonTokenStream extends BufferedTokenStream {\n    constructor(lexer, channel) {\n        super(lexer);\n        this.channel = channel===undefined ? Token.DEFAULT_CHANNEL : channel;\n    }\n\n    adjustSeekIndex(i) {\n        return this.nextTokenOnChannel(i, this.channel);\n    }\n\n    LB(k) {\n        if (k===0 || this.index-k<0) {\n            return null;\n        }\n        let i = this.index;\n        let n = 1;\n        // find k good tokens looking backwards\n        while (n <= k) {\n            // skip off-channel tokens\n            i = this.previousTokenOnChannel(i - 1, this.channel);\n            n += 1;\n        }\n        if (i < 0) {\n            return null;\n        }\n        return this.tokens[i];\n    }\n\n    LT(k) {\n        this.lazyInit();\n        if (k === 0) {\n            return null;\n        }\n        if (k < 0) {\n            return this.LB(-k);\n        }\n        let i = this.index;\n        let n = 1; // we know tokens[pos] is a good one\n        // find k good tokens\n        while (n < k) {\n            // skip off-channel tokens, but make sure to not look past EOF\n            if (this.sync(i + 1)) {\n                i = this.nextTokenOnChannel(i + 1, this.channel);\n            }\n            n += 1;\n        }\n        return this.tokens[i];\n    }\n\n    // Count EOF just once.\n    getNumberOfOnChannelTokens() {\n        let n = 0;\n        this.fill();\n        for (let i =0; i< this.tokens.length;i++) {\n            const t = this.tokens[i];\n            if( t.channel===this.channel) {\n                n += 1;\n            }\n            if( t.type===Token.EOF) {\n                break;\n            }\n        }\n        return n;\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport ParseTreeListener from \"./tree/ParseTreeListener.js\";\n\nexport default class TraceListener extends ParseTreeListener {\n    constructor(parser) {\n        super();\n        this.parser = parser;\n    }\n\n    enterEveryRule(ctx) {\n        console.log(\"enter   \" + this.parser.ruleNames[ctx.ruleIndex] + \", LT(1)=\" + this.parser._input.LT(1).text);\n    }\n\n    visitTerminal(node) {\n        console.log(\"consume \" + node.symbol + \" rule \" + this.parser.ruleNames[this.parser._ctx.ruleIndex]);\n    }\n\n    exitEveryRule(ctx) {\n        console.log(\"exit    \" + this.parser.ruleNames[ctx.ruleIndex] + \", LT(1)=\" + this.parser._input.LT(1).text);\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport Token from './Token.js';\nimport TerminalNode from './tree/TerminalNode.js';\nimport ErrorNode from './tree/ErrorNode.js';\nimport Recognizer from './Recognizer.js';\nimport DefaultErrorStrategy from './error/DefaultErrorStrategy.js';\nimport ATNDeserializer from './atn/ATNDeserializer.js';\nimport ATNDeserializationOptions from './atn/ATNDeserializationOptions.js';\nimport TraceListener from \"./TraceListener.js\";\n\nexport default class Parser extends Recognizer {\n    /**\n     * this is all the parsing support code essentially; most of it is error\n     * recovery stuff.\n     */\n    constructor(input) {\n        super();\n        // The input stream.\n        this._input = null;\n        /**\n         * The error handling strategy for the parser. The default value is a new\n         * instance of {@link DefaultErrorStrategy}.\n         */\n        this._errHandler = new DefaultErrorStrategy();\n        this._precedenceStack = [];\n        this._precedenceStack.push(0);\n        /**\n         * The {@link ParserRuleContext} object for the currently executing rule.\n         * this is always non-null during the parsing process.\n         */\n        this._ctx = null;\n        /**\n         * Specifies whether or not the parser should construct a parse tree during\n         * the parsing process. The default value is {@code true}.\n         */\n        this.buildParseTrees = true;\n        /**\n         * When {@link //setTrace}{@code (true)} is called, a reference to the\n         * {@link TraceListener} is stored here so it can be easily removed in a\n         * later call to {@link //setTrace}{@code (false)}. The listener itself is\n         * implemented as a parser listener so this field is not directly used by\n         * other parser methods.\n         */\n        this._tracer = null;\n        /**\n         * The list of {@link ParseTreeListener} listeners registered to receive\n         * events during the parse.\n         */\n        this._parseListeners = null;\n        /**\n         * The number of syntax errors reported during parsing. this value is\n         * incremented each time {@link //notifyErrorListeners} is called.\n         */\n        this._syntaxErrors = 0;\n        this.setInputStream(input);\n    }\n\n    // reset the parser's state\n    reset() {\n        if (this._input !== null) {\n            this._input.seek(0);\n        }\n        this._errHandler.reset(this);\n        this._ctx = null;\n        this._syntaxErrors = 0;\n        this.setTrace(false);\n        this._precedenceStack = [];\n        this._precedenceStack.push(0);\n        if (this._interp !== null) {\n            this._interp.reset();\n        }\n    }\n\n    /**\n     * Match current input symbol against {@code ttype}. If the symbol type\n     * matches, {@link ANTLRErrorStrategy//reportMatch} and {@link //consume} are\n     * called to complete the match process.\n     *\n     * <p>If the symbol type does not match,\n     * {@link ANTLRErrorStrategy//recoverInline} is called on the current error\n     * strategy to attempt recovery. If {@link //buildParseTree} is\n     * {@code true} and the token index of the symbol returned by\n     * {@link ANTLRErrorStrategy//recoverInline} is -1, the symbol is added to\n     * the parse tree by calling {@link ParserRuleContext//addErrorNode}.</p>\n     *\n     * @param ttype the token type to match\n     * @return the matched symbol\n     * @throws RecognitionException if the current input symbol did not match\n     * {@code ttype} and the error strategy could not recover from the\n     * mismatched symbol\n     */\n    match(ttype) {\n        let t = this.getCurrentToken();\n        if (t.type === ttype) {\n            this._errHandler.reportMatch(this);\n            this.consume();\n        } else {\n            t = this._errHandler.recoverInline(this);\n            if (this.buildParseTrees && t.tokenIndex === -1) {\n                // we must have conjured up a new token during single token\n                // insertion\n                // if it's not the current symbol\n                this._ctx.addErrorNode(t);\n            }\n        }\n        return t;\n    }\n\n    /**\n     * Match current input symbol as a wildcard. If the symbol type matches\n     * (i.e. has a value greater than 0), {@link ANTLRErrorStrategy//reportMatch}\n     * and {@link //consume} are called to complete the match process.\n     *\n     * <p>If the symbol type does not match,\n     * {@link ANTLRErrorStrategy//recoverInline} is called on the current error\n     * strategy to attempt recovery. If {@link //buildParseTree} is\n     * {@code true} and the token index of the symbol returned by\n     * {@link ANTLRErrorStrategy//recoverInline} is -1, the symbol is added to\n     * the parse tree by calling {@link ParserRuleContext//addErrorNode}.</p>\n     *\n     * @return the matched symbol\n     * @throws RecognitionException if the current input symbol did not match\n     * a wildcard and the error strategy could not recover from the mismatched\n     * symbol\n     */\n    matchWildcard() {\n        let t = this.getCurrentToken();\n        if (t.type > 0) {\n            this._errHandler.reportMatch(this);\n            this.consume();\n        } else {\n            t = this._errHandler.recoverInline(this);\n            if (this.buildParseTrees && t.tokenIndex === -1) {\n                // we must have conjured up a new token during single token\n                // insertion\n                // if it's not the current symbol\n                this._ctx.addErrorNode(t);\n            }\n        }\n        return t;\n    }\n\n    getParseListeners() {\n        return this._parseListeners || [];\n    }\n\n    /**\n     * Registers {@code listener} to receive events during the parsing process.\n     *\n     * <p>To support output-preserving grammar transformations (including but not\n     * limited to left-recursion removal, automated left-factoring, and\n     * optimized code generation), calls to listener methods during the parse\n     * may differ substantially from calls made by\n     * {@link ParseTreeWalker//DEFAULT} used after the parse is complete. In\n     * particular, rule entry and exit events may occur in a different order\n     * during the parse than after the parser. In addition, calls to certain\n     * rule entry methods may be omitted.</p>\n     *\n     * <p>With the following specific exceptions, calls to listener events are\n     * <em>deterministic</em>, i.e. for identical input the calls to listener\n     * methods will be the same.</p>\n     *\n     * <ul>\n     * <li>Alterations to the grammar used to generate code may change the\n     * behavior of the listener calls.</li>\n     * <li>Alterations to the command line options passed to ANTLR 4 when\n     * generating the parser may change the behavior of the listener calls.</li>\n     * <li>Changing the version of the ANTLR Tool used to generate the parser\n     * may change the behavior of the listener calls.</li>\n     * </ul>\n     *\n     * @param listener the listener to add\n     *\n     * @throws NullPointerException if {@code} listener is {@code null}\n     */\n    addParseListener(listener) {\n        if (listener === null) {\n            throw \"listener\";\n        }\n        if (this._parseListeners === null) {\n            this._parseListeners = [];\n        }\n        this._parseListeners.push(listener);\n    }\n\n    /**\n     * Remove {@code listener} from the list of parse listeners.\n     *\n     * <p>If {@code listener} is {@code null} or has not been added as a parse\n     * listener, this method does nothing.</p>\n     * @param listener the listener to remove\n     */\n    removeParseListener(listener) {\n        if (this._parseListeners !== null) {\n            const idx = this._parseListeners.indexOf(listener);\n            if (idx >= 0) {\n                this._parseListeners.splice(idx, 1);\n            }\n            if (this._parseListeners.length === 0) {\n                this._parseListeners = null;\n            }\n        }\n    }\n\n    // Remove all parse listeners.\n    removeParseListeners() {\n        this._parseListeners = null;\n    }\n\n    // Notify any parse listeners of an enter rule event.\n    triggerEnterRuleEvent() {\n        if (this._parseListeners !== null) {\n            const ctx = this._ctx;\n            this._parseListeners.forEach(function (listener) {\n                listener.enterEveryRule(ctx);\n                ctx.enterRule(listener);\n            });\n        }\n    }\n\n    /**\n     * Notify any parse listeners of an exit rule event.\n     * @see //addParseListener\n     */\n    triggerExitRuleEvent() {\n        if (this._parseListeners !== null) {\n            // reverse order walk of listeners\n            const ctx = this._ctx;\n            this._parseListeners.slice(0).reverse().forEach(function (listener) {\n                ctx.exitRule(listener);\n                listener.exitEveryRule(ctx);\n            });\n        }\n    }\n\n    getTokenFactory() {\n        return this._input.tokenSource._factory;\n    }\n\n    // Tell our token source and error strategy about a new way to create tokens.\n    setTokenFactory(factory) {\n        this._input.tokenSource._factory = factory;\n    }\n\n    /**\n     * The ATN with bypass alternatives is expensive to create so we create it\n     * lazily.\n     *\n     * @throws UnsupportedOperationException if the current parser does not\n     * implement the {@link //getSerializedATN()} method.\n     */\n    getATNWithBypassAlts() {\n        const serializedAtn = this.getSerializedATN();\n        if (serializedAtn === null) {\n            throw \"The current parser does not support an ATN with bypass alternatives.\";\n        }\n        let result = this.bypassAltsAtnCache[serializedAtn];\n        if (result === null) {\n            const deserializationOptions = new ATNDeserializationOptions();\n            deserializationOptions.generateRuleBypassTransitions = true;\n            result = new ATNDeserializer(deserializationOptions)\n                .deserialize(serializedAtn);\n            this.bypassAltsAtnCache[serializedAtn] = result;\n        }\n        return result;\n    }\n\n    getInputStream() {\n        return this.getTokenStream();\n    }\n\n    setInputStream(input) {\n        this.setTokenStream(input);\n    }\n\n    getTokenStream() {\n        return this._input;\n    }\n\n    // Set the token stream and reset the parser.\n    setTokenStream(input) {\n        this._input = null;\n        this.reset();\n        this._input = input;\n    }\n\n    /**\n\t * Gets the number of syntax errors reported during parsing. This value is\n\t * incremented each time {@link //notifyErrorListeners} is called.\t \n\t */\n    get syntaxErrorsCount() {\n        return this._syntaxErrors;\n    }\n\n\n    /**\n     * Match needs to return the current input symbol, which gets put\n     * into the label for the associated token ref; e.g., x=ID.\n     */\n    getCurrentToken() {\n        return this._input.LT(1);\n    }\n\n    notifyErrorListeners(msg, offendingToken, err) {\n        offendingToken = offendingToken || null;\n        err = err || null;\n        if (offendingToken === null) {\n            offendingToken = this.getCurrentToken();\n        }\n        this._syntaxErrors += 1;\n        const line = offendingToken.line;\n        const column = offendingToken.column;\n        const listener = this.getErrorListener();\n        listener.syntaxError(this, offendingToken, line, column, msg, err);\n    }\n\n    /**\n     * Consume and return the {@linkplain //getCurrentToken current symbol}.\n     *\n     * <p>E.g., given the following input with {@code A} being the current\n     * lookahead symbol, this function moves the cursor to {@code B} and returns\n     * {@code A}.</p>\n     *\n     * <pre>\n     * A B\n     * ^\n     * </pre>\n     *\n     * If the parser is not in error recovery mode, the consumed symbol is added\n     * to the parse tree using {@link ParserRuleContext//addChild(Token)}, and\n     * {@link ParseTreeListener//visitTerminal} is called on any parse listeners.\n     * If the parser <em>is</em> in error recovery mode, the consumed symbol is\n     * added to the parse tree using\n     * {@link ParserRuleContext//addErrorNode(Token)}, and\n     * {@link ParseTreeListener//visitErrorNode} is called on any parse\n     * listeners.\n     */\n    consume() {\n        const o = this.getCurrentToken();\n        if (o.type !== Token.EOF) {\n            this.getInputStream().consume();\n        }\n        const hasListener = this._parseListeners !== null && this._parseListeners.length > 0;\n        if (this.buildParseTrees || hasListener) {\n            let node;\n            if (this._errHandler.inErrorRecoveryMode(this)) {\n                node = this._ctx.addErrorNode(o);\n            } else {\n                node = this._ctx.addTokenNode(o);\n            }\n            node.invokingState = this.state;\n            if (hasListener) {\n                this._parseListeners.forEach(function (listener) {\n                    if (node instanceof ErrorNode || (node.isErrorNode !== undefined && node.isErrorNode())) {\n                        listener.visitErrorNode(node);\n                    } else if (node instanceof TerminalNode) {\n                        listener.visitTerminal(node);\n                    }\n                });\n            }\n        }\n        return o;\n    }\n\n    addContextToParseTree() {\n        // add current context to parent if we have a parent\n        if (this._ctx.parentCtx !== null) {\n            this._ctx.parentCtx.addChild(this._ctx);\n        }\n    }\n\n    /**\n     * Always called by generated parsers upon entry to a rule. Access field\n     * {@link //_ctx} get the current context.\n     */\n    enterRule(localctx, state, ruleIndex) {\n        this.state = state;\n        this._ctx = localctx;\n        this._ctx.start = this._input.LT(1);\n        if (this.buildParseTrees) {\n            this.addContextToParseTree();\n        }\n        this.triggerEnterRuleEvent();\n    }\n\n    exitRule() {\n        this._ctx.stop = this._input.LT(-1);\n        // trigger event on _ctx, before it reverts to parent\n        this.triggerExitRuleEvent();\n        this.state = this._ctx.invokingState;\n        this._ctx = this._ctx.parentCtx;\n    }\n\n    enterOuterAlt(localctx, altNum) {\n        localctx.setAltNumber(altNum);\n        // if we have new localctx, make sure we replace existing ctx\n        // that is previous child of parse tree\n        if (this.buildParseTrees && this._ctx !== localctx) {\n            if (this._ctx.parentCtx !== null) {\n                this._ctx.parentCtx.removeLastChild();\n                this._ctx.parentCtx.addChild(localctx);\n            }\n        }\n        this._ctx = localctx;\n    }\n\n    /**\n     * Get the precedence level for the top-most precedence rule.\n     *\n     * @return The precedence level for the top-most precedence rule, or -1 if\n     * the parser context is not nested within a precedence rule.\n     */\n    getPrecedence() {\n        if (this._precedenceStack.length === 0) {\n            return -1;\n        } else {\n            return this._precedenceStack[this._precedenceStack.length - 1];\n        }\n    }\n\n    enterRecursionRule(localctx, state, ruleIndex, precedence) {\n        this.state = state;\n        this._precedenceStack.push(precedence);\n        this._ctx = localctx;\n        this._ctx.start = this._input.LT(1);\n        this.triggerEnterRuleEvent(); // simulates rule entry for left-recursive rules\n    }\n\n    // Like {@link //enterRule} but for recursive rules.\n    pushNewRecursionContext(localctx, state, ruleIndex) {\n        const previous = this._ctx;\n        previous.parentCtx = localctx;\n        previous.invokingState = state;\n        previous.stop = this._input.LT(-1);\n\n        this._ctx = localctx;\n        this._ctx.start = previous.start;\n        if (this.buildParseTrees) {\n            this._ctx.addChild(previous);\n        }\n        this.triggerEnterRuleEvent(); // simulates rule entry for left-recursive rules\n    }\n\n    unrollRecursionContexts(parentCtx) {\n        this._precedenceStack.pop();\n        this._ctx.stop = this._input.LT(-1);\n        const retCtx = this._ctx; // save current ctx (return value)\n        // unroll so _ctx is as it was before call to recursive method\n        const parseListeners = this.getParseListeners();\n        if (parseListeners !== null && parseListeners.length > 0) {\n            while (this._ctx !== parentCtx) {\n                this.triggerExitRuleEvent();\n                this._ctx = this._ctx.parentCtx;\n            }\n        } else {\n            this._ctx = parentCtx;\n        }\n        // hook into tree\n        retCtx.parentCtx = parentCtx;\n        if (this.buildParseTrees && parentCtx !== null) {\n            // add return ctx into invoking rule's tree\n            parentCtx.addChild(retCtx);\n        }\n    }\n\n    getInvokingContext(ruleIndex) {\n        let ctx = this._ctx;\n        while (ctx !== null) {\n            if (ctx.ruleIndex === ruleIndex) {\n                return ctx;\n            }\n            ctx = ctx.parentCtx;\n        }\n        return null;\n    }\n\n    precpred(localctx, precedence) {\n        return precedence >= this._precedenceStack[this._precedenceStack.length - 1];\n    }\n\n    inContext(context) {\n        // TODO: useful in parser?\n        return false;\n    }\n\n    /**\n     * Checks whether or not {@code symbol} can follow the current state in the\n     * ATN. The behavior of this method is equivalent to the following, but is\n     * implemented such that the complete context-sensitive follow set does not\n     * need to be explicitly constructed.\n     *\n     * <pre>\n     * return getExpectedTokens().contains(symbol);\n     * </pre>\n     *\n     * @param symbol the symbol type to check\n     * @return {@code true} if {@code symbol} can follow the current state in\n     * the ATN, otherwise {@code false}.\n     */\n    isExpectedToken(symbol) {\n        const atn = this._interp.atn;\n        let ctx = this._ctx;\n        const s = atn.states[this.state];\n        let following = atn.nextTokens(s);\n        if (following.contains(symbol)) {\n            return true;\n        }\n        if (!following.contains(Token.EPSILON)) {\n            return false;\n        }\n        while (ctx !== null && ctx.invokingState >= 0 && following.contains(Token.EPSILON)) {\n            const invokingState = atn.states[ctx.invokingState];\n            const rt = invokingState.transitions[0];\n            following = atn.nextTokens(rt.followState);\n            if (following.contains(symbol)) {\n                return true;\n            }\n            ctx = ctx.parentCtx;\n        }\n        if (following.contains(Token.EPSILON) && symbol === Token.EOF) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Computes the set of input symbols which could follow the current parser\n     * state and context, as given by {@link //getState} and {@link //getContext},\n     * respectively.\n     *\n     * @see ATN//getExpectedTokens(int, RuleContext)\n     */\n    getExpectedTokens() {\n        return this._interp.atn.getExpectedTokens(this.state, this._ctx);\n    }\n\n    getExpectedTokensWithinCurrentRule() {\n        const atn = this._interp.atn;\n        const s = atn.states[this.state];\n        return atn.nextTokens(s);\n    }\n\n    // Get a rule's index (i.e., {@code RULE_ruleName} field) or -1 if not found.\n    getRuleIndex(ruleName) {\n        const ruleIndex = this.getRuleIndexMap()[ruleName];\n        if (ruleIndex !== null) {\n            return ruleIndex;\n        } else {\n            return -1;\n        }\n    }\n\n    /**\n     * Return List&lt;String&gt; of the rule names in your parser instance\n     * leading up to a call to the current rule. You could override if\n     * you want more details such as the file/line info of where\n     * in the ATN a rule is invoked.\n     *\n     * this is very useful for error messages.\n     */\n    getRuleInvocationStack(p) {\n        p = p || null;\n        if (p === null) {\n            p = this._ctx;\n        }\n        const stack = [];\n        while (p !== null) {\n            // compute what follows who invoked us\n            const ruleIndex = p.ruleIndex;\n            if (ruleIndex < 0) {\n                stack.push(\"n/a\");\n            } else {\n                stack.push(this.ruleNames[ruleIndex]);\n            }\n            p = p.parentCtx;\n        }\n        return stack;\n    }\n\n    // For debugging and other purposes.\n    getDFAStrings() {\n        return this._interp.decisionToDFA.toString();\n    }\n\n    // For debugging and other purposes.\n    dumpDFA() {\n        let seenOne = false;\n        for (let i = 0; i < this._interp.decisionToDFA.length; i++) {\n            const dfa = this._interp.decisionToDFA[i];\n            if (dfa.states.length > 0) {\n                if (seenOne) {\n                    console.log();\n                }\n                this.printer.println(\"Decision \" + dfa.decision + \":\");\n                this.printer.print(dfa.toString(this.literalNames, this.symbolicNames));\n                seenOne = true;\n            }\n        }\n    }\n\n    getSourceName() {\n        return this._input.getSourceName();\n    }\n\n    /**\n     * During a parse is sometimes useful to listen in on the rule entry and exit\n     * events as well as token matches. this is for quick and dirty debugging.\n     */\n    setTrace(trace) {\n        if (!trace) {\n            this.removeParseListener(this._tracer);\n            this._tracer = null;\n        } else {\n            if (this._tracer !== null) {\n                this.removeParseListener(this._tracer);\n            }\n            this._tracer = new TraceListener(this);\n            this.addParseListener(this._tracer);\n        }\n    }\n}\n\n/**\n * this field maps from the serialized ATN string to the deserialized {@link\n    * ATN} with\n * bypass alternatives.\n *\n * @see ATNDeserializationOptions//isGenerateRuleBypassTransitions()\n */\nParser.bypassAltsAtnCache = {};\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport Interval from \"../misc/Interval.js\";\nimport Token from '../Token.js';\nimport TerminalNode from \"./TerminalNode.js\";\n\nexport default class TerminalNodeImpl extends TerminalNode {\n    constructor(symbol) {\n        super();\n        this.parentCtx = null;\n        this.symbol = symbol;\n    }\n\n    getChild(i) {\n        return null;\n    }\n\n    getSymbol() {\n        return this.symbol;\n    }\n\n    getParent() {\n        return this.parentCtx;\n    }\n\n    getPayload() {\n        return this.symbol;\n    }\n\n    getSourceInterval() {\n        if (this.symbol === null) {\n            return Interval.INVALID_INTERVAL;\n        }\n        const tokenIndex = this.symbol.tokenIndex;\n        return new Interval(tokenIndex, tokenIndex);\n    }\n\n    getChildCount() {\n        return 0;\n    }\n\n    accept(visitor) {\n        return visitor.visitTerminal(this);\n    }\n\n    getText() {\n        return this.symbol.text;\n    }\n\n    toString() {\n        if (this.symbol.type === Token.EOF) {\n            return \"<EOF>\";\n        } else {\n            return this.symbol.text;\n        }\n    }\n}\n\n", "/* Copyright (c) 2012-2022 The ANTLR Project Contributors. All rights reserved.\n * Use is of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n/**\n * Represents a token that was consumed during resynchronization\n * rather than during a valid match operation. For example,\n * we will create this kind of a node during single token insertion\n * and deletion as well as during \"consume until error recovery set\"\n * upon no viable alternative exceptions.\n */\nimport TerminalNodeImpl from \"./TerminalNodeImpl.js\";\n\nexport default class ErrorNodeImpl extends TerminalNodeImpl {\n    constructor(token) {\n        super(token);\n    }\n\n    isErrorNode() {\n        return true;\n    }\n\n    accept(visitor) {\n        return visitor.visitErrorNode(this);\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nimport RuleContext from './RuleContext.js';\nimport TerminalNode from '../tree/TerminalNode.js';\nimport TerminalNodeImpl from '../tree/TerminalNodeImpl.js';\nimport ErrorNodeImpl from '../tree/ErrorNodeImpl.js';\nimport Interval from \"../misc/Interval.js\";\n\n/**\n * A rule invocation record for parsing.\n *\n *  Contains all of the information about the current rule not stored in the\n *  RuleContext. It handles parse tree children list, Any ATN state\n *  tracing, and the default values available for rule indications:\n *  start, stop, rule index, current alt number, current\n *  ATN state.\n *\n *  Subclasses made for each rule and grammar track the parameters,\n *  return values, locals, and labels specific to that rule. These\n *  are the objects that are returned from rules.\n *\n *  Note text is not an actual field of a rule return value; it is computed\n *  from start and stop using the input stream's toString() method.  I\n *  could add a ctor to this so that we can pass in and store the input\n *  stream, but I'm not sure we want to do that.  It would seem to be undefined\n *  to get the .text property anyway if the rule matches tokens from multiple\n *  input streams.\n *\n *  I do not use getters for fields of objects that are used simply to\n *  group values such as this aggregate.  The getters/setters are there to\n *  satisfy the superclass interface.\n */\nexport default class ParserRuleContext extends RuleContext {\n\n\tconstructor(parent, invokingStateNumber) {\n\t\tsuper(parent, invokingStateNumber);\n\t\t/**\n\t\t * If we are debugging or building a parse tree for a visitor,\n\t\t * we need to track all of the tokens and rule invocations associated\n\t\t * with this rule's context. This is empty for parsing w/o tree constr.\n\t\t * operation because we don't the need to track the details about\n\t\t * how we parse this rule.\n\t\t */\n\t\tthis.children = null;\n\t\tthis.start = null;\n\t\tthis.stop = null;\n\t\t/**\n\t\t * The exception that forced this rule to return. If the rule successfully\n\t\t * completed, this is {@code null}.\n\t\t */\n\t\tthis.exception = null;\n\t}\n\n\t// COPY a ctx (I'm deliberately not using copy constructor)\n\tcopyFrom(ctx) {\n\t\t// from RuleContext\n\t\tthis.parentCtx = ctx.parentCtx;\n\t\tthis.invokingState = ctx.invokingState;\n\t\tthis.children = null;\n\t\tthis.start = ctx.start;\n\t\tthis.stop = ctx.stop;\n\t\t// copy any error nodes to alt label node\n\t\tif(ctx.children) {\n\t\t\tthis.children = [];\n\t\t\t// reset parent pointer for any error nodes\n\t\t\tctx.children.map(function(child) {\n\t\t\t\tif (child instanceof ErrorNodeImpl) {\n\t\t\t\t\tthis.children.push(child);\n\t\t\t\t\tchild.parentCtx = this;\n\t\t\t\t}\n\t\t\t}, this);\n\t\t}\n\t}\n\n\t// Double dispatch methods for listeners\n\tenterRule(listener) {\n\t}\n\n\texitRule(listener) {\n\t}\n\n\t// Does not set parent link; other add methods do that\n\taddChild(child) {\n\t\tif (this.children === null) {\n\t\t\tthis.children = [];\n\t\t}\n\t\tthis.children.push(child);\n\t\treturn child;\n\t}\n\n\t/** Used by enterOuterAlt to toss out a RuleContext previously added as\n\t * we entered a rule. If we have // label, we will need to remove\n\t * generic ruleContext object.\n\t */\n\tremoveLastChild() {\n\t\tif (this.children !== null) {\n\t\t\tthis.children.pop();\n\t\t}\n\t}\n\n\taddTokenNode(token) {\n\t\tconst node = new TerminalNodeImpl(token);\n\t\tthis.addChild(node);\n\t\tnode.parentCtx = this;\n\t\treturn node;\n\t}\n\n\taddErrorNode(badToken) {\n\t\tconst node = new ErrorNodeImpl(badToken);\n\t\tthis.addChild(node);\n\t\tnode.parentCtx = this;\n\t\treturn node;\n\t}\n\n\tgetChild(i, type) {\n\t\ttype = type || null;\n\t\tif (this.children === null || i < 0 || i >= this.children.length) {\n\t\t\treturn null;\n\t\t}\n\t\tif (type === null) {\n\t\t\treturn this.children[i];\n\t\t} else {\n\t\t\tfor(let j=0; j<this.children.length; j++) {\n\t\t\t\tconst child = this.children[j];\n\t\t\t\tif(child instanceof type) {\n\t\t\t\t\tif(i===0) {\n\t\t\t\t\t\treturn child;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ti -= 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tgetToken(ttype, i) {\n\t\tif (this.children === null || i < 0 || i >= this.children.length) {\n\t\t\treturn null;\n\t\t}\n\t\tfor(let j=0; j<this.children.length; j++) {\n\t\t\tconst child = this.children[j];\n\t\t\tif (child instanceof TerminalNode) {\n\t\t\t\tif (child.symbol.type === ttype) {\n\t\t\t\t\tif(i===0) {\n\t\t\t\t\t\treturn child;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ti -= 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetTokens(ttype ) {\n\t\tif (this.children=== null) {\n\t\t\treturn [];\n\t\t} else {\n\t\t\tconst tokens = [];\n\t\t\tfor(let j=0; j<this.children.length; j++) {\n\t\t\t\tconst child = this.children[j];\n\t\t\t\tif (child instanceof TerminalNode) {\n\t\t\t\t\tif (child.symbol.type === ttype) {\n\t\t\t\t\t\ttokens.push(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tokens;\n\t\t}\n\t}\n\n\tgetTypedRuleContext(ctxType, i) {\n\t\treturn this.getChild(i, ctxType);\n\t}\n\n\tgetTypedRuleContexts(ctxType) {\n\t\tif (this.children=== null) {\n\t\t\treturn [];\n\t\t} else {\n\t\t\tconst contexts = [];\n\t\t\tfor(let j=0; j<this.children.length; j++) {\n\t\t\t\tconst child = this.children[j];\n\t\t\t\tif (child instanceof ctxType) {\n\t\t\t\t\tcontexts.push(child);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn contexts;\n\t\t}\n\t}\n\n\tgetChildCount() {\n\t\tif (this.children=== null) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn this.children.length;\n\t\t}\n\t}\n\n\tgetSourceInterval() {\n\t\tif( this.start === null || this.stop === null) {\n\t\t\treturn Interval.INVALID_INTERVAL;\n\t\t} else {\n\t\t\treturn new Interval(this.start.tokenIndex, this.stop.tokenIndex);\n\t\t}\n\t}\n}\n\nRuleContext.EMPTY = new ParserRuleContext();\n\n\n", "import Token from \"./Token.js\";\nimport Interval from \"./misc/Interval.js\";\n\n/**\n * @typedef {import(\"./CommonTokenStream\").default} CommonTokenStream\n * @typedef {Array<RewriteOperation | undefined>} Rewrites\n * @typedef {unknown} Text\n */\n\nexport default class TokenStreamRewriter {\n    // eslint-disable-next-line no-undef\n    static DEFAULT_PROGRAM_NAME = \"default\";\n\n    /**\n     * @param {CommonTokenStream} tokens The token stream to modify\n     */\n    constructor(tokens) {\n        this.tokens = tokens;\n        /** @type {Map<string, Rewrites>} */\n        this.programs = new Map();\n    }\n\n    /**\n     * @returns {CommonTokenStream}\n     */\n    getTokenStream() {\n        return this.tokens;\n    }\n\n    /**\n     * Insert the supplied text after the specified token (or token index)\n     * @param {Token | number} tokenOrIndex\n     * @param {Text} text\n     * @param {string} [programName]\n     */\n    insertAfter(tokenOrIndex, text, programName = TokenStreamRewriter.DEFAULT_PROGRAM_NAME) {\n        /** @type {number} */\n        let index;\n        if (typeof tokenOrIndex === \"number\") {\n            index = tokenOrIndex;\n        } else {\n            index = tokenOrIndex.tokenIndex;\n        }\n\n        // to insert after, just insert before next index (even if past end)\n        let rewrites = this.getProgram(programName);\n        let op = new InsertAfterOp(this.tokens, index, rewrites.length, text);\n        rewrites.push(op);\n    }\n\n    /**\n     * Insert the supplied text before the specified token (or token index)\n     * @param {Token | number} tokenOrIndex\n     * @param {Text} text\n     * @param {string} [programName]\n     */\n    insertBefore(tokenOrIndex, text, programName = TokenStreamRewriter.DEFAULT_PROGRAM_NAME) {\n        /** @type {number} */\n        let index;\n        if (typeof tokenOrIndex === \"number\") {\n            index = tokenOrIndex;\n        } else {\n            index = tokenOrIndex.tokenIndex;\n        }\n\n        const rewrites = this.getProgram(programName);\n        const op = new InsertBeforeOp(this.tokens, index, rewrites.length, text);\n        rewrites.push(op);\n    }\n\n    /**\n     * Replace the specified token with the supplied text\n     * @param {Token | number} tokenOrIndex\n     * @param {Text} text\n     * @param {string} [programName]\n     */\n    replaceSingle(tokenOrIndex, text, programName = TokenStreamRewriter.DEFAULT_PROGRAM_NAME) {\n        this.replace(tokenOrIndex, tokenOrIndex, text, programName);\n    }\n\n    /**\n     * Replace the specified range of tokens with the supplied text\n     * @param {Token | number} from\n     * @param {Token | number} to\n     * @param {Text} text\n     * @param {string} [programName]\n     */\n    replace(from, to, text, programName = TokenStreamRewriter.DEFAULT_PROGRAM_NAME) {\n        if (typeof from !== \"number\") {\n            from = from.tokenIndex;\n        }\n        if (typeof to !== \"number\") {\n            to = to.tokenIndex;\n        }\n        if (from > to || from < 0 || to < 0 || to >= this.tokens.size) {\n            throw new RangeError(`replace: range invalid: ${from}..${to}(size=${this.tokens.size})`);\n        }\n        let rewrites = this.getProgram(programName);\n        let op = new ReplaceOp(this.tokens, from, to, rewrites.length, text);\n        rewrites.push(op);\n    }\n\n    /**\n     * Delete the specified range of tokens\n     * @param {number | Token} from\n     * @param {number | Token} to\n     * @param {string} [programName]\n     */\n    delete(from, to, programName = TokenStreamRewriter.DEFAULT_PROGRAM_NAME) {\n        if (typeof to === \"undefined\") {\n            to = from;\n        }\n        this.replace(from, to, null, programName);\n    }\n\n    /**\n     * @param {string} name\n     * @returns {Rewrites}\n     */\n    getProgram(name) {\n        let is = this.programs.get(name);\n        if (is == null) {\n            is = this.initializeProgram(name);\n        }\n        return is;\n    }\n\n    /**\n     * @param {string} name\n     * @returns {Rewrites}\n     */\n    initializeProgram(name) {\n        const is = [];\n        this.programs.set(name, is);\n        return is;\n    }\n\n    /**\n     * Return the text from the original tokens altered per the instructions given to this rewriter\n     * @param {Interval | string} [intervalOrProgram]\n     * @param {string} [programName]\n     * @returns {string}\n     */\n    getText(intervalOrProgram, programName = TokenStreamRewriter.DEFAULT_PROGRAM_NAME) {\n        let interval;\n        if (intervalOrProgram instanceof Interval) {\n            interval = intervalOrProgram;\n        } else {\n            interval = new Interval(0, this.tokens.size - 1);\n        }\n\n        if (typeof intervalOrProgram === \"string\") {\n            programName = intervalOrProgram;\n        }\n\n        const rewrites = this.programs.get(programName);\n        let start = interval.start;\n        let stop = interval.stop;\n\n        // ensure start/end are in range\n        if (stop > this.tokens.size - 1) {\n            stop = this.tokens.size - 1;\n        }\n        if (start < 0) {\n            start = 0;\n        }\n\n        if (rewrites == null || rewrites.length === 0) {\n            return this.tokens.getText(new Interval(start, stop)); // no instructions to execute\n        }\n\n        let buf = [];\n\n        // First, optimize instruction stream\n        let indexToOp = this.reduceToSingleOperationPerIndex(rewrites);\n\n        // Walk buffer, executing instructions and emitting tokens\n        let i = start;\n        while (i <= stop && i < this.tokens.size) {\n            let op = indexToOp.get(i);\n            indexToOp.delete(i); // remove so any left have index size-1\n            let t = this.tokens.get(i);\n            if (op == null) {\n                // no operation at that index, just dump token\n                if (t.type !== Token.EOF) {\n                    buf.push(String(t.text));\n                }\n                i++; // move to next token\n            }\n            else {\n                i = op.execute(buf); // execute operation and skip\n            }\n        }\n\n        // include stuff after end if it's last index in buffer\n        // So, if they did an insertAfter(lastValidIndex, \"foo\"), include\n        // foo if end==lastValidIndex.\n        if (stop === this.tokens.size - 1) {\n            // Scan any remaining operations after last token\n            // should be included (they will be inserts).\n            for (const op of indexToOp.values()) {\n                if (op.index >= this.tokens.size - 1) {\n                    buf.push(op.text.toString());\n                }\n            }\n        }\n\n        return buf.join(\"\");\n    }\n\n    /**\n     * @param {Rewrites} rewrites\n     * @returns {Map<number, RewriteOperation>} a map from token index to operation\n     */\n    reduceToSingleOperationPerIndex(rewrites) {\n        // WALK REPLACES\n        for (let i = 0; i < rewrites.length; i++) {\n            let op = rewrites[i];\n            if (op == null) {\n                continue;\n            }\n            if (!(op instanceof ReplaceOp)) {\n                continue;\n            }\n            let rop = op;\n            // Wipe prior inserts within range\n            let inserts = this.getKindOfOps(rewrites, InsertBeforeOp, i);\n            for (let iop of inserts) {\n                if (iop.index === rop.index) {\n                    // E.g., insert before 2, delete 2..2; update replace\n                    // text to include insert before, kill insert\n                    rewrites[iop.instructionIndex] = undefined;\n                    rop.text = iop.text.toString() + (rop.text != null ? rop.text.toString() : \"\");\n                }\n                else if (iop.index > rop.index && iop.index <= rop.lastIndex) {\n                    // delete insert as it's a no-op.\n                    rewrites[iop.instructionIndex] = undefined;\n                }\n            }\n            // Drop any prior replaces contained within\n            let prevReplaces = this.getKindOfOps(rewrites, ReplaceOp, i);\n            for (let prevRop of prevReplaces) {\n                if (prevRop.index >= rop.index && prevRop.lastIndex <= rop.lastIndex) {\n                    // delete replace as it's a no-op.\n                    rewrites[prevRop.instructionIndex] = undefined;\n                    continue;\n                }\n                // throw exception unless disjoint or identical\n                let disjoint =\n                    prevRop.lastIndex < rop.index || prevRop.index > rop.lastIndex;\n                // Delete special case of replace (text==null):\n                // D.i-j.u D.x-y.v\t| boundaries overlap\tcombine to max(min)..max(right)\n                if (prevRop.text == null && rop.text == null && !disjoint) {\n                    rewrites[prevRop.instructionIndex] = undefined; // kill first delete\n                    rop.index = Math.min(prevRop.index, rop.index);\n                    rop.lastIndex = Math.max(prevRop.lastIndex, rop.lastIndex);\n                }\n                else if (!disjoint) {\n                    throw new Error(`replace op boundaries of ${rop} overlap with previous ${prevRop}`);\n                }\n            }\n        }\n\n        // WALK INSERTS\n        for (let i = 0; i < rewrites.length; i++) {\n            let op = rewrites[i];\n            if (op == null) {\n                continue;\n            }\n            if (!(op instanceof InsertBeforeOp)) {\n                continue;\n            }\n            let iop = op;\n            // combine current insert with prior if any at same index\n            let prevInserts = this.getKindOfOps(rewrites, InsertBeforeOp, i);\n            for (let prevIop of prevInserts) {\n                if (prevIop.index === iop.index) {\n                    if (prevIop instanceof InsertAfterOp) {\n                        iop.text = this.catOpText(prevIop.text, iop.text);\n                        rewrites[prevIop.instructionIndex] = undefined;\n                    }\n                    else if (prevIop instanceof InsertBeforeOp) { // combine objects\n                        // convert to strings...we're in process of toString'ing\n                        // whole token buffer so no lazy eval issue with any templates\n                        iop.text = this.catOpText(iop.text, prevIop.text);\n                        // delete redundant prior insert\n                        rewrites[prevIop.instructionIndex] = undefined;\n                    }\n                }\n            }\n            // look for replaces where iop.index is in range; error\n            let prevReplaces = this.getKindOfOps(rewrites, ReplaceOp, i);\n            for (let rop of prevReplaces) {\n                if (iop.index === rop.index) {\n                    rop.text = this.catOpText(iop.text, rop.text);\n                    rewrites[i] = undefined;\t// delete current insert\n                    continue;\n                }\n                if (iop.index >= rop.index && iop.index <= rop.lastIndex) {\n                    throw new Error(`insert op ${iop} within boundaries of previous ${rop}`);\n                }\n            }\n        }\n\n        /** @type {Map<number, RewriteOperation>} */\n        let m = new Map();\n        for (let op of rewrites) {\n            if (op == null) {\n                // ignore deleted ops\n                continue;\n            }\n            if (m.get(op.index) != null) {\n                throw new Error(\"should only be one op per index\");\n            }\n            m.set(op.index, op);\n        }\n        return m;\n    }\n\n    /**\n     * @param {Text} a\n     * @param {Text} b\n     * @returns {string}\n     */\n    catOpText(a, b) {\n        let x = \"\";\n        let y = \"\";\n        if (a != null) {\n            x = a.toString();\n        }\n        if (b != null) {\n            y = b.toString();\n        }\n        return x + y;\n    }\n\n    /**\n     * Get all operations before an index of a particular kind\n     * @param {Rewrites} rewrites\n     * @param {any} kind\n     * @param {number} before\n     */\n    getKindOfOps(rewrites, kind, before) {\n        return rewrites.slice(0, before).filter(op => op && op instanceof kind);\n    }\n}\n\nclass RewriteOperation {\n    /**\n     * @param {CommonTokenStream} tokens\n     * @param {number} index\n     * @param {number} instructionIndex\n     * @param {Text} text\n     */\n    constructor(tokens, index, instructionIndex, text) {\n        this.tokens = tokens;\n        this.instructionIndex = instructionIndex;\n        this.index = index;\n        this.text = text === undefined ? \"\" : text;\n    }\n\n    toString() {\n        let opName = this.constructor.name;\n        const $index = opName.indexOf(\"$\");\n        opName = opName.substring($index + 1, opName.length);\n        return \"<\" + opName + \"@\" + this.tokens.get(this.index) +\n            \":\\\"\" + this.text + \"\\\">\";\n    }\n}\n\nclass InsertBeforeOp extends RewriteOperation {\n    /**\n     * @param {CommonTokenStream} tokens\n     * @param {number} index\n     * @param {number} instructionIndex\n     * @param {Text} text\n     */\n    constructor(tokens, index, instructionIndex, text) {\n        super(tokens, index, instructionIndex, text);\n    }\n\n    /**\n     * @param {string[]} buf\n     * @returns {number} the index of the next token to operate on\n     */\n    execute(buf) {\n        if (this.text) {\n            buf.push(this.text.toString());\n        }\n        \n        if (this.tokens.get(this.index).type !== Token.EOF) {\n            buf.push(String(this.tokens.get(this.index).text));\n        }\n        return this.index + 1;\n    }\n}\n\nclass InsertAfterOp extends InsertBeforeOp {\n    /**\n     * @param {CommonTokenStream} tokens\n     * @param {number} index\n     * @param {number} instructionIndex\n     * @param {Text} text\n     */\n    constructor(tokens, index, instructionIndex, text) {\n        super(tokens, index + 1, instructionIndex, text); // insert after is insert before index+1\n    }\n}\n\nclass ReplaceOp extends RewriteOperation {\n    /**\n     * @param {CommonTokenStream} tokens\n     * @param {number} from\n     * @param {number} to\n     * @param {number} instructionIndex\n     * @param {Text} text\n     */\n    constructor(tokens, from, to, instructionIndex, text) {\n        super(tokens, from, instructionIndex, text);\n        this.lastIndex = to;\n    }\n\n    /**\n     * @param {string[]} buf\n     * @returns {number} the index of the next token to operate on\n     */\n    execute(buf) {\n        if (this.text) {\n            buf.push(this.text.toString());\n        }\n        return this.lastIndex + 1;\n    }\n\n    toString() {\n        if (this.text == null) {\n            return \"<DeleteOp@\" + this.tokens.get(this.index) +\n                \"..\" + this.tokens.get(this.lastIndex) + \">\";\n        }\n        return \"<ReplaceOp@\" + this.tokens.get(this.index) +\n            \"..\" + this.tokens.get(this.lastIndex) + \":\\\"\" + this.text + \"\\\">\";\n    }\n}\n", "/* Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nimport { default as atn } from './atn/index.js';\nimport { default as dfa } from './dfa/index.js';\nimport { default as context } from './context/index.js';\nimport { default as misc } from './misc/index.js';\nimport { default as tree } from './tree/index.js';\nimport { default as error } from './error/index.js';\nimport { default as CharStreams } from './CharStreams.js';\nimport { default as Utils } from './utils/index.js';\n\nimport Token from './Token.js';\nimport CommonToken from './CommonToken.js';\nimport InputStream from './InputStream.js';\nimport CharStream from './CharStream.js';\nimport CommonTokenStream from './CommonTokenStream.js';\nimport Lexer from './Lexer.js';\nimport Parser from './Parser.js';\n\nimport RuleContext from './context/RuleContext.js';\nimport ParserRuleContext from './context/ParserRuleContext.js';\nimport ATN from './atn/ATN.js';\nimport PredictionMode from './atn/PredictionMode.js';\nimport LL1Analyzer from './atn/LL1Analyzer.js';\nimport ATNDeserializer from './atn/ATNDeserializer.js';\nimport LexerATNSimulator from './atn/LexerATNSimulator.js';\nimport ParserATNSimulator from './atn/ParserATNSimulator.js';\nimport PredictionContextCache from './atn/PredictionContextCache.js';\nimport DFA from \"./dfa/DFA.js\";\nimport RecognitionException from \"./error/RecognitionException.js\";\nimport FailedPredicateException from \"./error/FailedPredicateException.js\";\nimport NoViableAltException from \"./error/NoViableAltException.js\";\nimport BailErrorStrategy from \"./error/BailErrorStrategy.js\";\nimport DefaultErrorStrategy from \"./error/DefaultErrorStrategy.js\";\nimport Interval from './misc/Interval.js';\nimport IntervalSet from './misc/IntervalSet.js';\nimport ParseTreeListener from \"./tree/ParseTreeListener.js\";\nimport ParseTreeVisitor from \"./tree/ParseTreeVisitor.js\";\nimport ParseTreeWalker from \"./tree/ParseTreeWalker.js\";\nimport ErrorListener from \"./error/ErrorListener.js\"\nimport DiagnosticErrorListener from \"./error/DiagnosticErrorListener.js\"\nimport RuleNode from \"./tree/RuleNode.js\"\nimport TerminalNode from \"./tree/TerminalNode.js\"\nimport arrayToString from \"./utils/arrayToString.js\"\nimport TokenStreamRewriter from './TokenStreamRewriter.js';\nimport InputMismatchException from \"./error/InputMismatchException.js\"\n\nexport default {\n    atn, dfa, context, misc, tree, error, Token, CommonToken, CharStreams, CharStream, InputStream, CommonTokenStream, Lexer, Parser,\n    ParserRuleContext, Interval, IntervalSet, LL1Analyzer, Utils, TokenStreamRewriter\n}\n\nexport {\n    Token, CommonToken, CharStreams, CharStream, InputStream, CommonTokenStream, Lexer, Parser,\n    RuleNode, TerminalNode, ParseTreeWalker, RuleContext, ParserRuleContext, Interval, IntervalSet,\n    PredictionMode, LL1Analyzer, ParseTreeListener, ParseTreeVisitor, ATN, ATNDeserializer, PredictionContextCache, LexerATNSimulator, ParserATNSimulator, DFA,\n    RecognitionException, NoViableAltException, FailedPredicateException, ErrorListener, DiagnosticErrorListener, BailErrorStrategy, DefaultErrorStrategy,\n    arrayToString, TokenStreamRewriter, InputMismatchException\n}\n", "// Generated from it/bancaditalia/oss/vtl/grammar/Vtl.g4 by ANTLR 4.13.1\r\n// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols\r\n\r\nimport {\r\n\tATN,\r\n\tATNDeserializer, DecisionState, DFA, FailedPredicateException,\r\n\tRecognitionException, NoViableAltException, BailErrorStrategy,\r\n\tParser, ParserATNSimulator,\r\n\tRuleContext, ParserRuleContext, PredictionMode, PredictionContextCache,\r\n\tTerminalNode, RuleNode,\r\n\tToken, TokenStream,\r\n\tInterval, IntervalSet\r\n} from 'antlr4';\r\nimport VtlVisitor from \"./VtlVisitor.js\";\r\n\r\n// for running tests with parameters, TODO: discuss strategy for typed parameters in CI\r\n// eslint-disable-next-line no-unused-vars\r\ntype int = number;\r\n\r\nexport default class Vtl extends Parser {\r\n\tpublic static readonly LPAREN = 1;\r\n\tpublic static readonly RPAREN = 2;\r\n\tpublic static readonly QLPAREN = 3;\r\n\tpublic static readonly QRPAREN = 4;\r\n\tpublic static readonly GLPAREN = 5;\r\n\tpublic static readonly GRPAREN = 6;\r\n\tpublic static readonly EQ = 7;\r\n\tpublic static readonly LT = 8;\r\n\tpublic static readonly MT = 9;\r\n\tpublic static readonly ME = 10;\r\n\tpublic static readonly NEQ = 11;\r\n\tpublic static readonly LE = 12;\r\n\tpublic static readonly PLUS = 13;\r\n\tpublic static readonly MINUS = 14;\r\n\tpublic static readonly MUL = 15;\r\n\tpublic static readonly DIV = 16;\r\n\tpublic static readonly COMMA = 17;\r\n\tpublic static readonly POINTER = 18;\r\n\tpublic static readonly ASSIGN = 19;\r\n\tpublic static readonly MEMBERSHIP = 20;\r\n\tpublic static readonly COLON = 21;\r\n\tpublic static readonly EVAL = 22;\r\n\tpublic static readonly IF = 23;\r\n\tpublic static readonly THEN = 24;\r\n\tpublic static readonly ELSE = 25;\r\n\tpublic static readonly USING = 26;\r\n\tpublic static readonly WITH = 27;\r\n\tpublic static readonly CURRENT_DATE = 28;\r\n\tpublic static readonly ON = 29;\r\n\tpublic static readonly DROP = 30;\r\n\tpublic static readonly KEEP = 31;\r\n\tpublic static readonly CALC = 32;\r\n\tpublic static readonly ATTRCALC = 33;\r\n\tpublic static readonly RENAME = 34;\r\n\tpublic static readonly AS = 35;\r\n\tpublic static readonly AND = 36;\r\n\tpublic static readonly OR = 37;\r\n\tpublic static readonly XOR = 38;\r\n\tpublic static readonly NOT = 39;\r\n\tpublic static readonly BETWEEN = 40;\r\n\tpublic static readonly IN = 41;\r\n\tpublic static readonly NOT_IN = 42;\r\n\tpublic static readonly NULL_CONSTANT = 43;\r\n\tpublic static readonly ISNULL = 44;\r\n\tpublic static readonly EX = 45;\r\n\tpublic static readonly UNION = 46;\r\n\tpublic static readonly DIFF = 47;\r\n\tpublic static readonly SYMDIFF = 48;\r\n\tpublic static readonly INTERSECT = 49;\r\n\tpublic static readonly KEYS = 50;\r\n\tpublic static readonly INTYEAR = 51;\r\n\tpublic static readonly INTMONTH = 52;\r\n\tpublic static readonly INTDAY = 53;\r\n\tpublic static readonly CHECK = 54;\r\n\tpublic static readonly EXISTS_IN = 55;\r\n\tpublic static readonly TO = 56;\r\n\tpublic static readonly RETURN = 57;\r\n\tpublic static readonly IMBALANCE = 58;\r\n\tpublic static readonly ERRORCODE = 59;\r\n\tpublic static readonly ALL = 60;\r\n\tpublic static readonly AGGREGATE = 61;\r\n\tpublic static readonly ERRORLEVEL = 62;\r\n\tpublic static readonly ORDER = 63;\r\n\tpublic static readonly BY = 64;\r\n\tpublic static readonly RANK = 65;\r\n\tpublic static readonly ASC = 66;\r\n\tpublic static readonly DESC = 67;\r\n\tpublic static readonly MIN = 68;\r\n\tpublic static readonly MAX = 69;\r\n\tpublic static readonly FIRST = 70;\r\n\tpublic static readonly LAST = 71;\r\n\tpublic static readonly INDEXOF = 72;\r\n\tpublic static readonly ABS = 73;\r\n\tpublic static readonly KEY = 74;\r\n\tpublic static readonly LN = 75;\r\n\tpublic static readonly LOG = 76;\r\n\tpublic static readonly TRUNC = 77;\r\n\tpublic static readonly ROUND = 78;\r\n\tpublic static readonly POWER = 79;\r\n\tpublic static readonly MOD = 80;\r\n\tpublic static readonly LEN = 81;\r\n\tpublic static readonly CONCAT = 82;\r\n\tpublic static readonly TRIM = 83;\r\n\tpublic static readonly UCASE = 84;\r\n\tpublic static readonly LCASE = 85;\r\n\tpublic static readonly SUBSTR = 86;\r\n\tpublic static readonly SUM = 87;\r\n\tpublic static readonly AVG = 88;\r\n\tpublic static readonly MEDIAN = 89;\r\n\tpublic static readonly COUNT = 90;\r\n\tpublic static readonly DIMENSION = 91;\r\n\tpublic static readonly MEASURE = 92;\r\n\tpublic static readonly ATTRIBUTE = 93;\r\n\tpublic static readonly FILTER = 94;\r\n\tpublic static readonly MERGE = 95;\r\n\tpublic static readonly EXP = 96;\r\n\tpublic static readonly ROLE = 97;\r\n\tpublic static readonly VIRAL = 98;\r\n\tpublic static readonly CHARSET_MATCH = 99;\r\n\tpublic static readonly TYPE = 100;\r\n\tpublic static readonly NVL = 101;\r\n\tpublic static readonly HIERARCHY = 102;\r\n\tpublic static readonly OPTIONAL = 103;\r\n\tpublic static readonly INVALID = 104;\r\n\tpublic static readonly VALUE_DOMAIN = 105;\r\n\tpublic static readonly VARIABLE = 106;\r\n\tpublic static readonly DATA = 107;\r\n\tpublic static readonly STRUCTURE = 108;\r\n\tpublic static readonly DATASET = 109;\r\n\tpublic static readonly OPERATOR = 110;\r\n\tpublic static readonly DEFINE = 111;\r\n\tpublic static readonly PUT_SYMBOL = 112;\r\n\tpublic static readonly DATAPOINT = 113;\r\n\tpublic static readonly HIERARCHICAL = 114;\r\n\tpublic static readonly RULESET = 115;\r\n\tpublic static readonly RULE = 116;\r\n\tpublic static readonly END = 117;\r\n\tpublic static readonly ALTER_DATASET = 118;\r\n\tpublic static readonly LTRIM = 119;\r\n\tpublic static readonly RTRIM = 120;\r\n\tpublic static readonly INSTR = 121;\r\n\tpublic static readonly REPLACE = 122;\r\n\tpublic static readonly CEIL = 123;\r\n\tpublic static readonly FLOOR = 124;\r\n\tpublic static readonly SQRT = 125;\r\n\tpublic static readonly ANY = 126;\r\n\tpublic static readonly SETDIFF = 127;\r\n\tpublic static readonly STDDEV_POP = 128;\r\n\tpublic static readonly STDDEV_SAMP = 129;\r\n\tpublic static readonly VAR_POP = 130;\r\n\tpublic static readonly VAR_SAMP = 131;\r\n\tpublic static readonly GROUP = 132;\r\n\tpublic static readonly EXCEPT = 133;\r\n\tpublic static readonly HAVING = 134;\r\n\tpublic static readonly FIRST_VALUE = 135;\r\n\tpublic static readonly LAST_VALUE = 136;\r\n\tpublic static readonly LAG = 137;\r\n\tpublic static readonly LEAD = 138;\r\n\tpublic static readonly RATIO_TO_REPORT = 139;\r\n\tpublic static readonly OVER = 140;\r\n\tpublic static readonly PRECEDING = 141;\r\n\tpublic static readonly FOLLOWING = 142;\r\n\tpublic static readonly UNBOUNDED = 143;\r\n\tpublic static readonly PARTITION = 144;\r\n\tpublic static readonly ROWS = 145;\r\n\tpublic static readonly RANGE = 146;\r\n\tpublic static readonly CURRENT = 147;\r\n\tpublic static readonly VALID = 148;\r\n\tpublic static readonly FILL_TIME_SERIES = 149;\r\n\tpublic static readonly FLOW_TO_STOCK = 150;\r\n\tpublic static readonly STOCK_TO_FLOW = 151;\r\n\tpublic static readonly TIMESHIFT = 152;\r\n\tpublic static readonly MEASURES = 153;\r\n\tpublic static readonly NO_MEASURES = 154;\r\n\tpublic static readonly CONDITION = 155;\r\n\tpublic static readonly BOOLEAN = 156;\r\n\tpublic static readonly DATE = 157;\r\n\tpublic static readonly TIME_PERIOD = 158;\r\n\tpublic static readonly NUMBER = 159;\r\n\tpublic static readonly STRING = 160;\r\n\tpublic static readonly TIME = 161;\r\n\tpublic static readonly INTEGER = 162;\r\n\tpublic static readonly FLOAT = 163;\r\n\tpublic static readonly LIST = 164;\r\n\tpublic static readonly RECORD = 165;\r\n\tpublic static readonly RESTRICT = 166;\r\n\tpublic static readonly YYYY = 167;\r\n\tpublic static readonly MM = 168;\r\n\tpublic static readonly DD = 169;\r\n\tpublic static readonly MAX_LENGTH = 170;\r\n\tpublic static readonly REGEXP = 171;\r\n\tpublic static readonly IS = 172;\r\n\tpublic static readonly WHEN = 173;\r\n\tpublic static readonly FROM = 174;\r\n\tpublic static readonly AGGREGATES = 175;\r\n\tpublic static readonly POINTS = 176;\r\n\tpublic static readonly POINT = 177;\r\n\tpublic static readonly TOTAL = 178;\r\n\tpublic static readonly PARTIAL = 179;\r\n\tpublic static readonly ALWAYS = 180;\r\n\tpublic static readonly INNER_JOIN = 181;\r\n\tpublic static readonly LEFT_JOIN = 182;\r\n\tpublic static readonly CROSS_JOIN = 183;\r\n\tpublic static readonly FULL_JOIN = 184;\r\n\tpublic static readonly MAPS_FROM = 185;\r\n\tpublic static readonly MAPS_TO = 186;\r\n\tpublic static readonly MAP_TO = 187;\r\n\tpublic static readonly MAP_FROM = 188;\r\n\tpublic static readonly RETURNS = 189;\r\n\tpublic static readonly PIVOT = 190;\r\n\tpublic static readonly CUSTOMPIVOT = 191;\r\n\tpublic static readonly UNPIVOT = 192;\r\n\tpublic static readonly SUBSPACE = 193;\r\n\tpublic static readonly APPLY = 194;\r\n\tpublic static readonly CONDITIONED = 195;\r\n\tpublic static readonly PERIOD_INDICATOR = 196;\r\n\tpublic static readonly SINGLE = 197;\r\n\tpublic static readonly DURATION = 198;\r\n\tpublic static readonly TIME_AGG = 199;\r\n\tpublic static readonly UNIT = 200;\r\n\tpublic static readonly VALUE = 201;\r\n\tpublic static readonly VALUEDOMAINS = 202;\r\n\tpublic static readonly VARIABLES = 203;\r\n\tpublic static readonly INPUT = 204;\r\n\tpublic static readonly OUTPUT = 205;\r\n\tpublic static readonly CAST = 206;\r\n\tpublic static readonly RULE_PRIORITY = 207;\r\n\tpublic static readonly DATASET_PRIORITY = 208;\r\n\tpublic static readonly DEFAULT = 209;\r\n\tpublic static readonly CHECK_DATAPOINT = 210;\r\n\tpublic static readonly CHECK_HIERARCHY = 211;\r\n\tpublic static readonly COMPUTED = 212;\r\n\tpublic static readonly NON_NULL = 213;\r\n\tpublic static readonly NON_ZERO = 214;\r\n\tpublic static readonly PARTIAL_NULL = 215;\r\n\tpublic static readonly PARTIAL_ZERO = 216;\r\n\tpublic static readonly ALWAYS_NULL = 217;\r\n\tpublic static readonly ALWAYS_ZERO = 218;\r\n\tpublic static readonly COMPONENTS = 219;\r\n\tpublic static readonly ALL_MEASURES = 220;\r\n\tpublic static readonly SCALAR = 221;\r\n\tpublic static readonly COMPONENT = 222;\r\n\tpublic static readonly DATAPOINT_ON_VD = 223;\r\n\tpublic static readonly DATAPOINT_ON_VAR = 224;\r\n\tpublic static readonly HIERARCHICAL_ON_VD = 225;\r\n\tpublic static readonly HIERARCHICAL_ON_VAR = 226;\r\n\tpublic static readonly SET = 227;\r\n\tpublic static readonly LANGUAGE = 228;\r\n\tpublic static readonly INTEGER_CONSTANT = 229;\r\n\tpublic static readonly NUMBER_CONSTANT = 230;\r\n\tpublic static readonly BOOLEAN_CONSTANT = 231;\r\n\tpublic static readonly STRING_CONSTANT = 232;\r\n\tpublic static readonly TIME_UNIT = 233;\r\n\tpublic static readonly IDENTIFIER = 234;\r\n\tpublic static readonly WS = 235;\r\n\tpublic static readonly EOL = 236;\r\n\tpublic static readonly ML_COMMENT = 237;\r\n\tpublic static readonly SL_COMMENT = 238;\r\n\tpublic static readonly EOF = Token.EOF;\r\n\tpublic static readonly RULE_start = 0;\r\n\tpublic static readonly RULE_statement = 1;\r\n\tpublic static readonly RULE_expr = 2;\r\n\tpublic static readonly RULE_exprComponent = 3;\r\n\tpublic static readonly RULE_functionsComponents = 4;\r\n\tpublic static readonly RULE_functions = 5;\r\n\tpublic static readonly RULE_datasetClause = 6;\r\n\tpublic static readonly RULE_renameClause = 7;\r\n\tpublic static readonly RULE_aggrClause = 8;\r\n\tpublic static readonly RULE_filterClause = 9;\r\n\tpublic static readonly RULE_calcClause = 10;\r\n\tpublic static readonly RULE_keepOrDropClause = 11;\r\n\tpublic static readonly RULE_pivotOrUnpivotClause = 12;\r\n\tpublic static readonly RULE_subspaceClause = 13;\r\n\tpublic static readonly RULE_joinOperators = 14;\r\n\tpublic static readonly RULE_defOperators = 15;\r\n\tpublic static readonly RULE_genericOperators = 16;\r\n\tpublic static readonly RULE_genericOperatorsComponent = 17;\r\n\tpublic static readonly RULE_parameterComponent = 18;\r\n\tpublic static readonly RULE_parameter = 19;\r\n\tpublic static readonly RULE_stringOperators = 20;\r\n\tpublic static readonly RULE_stringOperatorsComponent = 21;\r\n\tpublic static readonly RULE_numericOperators = 22;\r\n\tpublic static readonly RULE_numericOperatorsComponent = 23;\r\n\tpublic static readonly RULE_comparisonOperators = 24;\r\n\tpublic static readonly RULE_comparisonOperatorsComponent = 25;\r\n\tpublic static readonly RULE_timeOperators = 26;\r\n\tpublic static readonly RULE_timeOperatorsComponent = 27;\r\n\tpublic static readonly RULE_setOperators = 28;\r\n\tpublic static readonly RULE_hierarchyOperators = 29;\r\n\tpublic static readonly RULE_validationOperators = 30;\r\n\tpublic static readonly RULE_conditionalOperators = 31;\r\n\tpublic static readonly RULE_conditionalOperatorsComponent = 32;\r\n\tpublic static readonly RULE_aggrOperators = 33;\r\n\tpublic static readonly RULE_aggrOperatorsGrouping = 34;\r\n\tpublic static readonly RULE_anFunction = 35;\r\n\tpublic static readonly RULE_anFunctionComponent = 36;\r\n\tpublic static readonly RULE_renameClauseItem = 37;\r\n\tpublic static readonly RULE_aggregateClause = 38;\r\n\tpublic static readonly RULE_aggrFunctionClause = 39;\r\n\tpublic static readonly RULE_calcClauseItem = 40;\r\n\tpublic static readonly RULE_subspaceClauseItem = 41;\r\n\tpublic static readonly RULE_joinClauseWithoutUsing = 42;\r\n\tpublic static readonly RULE_joinClause = 43;\r\n\tpublic static readonly RULE_joinClauseItem = 44;\r\n\tpublic static readonly RULE_joinBody = 45;\r\n\tpublic static readonly RULE_joinApplyClause = 46;\r\n\tpublic static readonly RULE_partitionByClause = 47;\r\n\tpublic static readonly RULE_orderByClause = 48;\r\n\tpublic static readonly RULE_orderByItem = 49;\r\n\tpublic static readonly RULE_windowingClause = 50;\r\n\tpublic static readonly RULE_signedInteger = 51;\r\n\tpublic static readonly RULE_limitClauseItem = 52;\r\n\tpublic static readonly RULE_groupingClause = 53;\r\n\tpublic static readonly RULE_havingClause = 54;\r\n\tpublic static readonly RULE_parameterItem = 55;\r\n\tpublic static readonly RULE_outputParameterType = 56;\r\n\tpublic static readonly RULE_outputParameterTypeComponent = 57;\r\n\tpublic static readonly RULE_inputParameterType = 58;\r\n\tpublic static readonly RULE_rulesetType = 59;\r\n\tpublic static readonly RULE_scalarType = 60;\r\n\tpublic static readonly RULE_componentType = 61;\r\n\tpublic static readonly RULE_datasetType = 62;\r\n\tpublic static readonly RULE_scalarSetType = 63;\r\n\tpublic static readonly RULE_dpRuleset = 64;\r\n\tpublic static readonly RULE_hrRuleset = 65;\r\n\tpublic static readonly RULE_valueDomainName = 66;\r\n\tpublic static readonly RULE_rulesetID = 67;\r\n\tpublic static readonly RULE_rulesetSignature = 68;\r\n\tpublic static readonly RULE_signature = 69;\r\n\tpublic static readonly RULE_ruleClauseDatapoint = 70;\r\n\tpublic static readonly RULE_ruleItemDatapoint = 71;\r\n\tpublic static readonly RULE_ruleClauseHierarchical = 72;\r\n\tpublic static readonly RULE_ruleItemHierarchical = 73;\r\n\tpublic static readonly RULE_hierRuleSignature = 74;\r\n\tpublic static readonly RULE_valueDomainSignature = 75;\r\n\tpublic static readonly RULE_codeItemRelation = 76;\r\n\tpublic static readonly RULE_codeItemRelationClause = 77;\r\n\tpublic static readonly RULE_valueDomainValue = 78;\r\n\tpublic static readonly RULE_scalarTypeConstraint = 79;\r\n\tpublic static readonly RULE_compConstraint = 80;\r\n\tpublic static readonly RULE_multModifier = 81;\r\n\tpublic static readonly RULE_validationOutput = 82;\r\n\tpublic static readonly RULE_validationMode = 83;\r\n\tpublic static readonly RULE_conditionClause = 84;\r\n\tpublic static readonly RULE_inputMode = 85;\r\n\tpublic static readonly RULE_imbalanceExpr = 86;\r\n\tpublic static readonly RULE_inputModeHierarchy = 87;\r\n\tpublic static readonly RULE_outputModeHierarchy = 88;\r\n\tpublic static readonly RULE_alias = 89;\r\n\tpublic static readonly RULE_varID = 90;\r\n\tpublic static readonly RULE_simpleComponentId = 91;\r\n\tpublic static readonly RULE_componentID = 92;\r\n\tpublic static readonly RULE_inexpr = 93;\r\n\tpublic static readonly RULE_erCode = 94;\r\n\tpublic static readonly RULE_erLevel = 95;\r\n\tpublic static readonly RULE_comparisonOperand = 96;\r\n\tpublic static readonly RULE_optionalExpr = 97;\r\n\tpublic static readonly RULE_optionalExprComponent = 98;\r\n\tpublic static readonly RULE_componentRole = 99;\r\n\tpublic static readonly RULE_viralAttribute = 100;\r\n\tpublic static readonly RULE_valueDomainID = 101;\r\n\tpublic static readonly RULE_operatorID = 102;\r\n\tpublic static readonly RULE_routineName = 103;\r\n\tpublic static readonly RULE_constant = 104;\r\n\tpublic static readonly RULE_basicScalarType = 105;\r\n\tpublic static readonly RULE_retainType = 106;\r\n\tpublic static readonly literalNames: (string | null)[] = [ null, \"'('\", \r\n                                                            \"')'\", \"'['\", \r\n                                                            \"']'\", \"'{'\", \r\n                                                            \"'}'\", \"'='\", \r\n                                                            \"'<'\", \"'>'\", \r\n                                                            \"'>='\", \"'<>'\", \r\n                                                            \"'<='\", \"'+'\", \r\n                                                            \"'-'\", \"'*'\", \r\n                                                            \"'/'\", \"','\", \r\n                                                            \"'->'\", \"':='\", \r\n                                                            \"'#'\", \"':'\", \r\n                                                            \"'eval'\", \"'if'\", \r\n                                                            \"'then'\", \"'else'\", \r\n                                                            \"'using'\", \"'with'\", \r\n                                                            \"'current_date'\", \r\n                                                            \"'on'\", \"'drop'\", \r\n                                                            \"'keep'\", \"'calc'\", \r\n                                                            \"'attrcalc'\", \r\n                                                            \"'rename'\", \r\n                                                            \"'as'\", \"'and'\", \r\n                                                            \"'or'\", \"'xor'\", \r\n                                                            \"'not'\", \"'between'\", \r\n                                                            \"'in'\", \"'not_in'\", \r\n                                                            \"'null'\", \"'isnull'\", \r\n                                                            \"'ex'\", \"'union'\", \r\n                                                            \"'diff'\", \"'symdiff'\", \r\n                                                            \"'intersect'\", \r\n                                                            \"'keys'\", \"'intyear'\", \r\n                                                            \"'intmonth'\", \r\n                                                            \"'intday'\", \r\n                                                            \"'check'\", \"'exists_in'\", \r\n                                                            \"'to'\", \"'return'\", \r\n                                                            \"'imbalance'\", \r\n                                                            \"'errorcode'\", \r\n                                                            \"'all'\", \"'aggr'\", \r\n                                                            \"'errorlevel'\", \r\n                                                            \"'order'\", \"'by'\", \r\n                                                            \"'rank'\", \"'asc'\", \r\n                                                            \"'desc'\", \"'min'\", \r\n                                                            \"'max'\", \"'first'\", \r\n                                                            \"'last'\", \"'indexof'\", \r\n                                                            \"'abs'\", \"'key'\", \r\n                                                            \"'ln'\", \"'log'\", \r\n                                                            \"'trunc'\", \"'round'\", \r\n                                                            \"'power'\", \"'mod'\", \r\n                                                            \"'length'\", \r\n                                                            \"'||'\", \"'trim'\", \r\n                                                            \"'upper'\", \"'lower'\", \r\n                                                            \"'substr'\", \r\n                                                            \"'sum'\", \"'avg'\", \r\n                                                            \"'median'\", \r\n                                                            \"'count'\", \"'identifier'\", \r\n                                                            \"'measure'\", \r\n                                                            \"'attribute'\", \r\n                                                            \"'filter'\", \r\n                                                            \"'merge'\", \"'exp'\", \r\n                                                            \"'componentRole'\", \r\n                                                            \"'viral'\", \"'match_characters'\", \r\n                                                            \"'type'\", \"'nvl'\", \r\n                                                            \"'hierarchy'\", \r\n                                                            \"'_'\", \"'invalid'\", \r\n                                                            \"'valuedomain'\", \r\n                                                            \"'variable'\", \r\n                                                            \"'data'\", \"'structure'\", \r\n                                                            \"'dataset'\", \r\n                                                            \"'operator'\", \r\n                                                            \"'define'\", \r\n                                                            \"'<-'\", \"'datapoint'\", \r\n                                                            \"'hierarchical'\", \r\n                                                            \"'ruleset'\", \r\n                                                            \"'rule'\", \"'end'\", \r\n                                                            \"'alterDataset'\", \r\n                                                            \"'ltrim'\", \"'rtrim'\", \r\n                                                            \"'instr'\", \"'replace'\", \r\n                                                            \"'ceil'\", \"'floor'\", \r\n                                                            \"'sqrt'\", \"'any'\", \r\n                                                            \"'setdiff'\", \r\n                                                            \"'stddev_pop'\", \r\n                                                            \"'stddev_samp'\", \r\n                                                            \"'var_pop'\", \r\n                                                            \"'var_samp'\", \r\n                                                            \"'group'\", \"'except'\", \r\n                                                            \"'having'\", \r\n                                                            \"'first_value'\", \r\n                                                            \"'last_value'\", \r\n                                                            \"'lag'\", \"'lead'\", \r\n                                                            \"'ratio_to_report'\", \r\n                                                            \"'over'\", \"'preceding'\", \r\n                                                            \"'following'\", \r\n                                                            \"'unbounded'\", \r\n                                                            \"'partition'\", \r\n                                                            \"'rows'\", \"'range'\", \r\n                                                            \"'current'\", \r\n                                                            \"'valid'\", \"'fill_time_series'\", \r\n                                                            \"'flow_to_stock'\", \r\n                                                            \"'stock_to_flow'\", \r\n                                                            \"'timeshift'\", \r\n                                                            \"'measures'\", \r\n                                                            \"'no_measures'\", \r\n                                                            \"'condition'\", \r\n                                                            \"'boolean'\", \r\n                                                            \"'date'\", \"'time_period'\", \r\n                                                            \"'number'\", \r\n                                                            \"'string'\", \r\n                                                            \"'time'\", \"'integer'\", \r\n                                                            \"'float'\", \"'list'\", \r\n                                                            \"'record'\", \r\n                                                            \"'restrict'\", \r\n                                                            \"'yyyy'\", \"'mm'\", \r\n                                                            \"'dd'\", \"'maxLength'\", \r\n                                                            \"'regexp'\", \r\n                                                            \"'is'\", \"'when'\", \r\n                                                            \"'from'\", \"'aggregates'\", \r\n                                                            \"'points'\", \r\n                                                            \"'point'\", \"'total'\", \r\n                                                            \"'partial'\", \r\n                                                            \"'always'\", \r\n                                                            \"'inner_join'\", \r\n                                                            \"'left_join'\", \r\n                                                            \"'cross_join'\", \r\n                                                            \"'full_join'\", \r\n                                                            \"'maps_from'\", \r\n                                                            \"'maps_to'\", \r\n                                                            \"'map_to'\", \r\n                                                            \"'map_from'\", \r\n                                                            \"'returns'\", \r\n                                                            \"'pivot'\", \"'customPivot'\", \r\n                                                            \"'unpivot'\", \r\n                                                            \"'sub'\", \"'apply'\", \r\n                                                            \"'conditioned'\", \r\n                                                            \"'period_indicator'\", \r\n                                                            \"'single'\", \r\n                                                            \"'duration'\", \r\n                                                            \"'time_agg'\", \r\n                                                            \"'unit'\", \"'Value'\", \r\n                                                            \"'valuedomains'\", \r\n                                                            \"'variables'\", \r\n                                                            \"'input'\", \"'output'\", \r\n                                                            \"'cast'\", \"'rule_priority'\", \r\n                                                            \"'dataset_priority'\", \r\n                                                            \"'default'\", \r\n                                                            \"'check_datapoint'\", \r\n                                                            \"'check_hierarchy'\", \r\n                                                            \"'computed'\", \r\n                                                            \"'non_null'\", \r\n                                                            \"'non_zero'\", \r\n                                                            \"'partial_null'\", \r\n                                                            \"'partial_zero'\", \r\n                                                            \"'always_null'\", \r\n                                                            \"'always_zero'\", \r\n                                                            \"'components'\", \r\n                                                            \"'all_measures'\", \r\n                                                            \"'scalar'\", \r\n                                                            \"'component'\", \r\n                                                            \"'datapoint_on_valuedomains'\", \r\n                                                            \"'datapoint_on_variables'\", \r\n                                                            \"'hierarchical_on_valuedomains'\", \r\n                                                            \"'hierarchical_on_variables'\", \r\n                                                            \"'set'\", \"'language'\", \r\n                                                            null, null, \r\n                                                            null, null, \r\n                                                            null, null, \r\n                                                            null, \"';'\" ];\r\n\tpublic static readonly symbolicNames: (string | null)[] = [ null, \"LPAREN\", \r\n                                                             \"RPAREN\", \"QLPAREN\", \r\n                                                             \"QRPAREN\", \r\n                                                             \"GLPAREN\", \r\n                                                             \"GRPAREN\", \r\n                                                             \"EQ\", \"LT\", \r\n                                                             \"MT\", \"ME\", \r\n                                                             \"NEQ\", \"LE\", \r\n                                                             \"PLUS\", \"MINUS\", \r\n                                                             \"MUL\", \"DIV\", \r\n                                                             \"COMMA\", \"POINTER\", \r\n                                                             \"ASSIGN\", \"MEMBERSHIP\", \r\n                                                             \"COLON\", \"EVAL\", \r\n                                                             \"IF\", \"THEN\", \r\n                                                             \"ELSE\", \"USING\", \r\n                                                             \"WITH\", \"CURRENT_DATE\", \r\n                                                             \"ON\", \"DROP\", \r\n                                                             \"KEEP\", \"CALC\", \r\n                                                             \"ATTRCALC\", \r\n                                                             \"RENAME\", \"AS\", \r\n                                                             \"AND\", \"OR\", \r\n                                                             \"XOR\", \"NOT\", \r\n                                                             \"BETWEEN\", \r\n                                                             \"IN\", \"NOT_IN\", \r\n                                                             \"NULL_CONSTANT\", \r\n                                                             \"ISNULL\", \"EX\", \r\n                                                             \"UNION\", \"DIFF\", \r\n                                                             \"SYMDIFF\", \r\n                                                             \"INTERSECT\", \r\n                                                             \"KEYS\", \"INTYEAR\", \r\n                                                             \"INTMONTH\", \r\n                                                             \"INTDAY\", \"CHECK\", \r\n                                                             \"EXISTS_IN\", \r\n                                                             \"TO\", \"RETURN\", \r\n                                                             \"IMBALANCE\", \r\n                                                             \"ERRORCODE\", \r\n                                                             \"ALL\", \"AGGREGATE\", \r\n                                                             \"ERRORLEVEL\", \r\n                                                             \"ORDER\", \"BY\", \r\n                                                             \"RANK\", \"ASC\", \r\n                                                             \"DESC\", \"MIN\", \r\n                                                             \"MAX\", \"FIRST\", \r\n                                                             \"LAST\", \"INDEXOF\", \r\n                                                             \"ABS\", \"KEY\", \r\n                                                             \"LN\", \"LOG\", \r\n                                                             \"TRUNC\", \"ROUND\", \r\n                                                             \"POWER\", \"MOD\", \r\n                                                             \"LEN\", \"CONCAT\", \r\n                                                             \"TRIM\", \"UCASE\", \r\n                                                             \"LCASE\", \"SUBSTR\", \r\n                                                             \"SUM\", \"AVG\", \r\n                                                             \"MEDIAN\", \"COUNT\", \r\n                                                             \"DIMENSION\", \r\n                                                             \"MEASURE\", \r\n                                                             \"ATTRIBUTE\", \r\n                                                             \"FILTER\", \"MERGE\", \r\n                                                             \"EXP\", \"ROLE\", \r\n                                                             \"VIRAL\", \"CHARSET_MATCH\", \r\n                                                             \"TYPE\", \"NVL\", \r\n                                                             \"HIERARCHY\", \r\n                                                             \"OPTIONAL\", \r\n                                                             \"INVALID\", \r\n                                                             \"VALUE_DOMAIN\", \r\n                                                             \"VARIABLE\", \r\n                                                             \"DATA\", \"STRUCTURE\", \r\n                                                             \"DATASET\", \r\n                                                             \"OPERATOR\", \r\n                                                             \"DEFINE\", \"PUT_SYMBOL\", \r\n                                                             \"DATAPOINT\", \r\n                                                             \"HIERARCHICAL\", \r\n                                                             \"RULESET\", \r\n                                                             \"RULE\", \"END\", \r\n                                                             \"ALTER_DATASET\", \r\n                                                             \"LTRIM\", \"RTRIM\", \r\n                                                             \"INSTR\", \"REPLACE\", \r\n                                                             \"CEIL\", \"FLOOR\", \r\n                                                             \"SQRT\", \"ANY\", \r\n                                                             \"SETDIFF\", \r\n                                                             \"STDDEV_POP\", \r\n                                                             \"STDDEV_SAMP\", \r\n                                                             \"VAR_POP\", \r\n                                                             \"VAR_SAMP\", \r\n                                                             \"GROUP\", \"EXCEPT\", \r\n                                                             \"HAVING\", \"FIRST_VALUE\", \r\n                                                             \"LAST_VALUE\", \r\n                                                             \"LAG\", \"LEAD\", \r\n                                                             \"RATIO_TO_REPORT\", \r\n                                                             \"OVER\", \"PRECEDING\", \r\n                                                             \"FOLLOWING\", \r\n                                                             \"UNBOUNDED\", \r\n                                                             \"PARTITION\", \r\n                                                             \"ROWS\", \"RANGE\", \r\n                                                             \"CURRENT\", \r\n                                                             \"VALID\", \"FILL_TIME_SERIES\", \r\n                                                             \"FLOW_TO_STOCK\", \r\n                                                             \"STOCK_TO_FLOW\", \r\n                                                             \"TIMESHIFT\", \r\n                                                             \"MEASURES\", \r\n                                                             \"NO_MEASURES\", \r\n                                                             \"CONDITION\", \r\n                                                             \"BOOLEAN\", \r\n                                                             \"DATE\", \"TIME_PERIOD\", \r\n                                                             \"NUMBER\", \"STRING\", \r\n                                                             \"TIME\", \"INTEGER\", \r\n                                                             \"FLOAT\", \"LIST\", \r\n                                                             \"RECORD\", \"RESTRICT\", \r\n                                                             \"YYYY\", \"MM\", \r\n                                                             \"DD\", \"MAX_LENGTH\", \r\n                                                             \"REGEXP\", \"IS\", \r\n                                                             \"WHEN\", \"FROM\", \r\n                                                             \"AGGREGATES\", \r\n                                                             \"POINTS\", \"POINT\", \r\n                                                             \"TOTAL\", \"PARTIAL\", \r\n                                                             \"ALWAYS\", \"INNER_JOIN\", \r\n                                                             \"LEFT_JOIN\", \r\n                                                             \"CROSS_JOIN\", \r\n                                                             \"FULL_JOIN\", \r\n                                                             \"MAPS_FROM\", \r\n                                                             \"MAPS_TO\", \r\n                                                             \"MAP_TO\", \"MAP_FROM\", \r\n                                                             \"RETURNS\", \r\n                                                             \"PIVOT\", \"CUSTOMPIVOT\", \r\n                                                             \"UNPIVOT\", \r\n                                                             \"SUBSPACE\", \r\n                                                             \"APPLY\", \"CONDITIONED\", \r\n                                                             \"PERIOD_INDICATOR\", \r\n                                                             \"SINGLE\", \"DURATION\", \r\n                                                             \"TIME_AGG\", \r\n                                                             \"UNIT\", \"VALUE\", \r\n                                                             \"VALUEDOMAINS\", \r\n                                                             \"VARIABLES\", \r\n                                                             \"INPUT\", \"OUTPUT\", \r\n                                                             \"CAST\", \"RULE_PRIORITY\", \r\n                                                             \"DATASET_PRIORITY\", \r\n                                                             \"DEFAULT\", \r\n                                                             \"CHECK_DATAPOINT\", \r\n                                                             \"CHECK_HIERARCHY\", \r\n                                                             \"COMPUTED\", \r\n                                                             \"NON_NULL\", \r\n                                                             \"NON_ZERO\", \r\n                                                             \"PARTIAL_NULL\", \r\n                                                             \"PARTIAL_ZERO\", \r\n                                                             \"ALWAYS_NULL\", \r\n                                                             \"ALWAYS_ZERO\", \r\n                                                             \"COMPONENTS\", \r\n                                                             \"ALL_MEASURES\", \r\n                                                             \"SCALAR\", \"COMPONENT\", \r\n                                                             \"DATAPOINT_ON_VD\", \r\n                                                             \"DATAPOINT_ON_VAR\", \r\n                                                             \"HIERARCHICAL_ON_VD\", \r\n                                                             \"HIERARCHICAL_ON_VAR\", \r\n                                                             \"SET\", \"LANGUAGE\", \r\n                                                             \"INTEGER_CONSTANT\", \r\n                                                             \"NUMBER_CONSTANT\", \r\n                                                             \"BOOLEAN_CONSTANT\", \r\n                                                             \"STRING_CONSTANT\", \r\n                                                             \"TIME_UNIT\", \r\n                                                             \"IDENTIFIER\", \r\n                                                             \"WS\", \"EOL\", \r\n                                                             \"ML_COMMENT\", \r\n                                                             \"SL_COMMENT\" ];\r\n\t// tslint:disable:no-trailing-whitespace\r\n\tpublic static readonly ruleNames: string[] = [\r\n\t\t\"start\", \"statement\", \"expr\", \"exprComponent\", \"functionsComponents\", \r\n\t\t\"functions\", \"datasetClause\", \"renameClause\", \"aggrClause\", \"filterClause\", \r\n\t\t\"calcClause\", \"keepOrDropClause\", \"pivotOrUnpivotClause\", \"subspaceClause\", \r\n\t\t\"joinOperators\", \"defOperators\", \"genericOperators\", \"genericOperatorsComponent\", \r\n\t\t\"parameterComponent\", \"parameter\", \"stringOperators\", \"stringOperatorsComponent\", \r\n\t\t\"numericOperators\", \"numericOperatorsComponent\", \"comparisonOperators\", \r\n\t\t\"comparisonOperatorsComponent\", \"timeOperators\", \"timeOperatorsComponent\", \r\n\t\t\"setOperators\", \"hierarchyOperators\", \"validationOperators\", \"conditionalOperators\", \r\n\t\t\"conditionalOperatorsComponent\", \"aggrOperators\", \"aggrOperatorsGrouping\", \r\n\t\t\"anFunction\", \"anFunctionComponent\", \"renameClauseItem\", \"aggregateClause\", \r\n\t\t\"aggrFunctionClause\", \"calcClauseItem\", \"subspaceClauseItem\", \"joinClauseWithoutUsing\", \r\n\t\t\"joinClause\", \"joinClauseItem\", \"joinBody\", \"joinApplyClause\", \"partitionByClause\", \r\n\t\t\"orderByClause\", \"orderByItem\", \"windowingClause\", \"signedInteger\", \"limitClauseItem\", \r\n\t\t\"groupingClause\", \"havingClause\", \"parameterItem\", \"outputParameterType\", \r\n\t\t\"outputParameterTypeComponent\", \"inputParameterType\", \"rulesetType\", \"scalarType\", \r\n\t\t\"componentType\", \"datasetType\", \"scalarSetType\", \"dpRuleset\", \"hrRuleset\", \r\n\t\t\"valueDomainName\", \"rulesetID\", \"rulesetSignature\", \"signature\", \"ruleClauseDatapoint\", \r\n\t\t\"ruleItemDatapoint\", \"ruleClauseHierarchical\", \"ruleItemHierarchical\", \r\n\t\t\"hierRuleSignature\", \"valueDomainSignature\", \"codeItemRelation\", \"codeItemRelationClause\", \r\n\t\t\"valueDomainValue\", \"scalarTypeConstraint\", \"compConstraint\", \"multModifier\", \r\n\t\t\"validationOutput\", \"validationMode\", \"conditionClause\", \"inputMode\", \r\n\t\t\"imbalanceExpr\", \"inputModeHierarchy\", \"outputModeHierarchy\", \"alias\", \r\n\t\t\"varID\", \"simpleComponentId\", \"componentID\", \"inexpr\", \"erCode\", \"erLevel\", \r\n\t\t\"comparisonOperand\", \"optionalExpr\", \"optionalExprComponent\", \"componentRole\", \r\n\t\t\"viralAttribute\", \"valueDomainID\", \"operatorID\", \"routineName\", \"constant\", \r\n\t\t\"basicScalarType\", \"retainType\",\r\n\t];\r\n\tpublic get grammarFileName(): string { return \"Vtl.g4\"; }\r\n\tpublic get literalNames(): (string | null)[] { return Vtl.literalNames; }\r\n\tpublic get symbolicNames(): (string | null)[] { return Vtl.symbolicNames; }\r\n\tpublic get ruleNames(): string[] { return Vtl.ruleNames; }\r\n\tpublic get serializedATN(): number[] { return Vtl._serializedATN; }\r\n\r\n\tprotected createFailedPredicateException(predicate?: string, message?: string): FailedPredicateException {\r\n\t\treturn new FailedPredicateException(this, predicate, message);\r\n\t}\r\n\r\n\tconstructor(input: TokenStream) {\r\n\t\tsuper(input);\r\n\t\tthis._interp = new ParserATNSimulator(this, Vtl._ATN, Vtl.DecisionsToDFA, new PredictionContextCache());\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic start(): StartContext {\r\n\t\tlet localctx: StartContext = new StartContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 0, Vtl.RULE_start);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 219;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\twhile (_la===111 || _la===234) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 214;\r\n\t\t\t\tthis.statement();\r\n\t\t\t\tthis.state = 215;\r\n\t\t\t\tthis.match(Vtl.EOL);\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 221;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t}\r\n\t\t\tthis.state = 222;\r\n\t\t\tthis.match(Vtl.EOF);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic statement(): StatementContext {\r\n\t\tlet localctx: StatementContext = new StatementContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 2, Vtl.RULE_statement);\r\n\t\ttry {\r\n\t\t\tthis.state = 233;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch ( this._interp.adaptivePredict(this._input, 1, this._ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\tlocalctx = new TemporaryAssignmentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 224;\r\n\t\t\t\tthis.varID();\r\n\t\t\t\tthis.state = 225;\r\n\t\t\t\tthis.match(Vtl.ASSIGN);\r\n\t\t\t\tthis.state = 226;\r\n\t\t\t\tthis.expr(0);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tlocalctx = new PersistAssignmentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 228;\r\n\t\t\t\tthis.varID();\r\n\t\t\t\tthis.state = 229;\r\n\t\t\t\tthis.match(Vtl.PUT_SYMBOL);\r\n\t\t\t\tthis.state = 230;\r\n\t\t\t\tthis.expr(0);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tlocalctx = new DefineExpressionContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 232;\r\n\t\t\t\tthis.defOperators();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\r\n\tpublic expr(): ExprContext;\r\n\tpublic expr(_p: number): ExprContext;\r\n\t// @RuleVersion(0)\r\n\tpublic expr(_p?: number): ExprContext {\r\n\t\tif (_p === undefined) {\r\n\t\t\t_p = 0;\r\n\t\t}\r\n\r\n\t\tlet _parentctx: ParserRuleContext = this._ctx;\r\n\t\tlet _parentState: number = this.state;\r\n\t\tlet localctx: ExprContext = new ExprContext(this, this._ctx, _parentState);\r\n\t\tlet _prevctx: ExprContext = localctx;\r\n\t\tlet _startState: number = 4;\r\n\t\tthis.enterRecursionRule(localctx, 4, Vtl.RULE_expr, _p);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tlet _alt: number;\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 252;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch ( this._interp.adaptivePredict(this._input, 2, this._ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\t{\r\n\t\t\t\tlocalctx = new ParenthesisExprContext(this, localctx);\r\n\t\t\t\tthis._ctx = localctx;\r\n\t\t\t\t_prevctx = localctx;\r\n\r\n\t\t\t\tthis.state = 236;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 237;\r\n\t\t\t\tthis.expr(0);\r\n\t\t\t\tthis.state = 238;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\t{\r\n\t\t\t\tlocalctx = new FunctionsExpressionContext(this, localctx);\r\n\t\t\t\tthis._ctx = localctx;\r\n\t\t\t\t_prevctx = localctx;\r\n\t\t\t\tthis.state = 240;\r\n\t\t\t\tthis.functions();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\t{\r\n\t\t\t\tlocalctx = new UnaryExprContext(this, localctx);\r\n\t\t\t\tthis._ctx = localctx;\r\n\t\t\t\t_prevctx = localctx;\r\n\t\t\t\tthis.state = 241;\r\n\t\t\t\t(localctx as UnaryExprContext)._op = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(((((_la - 13)) & ~0x1F) === 0 && ((1 << (_la - 13)) & 67108867) !== 0))) {\r\n\t\t\t\t    (localctx as UnaryExprContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 242;\r\n\t\t\t\t(localctx as UnaryExprContext)._right = this.expr(10);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\t{\r\n\t\t\t\tlocalctx = new IfExprContext(this, localctx);\r\n\t\t\t\tthis._ctx = localctx;\r\n\t\t\t\t_prevctx = localctx;\r\n\t\t\t\tthis.state = 243;\r\n\t\t\t\tthis.match(Vtl.IF);\r\n\t\t\t\tthis.state = 244;\r\n\t\t\t\t(localctx as IfExprContext)._conditionalExpr = this.expr(0);\r\n\t\t\t\tthis.state = 245;\r\n\t\t\t\tthis.match(Vtl.THEN);\r\n\t\t\t\tthis.state = 246;\r\n\t\t\t\t(localctx as IfExprContext)._thenExpr = this.expr(0);\r\n\t\t\t\tthis.state = 247;\r\n\t\t\t\tthis.match(Vtl.ELSE);\r\n\t\t\t\tthis.state = 248;\r\n\t\t\t\t(localctx as IfExprContext)._elseExpr = this.expr(3);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\t{\r\n\t\t\t\tlocalctx = new ConstantExprContext(this, localctx);\r\n\t\t\t\tthis._ctx = localctx;\r\n\t\t\t\t_prevctx = localctx;\r\n\t\t\t\tthis.state = 250;\r\n\t\t\t\tthis.constant();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\t{\r\n\t\t\t\tlocalctx = new VarIdExprContext(this, localctx);\r\n\t\t\t\tthis._ctx = localctx;\r\n\t\t\t\t_prevctx = localctx;\r\n\t\t\t\tthis.state = 251;\r\n\t\t\t\tthis.varID();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._ctx.stop = this._input.LT(-1);\r\n\t\t\tthis.state = 283;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_alt = this._interp.adaptivePredict(this._input, 4, this._ctx);\r\n\t\t\twhile (_alt !== 2 && _alt !== ATN.INVALID_ALT_NUMBER) {\r\n\t\t\t\tif (_alt === 1) {\r\n\t\t\t\t\tif (this._parseListeners != null) {\r\n\t\t\t\t\t\tthis.triggerExitRuleEvent();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t_prevctx = localctx;\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 281;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\tswitch ( this._interp.adaptivePredict(this._input, 3, this._ctx) ) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tlocalctx = new ArithmeticExprContext(this, new ExprContext(this, _parentctx, _parentState));\r\n\t\t\t\t\t\t(localctx as ArithmeticExprContext)._left = _prevctx;\r\n\t\t\t\t\t\tthis.pushNewRecursionContext(localctx, _startState, Vtl.RULE_expr);\r\n\t\t\t\t\t\tthis.state = 254;\r\n\t\t\t\t\t\tif (!(this.precpred(this._ctx, 9))) {\r\n\t\t\t\t\t\t\tthrow this.createFailedPredicateException(\"this.precpred(this._ctx, 9)\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 255;\r\n\t\t\t\t\t\t(localctx as ArithmeticExprContext)._op = this._input.LT(1);\r\n\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t\tif(!(_la===15 || _la===16)) {\r\n\t\t\t\t\t\t    (localctx as ArithmeticExprContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t\t\t    this.consume();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 256;\r\n\t\t\t\t\t\t(localctx as ArithmeticExprContext)._right = this.expr(10);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tlocalctx = new ArithmeticExprOrConcatContext(this, new ExprContext(this, _parentctx, _parentState));\r\n\t\t\t\t\t\t(localctx as ArithmeticExprOrConcatContext)._left = _prevctx;\r\n\t\t\t\t\t\tthis.pushNewRecursionContext(localctx, _startState, Vtl.RULE_expr);\r\n\t\t\t\t\t\tthis.state = 257;\r\n\t\t\t\t\t\tif (!(this.precpred(this._ctx, 8))) {\r\n\t\t\t\t\t\t\tthrow this.createFailedPredicateException(\"this.precpred(this._ctx, 8)\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 258;\r\n\t\t\t\t\t\t(localctx as ArithmeticExprOrConcatContext)._op = this._input.LT(1);\r\n\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t\tif(!(_la===13 || _la===14 || _la===82)) {\r\n\t\t\t\t\t\t    (localctx as ArithmeticExprOrConcatContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t\t\t    this.consume();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 259;\r\n\t\t\t\t\t\t(localctx as ArithmeticExprOrConcatContext)._right = this.expr(9);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tlocalctx = new ComparisonExprContext(this, new ExprContext(this, _parentctx, _parentState));\r\n\t\t\t\t\t\t(localctx as ComparisonExprContext)._left = _prevctx;\r\n\t\t\t\t\t\tthis.pushNewRecursionContext(localctx, _startState, Vtl.RULE_expr);\r\n\t\t\t\t\t\tthis.state = 260;\r\n\t\t\t\t\t\tif (!(this.precpred(this._ctx, 7))) {\r\n\t\t\t\t\t\t\tthrow this.createFailedPredicateException(\"this.precpred(this._ctx, 7)\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 261;\r\n\t\t\t\t\t\t(localctx as ComparisonExprContext)._op = this.comparisonOperand();\r\n\t\t\t\t\t\tthis.state = 262;\r\n\t\t\t\t\t\t(localctx as ComparisonExprContext)._right = this.expr(8);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tlocalctx = new BooleanExprContext(this, new ExprContext(this, _parentctx, _parentState));\r\n\t\t\t\t\t\t(localctx as BooleanExprContext)._left = _prevctx;\r\n\t\t\t\t\t\tthis.pushNewRecursionContext(localctx, _startState, Vtl.RULE_expr);\r\n\t\t\t\t\t\tthis.state = 264;\r\n\t\t\t\t\t\tif (!(this.precpred(this._ctx, 5))) {\r\n\t\t\t\t\t\t\tthrow this.createFailedPredicateException(\"this.precpred(this._ctx, 5)\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 265;\r\n\t\t\t\t\t\t(localctx as BooleanExprContext)._op = this.match(Vtl.AND);\r\n\t\t\t\t\t\tthis.state = 266;\r\n\t\t\t\t\t\t(localctx as BooleanExprContext)._right = this.expr(6);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tlocalctx = new BooleanExprContext(this, new ExprContext(this, _parentctx, _parentState));\r\n\t\t\t\t\t\t(localctx as BooleanExprContext)._left = _prevctx;\r\n\t\t\t\t\t\tthis.pushNewRecursionContext(localctx, _startState, Vtl.RULE_expr);\r\n\t\t\t\t\t\tthis.state = 267;\r\n\t\t\t\t\t\tif (!(this.precpred(this._ctx, 4))) {\r\n\t\t\t\t\t\t\tthrow this.createFailedPredicateException(\"this.precpred(this._ctx, 4)\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 268;\r\n\t\t\t\t\t\t(localctx as BooleanExprContext)._op = this._input.LT(1);\r\n\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t\tif(!(_la===37 || _la===38)) {\r\n\t\t\t\t\t\t    (localctx as BooleanExprContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t\t\t    this.consume();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 269;\r\n\t\t\t\t\t\t(localctx as BooleanExprContext)._right = this.expr(5);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tlocalctx = new ClauseExprContext(this, new ExprContext(this, _parentctx, _parentState));\r\n\t\t\t\t\t\t(localctx as ClauseExprContext)._dataset = _prevctx;\r\n\t\t\t\t\t\tthis.pushNewRecursionContext(localctx, _startState, Vtl.RULE_expr);\r\n\t\t\t\t\t\tthis.state = 270;\r\n\t\t\t\t\t\tif (!(this.precpred(this._ctx, 12))) {\r\n\t\t\t\t\t\t\tthrow this.createFailedPredicateException(\"this.precpred(this._ctx, 12)\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 271;\r\n\t\t\t\t\t\tthis.match(Vtl.QLPAREN);\r\n\t\t\t\t\t\tthis.state = 272;\r\n\t\t\t\t\t\t(localctx as ClauseExprContext)._clause = this.datasetClause();\r\n\t\t\t\t\t\tthis.state = 273;\r\n\t\t\t\t\t\tthis.match(Vtl.QRPAREN);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tlocalctx = new MembershipExprContext(this, new ExprContext(this, _parentctx, _parentState));\r\n\t\t\t\t\t\tthis.pushNewRecursionContext(localctx, _startState, Vtl.RULE_expr);\r\n\t\t\t\t\t\tthis.state = 275;\r\n\t\t\t\t\t\tif (!(this.precpred(this._ctx, 11))) {\r\n\t\t\t\t\t\t\tthrow this.createFailedPredicateException(\"this.precpred(this._ctx, 11)\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 276;\r\n\t\t\t\t\t\tthis.match(Vtl.MEMBERSHIP);\r\n\t\t\t\t\t\tthis.state = 277;\r\n\t\t\t\t\t\tthis.simpleComponentId();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 8:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tlocalctx = new InNotInExprContext(this, new ExprContext(this, _parentctx, _parentState));\r\n\t\t\t\t\t\t(localctx as InNotInExprContext)._left = _prevctx;\r\n\t\t\t\t\t\tthis.pushNewRecursionContext(localctx, _startState, Vtl.RULE_expr);\r\n\t\t\t\t\t\tthis.state = 278;\r\n\t\t\t\t\t\tif (!(this.precpred(this._ctx, 6))) {\r\n\t\t\t\t\t\t\tthrow this.createFailedPredicateException(\"this.precpred(this._ctx, 6)\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 279;\r\n\t\t\t\t\t\t(localctx as InNotInExprContext)._op = this._input.LT(1);\r\n\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t\tif(!(_la===41 || _la===42)) {\r\n\t\t\t\t\t\t    (localctx as InNotInExprContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t\t\t    this.consume();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 280;\r\n\t\t\t\t\t\t(localctx as InNotInExprContext)._right = this.inexpr();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 285;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_alt = this._interp.adaptivePredict(this._input, 4, this._ctx);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.unrollRecursionContexts(_parentctx);\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\r\n\tpublic exprComponent(): ExprComponentContext;\r\n\tpublic exprComponent(_p: number): ExprComponentContext;\r\n\t// @RuleVersion(0)\r\n\tpublic exprComponent(_p?: number): ExprComponentContext {\r\n\t\tif (_p === undefined) {\r\n\t\t\t_p = 0;\r\n\t\t}\r\n\r\n\t\tlet _parentctx: ParserRuleContext = this._ctx;\r\n\t\tlet _parentState: number = this.state;\r\n\t\tlet localctx: ExprComponentContext = new ExprComponentContext(this, this._ctx, _parentState);\r\n\t\tlet _prevctx: ExprComponentContext = localctx;\r\n\t\tlet _startState: number = 6;\r\n\t\tthis.enterRecursionRule(localctx, 6, Vtl.RULE_exprComponent, _p);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tlet _alt: number;\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 303;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch ( this._interp.adaptivePredict(this._input, 5, this._ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\t{\r\n\t\t\t\tlocalctx = new ParenthesisExprCompContext(this, localctx);\r\n\t\t\t\tthis._ctx = localctx;\r\n\t\t\t\t_prevctx = localctx;\r\n\r\n\t\t\t\tthis.state = 287;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 288;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\tthis.state = 289;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\t{\r\n\t\t\t\tlocalctx = new FunctionsExpressionCompContext(this, localctx);\r\n\t\t\t\tthis._ctx = localctx;\r\n\t\t\t\t_prevctx = localctx;\r\n\t\t\t\tthis.state = 291;\r\n\t\t\t\tthis.functionsComponents();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\t{\r\n\t\t\t\tlocalctx = new UnaryExprCompContext(this, localctx);\r\n\t\t\t\tthis._ctx = localctx;\r\n\t\t\t\t_prevctx = localctx;\r\n\t\t\t\tthis.state = 292;\r\n\t\t\t\t(localctx as UnaryExprCompContext)._op = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(((((_la - 13)) & ~0x1F) === 0 && ((1 << (_la - 13)) & 67108867) !== 0))) {\r\n\t\t\t\t    (localctx as UnaryExprCompContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 293;\r\n\t\t\t\t(localctx as UnaryExprCompContext)._right = this.exprComponent(10);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\t{\r\n\t\t\t\tlocalctx = new IfExprCompContext(this, localctx);\r\n\t\t\t\tthis._ctx = localctx;\r\n\t\t\t\t_prevctx = localctx;\r\n\t\t\t\tthis.state = 294;\r\n\t\t\t\tthis.match(Vtl.IF);\r\n\t\t\t\tthis.state = 295;\r\n\t\t\t\t(localctx as IfExprCompContext)._conditionalExpr = this.exprComponent(0);\r\n\t\t\t\tthis.state = 296;\r\n\t\t\t\tthis.match(Vtl.THEN);\r\n\t\t\t\tthis.state = 297;\r\n\t\t\t\t(localctx as IfExprCompContext)._thenExpr = this.exprComponent(0);\r\n\t\t\t\tthis.state = 298;\r\n\t\t\t\tthis.match(Vtl.ELSE);\r\n\t\t\t\tthis.state = 299;\r\n\t\t\t\t(localctx as IfExprCompContext)._elseExpr = this.exprComponent(3);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\t{\r\n\t\t\t\tlocalctx = new ConstantExprCompContext(this, localctx);\r\n\t\t\t\tthis._ctx = localctx;\r\n\t\t\t\t_prevctx = localctx;\r\n\t\t\t\tthis.state = 301;\r\n\t\t\t\tthis.constant();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\t{\r\n\t\t\t\tlocalctx = new CompIdContext(this, localctx);\r\n\t\t\t\tthis._ctx = localctx;\r\n\t\t\t\t_prevctx = localctx;\r\n\t\t\t\tthis.state = 302;\r\n\t\t\t\tthis.componentID();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._ctx.stop = this._input.LT(-1);\r\n\t\t\tthis.state = 326;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_alt = this._interp.adaptivePredict(this._input, 7, this._ctx);\r\n\t\t\twhile (_alt !== 2 && _alt !== ATN.INVALID_ALT_NUMBER) {\r\n\t\t\t\tif (_alt === 1) {\r\n\t\t\t\t\tif (this._parseListeners != null) {\r\n\t\t\t\t\t\tthis.triggerExitRuleEvent();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t_prevctx = localctx;\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 324;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\tswitch ( this._interp.adaptivePredict(this._input, 6, this._ctx) ) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tlocalctx = new ArithmeticExprCompContext(this, new ExprComponentContext(this, _parentctx, _parentState));\r\n\t\t\t\t\t\t(localctx as ArithmeticExprCompContext)._left = _prevctx;\r\n\t\t\t\t\t\tthis.pushNewRecursionContext(localctx, _startState, Vtl.RULE_exprComponent);\r\n\t\t\t\t\t\tthis.state = 305;\r\n\t\t\t\t\t\tif (!(this.precpred(this._ctx, 9))) {\r\n\t\t\t\t\t\t\tthrow this.createFailedPredicateException(\"this.precpred(this._ctx, 9)\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 306;\r\n\t\t\t\t\t\t(localctx as ArithmeticExprCompContext)._op = this._input.LT(1);\r\n\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t\tif(!(_la===15 || _la===16)) {\r\n\t\t\t\t\t\t    (localctx as ArithmeticExprCompContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t\t\t    this.consume();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 307;\r\n\t\t\t\t\t\t(localctx as ArithmeticExprCompContext)._right = this.exprComponent(10);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tlocalctx = new ArithmeticExprOrConcatCompContext(this, new ExprComponentContext(this, _parentctx, _parentState));\r\n\t\t\t\t\t\t(localctx as ArithmeticExprOrConcatCompContext)._left = _prevctx;\r\n\t\t\t\t\t\tthis.pushNewRecursionContext(localctx, _startState, Vtl.RULE_exprComponent);\r\n\t\t\t\t\t\tthis.state = 308;\r\n\t\t\t\t\t\tif (!(this.precpred(this._ctx, 8))) {\r\n\t\t\t\t\t\t\tthrow this.createFailedPredicateException(\"this.precpred(this._ctx, 8)\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 309;\r\n\t\t\t\t\t\t(localctx as ArithmeticExprOrConcatCompContext)._op = this._input.LT(1);\r\n\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t\tif(!(_la===13 || _la===14 || _la===82)) {\r\n\t\t\t\t\t\t    (localctx as ArithmeticExprOrConcatCompContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t\t\t    this.consume();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 310;\r\n\t\t\t\t\t\t(localctx as ArithmeticExprOrConcatCompContext)._right = this.exprComponent(9);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tlocalctx = new ComparisonExprCompContext(this, new ExprComponentContext(this, _parentctx, _parentState));\r\n\t\t\t\t\t\t(localctx as ComparisonExprCompContext)._left = _prevctx;\r\n\t\t\t\t\t\tthis.pushNewRecursionContext(localctx, _startState, Vtl.RULE_exprComponent);\r\n\t\t\t\t\t\tthis.state = 311;\r\n\t\t\t\t\t\tif (!(this.precpred(this._ctx, 7))) {\r\n\t\t\t\t\t\t\tthrow this.createFailedPredicateException(\"this.precpred(this._ctx, 7)\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 312;\r\n\t\t\t\t\t\tthis.comparisonOperand();\r\n\t\t\t\t\t\tthis.state = 313;\r\n\t\t\t\t\t\t(localctx as ComparisonExprCompContext)._right = this.exprComponent(8);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tlocalctx = new BooleanExprCompContext(this, new ExprComponentContext(this, _parentctx, _parentState));\r\n\t\t\t\t\t\t(localctx as BooleanExprCompContext)._left = _prevctx;\r\n\t\t\t\t\t\tthis.pushNewRecursionContext(localctx, _startState, Vtl.RULE_exprComponent);\r\n\t\t\t\t\t\tthis.state = 315;\r\n\t\t\t\t\t\tif (!(this.precpred(this._ctx, 5))) {\r\n\t\t\t\t\t\t\tthrow this.createFailedPredicateException(\"this.precpred(this._ctx, 5)\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 316;\r\n\t\t\t\t\t\t(localctx as BooleanExprCompContext)._op = this.match(Vtl.AND);\r\n\t\t\t\t\t\tthis.state = 317;\r\n\t\t\t\t\t\t(localctx as BooleanExprCompContext)._right = this.exprComponent(6);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tlocalctx = new BooleanExprCompContext(this, new ExprComponentContext(this, _parentctx, _parentState));\r\n\t\t\t\t\t\t(localctx as BooleanExprCompContext)._left = _prevctx;\r\n\t\t\t\t\t\tthis.pushNewRecursionContext(localctx, _startState, Vtl.RULE_exprComponent);\r\n\t\t\t\t\t\tthis.state = 318;\r\n\t\t\t\t\t\tif (!(this.precpred(this._ctx, 4))) {\r\n\t\t\t\t\t\t\tthrow this.createFailedPredicateException(\"this.precpred(this._ctx, 4)\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 319;\r\n\t\t\t\t\t\t(localctx as BooleanExprCompContext)._op = this._input.LT(1);\r\n\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t\tif(!(_la===37 || _la===38)) {\r\n\t\t\t\t\t\t    (localctx as BooleanExprCompContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t\t\t    this.consume();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 320;\r\n\t\t\t\t\t\t(localctx as BooleanExprCompContext)._right = this.exprComponent(5);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tlocalctx = new InNotInExprCompContext(this, new ExprComponentContext(this, _parentctx, _parentState));\r\n\t\t\t\t\t\t(localctx as InNotInExprCompContext)._left = _prevctx;\r\n\t\t\t\t\t\tthis.pushNewRecursionContext(localctx, _startState, Vtl.RULE_exprComponent);\r\n\t\t\t\t\t\tthis.state = 321;\r\n\t\t\t\t\t\tif (!(this.precpred(this._ctx, 6))) {\r\n\t\t\t\t\t\t\tthrow this.createFailedPredicateException(\"this.precpred(this._ctx, 6)\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 322;\r\n\t\t\t\t\t\t(localctx as InNotInExprCompContext)._op = this._input.LT(1);\r\n\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t\tif(!(_la===41 || _la===42)) {\r\n\t\t\t\t\t\t    (localctx as InNotInExprCompContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t\t\t    this.consume();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 323;\r\n\t\t\t\t\t\t(localctx as InNotInExprCompContext)._right = this.inexpr();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 328;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_alt = this._interp.adaptivePredict(this._input, 7, this._ctx);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.unrollRecursionContexts(_parentctx);\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic functionsComponents(): FunctionsComponentsContext {\r\n\t\tlet localctx: FunctionsComponentsContext = new FunctionsComponentsContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 8, Vtl.RULE_functionsComponents);\r\n\t\ttry {\r\n\t\t\tthis.state = 337;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch ( this._interp.adaptivePredict(this._input, 8, this._ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\tlocalctx = new GenericFunctionsComponentsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 329;\r\n\t\t\t\tthis.genericOperatorsComponent();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tlocalctx = new StringFunctionsComponentsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 330;\r\n\t\t\t\tthis.stringOperatorsComponent();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tlocalctx = new NumericFunctionsComponentsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 331;\r\n\t\t\t\tthis.numericOperatorsComponent();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tlocalctx = new ComparisonFunctionsComponentsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 4);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 332;\r\n\t\t\t\tthis.comparisonOperatorsComponent();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tlocalctx = new TimeFunctionsComponentsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 5);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 333;\r\n\t\t\t\tthis.timeOperatorsComponent();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\tlocalctx = new ConditionalFunctionsComponentsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 6);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 334;\r\n\t\t\t\tthis.conditionalOperatorsComponent();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 7:\r\n\t\t\t\tlocalctx = new AggregateFunctionsComponentsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 7);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 335;\r\n\t\t\t\tthis.aggrOperators();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8:\r\n\t\t\t\tlocalctx = new AnalyticFunctionsComponentsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 8);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 336;\r\n\t\t\t\tthis.anFunctionComponent();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic functions(): FunctionsContext {\r\n\t\tlet localctx: FunctionsContext = new FunctionsContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 10, Vtl.RULE_functions);\r\n\t\ttry {\r\n\t\t\tthis.state = 351;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch ( this._interp.adaptivePredict(this._input, 9, this._ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\tlocalctx = new JoinFunctionsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 339;\r\n\t\t\t\tthis.joinOperators();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tlocalctx = new GenericFunctionsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 340;\r\n\t\t\t\tthis.genericOperators();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tlocalctx = new StringFunctionsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 341;\r\n\t\t\t\tthis.stringOperators();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tlocalctx = new NumericFunctionsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 4);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 342;\r\n\t\t\t\tthis.numericOperators();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tlocalctx = new ComparisonFunctionsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 5);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 343;\r\n\t\t\t\tthis.comparisonOperators();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\tlocalctx = new TimeFunctionsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 6);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 344;\r\n\t\t\t\tthis.timeOperators();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 7:\r\n\t\t\t\tlocalctx = new SetFunctionsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 7);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 345;\r\n\t\t\t\tthis.setOperators();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8:\r\n\t\t\t\tlocalctx = new HierarchyFunctionsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 8);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 346;\r\n\t\t\t\tthis.hierarchyOperators();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 9:\r\n\t\t\t\tlocalctx = new ValidationFunctionsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 9);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 347;\r\n\t\t\t\tthis.validationOperators();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 10:\r\n\t\t\t\tlocalctx = new ConditionalFunctionsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 10);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 348;\r\n\t\t\t\tthis.conditionalOperators();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 11:\r\n\t\t\t\tlocalctx = new AggregateFunctionsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 11);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 349;\r\n\t\t\t\tthis.aggrOperatorsGrouping();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 12:\r\n\t\t\t\tlocalctx = new AnalyticFunctionsContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 12);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 350;\r\n\t\t\t\tthis.anFunction();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic datasetClause(): DatasetClauseContext {\r\n\t\tlet localctx: DatasetClauseContext = new DatasetClauseContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 12, Vtl.RULE_datasetClause);\r\n\t\ttry {\r\n\t\t\tthis.state = 360;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 34:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 353;\r\n\t\t\t\tthis.renameClause();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 61:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 354;\r\n\t\t\t\tthis.aggrClause();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 94:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 355;\r\n\t\t\t\tthis.filterClause();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 32:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 4);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 356;\r\n\t\t\t\tthis.calcClause();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 30:\r\n\t\t\tcase 31:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 5);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 357;\r\n\t\t\t\tthis.keepOrDropClause();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 190:\r\n\t\t\tcase 192:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 6);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 358;\r\n\t\t\t\tthis.pivotOrUnpivotClause();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 193:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 7);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 359;\r\n\t\t\t\tthis.subspaceClause();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic renameClause(): RenameClauseContext {\r\n\t\tlet localctx: RenameClauseContext = new RenameClauseContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 14, Vtl.RULE_renameClause);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 362;\r\n\t\t\tthis.match(Vtl.RENAME);\r\n\t\t\tthis.state = 363;\r\n\t\t\tthis.renameClauseItem();\r\n\t\t\tthis.state = 368;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\twhile (_la===17) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 364;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 365;\r\n\t\t\t\tthis.renameClauseItem();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 370;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic aggrClause(): AggrClauseContext {\r\n\t\tlet localctx: AggrClauseContext = new AggrClauseContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 16, Vtl.RULE_aggrClause);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 371;\r\n\t\t\tthis.match(Vtl.AGGREGATE);\r\n\t\t\tthis.state = 372;\r\n\t\t\tthis.aggregateClause();\r\n\t\t\tthis.state = 377;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===132) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 373;\r\n\t\t\t\tthis.groupingClause();\r\n\t\t\t\tthis.state = 375;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===134) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 374;\r\n\t\t\t\t\tthis.havingClause();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic filterClause(): FilterClauseContext {\r\n\t\tlet localctx: FilterClauseContext = new FilterClauseContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 18, Vtl.RULE_filterClause);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 379;\r\n\t\t\tthis.match(Vtl.FILTER);\r\n\t\t\tthis.state = 380;\r\n\t\t\tthis.exprComponent(0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic calcClause(): CalcClauseContext {\r\n\t\tlet localctx: CalcClauseContext = new CalcClauseContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 20, Vtl.RULE_calcClause);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 382;\r\n\t\t\tthis.match(Vtl.CALC);\r\n\t\t\tthis.state = 383;\r\n\t\t\tthis.calcClauseItem();\r\n\t\t\tthis.state = 388;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\twhile (_la===17) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 384;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 385;\r\n\t\t\t\tthis.calcClauseItem();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 390;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic keepOrDropClause(): KeepOrDropClauseContext {\r\n\t\tlet localctx: KeepOrDropClauseContext = new KeepOrDropClauseContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 22, Vtl.RULE_keepOrDropClause);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 391;\r\n\t\t\tlocalctx._op = this._input.LT(1);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif(!(_la===30 || _la===31)) {\r\n\t\t\t    localctx._op = this._errHandler.recoverInline(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t    this.consume();\r\n\t\t\t}\r\n\t\t\tthis.state = 392;\r\n\t\t\tthis.componentID();\r\n\t\t\tthis.state = 397;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\twhile (_la===17) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 393;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 394;\r\n\t\t\t\tthis.componentID();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 399;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic pivotOrUnpivotClause(): PivotOrUnpivotClauseContext {\r\n\t\tlet localctx: PivotOrUnpivotClauseContext = new PivotOrUnpivotClauseContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 24, Vtl.RULE_pivotOrUnpivotClause);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 400;\r\n\t\t\tlocalctx._op = this._input.LT(1);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif(!(_la===190 || _la===192)) {\r\n\t\t\t    localctx._op = this._errHandler.recoverInline(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t    this.consume();\r\n\t\t\t}\r\n\t\t\tthis.state = 401;\r\n\t\t\tlocalctx._id_ = this.componentID();\r\n\t\t\tthis.state = 402;\r\n\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\tthis.state = 403;\r\n\t\t\tlocalctx._mea = this.componentID();\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic subspaceClause(): SubspaceClauseContext {\r\n\t\tlet localctx: SubspaceClauseContext = new SubspaceClauseContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 26, Vtl.RULE_subspaceClause);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 405;\r\n\t\t\tthis.match(Vtl.SUBSPACE);\r\n\t\t\tthis.state = 406;\r\n\t\t\tthis.subspaceClauseItem();\r\n\t\t\tthis.state = 411;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\twhile (_la===17) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 407;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 408;\r\n\t\t\t\tthis.subspaceClauseItem();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 413;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic joinOperators(): JoinOperatorsContext {\r\n\t\tlet localctx: JoinOperatorsContext = new JoinOperatorsContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 28, Vtl.RULE_joinOperators);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 426;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 181:\r\n\t\t\tcase 182:\r\n\t\t\t\tlocalctx = new JoinExprContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 414;\r\n\t\t\t\t(localctx as JoinExprContext)._joinKeyword = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(_la===181 || _la===182)) {\r\n\t\t\t\t    (localctx as JoinExprContext)._joinKeyword = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 415;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 416;\r\n\t\t\t\tthis.joinClause();\r\n\t\t\t\tthis.state = 417;\r\n\t\t\t\tthis.joinBody();\r\n\t\t\t\tthis.state = 418;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 183:\r\n\t\t\tcase 184:\r\n\t\t\t\tlocalctx = new JoinExprContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 420;\r\n\t\t\t\t(localctx as JoinExprContext)._joinKeyword = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(_la===183 || _la===184)) {\r\n\t\t\t\t    (localctx as JoinExprContext)._joinKeyword = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 421;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 422;\r\n\t\t\t\tthis.joinClauseWithoutUsing();\r\n\t\t\t\tthis.state = 423;\r\n\t\t\t\tthis.joinBody();\r\n\t\t\t\tthis.state = 424;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic defOperators(): DefOperatorsContext {\r\n\t\tlet localctx: DefOperatorsContext = new DefOperatorsContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 30, Vtl.RULE_defOperators);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 478;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch ( this._interp.adaptivePredict(this._input, 21, this._ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\tlocalctx = new DefOperatorContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 428;\r\n\t\t\t\tthis.match(Vtl.DEFINE);\r\n\t\t\t\tthis.state = 429;\r\n\t\t\t\tthis.match(Vtl.OPERATOR);\r\n\t\t\t\tthis.state = 430;\r\n\t\t\t\tthis.operatorID();\r\n\t\t\t\tthis.state = 431;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 440;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===234) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 432;\r\n\t\t\t\t\tthis.parameterItem();\r\n\t\t\t\t\tthis.state = 437;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\twhile (_la===17) {\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 433;\r\n\t\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\t\tthis.state = 434;\r\n\t\t\t\t\t\tthis.parameterItem();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 439;\r\n\t\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 442;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\tthis.state = 445;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===189) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 443;\r\n\t\t\t\t\tthis.match(Vtl.RETURNS);\r\n\t\t\t\t\tthis.state = 444;\r\n\t\t\t\t\tthis.outputParameterType();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 447;\r\n\t\t\t\tthis.match(Vtl.IS);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 448;\r\n\t\t\t\tthis.expr(0);\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 449;\r\n\t\t\t\tthis.match(Vtl.END);\r\n\t\t\t\tthis.state = 450;\r\n\t\t\t\tthis.match(Vtl.OPERATOR);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tlocalctx = new DefDatapointRulesetContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 452;\r\n\t\t\t\tthis.match(Vtl.DEFINE);\r\n\t\t\t\tthis.state = 453;\r\n\t\t\t\tthis.match(Vtl.DATAPOINT);\r\n\t\t\t\tthis.state = 454;\r\n\t\t\t\tthis.match(Vtl.RULESET);\r\n\t\t\t\tthis.state = 455;\r\n\t\t\t\tthis.rulesetID();\r\n\t\t\t\tthis.state = 456;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 457;\r\n\t\t\t\tthis.rulesetSignature();\r\n\t\t\t\tthis.state = 458;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\tthis.state = 459;\r\n\t\t\t\tthis.match(Vtl.IS);\r\n\t\t\t\tthis.state = 460;\r\n\t\t\t\tthis.ruleClauseDatapoint();\r\n\t\t\t\tthis.state = 461;\r\n\t\t\t\tthis.match(Vtl.END);\r\n\t\t\t\tthis.state = 462;\r\n\t\t\t\tthis.match(Vtl.DATAPOINT);\r\n\t\t\t\tthis.state = 463;\r\n\t\t\t\tthis.match(Vtl.RULESET);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tlocalctx = new DefHierarchicalContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 465;\r\n\t\t\t\tthis.match(Vtl.DEFINE);\r\n\t\t\t\tthis.state = 466;\r\n\t\t\t\tthis.match(Vtl.HIERARCHICAL);\r\n\t\t\t\tthis.state = 467;\r\n\t\t\t\tthis.match(Vtl.RULESET);\r\n\t\t\t\tthis.state = 468;\r\n\t\t\t\tthis.rulesetID();\r\n\t\t\t\tthis.state = 469;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 470;\r\n\t\t\t\tthis.hierRuleSignature();\r\n\t\t\t\tthis.state = 471;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\tthis.state = 472;\r\n\t\t\t\tthis.match(Vtl.IS);\r\n\t\t\t\tthis.state = 473;\r\n\t\t\t\tthis.ruleClauseHierarchical();\r\n\t\t\t\tthis.state = 474;\r\n\t\t\t\tthis.match(Vtl.END);\r\n\t\t\t\tthis.state = 475;\r\n\t\t\t\tthis.match(Vtl.HIERARCHICAL);\r\n\t\t\t\tthis.state = 476;\r\n\t\t\t\tthis.match(Vtl.RULESET);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic genericOperators(): GenericOperatorsContext {\r\n\t\tlet localctx: GenericOperatorsContext = new GenericOperatorsContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 32, Vtl.RULE_genericOperators);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 537;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 234:\r\n\t\t\t\tlocalctx = new CallDatasetContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 480;\r\n\t\t\t\tthis.operatorID();\r\n\t\t\t\tthis.state = 481;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 490;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===43 || _la===103 || ((((_la - 229)) & ~0x1F) === 0 && ((1 << (_la - 229)) & 47) !== 0)) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 482;\r\n\t\t\t\t\tthis.parameter();\r\n\t\t\t\t\tthis.state = 487;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\twhile (_la===17) {\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 483;\r\n\t\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\t\tthis.state = 484;\r\n\t\t\t\t\t\tthis.parameter();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 489;\r\n\t\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 492;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 22:\r\n\t\t\t\tlocalctx = new EvalAtomContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 494;\r\n\t\t\t\tthis.match(Vtl.EVAL);\r\n\t\t\t\tthis.state = 495;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 496;\r\n\t\t\t\tthis.routineName();\r\n\t\t\t\tthis.state = 497;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 500;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\t\tcase 234:\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 498;\r\n\t\t\t\t\tthis.varID();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 43:\r\n\t\t\t\tcase 229:\r\n\t\t\t\tcase 230:\r\n\t\t\t\tcase 231:\r\n\t\t\t\tcase 232:\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 499;\r\n\t\t\t\t\tthis.constant();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\tcase 17:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 509;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\twhile (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 502;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 505;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\t\t\tcase 234:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 503;\r\n\t\t\t\t\t\tthis.varID();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 43:\r\n\t\t\t\t\tcase 229:\r\n\t\t\t\t\tcase 230:\r\n\t\t\t\t\tcase 231:\r\n\t\t\t\t\tcase 232:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 504;\r\n\t\t\t\t\t\tthis.constant();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.state = 511;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 512;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\tthis.state = 515;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===228) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 513;\r\n\t\t\t\t\tthis.match(Vtl.LANGUAGE);\r\n\t\t\t\t\tthis.state = 514;\r\n\t\t\t\t\tthis.match(Vtl.STRING_CONSTANT);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 519;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===189) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 517;\r\n\t\t\t\t\tthis.match(Vtl.RETURNS);\r\n\t\t\t\t\tthis.state = 518;\r\n\t\t\t\t\tthis.datasetType();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 521;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 206:\r\n\t\t\t\tlocalctx = new CastExprDatasetContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 523;\r\n\t\t\t\tthis.match(Vtl.CAST);\r\n\t\t\t\tthis.state = 524;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 525;\r\n\t\t\t\tthis.expr(0);\r\n\t\t\t\tthis.state = 526;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 529;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\t\tcase 156:\r\n\t\t\t\tcase 157:\r\n\t\t\t\tcase 158:\r\n\t\t\t\tcase 159:\r\n\t\t\t\tcase 160:\r\n\t\t\t\tcase 161:\r\n\t\t\t\tcase 162:\r\n\t\t\t\tcase 198:\r\n\t\t\t\tcase 221:\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 527;\r\n\t\t\t\t\tthis.basicScalarType();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 234:\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 528;\r\n\t\t\t\t\tthis.valueDomainName();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 533;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 531;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 532;\r\n\t\t\t\t\tthis.match(Vtl.STRING_CONSTANT);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 535;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic genericOperatorsComponent(): GenericOperatorsComponentContext {\r\n\t\tlet localctx: GenericOperatorsComponentContext = new GenericOperatorsComponentContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 34, Vtl.RULE_genericOperatorsComponent);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 596;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 234:\r\n\t\t\t\tlocalctx = new CallComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 539;\r\n\t\t\t\tthis.operatorID();\r\n\t\t\t\tthis.state = 540;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 549;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===43 || _la===103 || ((((_la - 229)) & ~0x1F) === 0 && ((1 << (_la - 229)) & 47) !== 0)) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 541;\r\n\t\t\t\t\tthis.parameterComponent();\r\n\t\t\t\t\tthis.state = 546;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\twhile (_la===17) {\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 542;\r\n\t\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\t\tthis.state = 543;\r\n\t\t\t\t\t\tthis.parameterComponent();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 548;\r\n\t\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 551;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 206:\r\n\t\t\t\tlocalctx = new CastExprComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 553;\r\n\t\t\t\tthis.match(Vtl.CAST);\r\n\t\t\t\tthis.state = 554;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 555;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\tthis.state = 556;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 559;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\t\tcase 156:\r\n\t\t\t\tcase 157:\r\n\t\t\t\tcase 158:\r\n\t\t\t\tcase 159:\r\n\t\t\t\tcase 160:\r\n\t\t\t\tcase 161:\r\n\t\t\t\tcase 162:\r\n\t\t\t\tcase 198:\r\n\t\t\t\tcase 221:\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 557;\r\n\t\t\t\t\tthis.basicScalarType();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 234:\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 558;\r\n\t\t\t\t\tthis.valueDomainName();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 563;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 561;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 562;\r\n\t\t\t\t\tthis.match(Vtl.STRING_CONSTANT);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 565;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 22:\r\n\t\t\t\tlocalctx = new EvalAtomComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 567;\r\n\t\t\t\tthis.match(Vtl.EVAL);\r\n\t\t\t\tthis.state = 568;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 569;\r\n\t\t\t\tthis.routineName();\r\n\t\t\t\tthis.state = 570;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 573;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\t\tcase 234:\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 571;\r\n\t\t\t\t\tthis.componentID();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 43:\r\n\t\t\t\tcase 229:\r\n\t\t\t\tcase 230:\r\n\t\t\t\tcase 231:\r\n\t\t\t\tcase 232:\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 572;\r\n\t\t\t\t\tthis.constant();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\tcase 17:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 582;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\twhile (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 575;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 578;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\t\t\tcase 234:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 576;\r\n\t\t\t\t\t\tthis.componentID();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 43:\r\n\t\t\t\t\tcase 229:\r\n\t\t\t\t\tcase 230:\r\n\t\t\t\t\tcase 231:\r\n\t\t\t\t\tcase 232:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 577;\r\n\t\t\t\t\t\tthis.constant();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.state = 584;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 585;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\tthis.state = 588;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===228) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 586;\r\n\t\t\t\t\tthis.match(Vtl.LANGUAGE);\r\n\t\t\t\t\tthis.state = 587;\r\n\t\t\t\t\tthis.match(Vtl.STRING_CONSTANT);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 592;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===189) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 590;\r\n\t\t\t\t\tthis.match(Vtl.RETURNS);\r\n\t\t\t\t\tthis.state = 591;\r\n\t\t\t\t\tthis.outputParameterTypeComponent();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 594;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic parameterComponent(): ParameterComponentContext {\r\n\t\tlet localctx: ParameterComponentContext = new ParameterComponentContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 36, Vtl.RULE_parameterComponent);\r\n\t\ttry {\r\n\t\t\tthis.state = 601;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 234:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 598;\r\n\t\t\t\tthis.componentID();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 43:\r\n\t\t\tcase 229:\r\n\t\t\tcase 230:\r\n\t\t\tcase 231:\r\n\t\t\tcase 232:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 599;\r\n\t\t\t\tthis.constant();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 103:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 600;\r\n\t\t\t\tthis.match(Vtl.OPTIONAL);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic parameter(): ParameterContext {\r\n\t\tlet localctx: ParameterContext = new ParameterContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 38, Vtl.RULE_parameter);\r\n\t\ttry {\r\n\t\t\tthis.state = 606;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 234:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 603;\r\n\t\t\t\tthis.varID();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 43:\r\n\t\t\tcase 229:\r\n\t\t\tcase 230:\r\n\t\t\tcase 231:\r\n\t\t\tcase 232:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 604;\r\n\t\t\t\tthis.constant();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 103:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 605;\r\n\t\t\t\tthis.match(Vtl.OPTIONAL);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic stringOperators(): StringOperatorsContext {\r\n\t\tlet localctx: StringOperatorsContext = new StringOperatorsContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 40, Vtl.RULE_stringOperators);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 656;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 81:\r\n\t\t\tcase 83:\r\n\t\t\tcase 84:\r\n\t\t\tcase 85:\r\n\t\t\tcase 119:\r\n\t\t\tcase 120:\r\n\t\t\t\tlocalctx = new UnaryStringFunctionContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 608;\r\n\t\t\t\t(localctx as UnaryStringFunctionContext)._op = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(((((_la - 81)) & ~0x1F) === 0 && ((1 << (_la - 81)) & 29) !== 0) || _la===119 || _la===120)) {\r\n\t\t\t\t    (localctx as UnaryStringFunctionContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 609;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 610;\r\n\t\t\t\tthis.expr(0);\r\n\t\t\t\tthis.state = 611;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 86:\r\n\t\t\t\tlocalctx = new SubstrAtomContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 613;\r\n\t\t\t\tthis.match(Vtl.SUBSTR);\r\n\t\t\t\tthis.state = 614;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 615;\r\n\t\t\t\tthis.expr(0);\r\n\t\t\t\tthis.state = 626;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\tswitch ( this._interp.adaptivePredict(this._input, 45, this._ctx) ) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 622;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\tif (_la===17) {\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 616;\r\n\t\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\t\tthis.state = 617;\r\n\t\t\t\t\t\t(localctx as SubstrAtomContext)._startParameter = this.optionalExpr();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 619;\r\n\t\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\t\tthis.state = 620;\r\n\t\t\t\t\t\t(localctx as SubstrAtomContext)._endParameter = this.optionalExpr();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 624;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 625;\r\n\t\t\t\t\t(localctx as SubstrAtomContext)._startParameter = this.optionalExpr();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 628;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 122:\r\n\t\t\t\tlocalctx = new ReplaceAtomContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 630;\r\n\t\t\t\tthis.match(Vtl.REPLACE);\r\n\t\t\t\tthis.state = 631;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 632;\r\n\t\t\t\tthis.expr(0);\r\n\t\t\t\tthis.state = 633;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 634;\r\n\t\t\t\t(localctx as ReplaceAtomContext)._param = this.expr(0);\r\n\t\t\t\tthis.state = 637;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 635;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 636;\r\n\t\t\t\t\tthis.optionalExpr();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 639;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 121:\r\n\t\t\t\tlocalctx = new InstrAtomContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 4);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 641;\r\n\t\t\t\tthis.match(Vtl.INSTR);\r\n\t\t\t\tthis.state = 642;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 643;\r\n\t\t\t\tthis.expr(0);\r\n\t\t\t\tthis.state = 644;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 645;\r\n\t\t\t\t(localctx as InstrAtomContext)._pattern = this.expr(0);\r\n\t\t\t\tthis.state = 648;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\tswitch ( this._interp.adaptivePredict(this._input, 47, this._ctx) ) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 646;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 647;\r\n\t\t\t\t\t(localctx as InstrAtomContext)._startParameter = this.optionalExpr();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 652;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 650;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 651;\r\n\t\t\t\t\t(localctx as InstrAtomContext)._occurrenceParameter = this.optionalExpr();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 654;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic stringOperatorsComponent(): StringOperatorsComponentContext {\r\n\t\tlet localctx: StringOperatorsComponentContext = new StringOperatorsComponentContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 42, Vtl.RULE_stringOperatorsComponent);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 706;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 81:\r\n\t\t\tcase 83:\r\n\t\t\tcase 84:\r\n\t\t\tcase 85:\r\n\t\t\tcase 119:\r\n\t\t\tcase 120:\r\n\t\t\t\tlocalctx = new UnaryStringFunctionComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 658;\r\n\t\t\t\t(localctx as UnaryStringFunctionComponentContext)._op = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(((((_la - 81)) & ~0x1F) === 0 && ((1 << (_la - 81)) & 29) !== 0) || _la===119 || _la===120)) {\r\n\t\t\t\t    (localctx as UnaryStringFunctionComponentContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 659;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 660;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\tthis.state = 661;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 86:\r\n\t\t\t\tlocalctx = new SubstrAtomComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 663;\r\n\t\t\t\tthis.match(Vtl.SUBSTR);\r\n\t\t\t\tthis.state = 664;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 665;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\tthis.state = 676;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\tswitch ( this._interp.adaptivePredict(this._input, 51, this._ctx) ) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 672;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\tif (_la===17) {\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 666;\r\n\t\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\t\tthis.state = 667;\r\n\t\t\t\t\t\t(localctx as SubstrAtomComponentContext)._startParameter = this.optionalExprComponent();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 669;\r\n\t\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\t\tthis.state = 670;\r\n\t\t\t\t\t\t(localctx as SubstrAtomComponentContext)._endParameter = this.optionalExprComponent();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 674;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 675;\r\n\t\t\t\t\t(localctx as SubstrAtomComponentContext)._startParameter = this.optionalExprComponent();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 678;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 122:\r\n\t\t\t\tlocalctx = new ReplaceAtomComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 680;\r\n\t\t\t\tthis.match(Vtl.REPLACE);\r\n\t\t\t\tthis.state = 681;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 682;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\tthis.state = 683;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 684;\r\n\t\t\t\t(localctx as ReplaceAtomComponentContext)._param = this.exprComponent(0);\r\n\t\t\t\tthis.state = 687;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 685;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 686;\r\n\t\t\t\t\tthis.optionalExprComponent();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 689;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 121:\r\n\t\t\t\tlocalctx = new InstrAtomComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 4);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 691;\r\n\t\t\t\tthis.match(Vtl.INSTR);\r\n\t\t\t\tthis.state = 692;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 693;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\tthis.state = 694;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 695;\r\n\t\t\t\t(localctx as InstrAtomComponentContext)._pattern = this.exprComponent(0);\r\n\t\t\t\tthis.state = 698;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\tswitch ( this._interp.adaptivePredict(this._input, 53, this._ctx) ) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 696;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 697;\r\n\t\t\t\t\t(localctx as InstrAtomComponentContext)._startParameter = this.optionalExprComponent();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 702;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 700;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 701;\r\n\t\t\t\t\t(localctx as InstrAtomComponentContext)._occurrenceParameter = this.optionalExprComponent();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 704;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic numericOperators(): NumericOperatorsContext {\r\n\t\tlet localctx: NumericOperatorsContext = new NumericOperatorsContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 44, Vtl.RULE_numericOperators);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 729;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 73:\r\n\t\t\tcase 75:\r\n\t\t\tcase 96:\r\n\t\t\tcase 123:\r\n\t\t\tcase 124:\r\n\t\t\tcase 125:\r\n\t\t\t\tlocalctx = new UnaryNumericContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 708;\r\n\t\t\t\t(localctx as UnaryNumericContext)._op = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(((((_la - 73)) & ~0x1F) === 0 && ((1 << (_la - 73)) & 8388613) !== 0) || ((((_la - 123)) & ~0x1F) === 0 && ((1 << (_la - 123)) & 7) !== 0))) {\r\n\t\t\t\t    (localctx as UnaryNumericContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 709;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 710;\r\n\t\t\t\tthis.expr(0);\r\n\t\t\t\tthis.state = 711;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 77:\r\n\t\t\tcase 78:\r\n\t\t\t\tlocalctx = new UnaryWithOptionalNumericContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 713;\r\n\t\t\t\t(localctx as UnaryWithOptionalNumericContext)._op = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(_la===77 || _la===78)) {\r\n\t\t\t\t    (localctx as UnaryWithOptionalNumericContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 714;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 715;\r\n\t\t\t\tthis.expr(0);\r\n\t\t\t\tthis.state = 718;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 716;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 717;\r\n\t\t\t\t\tthis.optionalExpr();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 720;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 76:\r\n\t\t\tcase 79:\r\n\t\t\tcase 80:\r\n\t\t\t\tlocalctx = new BinaryNumericContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 722;\r\n\t\t\t\t(localctx as BinaryNumericContext)._op = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(((((_la - 76)) & ~0x1F) === 0 && ((1 << (_la - 76)) & 25) !== 0))) {\r\n\t\t\t\t    (localctx as BinaryNumericContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 723;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 724;\r\n\t\t\t\t(localctx as BinaryNumericContext)._left = this.expr(0);\r\n\t\t\t\tthis.state = 725;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 726;\r\n\t\t\t\t(localctx as BinaryNumericContext)._right = this.expr(0);\r\n\t\t\t\tthis.state = 727;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic numericOperatorsComponent(): NumericOperatorsComponentContext {\r\n\t\tlet localctx: NumericOperatorsComponentContext = new NumericOperatorsComponentContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 46, Vtl.RULE_numericOperatorsComponent);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 752;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 73:\r\n\t\t\tcase 75:\r\n\t\t\tcase 96:\r\n\t\t\tcase 123:\r\n\t\t\tcase 124:\r\n\t\t\tcase 125:\r\n\t\t\t\tlocalctx = new UnaryNumericComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 731;\r\n\t\t\t\t(localctx as UnaryNumericComponentContext)._op = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(((((_la - 73)) & ~0x1F) === 0 && ((1 << (_la - 73)) & 8388613) !== 0) || ((((_la - 123)) & ~0x1F) === 0 && ((1 << (_la - 123)) & 7) !== 0))) {\r\n\t\t\t\t    (localctx as UnaryNumericComponentContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 732;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 733;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\tthis.state = 734;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 77:\r\n\t\t\tcase 78:\r\n\t\t\t\tlocalctx = new UnaryWithOptionalNumericComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 736;\r\n\t\t\t\t(localctx as UnaryWithOptionalNumericComponentContext)._op = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(_la===77 || _la===78)) {\r\n\t\t\t\t    (localctx as UnaryWithOptionalNumericComponentContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 737;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 738;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\tthis.state = 741;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 739;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 740;\r\n\t\t\t\t\tthis.optionalExprComponent();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 743;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 76:\r\n\t\t\tcase 79:\r\n\t\t\tcase 80:\r\n\t\t\t\tlocalctx = new BinaryNumericComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 745;\r\n\t\t\t\t(localctx as BinaryNumericComponentContext)._op = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(((((_la - 76)) & ~0x1F) === 0 && ((1 << (_la - 76)) & 25) !== 0))) {\r\n\t\t\t\t    (localctx as BinaryNumericComponentContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 746;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 747;\r\n\t\t\t\t(localctx as BinaryNumericComponentContext)._left = this.exprComponent(0);\r\n\t\t\t\tthis.state = 748;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 749;\r\n\t\t\t\t(localctx as BinaryNumericComponentContext)._right = this.exprComponent(0);\r\n\t\t\t\tthis.state = 750;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic comparisonOperators(): ComparisonOperatorsContext {\r\n\t\tlet localctx: ComparisonOperatorsContext = new ComparisonOperatorsContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 48, Vtl.RULE_comparisonOperators);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 786;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 40:\r\n\t\t\t\tlocalctx = new BetweenAtomContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 754;\r\n\t\t\t\tthis.match(Vtl.BETWEEN);\r\n\t\t\t\tthis.state = 755;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 756;\r\n\t\t\t\t(localctx as BetweenAtomContext)._op = this.expr(0);\r\n\t\t\t\tthis.state = 757;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 758;\r\n\t\t\t\t(localctx as BetweenAtomContext)._from_ = this.expr(0);\r\n\t\t\t\tthis.state = 759;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 760;\r\n\t\t\t\t(localctx as BetweenAtomContext)._to_ = this.expr(0);\r\n\t\t\t\tthis.state = 761;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 99:\r\n\t\t\t\tlocalctx = new CharsetMatchAtomContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 763;\r\n\t\t\t\tthis.match(Vtl.CHARSET_MATCH);\r\n\t\t\t\tthis.state = 764;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 765;\r\n\t\t\t\t(localctx as CharsetMatchAtomContext)._op = this.expr(0);\r\n\t\t\t\tthis.state = 766;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 767;\r\n\t\t\t\t(localctx as CharsetMatchAtomContext)._pattern = this.expr(0);\r\n\t\t\t\tthis.state = 768;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 44:\r\n\t\t\t\tlocalctx = new IsNullAtomContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 770;\r\n\t\t\t\tthis.match(Vtl.ISNULL);\r\n\t\t\t\tthis.state = 771;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 772;\r\n\t\t\t\tthis.expr(0);\r\n\t\t\t\tthis.state = 773;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 55:\r\n\t\t\t\tlocalctx = new ExistInAtomContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 4);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 775;\r\n\t\t\t\tthis.match(Vtl.EXISTS_IN);\r\n\t\t\t\tthis.state = 776;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 777;\r\n\t\t\t\t(localctx as ExistInAtomContext)._left = this.expr(0);\r\n\t\t\t\tthis.state = 778;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 779;\r\n\t\t\t\t(localctx as ExistInAtomContext)._right = this.expr(0);\r\n\t\t\t\tthis.state = 782;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 780;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 781;\r\n\t\t\t\t\tthis.retainType();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 784;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic comparisonOperatorsComponent(): ComparisonOperatorsComponentContext {\r\n\t\tlet localctx: ComparisonOperatorsComponentContext = new ComparisonOperatorsComponentContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 50, Vtl.RULE_comparisonOperatorsComponent);\r\n\t\ttry {\r\n\t\t\tthis.state = 809;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 40:\r\n\t\t\t\tlocalctx = new BetweenAtomComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 788;\r\n\t\t\t\tthis.match(Vtl.BETWEEN);\r\n\t\t\t\tthis.state = 789;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 790;\r\n\t\t\t\t(localctx as BetweenAtomComponentContext)._op = this.exprComponent(0);\r\n\t\t\t\tthis.state = 791;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 792;\r\n\t\t\t\t(localctx as BetweenAtomComponentContext)._from_ = this.exprComponent(0);\r\n\t\t\t\tthis.state = 793;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 794;\r\n\t\t\t\t(localctx as BetweenAtomComponentContext)._to_ = this.exprComponent(0);\r\n\t\t\t\tthis.state = 795;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 99:\r\n\t\t\t\tlocalctx = new CharsetMatchAtomComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 797;\r\n\t\t\t\tthis.match(Vtl.CHARSET_MATCH);\r\n\t\t\t\tthis.state = 798;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 799;\r\n\t\t\t\t(localctx as CharsetMatchAtomComponentContext)._op = this.exprComponent(0);\r\n\t\t\t\tthis.state = 800;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 801;\r\n\t\t\t\t(localctx as CharsetMatchAtomComponentContext)._pattern = this.exprComponent(0);\r\n\t\t\t\tthis.state = 802;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 44:\r\n\t\t\t\tlocalctx = new IsNullAtomComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 804;\r\n\t\t\t\tthis.match(Vtl.ISNULL);\r\n\t\t\t\tthis.state = 805;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 806;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\tthis.state = 807;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic timeOperators(): TimeOperatorsContext {\r\n\t\tlet localctx: TimeOperatorsContext = new TimeOperatorsContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 52, Vtl.RULE_timeOperators);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 857;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 196:\r\n\t\t\t\tlocalctx = new PeriodAtomContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 811;\r\n\t\t\t\tthis.match(Vtl.PERIOD_INDICATOR);\r\n\t\t\t\tthis.state = 812;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 814;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif ((((_la) & ~0x1F) === 0 && ((1 << _la) & 281042946) !== 0) || ((((_la - 39)) & ~0x1F) === 0 && ((1 << (_la - 39)) & 1610712755) !== 0) || ((((_la - 73)) & ~0x1F) === 0 && ((1 << (_la - 73)) & 881065469) !== 0) || ((((_la - 119)) & ~0x1F) === 0 && ((1 << (_la - 119)) & 3223265151) !== 0) || ((((_la - 151)) & ~0x1F) === 0 && ((1 << (_la - 151)) & 3221225475) !== 0) || ((((_la - 183)) & ~0x1F) === 0 && ((1 << (_la - 183)) & 411115523) !== 0) || ((((_la - 229)) & ~0x1F) === 0 && ((1 << (_la - 229)) & 47) !== 0)) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 813;\r\n\t\t\t\t\tthis.expr(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 816;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 149:\r\n\t\t\t\tlocalctx = new FillTimeAtomContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 817;\r\n\t\t\t\tthis.match(Vtl.FILL_TIME_SERIES);\r\n\t\t\t\tthis.state = 818;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 819;\r\n\t\t\t\tthis.expr(0);\r\n\t\t\t\tthis.state = 822;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 820;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 821;\r\n\t\t\t\t\t(localctx as FillTimeAtomContext)._op = this._input.LT(1);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\tif(!(_la===60 || _la===197)) {\r\n\t\t\t\t\t    (localctx as FillTimeAtomContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t\t    this.consume();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 824;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 150:\r\n\t\t\tcase 151:\r\n\t\t\t\tlocalctx = new FlowAtomContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 826;\r\n\t\t\t\t(localctx as FlowAtomContext)._op = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(_la===150 || _la===151)) {\r\n\t\t\t\t    (localctx as FlowAtomContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 827;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 828;\r\n\t\t\t\tthis.expr(0);\r\n\t\t\t\tthis.state = 829;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 152:\r\n\t\t\t\tlocalctx = new TimeShiftAtomContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 4);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 831;\r\n\t\t\t\tthis.match(Vtl.TIMESHIFT);\r\n\t\t\t\tthis.state = 832;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 833;\r\n\t\t\t\tthis.expr(0);\r\n\t\t\t\tthis.state = 834;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 835;\r\n\t\t\t\tthis.signedInteger();\r\n\t\t\t\tthis.state = 836;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 199:\r\n\t\t\t\tlocalctx = new TimeAggAtomContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 5);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 838;\r\n\t\t\t\tthis.match(Vtl.TIME_AGG);\r\n\t\t\t\tthis.state = 839;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 840;\r\n\t\t\t\t(localctx as TimeAggAtomContext)._periodIndTo = this.match(Vtl.TIME_UNIT);\r\n\t\t\t\tthis.state = 843;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\tswitch ( this._interp.adaptivePredict(this._input, 65, this._ctx) ) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 841;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 842;\r\n\t\t\t\t\t(localctx as TimeAggAtomContext)._periodIndFrom = this._input.LT(1);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\tif(!(_la===103 || _la===233)) {\r\n\t\t\t\t\t    (localctx as TimeAggAtomContext)._periodIndFrom = this._errHandler.recoverInline(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t\t    this.consume();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 847;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\tswitch ( this._interp.adaptivePredict(this._input, 66, this._ctx) ) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 845;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 846;\r\n\t\t\t\t\t(localctx as TimeAggAtomContext)._op = this.optionalExpr();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 851;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 849;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 850;\r\n\t\t\t\t\t(localctx as TimeAggAtomContext)._delim = this._input.LT(1);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\tif(!(_la===70 || _la===71)) {\r\n\t\t\t\t\t    (localctx as TimeAggAtomContext)._delim = this._errHandler.recoverInline(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t\t    this.consume();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 853;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 28:\r\n\t\t\t\tlocalctx = new CurrentDateAtomContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 6);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 854;\r\n\t\t\t\tthis.match(Vtl.CURRENT_DATE);\r\n\t\t\t\tthis.state = 855;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 856;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic timeOperatorsComponent(): TimeOperatorsComponentContext {\r\n\t\tlet localctx: TimeOperatorsComponentContext = new TimeOperatorsComponentContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 54, Vtl.RULE_timeOperatorsComponent);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 905;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 196:\r\n\t\t\t\tlocalctx = new PeriodAtomComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 859;\r\n\t\t\t\tthis.match(Vtl.PERIOD_INDICATOR);\r\n\t\t\t\tthis.state = 860;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 862;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif ((((_la) & ~0x1F) === 0 && ((1 << _la) & 281042946) !== 0) || ((((_la - 39)) & ~0x1F) === 0 && ((1 << (_la - 39)) & 1677721651) !== 0) || ((((_la - 73)) & ~0x1F) === 0 && ((1 << (_la - 73)) & 344194557) !== 0) || ((((_la - 119)) & ~0x1F) === 0 && ((1 << (_la - 119)) & 3223264895) !== 0) || _la===151 || _la===152 || ((((_la - 196)) & ~0x1F) === 0 && ((1 << (_la - 196)) & 1033) !== 0) || ((((_la - 229)) & ~0x1F) === 0 && ((1 << (_la - 229)) & 47) !== 0)) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 861;\r\n\t\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 864;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 149:\r\n\t\t\t\tlocalctx = new FillTimeAtomComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 865;\r\n\t\t\t\tthis.match(Vtl.FILL_TIME_SERIES);\r\n\t\t\t\tthis.state = 866;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 867;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\tthis.state = 870;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 868;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 869;\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\tif(!(_la===60 || _la===197)) {\r\n\t\t\t\t\tthis._errHandler.recoverInline(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t\t    this.consume();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 872;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 150:\r\n\t\t\tcase 151:\r\n\t\t\t\tlocalctx = new FlowAtomComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 874;\r\n\t\t\t\t(localctx as FlowAtomComponentContext)._op = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(_la===150 || _la===151)) {\r\n\t\t\t\t    (localctx as FlowAtomComponentContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 875;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 876;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\tthis.state = 877;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 152:\r\n\t\t\t\tlocalctx = new TimeShiftAtomComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 4);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 879;\r\n\t\t\t\tthis.match(Vtl.TIMESHIFT);\r\n\t\t\t\tthis.state = 880;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 881;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\tthis.state = 882;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 883;\r\n\t\t\t\tthis.signedInteger();\r\n\t\t\t\tthis.state = 884;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 199:\r\n\t\t\t\tlocalctx = new TimeAggAtomComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 5);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 886;\r\n\t\t\t\tthis.match(Vtl.TIME_AGG);\r\n\t\t\t\tthis.state = 887;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 888;\r\n\t\t\t\t(localctx as TimeAggAtomComponentContext)._periodIndTo = this.match(Vtl.TIME_UNIT);\r\n\t\t\t\tthis.state = 891;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\tswitch ( this._interp.adaptivePredict(this._input, 71, this._ctx) ) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 889;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 890;\r\n\t\t\t\t\t(localctx as TimeAggAtomComponentContext)._periodIndFrom = this._input.LT(1);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\tif(!(_la===103 || _la===233)) {\r\n\t\t\t\t\t    (localctx as TimeAggAtomComponentContext)._periodIndFrom = this._errHandler.recoverInline(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t\t    this.consume();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 895;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\tswitch ( this._interp.adaptivePredict(this._input, 72, this._ctx) ) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 893;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 894;\r\n\t\t\t\t\t(localctx as TimeAggAtomComponentContext)._op = this.optionalExprComponent();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 899;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 897;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 898;\r\n\t\t\t\t\t(localctx as TimeAggAtomComponentContext)._delim = this._input.LT(1);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\tif(!(_la===70 || _la===71)) {\r\n\t\t\t\t\t    (localctx as TimeAggAtomComponentContext)._delim = this._errHandler.recoverInline(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t\t    this.consume();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 901;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 28:\r\n\t\t\t\tlocalctx = new CurrentDateAtomComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 6);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 902;\r\n\t\t\t\tthis.match(Vtl.CURRENT_DATE);\r\n\t\t\t\tthis.state = 903;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 904;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic setOperators(): SetOperatorsContext {\r\n\t\tlet localctx: SetOperatorsContext = new SetOperatorsContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 56, Vtl.RULE_setOperators);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 936;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 46:\r\n\t\t\t\tlocalctx = new UnionAtomContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 907;\r\n\t\t\t\tthis.match(Vtl.UNION);\r\n\t\t\t\tthis.state = 908;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 909;\r\n\t\t\t\t(localctx as UnionAtomContext)._left = this.expr(0);\r\n\t\t\t\tthis.state = 912;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tdo {\r\n\t\t\t\t\t{\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 910;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 911;\r\n\t\t\t\t\tthis.expr(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.state = 914;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t} while (_la===17);\r\n\t\t\t\tthis.state = 916;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 49:\r\n\t\t\t\tlocalctx = new IntersectAtomContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 918;\r\n\t\t\t\tthis.match(Vtl.INTERSECT);\r\n\t\t\t\tthis.state = 919;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 920;\r\n\t\t\t\t(localctx as IntersectAtomContext)._left = this.expr(0);\r\n\t\t\t\tthis.state = 923;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tdo {\r\n\t\t\t\t\t{\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 921;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 922;\r\n\t\t\t\t\tthis.expr(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.state = 925;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t} while (_la===17);\r\n\t\t\t\tthis.state = 927;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 48:\r\n\t\t\tcase 127:\r\n\t\t\t\tlocalctx = new SetOrSYmDiffAtomContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 929;\r\n\t\t\t\t(localctx as SetOrSYmDiffAtomContext)._op = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(_la===48 || _la===127)) {\r\n\t\t\t\t    (localctx as SetOrSYmDiffAtomContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 930;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 931;\r\n\t\t\t\t(localctx as SetOrSYmDiffAtomContext)._left = this.expr(0);\r\n\t\t\t\tthis.state = 932;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 933;\r\n\t\t\t\t(localctx as SetOrSYmDiffAtomContext)._right = this.expr(0);\r\n\t\t\t\tthis.state = 934;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic hierarchyOperators(): HierarchyOperatorsContext {\r\n\t\tlet localctx: HierarchyOperatorsContext = new HierarchyOperatorsContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 58, Vtl.RULE_hierarchyOperators);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 938;\r\n\t\t\tthis.match(Vtl.HIERARCHY);\r\n\t\t\tthis.state = 939;\r\n\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\tthis.state = 940;\r\n\t\t\tlocalctx._op = this.expr(0);\r\n\t\t\tthis.state = 941;\r\n\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\tthis.state = 942;\r\n\t\t\tlocalctx._hrName = this.match(Vtl.IDENTIFIER);\r\n\t\t\tthis.state = 944;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===155) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 943;\r\n\t\t\t\tthis.conditionClause();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state = 948;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch ( this._interp.adaptivePredict(this._input, 79, this._ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 946;\r\n\t\t\t\tthis.match(Vtl.RULE);\r\n\t\t\t\tthis.state = 947;\r\n\t\t\t\tlocalctx._ruleComponent = this.componentID();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.state = 951;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (((((_la - 213)) & ~0x1F) === 0 && ((1 << (_la - 213)) & 63) !== 0)) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 950;\r\n\t\t\t\tthis.validationMode();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state = 954;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===109 || _la===116 || _la===207) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 953;\r\n\t\t\t\tthis.inputModeHierarchy();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state = 957;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===60 || _la===212) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 956;\r\n\t\t\t\tthis.outputModeHierarchy();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state = 959;\r\n\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic validationOperators(): ValidationOperatorsContext {\r\n\t\tlet localctx: ValidationOperatorsContext = new ValidationOperatorsContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 60, Vtl.RULE_validationOperators);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 1022;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 210:\r\n\t\t\t\tlocalctx = new ValidateDPrulesetContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 961;\r\n\t\t\t\tthis.match(Vtl.CHECK_DATAPOINT);\r\n\t\t\t\tthis.state = 962;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 963;\r\n\t\t\t\t(localctx as ValidateDPrulesetContext)._op = this.expr(0);\r\n\t\t\t\tthis.state = 964;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 965;\r\n\t\t\t\t(localctx as ValidateDPrulesetContext)._dpName = this.match(Vtl.IDENTIFIER);\r\n\t\t\t\tthis.state = 975;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===219) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 966;\r\n\t\t\t\t\tthis.match(Vtl.COMPONENTS);\r\n\t\t\t\t\tthis.state = 967;\r\n\t\t\t\t\tthis.componentID();\r\n\t\t\t\t\tthis.state = 972;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\twhile (_la===17) {\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 968;\r\n\t\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\t\tthis.state = 969;\r\n\t\t\t\t\t\tthis.componentID();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 974;\r\n\t\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 978;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===60 || _la===104 || _la===220) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 977;\r\n\t\t\t\t\tthis.validationOutput();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 980;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 211:\r\n\t\t\t\tlocalctx = new ValidateHRrulesetContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 982;\r\n\t\t\t\tthis.match(Vtl.CHECK_HIERARCHY);\r\n\t\t\t\tthis.state = 983;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 984;\r\n\t\t\t\t(localctx as ValidateHRrulesetContext)._op = this.expr(0);\r\n\t\t\t\tthis.state = 985;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 986;\r\n\t\t\t\t(localctx as ValidateHRrulesetContext)._hrName = this.match(Vtl.IDENTIFIER);\r\n\t\t\t\tthis.state = 988;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===155) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 987;\r\n\t\t\t\t\tthis.conditionClause();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 992;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===116) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 990;\r\n\t\t\t\t\tthis.match(Vtl.RULE);\r\n\t\t\t\t\tthis.state = 991;\r\n\t\t\t\t\tthis.componentID();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 995;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (((((_la - 213)) & ~0x1F) === 0 && ((1 << (_la - 213)) & 63) !== 0)) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 994;\r\n\t\t\t\t\tthis.validationMode();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 998;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===109 || _la===208) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 997;\r\n\t\t\t\t\tthis.inputMode();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 1001;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===60 || _la===104 || _la===220) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1000;\r\n\t\t\t\t\tthis.validationOutput();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 1003;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 54:\r\n\t\t\t\tlocalctx = new ValidationSimpleContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1005;\r\n\t\t\t\tthis.match(Vtl.CHECK);\r\n\t\t\t\tthis.state = 1006;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 1007;\r\n\t\t\t\t(localctx as ValidationSimpleContext)._op = this.expr(0);\r\n\t\t\t\tthis.state = 1009;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===59) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1008;\r\n\t\t\t\t\t(localctx as ValidationSimpleContext)._codeErr = this.erCode();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 1012;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===62) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1011;\r\n\t\t\t\t\t(localctx as ValidationSimpleContext)._levelCode = this.erLevel();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 1015;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===58) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1014;\r\n\t\t\t\t\tthis.imbalanceExpr();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 1018;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===60 || _la===104) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1017;\r\n\t\t\t\t\t(localctx as ValidationSimpleContext)._output = this._input.LT(1);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\tif(!(_la===60 || _la===104)) {\r\n\t\t\t\t\t    (localctx as ValidationSimpleContext)._output = this._errHandler.recoverInline(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t\t    this.consume();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 1020;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic conditionalOperators(): ConditionalOperatorsContext {\r\n\t\tlet localctx: ConditionalOperatorsContext = new ConditionalOperatorsContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 62, Vtl.RULE_conditionalOperators);\r\n\t\ttry {\r\n\t\t\tlocalctx = new NvlAtomContext(this, localctx);\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1024;\r\n\t\t\tthis.match(Vtl.NVL);\r\n\t\t\tthis.state = 1025;\r\n\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\tthis.state = 1026;\r\n\t\t\t(localctx as NvlAtomContext)._left = this.expr(0);\r\n\t\t\tthis.state = 1027;\r\n\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\tthis.state = 1028;\r\n\t\t\t(localctx as NvlAtomContext)._right = this.expr(0);\r\n\t\t\tthis.state = 1029;\r\n\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic conditionalOperatorsComponent(): ConditionalOperatorsComponentContext {\r\n\t\tlet localctx: ConditionalOperatorsComponentContext = new ConditionalOperatorsComponentContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 64, Vtl.RULE_conditionalOperatorsComponent);\r\n\t\ttry {\r\n\t\t\tlocalctx = new NvlAtomComponentContext(this, localctx);\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1031;\r\n\t\t\tthis.match(Vtl.NVL);\r\n\t\t\tthis.state = 1032;\r\n\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\tthis.state = 1033;\r\n\t\t\t(localctx as NvlAtomComponentContext)._left = this.exprComponent(0);\r\n\t\t\tthis.state = 1034;\r\n\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\tthis.state = 1035;\r\n\t\t\t(localctx as NvlAtomComponentContext)._right = this.exprComponent(0);\r\n\t\t\tthis.state = 1036;\r\n\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic aggrOperators(): AggrOperatorsContext {\r\n\t\tlet localctx: AggrOperatorsContext = new AggrOperatorsContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 66, Vtl.RULE_aggrOperators);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 1046;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch ( this._interp.adaptivePredict(this._input, 96, this._ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\tlocalctx = new AggrCompContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1038;\r\n\t\t\t\t(localctx as AggrCompContext)._op = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(((((_la - 68)) & ~0x1F) === 0 && ((1 << (_la - 68)) & 7864323) !== 0) || ((((_la - 128)) & ~0x1F) === 0 && ((1 << (_la - 128)) & 15) !== 0))) {\r\n\t\t\t\t    (localctx as AggrCompContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1039;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 1040;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\tthis.state = 1041;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tlocalctx = new CountAggrCompContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1043;\r\n\t\t\t\tthis.match(Vtl.COUNT);\r\n\t\t\t\tthis.state = 1044;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 1045;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic aggrOperatorsGrouping(): AggrOperatorsGroupingContext {\r\n\t\tlet localctx: AggrOperatorsGroupingContext = new AggrOperatorsGroupingContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 68, Vtl.RULE_aggrOperatorsGrouping);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tlocalctx = new AggrDatasetContext(this, localctx);\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1048;\r\n\t\t\t(localctx as AggrDatasetContext)._op = this._input.LT(1);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif(!(((((_la - 68)) & ~0x1F) === 0 && ((1 << (_la - 68)) & 7864323) !== 0) || ((((_la - 128)) & ~0x1F) === 0 && ((1 << (_la - 128)) & 15) !== 0))) {\r\n\t\t\t    (localctx as AggrDatasetContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t    this.consume();\r\n\t\t\t}\r\n\t\t\tthis.state = 1049;\r\n\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\tthis.state = 1050;\r\n\t\t\tthis.expr(0);\r\n\t\t\tthis.state = 1055;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===132) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1051;\r\n\t\t\t\tthis.groupingClause();\r\n\t\t\t\tthis.state = 1053;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===134) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1052;\r\n\t\t\t\t\tthis.havingClause();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state = 1057;\r\n\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic anFunction(): AnFunctionContext {\r\n\t\tlet localctx: AnFunctionContext = new AnFunctionContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 70, Vtl.RULE_anFunction);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 1105;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 68:\r\n\t\t\tcase 69:\r\n\t\t\tcase 87:\r\n\t\t\tcase 88:\r\n\t\t\tcase 89:\r\n\t\t\tcase 90:\r\n\t\t\tcase 128:\r\n\t\t\tcase 129:\r\n\t\t\tcase 130:\r\n\t\t\tcase 131:\r\n\t\t\tcase 135:\r\n\t\t\tcase 136:\r\n\t\t\t\tlocalctx = new AnSimpleFunctionContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1059;\r\n\t\t\t\t(localctx as AnSimpleFunctionContext)._op = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(((((_la - 68)) & ~0x1F) === 0 && ((1 << (_la - 68)) & 7864323) !== 0) || ((((_la - 128)) & ~0x1F) === 0 && ((1 << (_la - 128)) & 399) !== 0))) {\r\n\t\t\t\t    (localctx as AnSimpleFunctionContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1060;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 1061;\r\n\t\t\t\tthis.expr(0);\r\n\t\t\t\tthis.state = 1062;\r\n\t\t\t\tthis.match(Vtl.OVER);\r\n\t\t\t\tthis.state = 1063;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1065;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===144) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1064;\r\n\t\t\t\t\t(localctx as AnSimpleFunctionContext)._partition = this.partitionByClause();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 1068;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===63) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1067;\r\n\t\t\t\t\t(localctx as AnSimpleFunctionContext)._orderBy = this.orderByClause();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 1071;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===107 || _la===146) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1070;\r\n\t\t\t\t\t(localctx as AnSimpleFunctionContext)._windowing = this.windowingClause();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1073;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\tthis.state = 1074;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 137:\r\n\t\t\tcase 138:\r\n\t\t\t\tlocalctx = new LagOrLeadAnContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1076;\r\n\t\t\t\t(localctx as LagOrLeadAnContext)._op = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(_la===137 || _la===138)) {\r\n\t\t\t\t    (localctx as LagOrLeadAnContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1077;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 1078;\r\n\t\t\t\tthis.expr(0);\r\n\t\t\t\tthis.state = 1084;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1079;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 1080;\r\n\t\t\t\t\t(localctx as LagOrLeadAnContext)._offet = this.signedInteger();\r\n\t\t\t\t\tthis.state = 1082;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\tif (_la===43 || ((((_la - 229)) & ~0x1F) === 0 && ((1 << (_la - 229)) & 15) !== 0)) {\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 1081;\r\n\t\t\t\t\t\t(localctx as LagOrLeadAnContext)._defaultValue = this.constant();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 1086;\r\n\t\t\t\tthis.match(Vtl.OVER);\r\n\t\t\t\tthis.state = 1087;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1089;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===144) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1088;\r\n\t\t\t\t\t(localctx as LagOrLeadAnContext)._partition = this.partitionByClause();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 1091;\r\n\t\t\t\t(localctx as LagOrLeadAnContext)._orderBy = this.orderByClause();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1093;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\tthis.state = 1094;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 139:\r\n\t\t\t\tlocalctx = new RatioToReportAnContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1096;\r\n\t\t\t\t(localctx as RatioToReportAnContext)._op = this.match(Vtl.RATIO_TO_REPORT);\r\n\t\t\t\tthis.state = 1097;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 1098;\r\n\t\t\t\tthis.expr(0);\r\n\t\t\t\tthis.state = 1099;\r\n\t\t\t\tthis.match(Vtl.OVER);\r\n\t\t\t\tthis.state = 1100;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1101;\r\n\t\t\t\t(localctx as RatioToReportAnContext)._partition = this.partitionByClause();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1102;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\tthis.state = 1103;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic anFunctionComponent(): AnFunctionComponentContext {\r\n\t\tlet localctx: AnFunctionComponentContext = new AnFunctionComponentContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 72, Vtl.RULE_anFunctionComponent);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 1165;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 68:\r\n\t\t\tcase 69:\r\n\t\t\tcase 87:\r\n\t\t\tcase 88:\r\n\t\t\tcase 89:\r\n\t\t\tcase 90:\r\n\t\t\tcase 128:\r\n\t\t\tcase 129:\r\n\t\t\tcase 130:\r\n\t\t\tcase 131:\r\n\t\t\tcase 135:\r\n\t\t\tcase 136:\r\n\t\t\t\tlocalctx = new AnSimpleFunctionComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1107;\r\n\t\t\t\t(localctx as AnSimpleFunctionComponentContext)._op = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(((((_la - 68)) & ~0x1F) === 0 && ((1 << (_la - 68)) & 7864323) !== 0) || ((((_la - 128)) & ~0x1F) === 0 && ((1 << (_la - 128)) & 399) !== 0))) {\r\n\t\t\t\t    (localctx as AnSimpleFunctionComponentContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1108;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 1109;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\tthis.state = 1110;\r\n\t\t\t\tthis.match(Vtl.OVER);\r\n\t\t\t\tthis.state = 1111;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1113;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===144) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1112;\r\n\t\t\t\t\t(localctx as AnSimpleFunctionComponentContext)._partition = this.partitionByClause();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 1116;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===63) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1115;\r\n\t\t\t\t\t(localctx as AnSimpleFunctionComponentContext)._orderBy = this.orderByClause();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 1119;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===107 || _la===146) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1118;\r\n\t\t\t\t\t(localctx as AnSimpleFunctionComponentContext)._windowing = this.windowingClause();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1121;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\tthis.state = 1122;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 137:\r\n\t\t\tcase 138:\r\n\t\t\t\tlocalctx = new LagOrLeadAnComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1124;\r\n\t\t\t\t(localctx as LagOrLeadAnComponentContext)._op = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(_la===137 || _la===138)) {\r\n\t\t\t\t    (localctx as LagOrLeadAnComponentContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1125;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 1126;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\tthis.state = 1132;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1127;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 1128;\r\n\t\t\t\t\t(localctx as LagOrLeadAnComponentContext)._offet = this.signedInteger();\r\n\t\t\t\t\tthis.state = 1130;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\tif (_la===43 || ((((_la - 229)) & ~0x1F) === 0 && ((1 << (_la - 229)) & 15) !== 0)) {\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 1129;\r\n\t\t\t\t\t\t(localctx as LagOrLeadAnComponentContext)._defaultValue = this.constant();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 1134;\r\n\t\t\t\tthis.match(Vtl.OVER);\r\n\t\t\t\tthis.state = 1135;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1137;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===144) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1136;\r\n\t\t\t\t\t(localctx as LagOrLeadAnComponentContext)._partition = this.partitionByClause();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 1139;\r\n\t\t\t\t(localctx as LagOrLeadAnComponentContext)._orderBy = this.orderByClause();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1141;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\tthis.state = 1142;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 65:\r\n\t\t\t\tlocalctx = new RankAnComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1144;\r\n\t\t\t\t(localctx as RankAnComponentContext)._op = this.match(Vtl.RANK);\r\n\t\t\t\tthis.state = 1145;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 1146;\r\n\t\t\t\tthis.match(Vtl.OVER);\r\n\t\t\t\tthis.state = 1147;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1149;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===144) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1148;\r\n\t\t\t\t\t(localctx as RankAnComponentContext)._partition = this.partitionByClause();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 1151;\r\n\t\t\t\t(localctx as RankAnComponentContext)._orderBy = this.orderByClause();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1153;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\tthis.state = 1154;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 139:\r\n\t\t\t\tlocalctx = new RatioToReportAnComponentContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 4);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1156;\r\n\t\t\t\t(localctx as RatioToReportAnComponentContext)._op = this.match(Vtl.RATIO_TO_REPORT);\r\n\t\t\t\tthis.state = 1157;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\tthis.state = 1158;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\tthis.state = 1159;\r\n\t\t\t\tthis.match(Vtl.OVER);\r\n\t\t\t\tthis.state = 1160;\r\n\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1161;\r\n\t\t\t\t(localctx as RatioToReportAnComponentContext)._partition = this.partitionByClause();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1162;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\tthis.state = 1163;\r\n\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic renameClauseItem(): RenameClauseItemContext {\r\n\t\tlet localctx: RenameClauseItemContext = new RenameClauseItemContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 74, Vtl.RULE_renameClauseItem);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1167;\r\n\t\t\tlocalctx._fromName = this.componentID();\r\n\t\t\tthis.state = 1168;\r\n\t\t\tthis.match(Vtl.TO);\r\n\t\t\tthis.state = 1169;\r\n\t\t\tlocalctx._toName = this.componentID();\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic aggregateClause(): AggregateClauseContext {\r\n\t\tlet localctx: AggregateClauseContext = new AggregateClauseContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 76, Vtl.RULE_aggregateClause);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1171;\r\n\t\t\tthis.aggrFunctionClause();\r\n\t\t\tthis.state = 1176;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\twhile (_la===17) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1172;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 1173;\r\n\t\t\t\tthis.aggrFunctionClause();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1178;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic aggrFunctionClause(): AggrFunctionClauseContext {\r\n\t\tlet localctx: AggrFunctionClauseContext = new AggrFunctionClauseContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 78, Vtl.RULE_aggrFunctionClause);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1180;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (((((_la - 91)) & ~0x1F) === 0 && ((1 << (_la - 91)) & 135) !== 0) || _la===222) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1179;\r\n\t\t\t\tthis.componentRole();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state = 1182;\r\n\t\t\tthis.componentID();\r\n\t\t\tthis.state = 1183;\r\n\t\t\tthis.match(Vtl.ASSIGN);\r\n\t\t\tthis.state = 1184;\r\n\t\t\tthis.aggrOperators();\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic calcClauseItem(): CalcClauseItemContext {\r\n\t\tlet localctx: CalcClauseItemContext = new CalcClauseItemContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 80, Vtl.RULE_calcClauseItem);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1187;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (((((_la - 91)) & ~0x1F) === 0 && ((1 << (_la - 91)) & 135) !== 0) || _la===222) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1186;\r\n\t\t\t\tthis.componentRole();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state = 1189;\r\n\t\t\tthis.componentID();\r\n\t\t\tthis.state = 1190;\r\n\t\t\tthis.match(Vtl.ASSIGN);\r\n\t\t\tthis.state = 1191;\r\n\t\t\tthis.exprComponent(0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic subspaceClauseItem(): SubspaceClauseItemContext {\r\n\t\tlet localctx: SubspaceClauseItemContext = new SubspaceClauseItemContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 82, Vtl.RULE_subspaceClauseItem);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1193;\r\n\t\t\tthis.componentID();\r\n\t\t\tthis.state = 1194;\r\n\t\t\tthis.match(Vtl.EQ);\r\n\t\t\tthis.state = 1195;\r\n\t\t\tthis.constant();\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic joinClauseWithoutUsing(): JoinClauseWithoutUsingContext {\r\n\t\tlet localctx: JoinClauseWithoutUsingContext = new JoinClauseWithoutUsingContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 84, Vtl.RULE_joinClauseWithoutUsing);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1197;\r\n\t\t\tthis.joinClauseItem();\r\n\t\t\tthis.state = 1202;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\twhile (_la===17) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1198;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 1199;\r\n\t\t\t\tthis.joinClauseItem();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1204;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic joinClause(): JoinClauseContext {\r\n\t\tlet localctx: JoinClauseContext = new JoinClauseContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 86, Vtl.RULE_joinClause);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1205;\r\n\t\t\tthis.joinClauseItem();\r\n\t\t\tthis.state = 1210;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\twhile (_la===17) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1206;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 1207;\r\n\t\t\t\tthis.joinClauseItem();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1212;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t}\r\n\t\t\tthis.state = 1222;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===26) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1213;\r\n\t\t\t\tthis.match(Vtl.USING);\r\n\t\t\t\tthis.state = 1214;\r\n\t\t\t\tthis.componentID();\r\n\t\t\t\tthis.state = 1219;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\twhile (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1215;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 1216;\r\n\t\t\t\t\tthis.componentID();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.state = 1221;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic joinClauseItem(): JoinClauseItemContext {\r\n\t\tlet localctx: JoinClauseItemContext = new JoinClauseItemContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 88, Vtl.RULE_joinClauseItem);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1224;\r\n\t\t\tthis.expr(0);\r\n\t\t\tthis.state = 1227;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===35) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1225;\r\n\t\t\t\tthis.match(Vtl.AS);\r\n\t\t\t\tthis.state = 1226;\r\n\t\t\t\tthis.alias();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic joinBody(): JoinBodyContext {\r\n\t\tlet localctx: JoinBodyContext = new JoinBodyContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 90, Vtl.RULE_joinBody);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1230;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===94) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1229;\r\n\t\t\t\tthis.filterClause();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state = 1235;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 32:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1232;\r\n\t\t\t\tthis.calcClause();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 194:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1233;\r\n\t\t\t\tthis.joinApplyClause();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 61:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1234;\r\n\t\t\t\tthis.aggrClause();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\tcase 30:\r\n\t\t\tcase 31:\r\n\t\t\tcase 34:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.state = 1238;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===30 || _la===31) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1237;\r\n\t\t\t\tthis.keepOrDropClause();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state = 1241;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===34) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1240;\r\n\t\t\t\tthis.renameClause();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic joinApplyClause(): JoinApplyClauseContext {\r\n\t\tlet localctx: JoinApplyClauseContext = new JoinApplyClauseContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 92, Vtl.RULE_joinApplyClause);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1243;\r\n\t\t\tthis.match(Vtl.APPLY);\r\n\t\t\tthis.state = 1244;\r\n\t\t\tthis.expr(0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic partitionByClause(): PartitionByClauseContext {\r\n\t\tlet localctx: PartitionByClauseContext = new PartitionByClauseContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 94, Vtl.RULE_partitionByClause);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1246;\r\n\t\t\tthis.match(Vtl.PARTITION);\r\n\t\t\tthis.state = 1247;\r\n\t\t\tthis.match(Vtl.BY);\r\n\t\t\tthis.state = 1248;\r\n\t\t\tthis.componentID();\r\n\t\t\tthis.state = 1253;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\twhile (_la===17) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1249;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 1250;\r\n\t\t\t\tthis.componentID();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1255;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic orderByClause(): OrderByClauseContext {\r\n\t\tlet localctx: OrderByClauseContext = new OrderByClauseContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 96, Vtl.RULE_orderByClause);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1256;\r\n\t\t\tthis.match(Vtl.ORDER);\r\n\t\t\tthis.state = 1257;\r\n\t\t\tthis.match(Vtl.BY);\r\n\t\t\tthis.state = 1258;\r\n\t\t\tthis.orderByItem();\r\n\t\t\tthis.state = 1263;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\twhile (_la===17) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1259;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 1260;\r\n\t\t\t\tthis.orderByItem();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1265;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic orderByItem(): OrderByItemContext {\r\n\t\tlet localctx: OrderByItemContext = new OrderByItemContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 98, Vtl.RULE_orderByItem);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1266;\r\n\t\t\tthis.componentID();\r\n\t\t\tthis.state = 1268;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===66 || _la===67) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1267;\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(_la===66 || _la===67)) {\r\n\t\t\t\tthis._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic windowingClause(): WindowingClauseContext {\r\n\t\tlet localctx: WindowingClauseContext = new WindowingClauseContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 100, Vtl.RULE_windowingClause);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1273;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 107:\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1270;\r\n\t\t\t\tthis.match(Vtl.DATA);\r\n\t\t\t\tthis.state = 1271;\r\n\t\t\t\tthis.match(Vtl.POINTS);\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 146:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1272;\r\n\t\t\t\tthis.match(Vtl.RANGE);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t\tthis.state = 1275;\r\n\t\t\tthis.match(Vtl.BETWEEN);\r\n\t\t\tthis.state = 1276;\r\n\t\t\tlocalctx._from_ = this.limitClauseItem();\r\n\t\t\tthis.state = 1277;\r\n\t\t\tthis.match(Vtl.AND);\r\n\t\t\tthis.state = 1278;\r\n\t\t\tlocalctx._to_ = this.limitClauseItem();\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic signedInteger(): SignedIntegerContext {\r\n\t\tlet localctx: SignedIntegerContext = new SignedIntegerContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 102, Vtl.RULE_signedInteger);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1280;\r\n\t\t\tthis.match(Vtl.INTEGER_CONSTANT);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic limitClauseItem(): LimitClauseItemContext {\r\n\t\tlet localctx: LimitClauseItemContext = new LimitClauseItemContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 104, Vtl.RULE_limitClauseItem);\r\n\t\ttry {\r\n\t\t\tthis.state = 1293;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch ( this._interp.adaptivePredict(this._input, 130, this._ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1282;\r\n\t\t\t\tthis.match(Vtl.INTEGER_CONSTANT);\r\n\t\t\t\tthis.state = 1283;\r\n\t\t\t\tlocalctx._dir = this.match(Vtl.PRECEDING);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1284;\r\n\t\t\t\tthis.match(Vtl.INTEGER_CONSTANT);\r\n\t\t\t\tthis.state = 1285;\r\n\t\t\t\tlocalctx._dir = this.match(Vtl.FOLLOWING);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1286;\r\n\t\t\t\tthis.match(Vtl.CURRENT);\r\n\t\t\t\tthis.state = 1287;\r\n\t\t\t\tthis.match(Vtl.DATA);\r\n\t\t\t\tthis.state = 1288;\r\n\t\t\t\tthis.match(Vtl.POINT);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 4);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1289;\r\n\t\t\t\tthis.match(Vtl.UNBOUNDED);\r\n\t\t\t\tthis.state = 1290;\r\n\t\t\t\tlocalctx._dir = this.match(Vtl.PRECEDING);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 5);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1291;\r\n\t\t\t\tthis.match(Vtl.UNBOUNDED);\r\n\t\t\t\tthis.state = 1292;\r\n\t\t\t\tlocalctx._dir = this.match(Vtl.FOLLOWING);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic groupingClause(): GroupingClauseContext {\r\n\t\tlet localctx: GroupingClauseContext = new GroupingClauseContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 106, Vtl.RULE_groupingClause);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 1324;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch ( this._interp.adaptivePredict(this._input, 135, this._ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\tlocalctx = new GroupByOrExceptContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1295;\r\n\t\t\t\tthis.match(Vtl.GROUP);\r\n\t\t\t\tthis.state = 1296;\r\n\t\t\t\t(localctx as GroupByOrExceptContext)._op = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(_la===64 || _la===133)) {\r\n\t\t\t\t    (localctx as GroupByOrExceptContext)._op = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1297;\r\n\t\t\t\tthis.componentID();\r\n\t\t\t\tthis.state = 1302;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\twhile (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1298;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 1299;\r\n\t\t\t\t\tthis.componentID();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.state = 1304;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1313;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===199) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1305;\r\n\t\t\t\t\tthis.match(Vtl.TIME_AGG);\r\n\t\t\t\t\tthis.state = 1306;\r\n\t\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\t\tthis.state = 1307;\r\n\t\t\t\t\tthis.match(Vtl.TIME_UNIT);\r\n\t\t\t\t\tthis.state = 1310;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\tif (_la===17) {\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 1308;\r\n\t\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\t\tthis.state = 1309;\r\n\t\t\t\t\t\t(localctx as GroupByOrExceptContext)._delim = this._input.LT(1);\r\n\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t\tif(!(_la===70 || _la===71)) {\r\n\t\t\t\t\t\t    (localctx as GroupByOrExceptContext)._delim = this._errHandler.recoverInline(this);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t\t\t    this.consume();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.state = 1312;\r\n\t\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tlocalctx = new GroupAllContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1315;\r\n\t\t\t\tthis.match(Vtl.GROUP);\r\n\t\t\t\tthis.state = 1316;\r\n\t\t\t\tthis.match(Vtl.ALL);\r\n\t\t\t\tthis.state = 1317;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\tthis.state = 1322;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===199) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1318;\r\n\t\t\t\t\tthis.match(Vtl.TIME_AGG);\r\n\t\t\t\t\tthis.state = 1319;\r\n\t\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\t\tthis.state = 1320;\r\n\t\t\t\t\tthis.match(Vtl.TIME_UNIT);\r\n\t\t\t\t\tthis.state = 1321;\r\n\t\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic havingClause(): HavingClauseContext {\r\n\t\tlet localctx: HavingClauseContext = new HavingClauseContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 108, Vtl.RULE_havingClause);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1326;\r\n\t\t\tthis.match(Vtl.HAVING);\r\n\t\t\tthis.state = 1327;\r\n\t\t\tthis.exprComponent(0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic parameterItem(): ParameterItemContext {\r\n\t\tlet localctx: ParameterItemContext = new ParameterItemContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 110, Vtl.RULE_parameterItem);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1329;\r\n\t\t\tthis.varID();\r\n\t\t\tthis.state = 1330;\r\n\t\t\tthis.inputParameterType();\r\n\t\t\tthis.state = 1333;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===209) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1331;\r\n\t\t\t\tthis.match(Vtl.DEFAULT);\r\n\t\t\t\tthis.state = 1332;\r\n\t\t\t\tthis.constant();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic outputParameterType(): OutputParameterTypeContext {\r\n\t\tlet localctx: OutputParameterTypeContext = new OutputParameterTypeContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 112, Vtl.RULE_outputParameterType);\r\n\t\ttry {\r\n\t\t\tthis.state = 1338;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 156:\r\n\t\t\tcase 157:\r\n\t\t\tcase 158:\r\n\t\t\tcase 159:\r\n\t\t\tcase 160:\r\n\t\t\tcase 161:\r\n\t\t\tcase 162:\r\n\t\t\tcase 198:\r\n\t\t\tcase 221:\r\n\t\t\tcase 234:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1335;\r\n\t\t\t\tthis.scalarType();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 109:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1336;\r\n\t\t\t\tthis.datasetType();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 91:\r\n\t\t\tcase 92:\r\n\t\t\tcase 93:\r\n\t\t\tcase 98:\r\n\t\t\tcase 222:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1337;\r\n\t\t\t\tthis.componentType();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic outputParameterTypeComponent(): OutputParameterTypeComponentContext {\r\n\t\tlet localctx: OutputParameterTypeComponentContext = new OutputParameterTypeComponentContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 114, Vtl.RULE_outputParameterTypeComponent);\r\n\t\ttry {\r\n\t\t\tthis.state = 1342;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 91:\r\n\t\t\tcase 92:\r\n\t\t\tcase 93:\r\n\t\t\tcase 98:\r\n\t\t\tcase 222:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1340;\r\n\t\t\t\tthis.componentType();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 156:\r\n\t\t\tcase 157:\r\n\t\t\tcase 158:\r\n\t\t\tcase 159:\r\n\t\t\tcase 160:\r\n\t\t\tcase 161:\r\n\t\t\tcase 162:\r\n\t\t\tcase 198:\r\n\t\t\tcase 221:\r\n\t\t\tcase 234:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1341;\r\n\t\t\t\tthis.scalarType();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic inputParameterType(): InputParameterTypeContext {\r\n\t\tlet localctx: InputParameterTypeContext = new InputParameterTypeContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 116, Vtl.RULE_inputParameterType);\r\n\t\ttry {\r\n\t\t\tthis.state = 1349;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 156:\r\n\t\t\tcase 157:\r\n\t\t\tcase 158:\r\n\t\t\tcase 159:\r\n\t\t\tcase 160:\r\n\t\t\tcase 161:\r\n\t\t\tcase 162:\r\n\t\t\tcase 198:\r\n\t\t\tcase 221:\r\n\t\t\tcase 234:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1344;\r\n\t\t\t\tthis.scalarType();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 109:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1345;\r\n\t\t\t\tthis.datasetType();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 227:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1346;\r\n\t\t\t\tthis.scalarSetType();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 113:\r\n\t\t\tcase 114:\r\n\t\t\tcase 115:\r\n\t\t\tcase 223:\r\n\t\t\tcase 224:\r\n\t\t\tcase 225:\r\n\t\t\tcase 226:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 4);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1347;\r\n\t\t\t\tthis.rulesetType();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 91:\r\n\t\t\tcase 92:\r\n\t\t\tcase 93:\r\n\t\t\tcase 98:\r\n\t\t\tcase 222:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 5);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1348;\r\n\t\t\t\tthis.componentType();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic rulesetType(): RulesetTypeContext {\r\n\t\tlet localctx: RulesetTypeContext = new RulesetTypeContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 118, Vtl.RULE_rulesetType);\r\n\t\ttry {\r\n\t\t\tthis.state = 1354;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 115:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1351;\r\n\t\t\t\tthis.match(Vtl.RULESET);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 113:\r\n\t\t\tcase 223:\r\n\t\t\tcase 224:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1352;\r\n\t\t\t\tthis.dpRuleset();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 114:\r\n\t\t\tcase 225:\r\n\t\t\tcase 226:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1353;\r\n\t\t\t\tthis.hrRuleset();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic scalarType(): ScalarTypeContext {\r\n\t\tlet localctx: ScalarTypeContext = new ScalarTypeContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 120, Vtl.RULE_scalarType);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1358;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 156:\r\n\t\t\tcase 157:\r\n\t\t\tcase 158:\r\n\t\t\tcase 159:\r\n\t\t\tcase 160:\r\n\t\t\tcase 161:\r\n\t\t\tcase 162:\r\n\t\t\tcase 198:\r\n\t\t\tcase 221:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1356;\r\n\t\t\t\tthis.basicScalarType();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 234:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1357;\r\n\t\t\t\tthis.valueDomainName();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t\tthis.state = 1361;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===3 || _la===5) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1360;\r\n\t\t\t\tthis.scalarTypeConstraint();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state = 1367;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===39 || _la===43) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1364;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===39) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1363;\r\n\t\t\t\t\tthis.match(Vtl.NOT);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 1366;\r\n\t\t\t\tthis.match(Vtl.NULL_CONSTANT);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic componentType(): ComponentTypeContext {\r\n\t\tlet localctx: ComponentTypeContext = new ComponentTypeContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 122, Vtl.RULE_componentType);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1369;\r\n\t\t\tthis.componentRole();\r\n\t\t\tthis.state = 1374;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===8) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1370;\r\n\t\t\t\tthis.match(Vtl.LT);\r\n\t\t\t\tthis.state = 1371;\r\n\t\t\t\tthis.scalarType();\r\n\t\t\t\tthis.state = 1372;\r\n\t\t\t\tthis.match(Vtl.MT);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic datasetType(): DatasetTypeContext {\r\n\t\tlet localctx: DatasetTypeContext = new DatasetTypeContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 124, Vtl.RULE_datasetType);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1376;\r\n\t\t\tthis.match(Vtl.DATASET);\r\n\t\t\tthis.state = 1388;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===5) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1377;\r\n\t\t\t\tthis.match(Vtl.GLPAREN);\r\n\t\t\t\tthis.state = 1378;\r\n\t\t\t\tthis.compConstraint();\r\n\t\t\t\tthis.state = 1383;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\twhile (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1379;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 1380;\r\n\t\t\t\t\tthis.compConstraint();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.state = 1385;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1386;\r\n\t\t\t\tthis.match(Vtl.GRPAREN);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic scalarSetType(): ScalarSetTypeContext {\r\n\t\tlet localctx: ScalarSetTypeContext = new ScalarSetTypeContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 126, Vtl.RULE_scalarSetType);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1390;\r\n\t\t\tthis.match(Vtl.SET);\r\n\t\t\tthis.state = 1395;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===8) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1391;\r\n\t\t\t\tthis.match(Vtl.LT);\r\n\t\t\t\tthis.state = 1392;\r\n\t\t\t\tthis.scalarType();\r\n\t\t\t\tthis.state = 1393;\r\n\t\t\t\tthis.match(Vtl.MT);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic dpRuleset(): DpRulesetContext {\r\n\t\tlet localctx: DpRulesetContext = new DpRulesetContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 128, Vtl.RULE_dpRuleset);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 1426;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 113:\r\n\t\t\t\tlocalctx = new DataPointContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1397;\r\n\t\t\t\tthis.match(Vtl.DATAPOINT);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 223:\r\n\t\t\t\tlocalctx = new DataPointVdContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1398;\r\n\t\t\t\tthis.match(Vtl.DATAPOINT_ON_VD);\r\n\t\t\t\tthis.state = 1410;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===5) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1399;\r\n\t\t\t\t\tthis.match(Vtl.GLPAREN);\r\n\t\t\t\t\tthis.state = 1400;\r\n\t\t\t\t\tthis.valueDomainName();\r\n\t\t\t\t\tthis.state = 1405;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\twhile (_la===15) {\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 1401;\r\n\t\t\t\t\t\tthis.match(Vtl.MUL);\r\n\t\t\t\t\t\tthis.state = 1402;\r\n\t\t\t\t\t\tthis.valueDomainName();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 1407;\r\n\t\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.state = 1408;\r\n\t\t\t\t\tthis.match(Vtl.GRPAREN);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 224:\r\n\t\t\t\tlocalctx = new DataPointVarContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1412;\r\n\t\t\t\tthis.match(Vtl.DATAPOINT_ON_VAR);\r\n\t\t\t\tthis.state = 1424;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===5) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1413;\r\n\t\t\t\t\tthis.match(Vtl.GLPAREN);\r\n\t\t\t\t\tthis.state = 1414;\r\n\t\t\t\t\tthis.varID();\r\n\t\t\t\t\tthis.state = 1419;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\twhile (_la===15) {\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 1415;\r\n\t\t\t\t\t\tthis.match(Vtl.MUL);\r\n\t\t\t\t\t\tthis.state = 1416;\r\n\t\t\t\t\t\tthis.varID();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 1421;\r\n\t\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.state = 1422;\r\n\t\t\t\t\tthis.match(Vtl.GRPAREN);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic hrRuleset(): HrRulesetContext {\r\n\t\tlet localctx: HrRulesetContext = new HrRulesetContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 130, Vtl.RULE_hrRuleset);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 1468;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 114:\r\n\t\t\t\tlocalctx = new HrRulesetTypeContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1428;\r\n\t\t\t\tthis.match(Vtl.HIERARCHICAL);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 225:\r\n\t\t\t\tlocalctx = new HrRulesetVdTypeContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1429;\r\n\t\t\t\tthis.match(Vtl.HIERARCHICAL_ON_VD);\r\n\t\t\t\tthis.state = 1446;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===5) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1430;\r\n\t\t\t\t\tthis.match(Vtl.GLPAREN);\r\n\t\t\t\t\tthis.state = 1431;\r\n\t\t\t\t\t(localctx as HrRulesetVdTypeContext)._vdName = this.match(Vtl.IDENTIFIER);\r\n\t\t\t\t\tthis.state = 1443;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\tif (_la===1) {\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 1432;\r\n\t\t\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\t\t\tthis.state = 1433;\r\n\t\t\t\t\t\tthis.valueDomainName();\r\n\t\t\t\t\t\tthis.state = 1438;\r\n\t\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t\twhile (_la===15) {\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.state = 1434;\r\n\t\t\t\t\t\t\tthis.match(Vtl.MUL);\r\n\t\t\t\t\t\t\tthis.state = 1435;\r\n\t\t\t\t\t\t\tthis.valueDomainName();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.state = 1440;\r\n\t\t\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 1441;\r\n\t\t\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.state = 1445;\r\n\t\t\t\t\tthis.match(Vtl.GRPAREN);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 226:\r\n\t\t\t\tlocalctx = new HrRulesetVarTypeContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1448;\r\n\t\t\t\tthis.match(Vtl.HIERARCHICAL_ON_VAR);\r\n\t\t\t\tthis.state = 1466;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la===5) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1449;\r\n\t\t\t\t\tthis.match(Vtl.GLPAREN);\r\n\t\t\t\t\tthis.state = 1450;\r\n\t\t\t\t\t(localctx as HrRulesetVarTypeContext)._varName = this.varID();\r\n\t\t\t\t\tthis.state = 1462;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\tif (_la===1) {\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 1451;\r\n\t\t\t\t\t\tthis.match(Vtl.LPAREN);\r\n\t\t\t\t\t\tthis.state = 1452;\r\n\t\t\t\t\t\tthis.varID();\r\n\t\t\t\t\t\tthis.state = 1457;\r\n\t\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t\twhile (_la===15) {\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.state = 1453;\r\n\t\t\t\t\t\t\tthis.match(Vtl.MUL);\r\n\t\t\t\t\t\t\tthis.state = 1454;\r\n\t\t\t\t\t\t\tthis.varID();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.state = 1459;\r\n\t\t\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 1460;\r\n\t\t\t\t\t\tthis.match(Vtl.RPAREN);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.state = 1464;\r\n\t\t\t\t\tthis.match(Vtl.GRPAREN);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic valueDomainName(): ValueDomainNameContext {\r\n\t\tlet localctx: ValueDomainNameContext = new ValueDomainNameContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 132, Vtl.RULE_valueDomainName);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1470;\r\n\t\t\tthis.match(Vtl.IDENTIFIER);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic rulesetID(): RulesetIDContext {\r\n\t\tlet localctx: RulesetIDContext = new RulesetIDContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 134, Vtl.RULE_rulesetID);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1472;\r\n\t\t\tthis.match(Vtl.IDENTIFIER);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic rulesetSignature(): RulesetSignatureContext {\r\n\t\tlet localctx: RulesetSignatureContext = new RulesetSignatureContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 136, Vtl.RULE_rulesetSignature);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1474;\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif(!(_la===105 || _la===106)) {\r\n\t\t\tthis._errHandler.recoverInline(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t    this.consume();\r\n\t\t\t}\r\n\t\t\tthis.state = 1475;\r\n\t\t\tthis.signature();\r\n\t\t\tthis.state = 1480;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\twhile (_la===17) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1476;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 1477;\r\n\t\t\t\tthis.signature();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1482;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic signature(): SignatureContext {\r\n\t\tlet localctx: SignatureContext = new SignatureContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 138, Vtl.RULE_signature);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1483;\r\n\t\t\tthis.varID();\r\n\t\t\tthis.state = 1486;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===35) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1484;\r\n\t\t\t\tthis.match(Vtl.AS);\r\n\t\t\t\tthis.state = 1485;\r\n\t\t\t\tthis.alias();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic ruleClauseDatapoint(): RuleClauseDatapointContext {\r\n\t\tlet localctx: RuleClauseDatapointContext = new RuleClauseDatapointContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 140, Vtl.RULE_ruleClauseDatapoint);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1488;\r\n\t\t\tthis.ruleItemDatapoint();\r\n\t\t\tthis.state = 1493;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\twhile (_la===236) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1489;\r\n\t\t\t\tthis.match(Vtl.EOL);\r\n\t\t\t\tthis.state = 1490;\r\n\t\t\t\tthis.ruleItemDatapoint();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1495;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic ruleItemDatapoint(): RuleItemDatapointContext {\r\n\t\tlet localctx: RuleItemDatapointContext = new RuleItemDatapointContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 142, Vtl.RULE_ruleItemDatapoint);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1498;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch ( this._interp.adaptivePredict(this._input, 164, this._ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1496;\r\n\t\t\t\tlocalctx._ruleName = this.match(Vtl.IDENTIFIER);\r\n\t\t\t\tthis.state = 1497;\r\n\t\t\t\tthis.match(Vtl.COLON);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.state = 1504;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===173) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1500;\r\n\t\t\t\tthis.match(Vtl.WHEN);\r\n\t\t\t\tthis.state = 1501;\r\n\t\t\t\tlocalctx._antecedentContiditon = this.exprComponent(0);\r\n\t\t\t\tthis.state = 1502;\r\n\t\t\t\tthis.match(Vtl.THEN);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state = 1506;\r\n\t\t\tlocalctx._consequentCondition = this.exprComponent(0);\r\n\t\t\tthis.state = 1508;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===59) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1507;\r\n\t\t\t\tthis.erCode();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state = 1511;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===62) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1510;\r\n\t\t\t\tthis.erLevel();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic ruleClauseHierarchical(): RuleClauseHierarchicalContext {\r\n\t\tlet localctx: RuleClauseHierarchicalContext = new RuleClauseHierarchicalContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 144, Vtl.RULE_ruleClauseHierarchical);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1513;\r\n\t\t\tthis.ruleItemHierarchical();\r\n\t\t\tthis.state = 1518;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\twhile (_la===236) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1514;\r\n\t\t\t\tthis.match(Vtl.EOL);\r\n\t\t\t\tthis.state = 1515;\r\n\t\t\t\tthis.ruleItemHierarchical();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1520;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic ruleItemHierarchical(): RuleItemHierarchicalContext {\r\n\t\tlet localctx: RuleItemHierarchicalContext = new RuleItemHierarchicalContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 146, Vtl.RULE_ruleItemHierarchical);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1523;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch ( this._interp.adaptivePredict(this._input, 169, this._ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1521;\r\n\t\t\t\tlocalctx._ruleName = this.match(Vtl.IDENTIFIER);\r\n\t\t\t\tthis.state = 1522;\r\n\t\t\t\tthis.match(Vtl.COLON);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.state = 1525;\r\n\t\t\tthis.codeItemRelation();\r\n\t\t\tthis.state = 1527;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===59) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1526;\r\n\t\t\t\tthis.erCode();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state = 1530;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===62) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1529;\r\n\t\t\t\tthis.erLevel();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic hierRuleSignature(): HierRuleSignatureContext {\r\n\t\tlet localctx: HierRuleSignatureContext = new HierRuleSignatureContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 148, Vtl.RULE_hierRuleSignature);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1532;\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif(!(_la===105 || _la===106)) {\r\n\t\t\tthis._errHandler.recoverInline(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t    this.consume();\r\n\t\t\t}\r\n\t\t\tthis.state = 1535;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===155) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1533;\r\n\t\t\t\tthis.match(Vtl.CONDITION);\r\n\t\t\t\tthis.state = 1534;\r\n\t\t\t\tthis.valueDomainSignature();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state = 1537;\r\n\t\t\tthis.match(Vtl.RULE);\r\n\t\t\tthis.state = 1538;\r\n\t\t\tthis.match(Vtl.IDENTIFIER);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic valueDomainSignature(): ValueDomainSignatureContext {\r\n\t\tlet localctx: ValueDomainSignatureContext = new ValueDomainSignatureContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 150, Vtl.RULE_valueDomainSignature);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1540;\r\n\t\t\tthis.signature();\r\n\t\t\tthis.state = 1545;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\twhile (_la===17) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1541;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 1542;\r\n\t\t\t\tthis.signature();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1547;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic codeItemRelation(): CodeItemRelationContext {\r\n\t\tlet localctx: CodeItemRelationContext = new CodeItemRelationContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 152, Vtl.RULE_codeItemRelation);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1552;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===173) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1548;\r\n\t\t\t\tthis.match(Vtl.WHEN);\r\n\t\t\t\tthis.state = 1549;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\tthis.state = 1550;\r\n\t\t\t\tthis.match(Vtl.THEN);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state = 1554;\r\n\t\t\tlocalctx._codeItemRef = this.valueDomainValue();\r\n\t\t\tthis.state = 1556;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif ((((_la) & ~0x1F) === 0 && ((1 << _la) & 8064) !== 0)) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1555;\r\n\t\t\t\tthis.comparisonOperand();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state = 1558;\r\n\t\t\tthis.codeItemRelationClause();\r\n\t\t\tthis.state = 1562;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\twhile (_la===13 || _la===14 || ((((_la - 229)) & ~0x1F) === 0 && ((1 << (_la - 229)) & 35) !== 0)) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1559;\r\n\t\t\t\tthis.codeItemRelationClause();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1564;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic codeItemRelationClause(): CodeItemRelationClauseContext {\r\n\t\tlet localctx: CodeItemRelationClauseContext = new CodeItemRelationClauseContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 154, Vtl.RULE_codeItemRelationClause);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1566;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===13 || _la===14) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1565;\r\n\t\t\t\tlocalctx._opAdd = this._input.LT(1);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(_la===13 || _la===14)) {\r\n\t\t\t\t    localctx._opAdd = this._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state = 1568;\r\n\t\t\tlocalctx._rightCodeItem = this.valueDomainValue();\r\n\t\t\tthis.state = 1573;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===3) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1569;\r\n\t\t\t\tthis.match(Vtl.QLPAREN);\r\n\t\t\t\tthis.state = 1570;\r\n\t\t\t\tlocalctx._rightCondition = this.exprComponent(0);\r\n\t\t\t\tthis.state = 1571;\r\n\t\t\t\tthis.match(Vtl.QRPAREN);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic valueDomainValue(): ValueDomainValueContext {\r\n\t\tlet localctx: ValueDomainValueContext = new ValueDomainValueContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 156, Vtl.RULE_valueDomainValue);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1575;\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif(!(((((_la - 229)) & ~0x1F) === 0 && ((1 << (_la - 229)) & 35) !== 0))) {\r\n\t\t\tthis._errHandler.recoverInline(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t    this.consume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic scalarTypeConstraint(): ScalarTypeConstraintContext {\r\n\t\tlet localctx: ScalarTypeConstraintContext = new ScalarTypeConstraintContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 158, Vtl.RULE_scalarTypeConstraint);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 1592;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 3:\r\n\t\t\t\tlocalctx = new ConditionConstraintContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1577;\r\n\t\t\t\tthis.match(Vtl.QLPAREN);\r\n\t\t\t\tthis.state = 1578;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\tthis.state = 1579;\r\n\t\t\t\tthis.match(Vtl.QRPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tlocalctx = new RangeConstraintContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1581;\r\n\t\t\t\tthis.match(Vtl.GLPAREN);\r\n\t\t\t\tthis.state = 1582;\r\n\t\t\t\tthis.constant();\r\n\t\t\t\tthis.state = 1587;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\twhile (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1583;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 1584;\r\n\t\t\t\t\tthis.constant();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.state = 1589;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1590;\r\n\t\t\t\tthis.match(Vtl.GRPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic compConstraint(): CompConstraintContext {\r\n\t\tlet localctx: CompConstraintContext = new CompConstraintContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 160, Vtl.RULE_compConstraint);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1594;\r\n\t\t\tthis.componentType();\r\n\t\t\tthis.state = 1597;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 234:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1595;\r\n\t\t\t\tthis.componentID();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 103:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1596;\r\n\t\t\t\tthis.multModifier();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic multModifier(): MultModifierContext {\r\n\t\tlet localctx: MultModifierContext = new MultModifierContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 162, Vtl.RULE_multModifier);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1599;\r\n\t\t\tthis.match(Vtl.OPTIONAL);\r\n\t\t\tthis.state = 1601;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (_la===13 || _la===15) {\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1600;\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif(!(_la===13 || _la===15)) {\r\n\t\t\t\tthis._errHandler.recoverInline(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\t    this.consume();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic validationOutput(): ValidationOutputContext {\r\n\t\tlet localctx: ValidationOutputContext = new ValidationOutputContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 164, Vtl.RULE_validationOutput);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1603;\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif(!(_la===60 || _la===104 || _la===220)) {\r\n\t\t\tthis._errHandler.recoverInline(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t    this.consume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic validationMode(): ValidationModeContext {\r\n\t\tlet localctx: ValidationModeContext = new ValidationModeContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 166, Vtl.RULE_validationMode);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1605;\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif(!(((((_la - 213)) & ~0x1F) === 0 && ((1 << (_la - 213)) & 63) !== 0))) {\r\n\t\t\tthis._errHandler.recoverInline(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t    this.consume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic conditionClause(): ConditionClauseContext {\r\n\t\tlet localctx: ConditionClauseContext = new ConditionClauseContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 168, Vtl.RULE_conditionClause);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1607;\r\n\t\t\tthis.match(Vtl.CONDITION);\r\n\t\t\tthis.state = 1608;\r\n\t\t\tthis.componentID();\r\n\t\t\tthis.state = 1613;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\twhile (_la===17) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1609;\r\n\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\tthis.state = 1610;\r\n\t\t\t\tthis.componentID();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1615;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic inputMode(): InputModeContext {\r\n\t\tlet localctx: InputModeContext = new InputModeContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 170, Vtl.RULE_inputMode);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1616;\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif(!(_la===109 || _la===208)) {\r\n\t\t\tthis._errHandler.recoverInline(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t    this.consume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic imbalanceExpr(): ImbalanceExprContext {\r\n\t\tlet localctx: ImbalanceExprContext = new ImbalanceExprContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 172, Vtl.RULE_imbalanceExpr);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1618;\r\n\t\t\tthis.match(Vtl.IMBALANCE);\r\n\t\t\tthis.state = 1619;\r\n\t\t\tthis.expr(0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic inputModeHierarchy(): InputModeHierarchyContext {\r\n\t\tlet localctx: InputModeHierarchyContext = new InputModeHierarchyContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 174, Vtl.RULE_inputModeHierarchy);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1621;\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif(!(_la===109 || _la===116 || _la===207)) {\r\n\t\t\tthis._errHandler.recoverInline(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t    this.consume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic outputModeHierarchy(): OutputModeHierarchyContext {\r\n\t\tlet localctx: OutputModeHierarchyContext = new OutputModeHierarchyContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 176, Vtl.RULE_outputModeHierarchy);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1623;\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif(!(_la===60 || _la===212)) {\r\n\t\t\tthis._errHandler.recoverInline(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t    this.consume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic alias(): AliasContext {\r\n\t\tlet localctx: AliasContext = new AliasContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 178, Vtl.RULE_alias);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1625;\r\n\t\t\tthis.match(Vtl.IDENTIFIER);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic varID(): VarIDContext {\r\n\t\tlet localctx: VarIDContext = new VarIDContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 180, Vtl.RULE_varID);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1627;\r\n\t\t\tthis.match(Vtl.IDENTIFIER);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic simpleComponentId(): SimpleComponentIdContext {\r\n\t\tlet localctx: SimpleComponentIdContext = new SimpleComponentIdContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 182, Vtl.RULE_simpleComponentId);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1629;\r\n\t\t\tthis.match(Vtl.IDENTIFIER);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic componentID(): ComponentIDContext {\r\n\t\tlet localctx: ComponentIDContext = new ComponentIDContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 184, Vtl.RULE_componentID);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1631;\r\n\t\t\tthis.match(Vtl.IDENTIFIER);\r\n\t\t\tthis.state = 1634;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch ( this._interp.adaptivePredict(this._input, 184, this._ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1632;\r\n\t\t\t\tthis.match(Vtl.MEMBERSHIP);\r\n\t\t\t\tthis.state = 1633;\r\n\t\t\t\tthis.match(Vtl.IDENTIFIER);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic inexpr(): InexprContext {\r\n\t\tlet localctx: InexprContext = new InexprContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 186, Vtl.RULE_inexpr);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 1648;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 5:\r\n\t\t\t\tlocalctx = new SetExprContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1636;\r\n\t\t\t\tthis.match(Vtl.GLPAREN);\r\n\t\t\t\tthis.state = 1637;\r\n\t\t\t\tthis.constant();\r\n\t\t\t\tthis.state = 1642;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\twhile (_la===17) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 1638;\r\n\t\t\t\t\tthis.match(Vtl.COMMA);\r\n\t\t\t\t\tthis.state = 1639;\r\n\t\t\t\t\tthis.constant();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.state = 1644;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 1645;\r\n\t\t\t\tthis.match(Vtl.GRPAREN);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 234:\r\n\t\t\t\tlocalctx = new ValueDomainExprContext(this, localctx);\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1647;\r\n\t\t\t\tthis.valueDomainID();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic erCode(): ErCodeContext {\r\n\t\tlet localctx: ErCodeContext = new ErCodeContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 188, Vtl.RULE_erCode);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1650;\r\n\t\t\tthis.match(Vtl.ERRORCODE);\r\n\t\t\tthis.state = 1651;\r\n\t\t\tthis.constant();\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic erLevel(): ErLevelContext {\r\n\t\tlet localctx: ErLevelContext = new ErLevelContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 190, Vtl.RULE_erLevel);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1653;\r\n\t\t\tthis.match(Vtl.ERRORLEVEL);\r\n\t\t\tthis.state = 1654;\r\n\t\t\tthis.constant();\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic comparisonOperand(): ComparisonOperandContext {\r\n\t\tlet localctx: ComparisonOperandContext = new ComparisonOperandContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 192, Vtl.RULE_comparisonOperand);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1656;\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif(!((((_la) & ~0x1F) === 0 && ((1 << _la) & 8064) !== 0))) {\r\n\t\t\tthis._errHandler.recoverInline(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t    this.consume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic optionalExpr(): OptionalExprContext {\r\n\t\tlet localctx: OptionalExprContext = new OptionalExprContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 194, Vtl.RULE_optionalExpr);\r\n\t\ttry {\r\n\t\t\tthis.state = 1660;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 1:\r\n\t\t\tcase 13:\r\n\t\t\tcase 14:\r\n\t\t\tcase 22:\r\n\t\t\tcase 23:\r\n\t\t\tcase 28:\r\n\t\t\tcase 39:\r\n\t\t\tcase 40:\r\n\t\t\tcase 43:\r\n\t\t\tcase 44:\r\n\t\t\tcase 46:\r\n\t\t\tcase 48:\r\n\t\t\tcase 49:\r\n\t\t\tcase 54:\r\n\t\t\tcase 55:\r\n\t\t\tcase 68:\r\n\t\t\tcase 69:\r\n\t\t\tcase 73:\r\n\t\t\tcase 75:\r\n\t\t\tcase 76:\r\n\t\t\tcase 77:\r\n\t\t\tcase 78:\r\n\t\t\tcase 79:\r\n\t\t\tcase 80:\r\n\t\t\tcase 81:\r\n\t\t\tcase 83:\r\n\t\t\tcase 84:\r\n\t\t\tcase 85:\r\n\t\t\tcase 86:\r\n\t\t\tcase 87:\r\n\t\t\tcase 88:\r\n\t\t\tcase 89:\r\n\t\t\tcase 90:\r\n\t\t\tcase 96:\r\n\t\t\tcase 99:\r\n\t\t\tcase 101:\r\n\t\t\tcase 102:\r\n\t\t\tcase 119:\r\n\t\t\tcase 120:\r\n\t\t\tcase 121:\r\n\t\t\tcase 122:\r\n\t\t\tcase 123:\r\n\t\t\tcase 124:\r\n\t\t\tcase 125:\r\n\t\t\tcase 127:\r\n\t\t\tcase 128:\r\n\t\t\tcase 129:\r\n\t\t\tcase 130:\r\n\t\t\tcase 131:\r\n\t\t\tcase 135:\r\n\t\t\tcase 136:\r\n\t\t\tcase 137:\r\n\t\t\tcase 138:\r\n\t\t\tcase 139:\r\n\t\t\tcase 149:\r\n\t\t\tcase 150:\r\n\t\t\tcase 151:\r\n\t\t\tcase 152:\r\n\t\t\tcase 181:\r\n\t\t\tcase 182:\r\n\t\t\tcase 183:\r\n\t\t\tcase 184:\r\n\t\t\tcase 196:\r\n\t\t\tcase 199:\r\n\t\t\tcase 206:\r\n\t\t\tcase 210:\r\n\t\t\tcase 211:\r\n\t\t\tcase 229:\r\n\t\t\tcase 230:\r\n\t\t\tcase 231:\r\n\t\t\tcase 232:\r\n\t\t\tcase 234:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1658;\r\n\t\t\t\tthis.expr(0);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 103:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1659;\r\n\t\t\t\tthis.match(Vtl.OPTIONAL);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic optionalExprComponent(): OptionalExprComponentContext {\r\n\t\tlet localctx: OptionalExprComponentContext = new OptionalExprComponentContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 196, Vtl.RULE_optionalExprComponent);\r\n\t\ttry {\r\n\t\t\tthis.state = 1664;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 1:\r\n\t\t\tcase 13:\r\n\t\t\tcase 14:\r\n\t\t\tcase 22:\r\n\t\t\tcase 23:\r\n\t\t\tcase 28:\r\n\t\t\tcase 39:\r\n\t\t\tcase 40:\r\n\t\t\tcase 43:\r\n\t\t\tcase 44:\r\n\t\t\tcase 65:\r\n\t\t\tcase 68:\r\n\t\t\tcase 69:\r\n\t\t\tcase 73:\r\n\t\t\tcase 75:\r\n\t\t\tcase 76:\r\n\t\t\tcase 77:\r\n\t\t\tcase 78:\r\n\t\t\tcase 79:\r\n\t\t\tcase 80:\r\n\t\t\tcase 81:\r\n\t\t\tcase 83:\r\n\t\t\tcase 84:\r\n\t\t\tcase 85:\r\n\t\t\tcase 86:\r\n\t\t\tcase 87:\r\n\t\t\tcase 88:\r\n\t\t\tcase 89:\r\n\t\t\tcase 90:\r\n\t\t\tcase 96:\r\n\t\t\tcase 99:\r\n\t\t\tcase 101:\r\n\t\t\tcase 119:\r\n\t\t\tcase 120:\r\n\t\t\tcase 121:\r\n\t\t\tcase 122:\r\n\t\t\tcase 123:\r\n\t\t\tcase 124:\r\n\t\t\tcase 125:\r\n\t\t\tcase 128:\r\n\t\t\tcase 129:\r\n\t\t\tcase 130:\r\n\t\t\tcase 131:\r\n\t\t\tcase 135:\r\n\t\t\tcase 136:\r\n\t\t\tcase 137:\r\n\t\t\tcase 138:\r\n\t\t\tcase 139:\r\n\t\t\tcase 149:\r\n\t\t\tcase 150:\r\n\t\t\tcase 151:\r\n\t\t\tcase 152:\r\n\t\t\tcase 196:\r\n\t\t\tcase 199:\r\n\t\t\tcase 206:\r\n\t\t\tcase 229:\r\n\t\t\tcase 230:\r\n\t\t\tcase 231:\r\n\t\t\tcase 232:\r\n\t\t\tcase 234:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1662;\r\n\t\t\t\tthis.exprComponent(0);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 103:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1663;\r\n\t\t\t\tthis.match(Vtl.OPTIONAL);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic componentRole(): ComponentRoleContext {\r\n\t\tlet localctx: ComponentRoleContext = new ComponentRoleContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 198, Vtl.RULE_componentRole);\r\n\t\ttry {\r\n\t\t\tthis.state = 1671;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase 92:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1666;\r\n\t\t\t\tthis.match(Vtl.MEASURE);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 222:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1667;\r\n\t\t\t\tthis.match(Vtl.COMPONENT);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 91:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1668;\r\n\t\t\t\tthis.match(Vtl.DIMENSION);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 93:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 4);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1669;\r\n\t\t\t\tthis.match(Vtl.ATTRIBUTE);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 98:\r\n\t\t\t\tthis.enterOuterAlt(localctx, 5);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 1670;\r\n\t\t\t\tthis.viralAttribute();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic viralAttribute(): ViralAttributeContext {\r\n\t\tlet localctx: ViralAttributeContext = new ViralAttributeContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 200, Vtl.RULE_viralAttribute);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1673;\r\n\t\t\tthis.match(Vtl.VIRAL);\r\n\t\t\tthis.state = 1674;\r\n\t\t\tthis.match(Vtl.ATTRIBUTE);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic valueDomainID(): ValueDomainIDContext {\r\n\t\tlet localctx: ValueDomainIDContext = new ValueDomainIDContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 202, Vtl.RULE_valueDomainID);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1676;\r\n\t\t\tthis.match(Vtl.IDENTIFIER);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic operatorID(): OperatorIDContext {\r\n\t\tlet localctx: OperatorIDContext = new OperatorIDContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 204, Vtl.RULE_operatorID);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1678;\r\n\t\t\tthis.match(Vtl.IDENTIFIER);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic routineName(): RoutineNameContext {\r\n\t\tlet localctx: RoutineNameContext = new RoutineNameContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 206, Vtl.RULE_routineName);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1680;\r\n\t\t\tthis.match(Vtl.IDENTIFIER);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic constant(): ConstantContext {\r\n\t\tlet localctx: ConstantContext = new ConstantContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 208, Vtl.RULE_constant);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1682;\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif(!(_la===43 || ((((_la - 229)) & ~0x1F) === 0 && ((1 << (_la - 229)) & 15) !== 0))) {\r\n\t\t\tthis._errHandler.recoverInline(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t    this.consume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic basicScalarType(): BasicScalarTypeContext {\r\n\t\tlet localctx: BasicScalarTypeContext = new BasicScalarTypeContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 210, Vtl.RULE_basicScalarType);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1684;\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif(!(((((_la - 156)) & ~0x1F) === 0 && ((1 << (_la - 156)) & 127) !== 0) || _la===198 || _la===221)) {\r\n\t\t\tthis._errHandler.recoverInline(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t    this.consume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic retainType(): RetainTypeContext {\r\n\t\tlet localctx: RetainTypeContext = new RetainTypeContext(this, this._ctx, this.state);\r\n\t\tthis.enterRule(localctx, 212, Vtl.RULE_retainType);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 1686;\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif(!(_la===60 || _la===231)) {\r\n\t\t\tthis._errHandler.recoverInline(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t    this.consume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\tlocalctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn localctx;\r\n\t}\r\n\r\n\tpublic sempred(localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {\r\n\t\tswitch (ruleIndex) {\r\n\t\tcase 2:\r\n\t\t\treturn this.expr_sempred(localctx as ExprContext, predIndex);\r\n\t\tcase 3:\r\n\t\t\treturn this.exprComponent_sempred(localctx as ExprComponentContext, predIndex);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tprivate expr_sempred(localctx: ExprContext, predIndex: number): boolean {\r\n\t\tswitch (predIndex) {\r\n\t\tcase 0:\r\n\t\t\treturn this.precpred(this._ctx, 9);\r\n\t\tcase 1:\r\n\t\t\treturn this.precpred(this._ctx, 8);\r\n\t\tcase 2:\r\n\t\t\treturn this.precpred(this._ctx, 7);\r\n\t\tcase 3:\r\n\t\t\treturn this.precpred(this._ctx, 5);\r\n\t\tcase 4:\r\n\t\t\treturn this.precpred(this._ctx, 4);\r\n\t\tcase 5:\r\n\t\t\treturn this.precpred(this._ctx, 12);\r\n\t\tcase 6:\r\n\t\t\treturn this.precpred(this._ctx, 11);\r\n\t\tcase 7:\r\n\t\t\treturn this.precpred(this._ctx, 6);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tprivate exprComponent_sempred(localctx: ExprComponentContext, predIndex: number): boolean {\r\n\t\tswitch (predIndex) {\r\n\t\tcase 8:\r\n\t\t\treturn this.precpred(this._ctx, 9);\r\n\t\tcase 9:\r\n\t\t\treturn this.precpred(this._ctx, 8);\r\n\t\tcase 10:\r\n\t\t\treturn this.precpred(this._ctx, 7);\r\n\t\tcase 11:\r\n\t\t\treturn this.precpred(this._ctx, 5);\r\n\t\tcase 12:\r\n\t\t\treturn this.precpred(this._ctx, 4);\r\n\t\tcase 13:\r\n\t\t\treturn this.precpred(this._ctx, 6);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static readonly _serializedATN: number[] = [4,1,238,1689,2,0,7,0,\r\n\t2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,\r\n\t2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,\r\n\t17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,\r\n\t7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,\r\n\t31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,\r\n\t2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,\r\n\t46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,\r\n\t7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,\r\n\t60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,\r\n\t2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,\r\n\t75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,\r\n\t7,82,2,83,7,83,2,84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,\r\n\t89,2,90,7,90,2,91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,\r\n\t2,97,7,97,2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,\r\n\t7,103,2,104,7,104,2,105,7,105,2,106,7,106,1,0,1,0,1,0,5,0,218,8,0,10,0,\r\n\t12,0,221,9,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,234,8,1,1,\r\n\t2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,3,2,253,\r\n\t8,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,\r\n\t1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,5,2,282,8,2,10,2,12,2,285,9,2,1,\r\n\t3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,304,\r\n\t8,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,\r\n\t1,3,1,3,5,3,325,8,3,10,3,12,3,328,9,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3,\r\n\t4,338,8,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,3,5,352,8,5,1,\r\n\t6,1,6,1,6,1,6,1,6,1,6,1,6,3,6,361,8,6,1,7,1,7,1,7,1,7,5,7,367,8,7,10,7,\r\n\t12,7,370,9,7,1,8,1,8,1,8,1,8,3,8,376,8,8,3,8,378,8,8,1,9,1,9,1,9,1,10,1,\r\n\t10,1,10,1,10,5,10,387,8,10,10,10,12,10,390,9,10,1,11,1,11,1,11,1,11,5,11,\r\n\t396,8,11,10,11,12,11,399,9,11,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,\r\n\t13,5,13,410,8,13,10,13,12,13,413,9,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,\r\n\t1,14,1,14,1,14,1,14,1,14,3,14,427,8,14,1,15,1,15,1,15,1,15,1,15,1,15,1,\r\n\t15,5,15,436,8,15,10,15,12,15,439,9,15,3,15,441,8,15,1,15,1,15,1,15,3,15,\r\n\t446,8,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,\r\n\t15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,\r\n\t1,15,1,15,1,15,1,15,3,15,479,8,15,1,16,1,16,1,16,1,16,1,16,5,16,486,8,16,\r\n\t10,16,12,16,489,9,16,3,16,491,8,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,\r\n\t16,3,16,501,8,16,1,16,1,16,1,16,3,16,506,8,16,5,16,508,8,16,10,16,12,16,\r\n\t511,9,16,1,16,1,16,1,16,3,16,516,8,16,1,16,1,16,3,16,520,8,16,1,16,1,16,\r\n\t1,16,1,16,1,16,1,16,1,16,1,16,3,16,530,8,16,1,16,1,16,3,16,534,8,16,1,16,\r\n\t1,16,3,16,538,8,16,1,17,1,17,1,17,1,17,1,17,5,17,545,8,17,10,17,12,17,548,\r\n\t9,17,3,17,550,8,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,3,17,560,8,17,\r\n\t1,17,1,17,3,17,564,8,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,3,17,574,\r\n\t8,17,1,17,1,17,1,17,3,17,579,8,17,5,17,581,8,17,10,17,12,17,584,9,17,1,\r\n\t17,1,17,1,17,3,17,589,8,17,1,17,1,17,3,17,593,8,17,1,17,1,17,3,17,597,8,\r\n\t17,1,18,1,18,1,18,3,18,602,8,18,1,19,1,19,1,19,3,19,607,8,19,1,20,1,20,\r\n\t1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,3,20,623,8,\r\n\t20,1,20,1,20,3,20,627,8,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,\r\n\t3,20,638,8,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,3,20,649,8,20,\r\n\t1,20,1,20,3,20,653,8,20,1,20,1,20,3,20,657,8,20,1,21,1,21,1,21,1,21,1,21,\r\n\t1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,3,21,673,8,21,1,21,1,21,3,\r\n\t21,677,8,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,3,21,688,8,21,\r\n\t1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,3,21,699,8,21,1,21,1,21,3,\r\n\t21,703,8,21,1,21,1,21,3,21,707,8,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,\r\n\t1,22,1,22,1,22,3,22,719,8,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,\r\n\t22,3,22,730,8,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,3,23,\r\n\t742,8,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,3,23,753,8,23,1,24,\r\n\t1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,\r\n\t24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,3,24,783,\r\n\t8,24,1,24,1,24,3,24,787,8,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,\r\n\t25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,3,25,810,\r\n\t8,25,1,26,1,26,1,26,3,26,815,8,26,1,26,1,26,1,26,1,26,1,26,1,26,3,26,823,\r\n\t8,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,\r\n\t26,1,26,1,26,1,26,1,26,1,26,3,26,844,8,26,1,26,1,26,3,26,848,8,26,1,26,\r\n\t1,26,3,26,852,8,26,1,26,1,26,1,26,1,26,3,26,858,8,26,1,27,1,27,1,27,3,27,\r\n\t863,8,27,1,27,1,27,1,27,1,27,1,27,1,27,3,27,871,8,27,1,27,1,27,1,27,1,27,\r\n\t1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,\r\n\t27,3,27,892,8,27,1,27,1,27,3,27,896,8,27,1,27,1,27,3,27,900,8,27,1,27,1,\r\n\t27,1,27,1,27,3,27,906,8,27,1,28,1,28,1,28,1,28,1,28,4,28,913,8,28,11,28,\r\n\t12,28,914,1,28,1,28,1,28,1,28,1,28,1,28,1,28,4,28,924,8,28,11,28,12,28,\r\n\t925,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,3,28,937,8,28,1,29,1,29,\r\n\t1,29,1,29,1,29,1,29,3,29,945,8,29,1,29,1,29,3,29,949,8,29,1,29,3,29,952,\r\n\t8,29,1,29,3,29,955,8,29,1,29,3,29,958,8,29,1,29,1,29,1,30,1,30,1,30,1,30,\r\n\t1,30,1,30,1,30,1,30,1,30,5,30,971,8,30,10,30,12,30,974,9,30,3,30,976,8,\r\n\t30,1,30,3,30,979,8,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,3,30,989,\r\n\t8,30,1,30,1,30,3,30,993,8,30,1,30,3,30,996,8,30,1,30,3,30,999,8,30,1,30,\r\n\t3,30,1002,8,30,1,30,1,30,1,30,1,30,1,30,1,30,3,30,1010,8,30,1,30,3,30,1013,\r\n\t8,30,1,30,3,30,1016,8,30,1,30,3,30,1019,8,30,1,30,1,30,3,30,1023,8,30,1,\r\n\t31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,\r\n\t1,33,1,33,1,33,1,33,1,33,1,33,1,33,3,33,1047,8,33,1,34,1,34,1,34,1,34,1,\r\n\t34,3,34,1054,8,34,3,34,1056,8,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,\r\n\t3,35,1066,8,35,1,35,3,35,1069,8,35,1,35,3,35,1072,8,35,1,35,1,35,1,35,1,\r\n\t35,1,35,1,35,1,35,1,35,1,35,3,35,1083,8,35,3,35,1085,8,35,1,35,1,35,1,35,\r\n\t3,35,1090,8,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,\r\n\t35,1,35,1,35,3,35,1106,8,35,1,36,1,36,1,36,1,36,1,36,1,36,3,36,1114,8,36,\r\n\t1,36,3,36,1117,8,36,1,36,3,36,1120,8,36,1,36,1,36,1,36,1,36,1,36,1,36,1,\r\n\t36,1,36,1,36,3,36,1131,8,36,3,36,1133,8,36,1,36,1,36,1,36,3,36,1138,8,36,\r\n\t1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,3,36,1150,8,36,1,36,1,\r\n\t36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,3,36,1166,\r\n\t8,36,1,37,1,37,1,37,1,37,1,38,1,38,1,38,5,38,1175,8,38,10,38,12,38,1178,\r\n\t9,38,1,39,3,39,1181,8,39,1,39,1,39,1,39,1,39,1,40,3,40,1188,8,40,1,40,1,\r\n\t40,1,40,1,40,1,41,1,41,1,41,1,41,1,42,1,42,1,42,5,42,1201,8,42,10,42,12,\r\n\t42,1204,9,42,1,43,1,43,1,43,5,43,1209,8,43,10,43,12,43,1212,9,43,1,43,1,\r\n\t43,1,43,1,43,5,43,1218,8,43,10,43,12,43,1221,9,43,3,43,1223,8,43,1,44,1,\r\n\t44,1,44,3,44,1228,8,44,1,45,3,45,1231,8,45,1,45,1,45,1,45,3,45,1236,8,45,\r\n\t1,45,3,45,1239,8,45,1,45,3,45,1242,8,45,1,46,1,46,1,46,1,47,1,47,1,47,1,\r\n\t47,1,47,5,47,1252,8,47,10,47,12,47,1255,9,47,1,48,1,48,1,48,1,48,1,48,5,\r\n\t48,1262,8,48,10,48,12,48,1265,9,48,1,49,1,49,3,49,1269,8,49,1,50,1,50,1,\r\n\t50,3,50,1274,8,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,52,1,52,1,52,1,52,\r\n\t1,52,1,52,1,52,1,52,1,52,1,52,1,52,3,52,1294,8,52,1,53,1,53,1,53,1,53,1,\r\n\t53,5,53,1301,8,53,10,53,12,53,1304,9,53,1,53,1,53,1,53,1,53,1,53,3,53,1311,\r\n\t8,53,1,53,3,53,1314,8,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,3,53,1323,8,\r\n\t53,3,53,1325,8,53,1,54,1,54,1,54,1,55,1,55,1,55,1,55,3,55,1334,8,55,1,56,\r\n\t1,56,1,56,3,56,1339,8,56,1,57,1,57,3,57,1343,8,57,1,58,1,58,1,58,1,58,1,\r\n\t58,3,58,1350,8,58,1,59,1,59,1,59,3,59,1355,8,59,1,60,1,60,3,60,1359,8,60,\r\n\t1,60,3,60,1362,8,60,1,60,3,60,1365,8,60,1,60,3,60,1368,8,60,1,61,1,61,1,\r\n\t61,1,61,1,61,3,61,1375,8,61,1,62,1,62,1,62,1,62,1,62,5,62,1382,8,62,10,\r\n\t62,12,62,1385,9,62,1,62,1,62,3,62,1389,8,62,1,63,1,63,1,63,1,63,1,63,3,\r\n\t63,1396,8,63,1,64,1,64,1,64,1,64,1,64,1,64,5,64,1404,8,64,10,64,12,64,1407,\r\n\t9,64,1,64,1,64,3,64,1411,8,64,1,64,1,64,1,64,1,64,1,64,5,64,1418,8,64,10,\r\n\t64,12,64,1421,9,64,1,64,1,64,3,64,1425,8,64,3,64,1427,8,64,1,65,1,65,1,\r\n\t65,1,65,1,65,1,65,1,65,1,65,5,65,1437,8,65,10,65,12,65,1440,9,65,1,65,1,\r\n\t65,3,65,1444,8,65,1,65,3,65,1447,8,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,\r\n\t5,65,1456,8,65,10,65,12,65,1459,9,65,1,65,1,65,3,65,1463,8,65,1,65,1,65,\r\n\t3,65,1467,8,65,3,65,1469,8,65,1,66,1,66,1,67,1,67,1,68,1,68,1,68,1,68,5,\r\n\t68,1479,8,68,10,68,12,68,1482,9,68,1,69,1,69,1,69,3,69,1487,8,69,1,70,1,\r\n\t70,1,70,5,70,1492,8,70,10,70,12,70,1495,9,70,1,71,1,71,3,71,1499,8,71,1,\r\n\t71,1,71,1,71,1,71,3,71,1505,8,71,1,71,1,71,3,71,1509,8,71,1,71,3,71,1512,\r\n\t8,71,1,72,1,72,1,72,5,72,1517,8,72,10,72,12,72,1520,9,72,1,73,1,73,3,73,\r\n\t1524,8,73,1,73,1,73,3,73,1528,8,73,1,73,3,73,1531,8,73,1,74,1,74,1,74,3,\r\n\t74,1536,8,74,1,74,1,74,1,74,1,75,1,75,1,75,5,75,1544,8,75,10,75,12,75,1547,\r\n\t9,75,1,76,1,76,1,76,1,76,3,76,1553,8,76,1,76,1,76,3,76,1557,8,76,1,76,1,\r\n\t76,5,76,1561,8,76,10,76,12,76,1564,9,76,1,77,3,77,1567,8,77,1,77,1,77,1,\r\n\t77,1,77,1,77,3,77,1574,8,77,1,78,1,78,1,79,1,79,1,79,1,79,1,79,1,79,1,79,\r\n\t1,79,5,79,1586,8,79,10,79,12,79,1589,9,79,1,79,1,79,3,79,1593,8,79,1,80,\r\n\t1,80,1,80,3,80,1598,8,80,1,81,1,81,3,81,1602,8,81,1,82,1,82,1,83,1,83,1,\r\n\t84,1,84,1,84,1,84,5,84,1612,8,84,10,84,12,84,1615,9,84,1,85,1,85,1,86,1,\r\n\t86,1,86,1,87,1,87,1,88,1,88,1,89,1,89,1,90,1,90,1,91,1,91,1,92,1,92,1,92,\r\n\t3,92,1635,8,92,1,93,1,93,1,93,1,93,5,93,1641,8,93,10,93,12,93,1644,9,93,\r\n\t1,93,1,93,1,93,3,93,1649,8,93,1,94,1,94,1,94,1,95,1,95,1,95,1,96,1,96,1,\r\n\t97,1,97,3,97,1661,8,97,1,98,1,98,3,98,1665,8,98,1,99,1,99,1,99,1,99,1,99,\r\n\t3,99,1672,8,99,1,100,1,100,1,100,1,101,1,101,1,102,1,102,1,103,1,103,1,\r\n\t104,1,104,1,105,1,105,1,106,1,106,1,106,0,2,4,6,107,0,2,4,6,8,10,12,14,\r\n\t16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,\r\n\t64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,\r\n\t110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,\r\n\t146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,\r\n\t182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,0,37,2,\r\n\t0,13,14,39,39,1,0,15,16,2,0,13,14,82,82,1,0,37,38,1,0,41,42,1,0,30,31,2,\r\n\t0,190,190,192,192,1,0,181,182,1,0,183,184,3,0,81,81,83,85,119,120,4,0,73,\r\n\t73,75,75,96,96,123,125,1,0,77,78,2,0,76,76,79,80,2,0,60,60,197,197,1,0,\r\n\t150,151,2,0,103,103,233,233,1,0,70,71,2,0,48,48,127,127,2,0,60,60,104,104,\r\n\t3,0,68,69,87,90,128,131,4,0,68,69,87,90,128,131,135,136,1,0,137,138,1,0,\r\n\t66,67,2,0,64,64,133,133,1,0,105,106,1,0,13,14,2,0,229,230,234,234,2,0,13,\r\n\t13,15,15,3,0,60,60,104,104,220,220,1,0,213,218,2,0,109,109,208,208,3,0,\r\n\t109,109,116,116,207,207,2,0,60,60,212,212,1,0,7,12,2,0,43,43,229,232,3,\r\n\t0,156,162,198,198,221,221,2,0,60,60,231,231,1855,0,219,1,0,0,0,2,233,1,\r\n\t0,0,0,4,252,1,0,0,0,6,303,1,0,0,0,8,337,1,0,0,0,10,351,1,0,0,0,12,360,1,\r\n\t0,0,0,14,362,1,0,0,0,16,371,1,0,0,0,18,379,1,0,0,0,20,382,1,0,0,0,22,391,\r\n\t1,0,0,0,24,400,1,0,0,0,26,405,1,0,0,0,28,426,1,0,0,0,30,478,1,0,0,0,32,\r\n\t537,1,0,0,0,34,596,1,0,0,0,36,601,1,0,0,0,38,606,1,0,0,0,40,656,1,0,0,0,\r\n\t42,706,1,0,0,0,44,729,1,0,0,0,46,752,1,0,0,0,48,786,1,0,0,0,50,809,1,0,\r\n\t0,0,52,857,1,0,0,0,54,905,1,0,0,0,56,936,1,0,0,0,58,938,1,0,0,0,60,1022,\r\n\t1,0,0,0,62,1024,1,0,0,0,64,1031,1,0,0,0,66,1046,1,0,0,0,68,1048,1,0,0,0,\r\n\t70,1105,1,0,0,0,72,1165,1,0,0,0,74,1167,1,0,0,0,76,1171,1,0,0,0,78,1180,\r\n\t1,0,0,0,80,1187,1,0,0,0,82,1193,1,0,0,0,84,1197,1,0,0,0,86,1205,1,0,0,0,\r\n\t88,1224,1,0,0,0,90,1230,1,0,0,0,92,1243,1,0,0,0,94,1246,1,0,0,0,96,1256,\r\n\t1,0,0,0,98,1266,1,0,0,0,100,1273,1,0,0,0,102,1280,1,0,0,0,104,1293,1,0,\r\n\t0,0,106,1324,1,0,0,0,108,1326,1,0,0,0,110,1329,1,0,0,0,112,1338,1,0,0,0,\r\n\t114,1342,1,0,0,0,116,1349,1,0,0,0,118,1354,1,0,0,0,120,1358,1,0,0,0,122,\r\n\t1369,1,0,0,0,124,1376,1,0,0,0,126,1390,1,0,0,0,128,1426,1,0,0,0,130,1468,\r\n\t1,0,0,0,132,1470,1,0,0,0,134,1472,1,0,0,0,136,1474,1,0,0,0,138,1483,1,0,\r\n\t0,0,140,1488,1,0,0,0,142,1498,1,0,0,0,144,1513,1,0,0,0,146,1523,1,0,0,0,\r\n\t148,1532,1,0,0,0,150,1540,1,0,0,0,152,1552,1,0,0,0,154,1566,1,0,0,0,156,\r\n\t1575,1,0,0,0,158,1592,1,0,0,0,160,1594,1,0,0,0,162,1599,1,0,0,0,164,1603,\r\n\t1,0,0,0,166,1605,1,0,0,0,168,1607,1,0,0,0,170,1616,1,0,0,0,172,1618,1,0,\r\n\t0,0,174,1621,1,0,0,0,176,1623,1,0,0,0,178,1625,1,0,0,0,180,1627,1,0,0,0,\r\n\t182,1629,1,0,0,0,184,1631,1,0,0,0,186,1648,1,0,0,0,188,1650,1,0,0,0,190,\r\n\t1653,1,0,0,0,192,1656,1,0,0,0,194,1660,1,0,0,0,196,1664,1,0,0,0,198,1671,\r\n\t1,0,0,0,200,1673,1,0,0,0,202,1676,1,0,0,0,204,1678,1,0,0,0,206,1680,1,0,\r\n\t0,0,208,1682,1,0,0,0,210,1684,1,0,0,0,212,1686,1,0,0,0,214,215,3,2,1,0,\r\n\t215,216,5,236,0,0,216,218,1,0,0,0,217,214,1,0,0,0,218,221,1,0,0,0,219,217,\r\n\t1,0,0,0,219,220,1,0,0,0,220,222,1,0,0,0,221,219,1,0,0,0,222,223,5,0,0,1,\r\n\t223,1,1,0,0,0,224,225,3,180,90,0,225,226,5,19,0,0,226,227,3,4,2,0,227,234,\r\n\t1,0,0,0,228,229,3,180,90,0,229,230,5,112,0,0,230,231,3,4,2,0,231,234,1,\r\n\t0,0,0,232,234,3,30,15,0,233,224,1,0,0,0,233,228,1,0,0,0,233,232,1,0,0,0,\r\n\t234,3,1,0,0,0,235,236,6,2,-1,0,236,237,5,1,0,0,237,238,3,4,2,0,238,239,\r\n\t5,2,0,0,239,253,1,0,0,0,240,253,3,10,5,0,241,242,7,0,0,0,242,253,3,4,2,\r\n\t10,243,244,5,23,0,0,244,245,3,4,2,0,245,246,5,24,0,0,246,247,3,4,2,0,247,\r\n\t248,5,25,0,0,248,249,3,4,2,3,249,253,1,0,0,0,250,253,3,208,104,0,251,253,\r\n\t3,180,90,0,252,235,1,0,0,0,252,240,1,0,0,0,252,241,1,0,0,0,252,243,1,0,\r\n\t0,0,252,250,1,0,0,0,252,251,1,0,0,0,253,283,1,0,0,0,254,255,10,9,0,0,255,\r\n\t256,7,1,0,0,256,282,3,4,2,10,257,258,10,8,0,0,258,259,7,2,0,0,259,282,3,\r\n\t4,2,9,260,261,10,7,0,0,261,262,3,192,96,0,262,263,3,4,2,8,263,282,1,0,0,\r\n\t0,264,265,10,5,0,0,265,266,5,36,0,0,266,282,3,4,2,6,267,268,10,4,0,0,268,\r\n\t269,7,3,0,0,269,282,3,4,2,5,270,271,10,12,0,0,271,272,5,3,0,0,272,273,3,\r\n\t12,6,0,273,274,5,4,0,0,274,282,1,0,0,0,275,276,10,11,0,0,276,277,5,20,0,\r\n\t0,277,282,3,182,91,0,278,279,10,6,0,0,279,280,7,4,0,0,280,282,3,186,93,\r\n\t0,281,254,1,0,0,0,281,257,1,0,0,0,281,260,1,0,0,0,281,264,1,0,0,0,281,267,\r\n\t1,0,0,0,281,270,1,0,0,0,281,275,1,0,0,0,281,278,1,0,0,0,282,285,1,0,0,0,\r\n\t283,281,1,0,0,0,283,284,1,0,0,0,284,5,1,0,0,0,285,283,1,0,0,0,286,287,6,\r\n\t3,-1,0,287,288,5,1,0,0,288,289,3,6,3,0,289,290,5,2,0,0,290,304,1,0,0,0,\r\n\t291,304,3,8,4,0,292,293,7,0,0,0,293,304,3,6,3,10,294,295,5,23,0,0,295,296,\r\n\t3,6,3,0,296,297,5,24,0,0,297,298,3,6,3,0,298,299,5,25,0,0,299,300,3,6,3,\r\n\t3,300,304,1,0,0,0,301,304,3,208,104,0,302,304,3,184,92,0,303,286,1,0,0,\r\n\t0,303,291,1,0,0,0,303,292,1,0,0,0,303,294,1,0,0,0,303,301,1,0,0,0,303,302,\r\n\t1,0,0,0,304,326,1,0,0,0,305,306,10,9,0,0,306,307,7,1,0,0,307,325,3,6,3,\r\n\t10,308,309,10,8,0,0,309,310,7,2,0,0,310,325,3,6,3,9,311,312,10,7,0,0,312,\r\n\t313,3,192,96,0,313,314,3,6,3,8,314,325,1,0,0,0,315,316,10,5,0,0,316,317,\r\n\t5,36,0,0,317,325,3,6,3,6,318,319,10,4,0,0,319,320,7,3,0,0,320,325,3,6,3,\r\n\t5,321,322,10,6,0,0,322,323,7,4,0,0,323,325,3,186,93,0,324,305,1,0,0,0,324,\r\n\t308,1,0,0,0,324,311,1,0,0,0,324,315,1,0,0,0,324,318,1,0,0,0,324,321,1,0,\r\n\t0,0,325,328,1,0,0,0,326,324,1,0,0,0,326,327,1,0,0,0,327,7,1,0,0,0,328,326,\r\n\t1,0,0,0,329,338,3,34,17,0,330,338,3,42,21,0,331,338,3,46,23,0,332,338,3,\r\n\t50,25,0,333,338,3,54,27,0,334,338,3,64,32,0,335,338,3,66,33,0,336,338,3,\r\n\t72,36,0,337,329,1,0,0,0,337,330,1,0,0,0,337,331,1,0,0,0,337,332,1,0,0,0,\r\n\t337,333,1,0,0,0,337,334,1,0,0,0,337,335,1,0,0,0,337,336,1,0,0,0,338,9,1,\r\n\t0,0,0,339,352,3,28,14,0,340,352,3,32,16,0,341,352,3,40,20,0,342,352,3,44,\r\n\t22,0,343,352,3,48,24,0,344,352,3,52,26,0,345,352,3,56,28,0,346,352,3,58,\r\n\t29,0,347,352,3,60,30,0,348,352,3,62,31,0,349,352,3,68,34,0,350,352,3,70,\r\n\t35,0,351,339,1,0,0,0,351,340,1,0,0,0,351,341,1,0,0,0,351,342,1,0,0,0,351,\r\n\t343,1,0,0,0,351,344,1,0,0,0,351,345,1,0,0,0,351,346,1,0,0,0,351,347,1,0,\r\n\t0,0,351,348,1,0,0,0,351,349,1,0,0,0,351,350,1,0,0,0,352,11,1,0,0,0,353,\r\n\t361,3,14,7,0,354,361,3,16,8,0,355,361,3,18,9,0,356,361,3,20,10,0,357,361,\r\n\t3,22,11,0,358,361,3,24,12,0,359,361,3,26,13,0,360,353,1,0,0,0,360,354,1,\r\n\t0,0,0,360,355,1,0,0,0,360,356,1,0,0,0,360,357,1,0,0,0,360,358,1,0,0,0,360,\r\n\t359,1,0,0,0,361,13,1,0,0,0,362,363,5,34,0,0,363,368,3,74,37,0,364,365,5,\r\n\t17,0,0,365,367,3,74,37,0,366,364,1,0,0,0,367,370,1,0,0,0,368,366,1,0,0,\r\n\t0,368,369,1,0,0,0,369,15,1,0,0,0,370,368,1,0,0,0,371,372,5,61,0,0,372,377,\r\n\t3,76,38,0,373,375,3,106,53,0,374,376,3,108,54,0,375,374,1,0,0,0,375,376,\r\n\t1,0,0,0,376,378,1,0,0,0,377,373,1,0,0,0,377,378,1,0,0,0,378,17,1,0,0,0,\r\n\t379,380,5,94,0,0,380,381,3,6,3,0,381,19,1,0,0,0,382,383,5,32,0,0,383,388,\r\n\t3,80,40,0,384,385,5,17,0,0,385,387,3,80,40,0,386,384,1,0,0,0,387,390,1,\r\n\t0,0,0,388,386,1,0,0,0,388,389,1,0,0,0,389,21,1,0,0,0,390,388,1,0,0,0,391,\r\n\t392,7,5,0,0,392,397,3,184,92,0,393,394,5,17,0,0,394,396,3,184,92,0,395,\r\n\t393,1,0,0,0,396,399,1,0,0,0,397,395,1,0,0,0,397,398,1,0,0,0,398,23,1,0,\r\n\t0,0,399,397,1,0,0,0,400,401,7,6,0,0,401,402,3,184,92,0,402,403,5,17,0,0,\r\n\t403,404,3,184,92,0,404,25,1,0,0,0,405,406,5,193,0,0,406,411,3,82,41,0,407,\r\n\t408,5,17,0,0,408,410,3,82,41,0,409,407,1,0,0,0,410,413,1,0,0,0,411,409,\r\n\t1,0,0,0,411,412,1,0,0,0,412,27,1,0,0,0,413,411,1,0,0,0,414,415,7,7,0,0,\r\n\t415,416,5,1,0,0,416,417,3,86,43,0,417,418,3,90,45,0,418,419,5,2,0,0,419,\r\n\t427,1,0,0,0,420,421,7,8,0,0,421,422,5,1,0,0,422,423,3,84,42,0,423,424,3,\r\n\t90,45,0,424,425,5,2,0,0,425,427,1,0,0,0,426,414,1,0,0,0,426,420,1,0,0,0,\r\n\t427,29,1,0,0,0,428,429,5,111,0,0,429,430,5,110,0,0,430,431,3,204,102,0,\r\n\t431,440,5,1,0,0,432,437,3,110,55,0,433,434,5,17,0,0,434,436,3,110,55,0,\r\n\t435,433,1,0,0,0,436,439,1,0,0,0,437,435,1,0,0,0,437,438,1,0,0,0,438,441,\r\n\t1,0,0,0,439,437,1,0,0,0,440,432,1,0,0,0,440,441,1,0,0,0,441,442,1,0,0,0,\r\n\t442,445,5,2,0,0,443,444,5,189,0,0,444,446,3,112,56,0,445,443,1,0,0,0,445,\r\n\t446,1,0,0,0,446,447,1,0,0,0,447,448,5,172,0,0,448,449,3,4,2,0,449,450,5,\r\n\t117,0,0,450,451,5,110,0,0,451,479,1,0,0,0,452,453,5,111,0,0,453,454,5,113,\r\n\t0,0,454,455,5,115,0,0,455,456,3,134,67,0,456,457,5,1,0,0,457,458,3,136,\r\n\t68,0,458,459,5,2,0,0,459,460,5,172,0,0,460,461,3,140,70,0,461,462,5,117,\r\n\t0,0,462,463,5,113,0,0,463,464,5,115,0,0,464,479,1,0,0,0,465,466,5,111,0,\r\n\t0,466,467,5,114,0,0,467,468,5,115,0,0,468,469,3,134,67,0,469,470,5,1,0,\r\n\t0,470,471,3,148,74,0,471,472,5,2,0,0,472,473,5,172,0,0,473,474,3,144,72,\r\n\t0,474,475,5,117,0,0,475,476,5,114,0,0,476,477,5,115,0,0,477,479,1,0,0,0,\r\n\t478,428,1,0,0,0,478,452,1,0,0,0,478,465,1,0,0,0,479,31,1,0,0,0,480,481,\r\n\t3,204,102,0,481,490,5,1,0,0,482,487,3,38,19,0,483,484,5,17,0,0,484,486,\r\n\t3,38,19,0,485,483,1,0,0,0,486,489,1,0,0,0,487,485,1,0,0,0,487,488,1,0,0,\r\n\t0,488,491,1,0,0,0,489,487,1,0,0,0,490,482,1,0,0,0,490,491,1,0,0,0,491,492,\r\n\t1,0,0,0,492,493,5,2,0,0,493,538,1,0,0,0,494,495,5,22,0,0,495,496,5,1,0,\r\n\t0,496,497,3,206,103,0,497,500,5,1,0,0,498,501,3,180,90,0,499,501,3,208,\r\n\t104,0,500,498,1,0,0,0,500,499,1,0,0,0,500,501,1,0,0,0,501,509,1,0,0,0,502,\r\n\t505,5,17,0,0,503,506,3,180,90,0,504,506,3,208,104,0,505,503,1,0,0,0,505,\r\n\t504,1,0,0,0,506,508,1,0,0,0,507,502,1,0,0,0,508,511,1,0,0,0,509,507,1,0,\r\n\t0,0,509,510,1,0,0,0,510,512,1,0,0,0,511,509,1,0,0,0,512,515,5,2,0,0,513,\r\n\t514,5,228,0,0,514,516,5,232,0,0,515,513,1,0,0,0,515,516,1,0,0,0,516,519,\r\n\t1,0,0,0,517,518,5,189,0,0,518,520,3,124,62,0,519,517,1,0,0,0,519,520,1,\r\n\t0,0,0,520,521,1,0,0,0,521,522,5,2,0,0,522,538,1,0,0,0,523,524,5,206,0,0,\r\n\t524,525,5,1,0,0,525,526,3,4,2,0,526,529,5,17,0,0,527,530,3,210,105,0,528,\r\n\t530,3,132,66,0,529,527,1,0,0,0,529,528,1,0,0,0,530,533,1,0,0,0,531,532,\r\n\t5,17,0,0,532,534,5,232,0,0,533,531,1,0,0,0,533,534,1,0,0,0,534,535,1,0,\r\n\t0,0,535,536,5,2,0,0,536,538,1,0,0,0,537,480,1,0,0,0,537,494,1,0,0,0,537,\r\n\t523,1,0,0,0,538,33,1,0,0,0,539,540,3,204,102,0,540,549,5,1,0,0,541,546,\r\n\t3,36,18,0,542,543,5,17,0,0,543,545,3,36,18,0,544,542,1,0,0,0,545,548,1,\r\n\t0,0,0,546,544,1,0,0,0,546,547,1,0,0,0,547,550,1,0,0,0,548,546,1,0,0,0,549,\r\n\t541,1,0,0,0,549,550,1,0,0,0,550,551,1,0,0,0,551,552,5,2,0,0,552,597,1,0,\r\n\t0,0,553,554,5,206,0,0,554,555,5,1,0,0,555,556,3,6,3,0,556,559,5,17,0,0,\r\n\t557,560,3,210,105,0,558,560,3,132,66,0,559,557,1,0,0,0,559,558,1,0,0,0,\r\n\t560,563,1,0,0,0,561,562,5,17,0,0,562,564,5,232,0,0,563,561,1,0,0,0,563,\r\n\t564,1,0,0,0,564,565,1,0,0,0,565,566,5,2,0,0,566,597,1,0,0,0,567,568,5,22,\r\n\t0,0,568,569,5,1,0,0,569,570,3,206,103,0,570,573,5,1,0,0,571,574,3,184,92,\r\n\t0,572,574,3,208,104,0,573,571,1,0,0,0,573,572,1,0,0,0,573,574,1,0,0,0,574,\r\n\t582,1,0,0,0,575,578,5,17,0,0,576,579,3,184,92,0,577,579,3,208,104,0,578,\r\n\t576,1,0,0,0,578,577,1,0,0,0,579,581,1,0,0,0,580,575,1,0,0,0,581,584,1,0,\r\n\t0,0,582,580,1,0,0,0,582,583,1,0,0,0,583,585,1,0,0,0,584,582,1,0,0,0,585,\r\n\t588,5,2,0,0,586,587,5,228,0,0,587,589,5,232,0,0,588,586,1,0,0,0,588,589,\r\n\t1,0,0,0,589,592,1,0,0,0,590,591,5,189,0,0,591,593,3,114,57,0,592,590,1,\r\n\t0,0,0,592,593,1,0,0,0,593,594,1,0,0,0,594,595,5,2,0,0,595,597,1,0,0,0,596,\r\n\t539,1,0,0,0,596,553,1,0,0,0,596,567,1,0,0,0,597,35,1,0,0,0,598,602,3,184,\r\n\t92,0,599,602,3,208,104,0,600,602,5,103,0,0,601,598,1,0,0,0,601,599,1,0,\r\n\t0,0,601,600,1,0,0,0,602,37,1,0,0,0,603,607,3,180,90,0,604,607,3,208,104,\r\n\t0,605,607,5,103,0,0,606,603,1,0,0,0,606,604,1,0,0,0,606,605,1,0,0,0,607,\r\n\t39,1,0,0,0,608,609,7,9,0,0,609,610,5,1,0,0,610,611,3,4,2,0,611,612,5,2,\r\n\t0,0,612,657,1,0,0,0,613,614,5,86,0,0,614,615,5,1,0,0,615,626,3,4,2,0,616,\r\n\t617,5,17,0,0,617,618,3,194,97,0,618,619,1,0,0,0,619,620,5,17,0,0,620,621,\r\n\t3,194,97,0,621,623,1,0,0,0,622,616,1,0,0,0,622,623,1,0,0,0,623,627,1,0,\r\n\t0,0,624,625,5,17,0,0,625,627,3,194,97,0,626,622,1,0,0,0,626,624,1,0,0,0,\r\n\t627,628,1,0,0,0,628,629,5,2,0,0,629,657,1,0,0,0,630,631,5,122,0,0,631,632,\r\n\t5,1,0,0,632,633,3,4,2,0,633,634,5,17,0,0,634,637,3,4,2,0,635,636,5,17,0,\r\n\t0,636,638,3,194,97,0,637,635,1,0,0,0,637,638,1,0,0,0,638,639,1,0,0,0,639,\r\n\t640,5,2,0,0,640,657,1,0,0,0,641,642,5,121,0,0,642,643,5,1,0,0,643,644,3,\r\n\t4,2,0,644,645,5,17,0,0,645,648,3,4,2,0,646,647,5,17,0,0,647,649,3,194,97,\r\n\t0,648,646,1,0,0,0,648,649,1,0,0,0,649,652,1,0,0,0,650,651,5,17,0,0,651,\r\n\t653,3,194,97,0,652,650,1,0,0,0,652,653,1,0,0,0,653,654,1,0,0,0,654,655,\r\n\t5,2,0,0,655,657,1,0,0,0,656,608,1,0,0,0,656,613,1,0,0,0,656,630,1,0,0,0,\r\n\t656,641,1,0,0,0,657,41,1,0,0,0,658,659,7,9,0,0,659,660,5,1,0,0,660,661,\r\n\t3,6,3,0,661,662,5,2,0,0,662,707,1,0,0,0,663,664,5,86,0,0,664,665,5,1,0,\r\n\t0,665,676,3,6,3,0,666,667,5,17,0,0,667,668,3,196,98,0,668,669,1,0,0,0,669,\r\n\t670,5,17,0,0,670,671,3,196,98,0,671,673,1,0,0,0,672,666,1,0,0,0,672,673,\r\n\t1,0,0,0,673,677,1,0,0,0,674,675,5,17,0,0,675,677,3,196,98,0,676,672,1,0,\r\n\t0,0,676,674,1,0,0,0,677,678,1,0,0,0,678,679,5,2,0,0,679,707,1,0,0,0,680,\r\n\t681,5,122,0,0,681,682,5,1,0,0,682,683,3,6,3,0,683,684,5,17,0,0,684,687,\r\n\t3,6,3,0,685,686,5,17,0,0,686,688,3,196,98,0,687,685,1,0,0,0,687,688,1,0,\r\n\t0,0,688,689,1,0,0,0,689,690,5,2,0,0,690,707,1,0,0,0,691,692,5,121,0,0,692,\r\n\t693,5,1,0,0,693,694,3,6,3,0,694,695,5,17,0,0,695,698,3,6,3,0,696,697,5,\r\n\t17,0,0,697,699,3,196,98,0,698,696,1,0,0,0,698,699,1,0,0,0,699,702,1,0,0,\r\n\t0,700,701,5,17,0,0,701,703,3,196,98,0,702,700,1,0,0,0,702,703,1,0,0,0,703,\r\n\t704,1,0,0,0,704,705,5,2,0,0,705,707,1,0,0,0,706,658,1,0,0,0,706,663,1,0,\r\n\t0,0,706,680,1,0,0,0,706,691,1,0,0,0,707,43,1,0,0,0,708,709,7,10,0,0,709,\r\n\t710,5,1,0,0,710,711,3,4,2,0,711,712,5,2,0,0,712,730,1,0,0,0,713,714,7,11,\r\n\t0,0,714,715,5,1,0,0,715,718,3,4,2,0,716,717,5,17,0,0,717,719,3,194,97,0,\r\n\t718,716,1,0,0,0,718,719,1,0,0,0,719,720,1,0,0,0,720,721,5,2,0,0,721,730,\r\n\t1,0,0,0,722,723,7,12,0,0,723,724,5,1,0,0,724,725,3,4,2,0,725,726,5,17,0,\r\n\t0,726,727,3,4,2,0,727,728,5,2,0,0,728,730,1,0,0,0,729,708,1,0,0,0,729,713,\r\n\t1,0,0,0,729,722,1,0,0,0,730,45,1,0,0,0,731,732,7,10,0,0,732,733,5,1,0,0,\r\n\t733,734,3,6,3,0,734,735,5,2,0,0,735,753,1,0,0,0,736,737,7,11,0,0,737,738,\r\n\t5,1,0,0,738,741,3,6,3,0,739,740,5,17,0,0,740,742,3,196,98,0,741,739,1,0,\r\n\t0,0,741,742,1,0,0,0,742,743,1,0,0,0,743,744,5,2,0,0,744,753,1,0,0,0,745,\r\n\t746,7,12,0,0,746,747,5,1,0,0,747,748,3,6,3,0,748,749,5,17,0,0,749,750,3,\r\n\t6,3,0,750,751,5,2,0,0,751,753,1,0,0,0,752,731,1,0,0,0,752,736,1,0,0,0,752,\r\n\t745,1,0,0,0,753,47,1,0,0,0,754,755,5,40,0,0,755,756,5,1,0,0,756,757,3,4,\r\n\t2,0,757,758,5,17,0,0,758,759,3,4,2,0,759,760,5,17,0,0,760,761,3,4,2,0,761,\r\n\t762,5,2,0,0,762,787,1,0,0,0,763,764,5,99,0,0,764,765,5,1,0,0,765,766,3,\r\n\t4,2,0,766,767,5,17,0,0,767,768,3,4,2,0,768,769,5,2,0,0,769,787,1,0,0,0,\r\n\t770,771,5,44,0,0,771,772,5,1,0,0,772,773,3,4,2,0,773,774,5,2,0,0,774,787,\r\n\t1,0,0,0,775,776,5,55,0,0,776,777,5,1,0,0,777,778,3,4,2,0,778,779,5,17,0,\r\n\t0,779,782,3,4,2,0,780,781,5,17,0,0,781,783,3,212,106,0,782,780,1,0,0,0,\r\n\t782,783,1,0,0,0,783,784,1,0,0,0,784,785,5,2,0,0,785,787,1,0,0,0,786,754,\r\n\t1,0,0,0,786,763,1,0,0,0,786,770,1,0,0,0,786,775,1,0,0,0,787,49,1,0,0,0,\r\n\t788,789,5,40,0,0,789,790,5,1,0,0,790,791,3,6,3,0,791,792,5,17,0,0,792,793,\r\n\t3,6,3,0,793,794,5,17,0,0,794,795,3,6,3,0,795,796,5,2,0,0,796,810,1,0,0,\r\n\t0,797,798,5,99,0,0,798,799,5,1,0,0,799,800,3,6,3,0,800,801,5,17,0,0,801,\r\n\t802,3,6,3,0,802,803,5,2,0,0,803,810,1,0,0,0,804,805,5,44,0,0,805,806,5,\r\n\t1,0,0,806,807,3,6,3,0,807,808,5,2,0,0,808,810,1,0,0,0,809,788,1,0,0,0,809,\r\n\t797,1,0,0,0,809,804,1,0,0,0,810,51,1,0,0,0,811,812,5,196,0,0,812,814,5,\r\n\t1,0,0,813,815,3,4,2,0,814,813,1,0,0,0,814,815,1,0,0,0,815,816,1,0,0,0,816,\r\n\t858,5,2,0,0,817,818,5,149,0,0,818,819,5,1,0,0,819,822,3,4,2,0,820,821,5,\r\n\t17,0,0,821,823,7,13,0,0,822,820,1,0,0,0,822,823,1,0,0,0,823,824,1,0,0,0,\r\n\t824,825,5,2,0,0,825,858,1,0,0,0,826,827,7,14,0,0,827,828,5,1,0,0,828,829,\r\n\t3,4,2,0,829,830,5,2,0,0,830,858,1,0,0,0,831,832,5,152,0,0,832,833,5,1,0,\r\n\t0,833,834,3,4,2,0,834,835,5,17,0,0,835,836,3,102,51,0,836,837,5,2,0,0,837,\r\n\t858,1,0,0,0,838,839,5,199,0,0,839,840,5,1,0,0,840,843,5,233,0,0,841,842,\r\n\t5,17,0,0,842,844,7,15,0,0,843,841,1,0,0,0,843,844,1,0,0,0,844,847,1,0,0,\r\n\t0,845,846,5,17,0,0,846,848,3,194,97,0,847,845,1,0,0,0,847,848,1,0,0,0,848,\r\n\t851,1,0,0,0,849,850,5,17,0,0,850,852,7,16,0,0,851,849,1,0,0,0,851,852,1,\r\n\t0,0,0,852,853,1,0,0,0,853,858,5,2,0,0,854,855,5,28,0,0,855,856,5,1,0,0,\r\n\t856,858,5,2,0,0,857,811,1,0,0,0,857,817,1,0,0,0,857,826,1,0,0,0,857,831,\r\n\t1,0,0,0,857,838,1,0,0,0,857,854,1,0,0,0,858,53,1,0,0,0,859,860,5,196,0,\r\n\t0,860,862,5,1,0,0,861,863,3,6,3,0,862,861,1,0,0,0,862,863,1,0,0,0,863,864,\r\n\t1,0,0,0,864,906,5,2,0,0,865,866,5,149,0,0,866,867,5,1,0,0,867,870,3,6,3,\r\n\t0,868,869,5,17,0,0,869,871,7,13,0,0,870,868,1,0,0,0,870,871,1,0,0,0,871,\r\n\t872,1,0,0,0,872,873,5,2,0,0,873,906,1,0,0,0,874,875,7,14,0,0,875,876,5,\r\n\t1,0,0,876,877,3,6,3,0,877,878,5,2,0,0,878,906,1,0,0,0,879,880,5,152,0,0,\r\n\t880,881,5,1,0,0,881,882,3,6,3,0,882,883,5,17,0,0,883,884,3,102,51,0,884,\r\n\t885,5,2,0,0,885,906,1,0,0,0,886,887,5,199,0,0,887,888,5,1,0,0,888,891,5,\r\n\t233,0,0,889,890,5,17,0,0,890,892,7,15,0,0,891,889,1,0,0,0,891,892,1,0,0,\r\n\t0,892,895,1,0,0,0,893,894,5,17,0,0,894,896,3,196,98,0,895,893,1,0,0,0,895,\r\n\t896,1,0,0,0,896,899,1,0,0,0,897,898,5,17,0,0,898,900,7,16,0,0,899,897,1,\r\n\t0,0,0,899,900,1,0,0,0,900,901,1,0,0,0,901,906,5,2,0,0,902,903,5,28,0,0,\r\n\t903,904,5,1,0,0,904,906,5,2,0,0,905,859,1,0,0,0,905,865,1,0,0,0,905,874,\r\n\t1,0,0,0,905,879,1,0,0,0,905,886,1,0,0,0,905,902,1,0,0,0,906,55,1,0,0,0,\r\n\t907,908,5,46,0,0,908,909,5,1,0,0,909,912,3,4,2,0,910,911,5,17,0,0,911,913,\r\n\t3,4,2,0,912,910,1,0,0,0,913,914,1,0,0,0,914,912,1,0,0,0,914,915,1,0,0,0,\r\n\t915,916,1,0,0,0,916,917,5,2,0,0,917,937,1,0,0,0,918,919,5,49,0,0,919,920,\r\n\t5,1,0,0,920,923,3,4,2,0,921,922,5,17,0,0,922,924,3,4,2,0,923,921,1,0,0,\r\n\t0,924,925,1,0,0,0,925,923,1,0,0,0,925,926,1,0,0,0,926,927,1,0,0,0,927,928,\r\n\t5,2,0,0,928,937,1,0,0,0,929,930,7,17,0,0,930,931,5,1,0,0,931,932,3,4,2,\r\n\t0,932,933,5,17,0,0,933,934,3,4,2,0,934,935,5,2,0,0,935,937,1,0,0,0,936,\r\n\t907,1,0,0,0,936,918,1,0,0,0,936,929,1,0,0,0,937,57,1,0,0,0,938,939,5,102,\r\n\t0,0,939,940,5,1,0,0,940,941,3,4,2,0,941,942,5,17,0,0,942,944,5,234,0,0,\r\n\t943,945,3,168,84,0,944,943,1,0,0,0,944,945,1,0,0,0,945,948,1,0,0,0,946,\r\n\t947,5,116,0,0,947,949,3,184,92,0,948,946,1,0,0,0,948,949,1,0,0,0,949,951,\r\n\t1,0,0,0,950,952,3,166,83,0,951,950,1,0,0,0,951,952,1,0,0,0,952,954,1,0,\r\n\t0,0,953,955,3,174,87,0,954,953,1,0,0,0,954,955,1,0,0,0,955,957,1,0,0,0,\r\n\t956,958,3,176,88,0,957,956,1,0,0,0,957,958,1,0,0,0,958,959,1,0,0,0,959,\r\n\t960,5,2,0,0,960,59,1,0,0,0,961,962,5,210,0,0,962,963,5,1,0,0,963,964,3,\r\n\t4,2,0,964,965,5,17,0,0,965,975,5,234,0,0,966,967,5,219,0,0,967,972,3,184,\r\n\t92,0,968,969,5,17,0,0,969,971,3,184,92,0,970,968,1,0,0,0,971,974,1,0,0,\r\n\t0,972,970,1,0,0,0,972,973,1,0,0,0,973,976,1,0,0,0,974,972,1,0,0,0,975,966,\r\n\t1,0,0,0,975,976,1,0,0,0,976,978,1,0,0,0,977,979,3,164,82,0,978,977,1,0,\r\n\t0,0,978,979,1,0,0,0,979,980,1,0,0,0,980,981,5,2,0,0,981,1023,1,0,0,0,982,\r\n\t983,5,211,0,0,983,984,5,1,0,0,984,985,3,4,2,0,985,986,5,17,0,0,986,988,\r\n\t5,234,0,0,987,989,3,168,84,0,988,987,1,0,0,0,988,989,1,0,0,0,989,992,1,\r\n\t0,0,0,990,991,5,116,0,0,991,993,3,184,92,0,992,990,1,0,0,0,992,993,1,0,\r\n\t0,0,993,995,1,0,0,0,994,996,3,166,83,0,995,994,1,0,0,0,995,996,1,0,0,0,\r\n\t996,998,1,0,0,0,997,999,3,170,85,0,998,997,1,0,0,0,998,999,1,0,0,0,999,\r\n\t1001,1,0,0,0,1000,1002,3,164,82,0,1001,1000,1,0,0,0,1001,1002,1,0,0,0,1002,\r\n\t1003,1,0,0,0,1003,1004,5,2,0,0,1004,1023,1,0,0,0,1005,1006,5,54,0,0,1006,\r\n\t1007,5,1,0,0,1007,1009,3,4,2,0,1008,1010,3,188,94,0,1009,1008,1,0,0,0,1009,\r\n\t1010,1,0,0,0,1010,1012,1,0,0,0,1011,1013,3,190,95,0,1012,1011,1,0,0,0,1012,\r\n\t1013,1,0,0,0,1013,1015,1,0,0,0,1014,1016,3,172,86,0,1015,1014,1,0,0,0,1015,\r\n\t1016,1,0,0,0,1016,1018,1,0,0,0,1017,1019,7,18,0,0,1018,1017,1,0,0,0,1018,\r\n\t1019,1,0,0,0,1019,1020,1,0,0,0,1020,1021,5,2,0,0,1021,1023,1,0,0,0,1022,\r\n\t961,1,0,0,0,1022,982,1,0,0,0,1022,1005,1,0,0,0,1023,61,1,0,0,0,1024,1025,\r\n\t5,101,0,0,1025,1026,5,1,0,0,1026,1027,3,4,2,0,1027,1028,5,17,0,0,1028,1029,\r\n\t3,4,2,0,1029,1030,5,2,0,0,1030,63,1,0,0,0,1031,1032,5,101,0,0,1032,1033,\r\n\t5,1,0,0,1033,1034,3,6,3,0,1034,1035,5,17,0,0,1035,1036,3,6,3,0,1036,1037,\r\n\t5,2,0,0,1037,65,1,0,0,0,1038,1039,7,19,0,0,1039,1040,5,1,0,0,1040,1041,\r\n\t3,6,3,0,1041,1042,5,2,0,0,1042,1047,1,0,0,0,1043,1044,5,90,0,0,1044,1045,\r\n\t5,1,0,0,1045,1047,5,2,0,0,1046,1038,1,0,0,0,1046,1043,1,0,0,0,1047,67,1,\r\n\t0,0,0,1048,1049,7,19,0,0,1049,1050,5,1,0,0,1050,1055,3,4,2,0,1051,1053,\r\n\t3,106,53,0,1052,1054,3,108,54,0,1053,1052,1,0,0,0,1053,1054,1,0,0,0,1054,\r\n\t1056,1,0,0,0,1055,1051,1,0,0,0,1055,1056,1,0,0,0,1056,1057,1,0,0,0,1057,\r\n\t1058,5,2,0,0,1058,69,1,0,0,0,1059,1060,7,20,0,0,1060,1061,5,1,0,0,1061,\r\n\t1062,3,4,2,0,1062,1063,5,140,0,0,1063,1065,5,1,0,0,1064,1066,3,94,47,0,\r\n\t1065,1064,1,0,0,0,1065,1066,1,0,0,0,1066,1068,1,0,0,0,1067,1069,3,96,48,\r\n\t0,1068,1067,1,0,0,0,1068,1069,1,0,0,0,1069,1071,1,0,0,0,1070,1072,3,100,\r\n\t50,0,1071,1070,1,0,0,0,1071,1072,1,0,0,0,1072,1073,1,0,0,0,1073,1074,5,\r\n\t2,0,0,1074,1075,5,2,0,0,1075,1106,1,0,0,0,1076,1077,7,21,0,0,1077,1078,\r\n\t5,1,0,0,1078,1084,3,4,2,0,1079,1080,5,17,0,0,1080,1082,3,102,51,0,1081,\r\n\t1083,3,208,104,0,1082,1081,1,0,0,0,1082,1083,1,0,0,0,1083,1085,1,0,0,0,\r\n\t1084,1079,1,0,0,0,1084,1085,1,0,0,0,1085,1086,1,0,0,0,1086,1087,5,140,0,\r\n\t0,1087,1089,5,1,0,0,1088,1090,3,94,47,0,1089,1088,1,0,0,0,1089,1090,1,0,\r\n\t0,0,1090,1091,1,0,0,0,1091,1092,3,96,48,0,1092,1093,1,0,0,0,1093,1094,5,\r\n\t2,0,0,1094,1095,5,2,0,0,1095,1106,1,0,0,0,1096,1097,5,139,0,0,1097,1098,\r\n\t5,1,0,0,1098,1099,3,4,2,0,1099,1100,5,140,0,0,1100,1101,5,1,0,0,1101,1102,\r\n\t3,94,47,0,1102,1103,5,2,0,0,1103,1104,5,2,0,0,1104,1106,1,0,0,0,1105,1059,\r\n\t1,0,0,0,1105,1076,1,0,0,0,1105,1096,1,0,0,0,1106,71,1,0,0,0,1107,1108,7,\r\n\t20,0,0,1108,1109,5,1,0,0,1109,1110,3,6,3,0,1110,1111,5,140,0,0,1111,1113,\r\n\t5,1,0,0,1112,1114,3,94,47,0,1113,1112,1,0,0,0,1113,1114,1,0,0,0,1114,1116,\r\n\t1,0,0,0,1115,1117,3,96,48,0,1116,1115,1,0,0,0,1116,1117,1,0,0,0,1117,1119,\r\n\t1,0,0,0,1118,1120,3,100,50,0,1119,1118,1,0,0,0,1119,1120,1,0,0,0,1120,1121,\r\n\t1,0,0,0,1121,1122,5,2,0,0,1122,1123,5,2,0,0,1123,1166,1,0,0,0,1124,1125,\r\n\t7,21,0,0,1125,1126,5,1,0,0,1126,1132,3,6,3,0,1127,1128,5,17,0,0,1128,1130,\r\n\t3,102,51,0,1129,1131,3,208,104,0,1130,1129,1,0,0,0,1130,1131,1,0,0,0,1131,\r\n\t1133,1,0,0,0,1132,1127,1,0,0,0,1132,1133,1,0,0,0,1133,1134,1,0,0,0,1134,\r\n\t1135,5,140,0,0,1135,1137,5,1,0,0,1136,1138,3,94,47,0,1137,1136,1,0,0,0,\r\n\t1137,1138,1,0,0,0,1138,1139,1,0,0,0,1139,1140,3,96,48,0,1140,1141,1,0,0,\r\n\t0,1141,1142,5,2,0,0,1142,1143,5,2,0,0,1143,1166,1,0,0,0,1144,1145,5,65,\r\n\t0,0,1145,1146,5,1,0,0,1146,1147,5,140,0,0,1147,1149,5,1,0,0,1148,1150,3,\r\n\t94,47,0,1149,1148,1,0,0,0,1149,1150,1,0,0,0,1150,1151,1,0,0,0,1151,1152,\r\n\t3,96,48,0,1152,1153,1,0,0,0,1153,1154,5,2,0,0,1154,1155,5,2,0,0,1155,1166,\r\n\t1,0,0,0,1156,1157,5,139,0,0,1157,1158,5,1,0,0,1158,1159,3,6,3,0,1159,1160,\r\n\t5,140,0,0,1160,1161,5,1,0,0,1161,1162,3,94,47,0,1162,1163,5,2,0,0,1163,\r\n\t1164,5,2,0,0,1164,1166,1,0,0,0,1165,1107,1,0,0,0,1165,1124,1,0,0,0,1165,\r\n\t1144,1,0,0,0,1165,1156,1,0,0,0,1166,73,1,0,0,0,1167,1168,3,184,92,0,1168,\r\n\t1169,5,56,0,0,1169,1170,3,184,92,0,1170,75,1,0,0,0,1171,1176,3,78,39,0,\r\n\t1172,1173,5,17,0,0,1173,1175,3,78,39,0,1174,1172,1,0,0,0,1175,1178,1,0,\r\n\t0,0,1176,1174,1,0,0,0,1176,1177,1,0,0,0,1177,77,1,0,0,0,1178,1176,1,0,0,\r\n\t0,1179,1181,3,198,99,0,1180,1179,1,0,0,0,1180,1181,1,0,0,0,1181,1182,1,\r\n\t0,0,0,1182,1183,3,184,92,0,1183,1184,5,19,0,0,1184,1185,3,66,33,0,1185,\r\n\t79,1,0,0,0,1186,1188,3,198,99,0,1187,1186,1,0,0,0,1187,1188,1,0,0,0,1188,\r\n\t1189,1,0,0,0,1189,1190,3,184,92,0,1190,1191,5,19,0,0,1191,1192,3,6,3,0,\r\n\t1192,81,1,0,0,0,1193,1194,3,184,92,0,1194,1195,5,7,0,0,1195,1196,3,208,\r\n\t104,0,1196,83,1,0,0,0,1197,1202,3,88,44,0,1198,1199,5,17,0,0,1199,1201,\r\n\t3,88,44,0,1200,1198,1,0,0,0,1201,1204,1,0,0,0,1202,1200,1,0,0,0,1202,1203,\r\n\t1,0,0,0,1203,85,1,0,0,0,1204,1202,1,0,0,0,1205,1210,3,88,44,0,1206,1207,\r\n\t5,17,0,0,1207,1209,3,88,44,0,1208,1206,1,0,0,0,1209,1212,1,0,0,0,1210,1208,\r\n\t1,0,0,0,1210,1211,1,0,0,0,1211,1222,1,0,0,0,1212,1210,1,0,0,0,1213,1214,\r\n\t5,26,0,0,1214,1219,3,184,92,0,1215,1216,5,17,0,0,1216,1218,3,184,92,0,1217,\r\n\t1215,1,0,0,0,1218,1221,1,0,0,0,1219,1217,1,0,0,0,1219,1220,1,0,0,0,1220,\r\n\t1223,1,0,0,0,1221,1219,1,0,0,0,1222,1213,1,0,0,0,1222,1223,1,0,0,0,1223,\r\n\t87,1,0,0,0,1224,1227,3,4,2,0,1225,1226,5,35,0,0,1226,1228,3,178,89,0,1227,\r\n\t1225,1,0,0,0,1227,1228,1,0,0,0,1228,89,1,0,0,0,1229,1231,3,18,9,0,1230,\r\n\t1229,1,0,0,0,1230,1231,1,0,0,0,1231,1235,1,0,0,0,1232,1236,3,20,10,0,1233,\r\n\t1236,3,92,46,0,1234,1236,3,16,8,0,1235,1232,1,0,0,0,1235,1233,1,0,0,0,1235,\r\n\t1234,1,0,0,0,1235,1236,1,0,0,0,1236,1238,1,0,0,0,1237,1239,3,22,11,0,1238,\r\n\t1237,1,0,0,0,1238,1239,1,0,0,0,1239,1241,1,0,0,0,1240,1242,3,14,7,0,1241,\r\n\t1240,1,0,0,0,1241,1242,1,0,0,0,1242,91,1,0,0,0,1243,1244,5,194,0,0,1244,\r\n\t1245,3,4,2,0,1245,93,1,0,0,0,1246,1247,5,144,0,0,1247,1248,5,64,0,0,1248,\r\n\t1253,3,184,92,0,1249,1250,5,17,0,0,1250,1252,3,184,92,0,1251,1249,1,0,0,\r\n\t0,1252,1255,1,0,0,0,1253,1251,1,0,0,0,1253,1254,1,0,0,0,1254,95,1,0,0,0,\r\n\t1255,1253,1,0,0,0,1256,1257,5,63,0,0,1257,1258,5,64,0,0,1258,1263,3,98,\r\n\t49,0,1259,1260,5,17,0,0,1260,1262,3,98,49,0,1261,1259,1,0,0,0,1262,1265,\r\n\t1,0,0,0,1263,1261,1,0,0,0,1263,1264,1,0,0,0,1264,97,1,0,0,0,1265,1263,1,\r\n\t0,0,0,1266,1268,3,184,92,0,1267,1269,7,22,0,0,1268,1267,1,0,0,0,1268,1269,\r\n\t1,0,0,0,1269,99,1,0,0,0,1270,1271,5,107,0,0,1271,1274,5,176,0,0,1272,1274,\r\n\t5,146,0,0,1273,1270,1,0,0,0,1273,1272,1,0,0,0,1274,1275,1,0,0,0,1275,1276,\r\n\t5,40,0,0,1276,1277,3,104,52,0,1277,1278,5,36,0,0,1278,1279,3,104,52,0,1279,\r\n\t101,1,0,0,0,1280,1281,5,229,0,0,1281,103,1,0,0,0,1282,1283,5,229,0,0,1283,\r\n\t1294,5,141,0,0,1284,1285,5,229,0,0,1285,1294,5,142,0,0,1286,1287,5,147,\r\n\t0,0,1287,1288,5,107,0,0,1288,1294,5,177,0,0,1289,1290,5,143,0,0,1290,1294,\r\n\t5,141,0,0,1291,1292,5,143,0,0,1292,1294,5,142,0,0,1293,1282,1,0,0,0,1293,\r\n\t1284,1,0,0,0,1293,1286,1,0,0,0,1293,1289,1,0,0,0,1293,1291,1,0,0,0,1294,\r\n\t105,1,0,0,0,1295,1296,5,132,0,0,1296,1297,7,23,0,0,1297,1302,3,184,92,0,\r\n\t1298,1299,5,17,0,0,1299,1301,3,184,92,0,1300,1298,1,0,0,0,1301,1304,1,0,\r\n\t0,0,1302,1300,1,0,0,0,1302,1303,1,0,0,0,1303,1313,1,0,0,0,1304,1302,1,0,\r\n\t0,0,1305,1306,5,199,0,0,1306,1307,5,1,0,0,1307,1310,5,233,0,0,1308,1309,\r\n\t5,17,0,0,1309,1311,7,16,0,0,1310,1308,1,0,0,0,1310,1311,1,0,0,0,1311,1312,\r\n\t1,0,0,0,1312,1314,5,2,0,0,1313,1305,1,0,0,0,1313,1314,1,0,0,0,1314,1325,\r\n\t1,0,0,0,1315,1316,5,132,0,0,1316,1317,5,60,0,0,1317,1322,3,6,3,0,1318,1319,\r\n\t5,199,0,0,1319,1320,5,1,0,0,1320,1321,5,233,0,0,1321,1323,5,2,0,0,1322,\r\n\t1318,1,0,0,0,1322,1323,1,0,0,0,1323,1325,1,0,0,0,1324,1295,1,0,0,0,1324,\r\n\t1315,1,0,0,0,1325,107,1,0,0,0,1326,1327,5,134,0,0,1327,1328,3,6,3,0,1328,\r\n\t109,1,0,0,0,1329,1330,3,180,90,0,1330,1333,3,116,58,0,1331,1332,5,209,0,\r\n\t0,1332,1334,3,208,104,0,1333,1331,1,0,0,0,1333,1334,1,0,0,0,1334,111,1,\r\n\t0,0,0,1335,1339,3,120,60,0,1336,1339,3,124,62,0,1337,1339,3,122,61,0,1338,\r\n\t1335,1,0,0,0,1338,1336,1,0,0,0,1338,1337,1,0,0,0,1339,113,1,0,0,0,1340,\r\n\t1343,3,122,61,0,1341,1343,3,120,60,0,1342,1340,1,0,0,0,1342,1341,1,0,0,\r\n\t0,1343,115,1,0,0,0,1344,1350,3,120,60,0,1345,1350,3,124,62,0,1346,1350,\r\n\t3,126,63,0,1347,1350,3,118,59,0,1348,1350,3,122,61,0,1349,1344,1,0,0,0,\r\n\t1349,1345,1,0,0,0,1349,1346,1,0,0,0,1349,1347,1,0,0,0,1349,1348,1,0,0,0,\r\n\t1350,117,1,0,0,0,1351,1355,5,115,0,0,1352,1355,3,128,64,0,1353,1355,3,130,\r\n\t65,0,1354,1351,1,0,0,0,1354,1352,1,0,0,0,1354,1353,1,0,0,0,1355,119,1,0,\r\n\t0,0,1356,1359,3,210,105,0,1357,1359,3,132,66,0,1358,1356,1,0,0,0,1358,1357,\r\n\t1,0,0,0,1359,1361,1,0,0,0,1360,1362,3,158,79,0,1361,1360,1,0,0,0,1361,1362,\r\n\t1,0,0,0,1362,1367,1,0,0,0,1363,1365,5,39,0,0,1364,1363,1,0,0,0,1364,1365,\r\n\t1,0,0,0,1365,1366,1,0,0,0,1366,1368,5,43,0,0,1367,1364,1,0,0,0,1367,1368,\r\n\t1,0,0,0,1368,121,1,0,0,0,1369,1374,3,198,99,0,1370,1371,5,8,0,0,1371,1372,\r\n\t3,120,60,0,1372,1373,5,9,0,0,1373,1375,1,0,0,0,1374,1370,1,0,0,0,1374,1375,\r\n\t1,0,0,0,1375,123,1,0,0,0,1376,1388,5,109,0,0,1377,1378,5,5,0,0,1378,1383,\r\n\t3,160,80,0,1379,1380,5,17,0,0,1380,1382,3,160,80,0,1381,1379,1,0,0,0,1382,\r\n\t1385,1,0,0,0,1383,1381,1,0,0,0,1383,1384,1,0,0,0,1384,1386,1,0,0,0,1385,\r\n\t1383,1,0,0,0,1386,1387,5,6,0,0,1387,1389,1,0,0,0,1388,1377,1,0,0,0,1388,\r\n\t1389,1,0,0,0,1389,125,1,0,0,0,1390,1395,5,227,0,0,1391,1392,5,8,0,0,1392,\r\n\t1393,3,120,60,0,1393,1394,5,9,0,0,1394,1396,1,0,0,0,1395,1391,1,0,0,0,1395,\r\n\t1396,1,0,0,0,1396,127,1,0,0,0,1397,1427,5,113,0,0,1398,1410,5,223,0,0,1399,\r\n\t1400,5,5,0,0,1400,1405,3,132,66,0,1401,1402,5,15,0,0,1402,1404,3,132,66,\r\n\t0,1403,1401,1,0,0,0,1404,1407,1,0,0,0,1405,1403,1,0,0,0,1405,1406,1,0,0,\r\n\t0,1406,1408,1,0,0,0,1407,1405,1,0,0,0,1408,1409,5,6,0,0,1409,1411,1,0,0,\r\n\t0,1410,1399,1,0,0,0,1410,1411,1,0,0,0,1411,1427,1,0,0,0,1412,1424,5,224,\r\n\t0,0,1413,1414,5,5,0,0,1414,1419,3,180,90,0,1415,1416,5,15,0,0,1416,1418,\r\n\t3,180,90,0,1417,1415,1,0,0,0,1418,1421,1,0,0,0,1419,1417,1,0,0,0,1419,1420,\r\n\t1,0,0,0,1420,1422,1,0,0,0,1421,1419,1,0,0,0,1422,1423,5,6,0,0,1423,1425,\r\n\t1,0,0,0,1424,1413,1,0,0,0,1424,1425,1,0,0,0,1425,1427,1,0,0,0,1426,1397,\r\n\t1,0,0,0,1426,1398,1,0,0,0,1426,1412,1,0,0,0,1427,129,1,0,0,0,1428,1469,\r\n\t5,114,0,0,1429,1446,5,225,0,0,1430,1431,5,5,0,0,1431,1443,5,234,0,0,1432,\r\n\t1433,5,1,0,0,1433,1438,3,132,66,0,1434,1435,5,15,0,0,1435,1437,3,132,66,\r\n\t0,1436,1434,1,0,0,0,1437,1440,1,0,0,0,1438,1436,1,0,0,0,1438,1439,1,0,0,\r\n\t0,1439,1441,1,0,0,0,1440,1438,1,0,0,0,1441,1442,5,2,0,0,1442,1444,1,0,0,\r\n\t0,1443,1432,1,0,0,0,1443,1444,1,0,0,0,1444,1445,1,0,0,0,1445,1447,5,6,0,\r\n\t0,1446,1430,1,0,0,0,1446,1447,1,0,0,0,1447,1469,1,0,0,0,1448,1466,5,226,\r\n\t0,0,1449,1450,5,5,0,0,1450,1462,3,180,90,0,1451,1452,5,1,0,0,1452,1457,\r\n\t3,180,90,0,1453,1454,5,15,0,0,1454,1456,3,180,90,0,1455,1453,1,0,0,0,1456,\r\n\t1459,1,0,0,0,1457,1455,1,0,0,0,1457,1458,1,0,0,0,1458,1460,1,0,0,0,1459,\r\n\t1457,1,0,0,0,1460,1461,5,2,0,0,1461,1463,1,0,0,0,1462,1451,1,0,0,0,1462,\r\n\t1463,1,0,0,0,1463,1464,1,0,0,0,1464,1465,5,6,0,0,1465,1467,1,0,0,0,1466,\r\n\t1449,1,0,0,0,1466,1467,1,0,0,0,1467,1469,1,0,0,0,1468,1428,1,0,0,0,1468,\r\n\t1429,1,0,0,0,1468,1448,1,0,0,0,1469,131,1,0,0,0,1470,1471,5,234,0,0,1471,\r\n\t133,1,0,0,0,1472,1473,5,234,0,0,1473,135,1,0,0,0,1474,1475,7,24,0,0,1475,\r\n\t1480,3,138,69,0,1476,1477,5,17,0,0,1477,1479,3,138,69,0,1478,1476,1,0,0,\r\n\t0,1479,1482,1,0,0,0,1480,1478,1,0,0,0,1480,1481,1,0,0,0,1481,137,1,0,0,\r\n\t0,1482,1480,1,0,0,0,1483,1486,3,180,90,0,1484,1485,5,35,0,0,1485,1487,3,\r\n\t178,89,0,1486,1484,1,0,0,0,1486,1487,1,0,0,0,1487,139,1,0,0,0,1488,1493,\r\n\t3,142,71,0,1489,1490,5,236,0,0,1490,1492,3,142,71,0,1491,1489,1,0,0,0,1492,\r\n\t1495,1,0,0,0,1493,1491,1,0,0,0,1493,1494,1,0,0,0,1494,141,1,0,0,0,1495,\r\n\t1493,1,0,0,0,1496,1497,5,234,0,0,1497,1499,5,21,0,0,1498,1496,1,0,0,0,1498,\r\n\t1499,1,0,0,0,1499,1504,1,0,0,0,1500,1501,5,173,0,0,1501,1502,3,6,3,0,1502,\r\n\t1503,5,24,0,0,1503,1505,1,0,0,0,1504,1500,1,0,0,0,1504,1505,1,0,0,0,1505,\r\n\t1506,1,0,0,0,1506,1508,3,6,3,0,1507,1509,3,188,94,0,1508,1507,1,0,0,0,1508,\r\n\t1509,1,0,0,0,1509,1511,1,0,0,0,1510,1512,3,190,95,0,1511,1510,1,0,0,0,1511,\r\n\t1512,1,0,0,0,1512,143,1,0,0,0,1513,1518,3,146,73,0,1514,1515,5,236,0,0,\r\n\t1515,1517,3,146,73,0,1516,1514,1,0,0,0,1517,1520,1,0,0,0,1518,1516,1,0,\r\n\t0,0,1518,1519,1,0,0,0,1519,145,1,0,0,0,1520,1518,1,0,0,0,1521,1522,5,234,\r\n\t0,0,1522,1524,5,21,0,0,1523,1521,1,0,0,0,1523,1524,1,0,0,0,1524,1525,1,\r\n\t0,0,0,1525,1527,3,152,76,0,1526,1528,3,188,94,0,1527,1526,1,0,0,0,1527,\r\n\t1528,1,0,0,0,1528,1530,1,0,0,0,1529,1531,3,190,95,0,1530,1529,1,0,0,0,1530,\r\n\t1531,1,0,0,0,1531,147,1,0,0,0,1532,1535,7,24,0,0,1533,1534,5,155,0,0,1534,\r\n\t1536,3,150,75,0,1535,1533,1,0,0,0,1535,1536,1,0,0,0,1536,1537,1,0,0,0,1537,\r\n\t1538,5,116,0,0,1538,1539,5,234,0,0,1539,149,1,0,0,0,1540,1545,3,138,69,\r\n\t0,1541,1542,5,17,0,0,1542,1544,3,138,69,0,1543,1541,1,0,0,0,1544,1547,1,\r\n\t0,0,0,1545,1543,1,0,0,0,1545,1546,1,0,0,0,1546,151,1,0,0,0,1547,1545,1,\r\n\t0,0,0,1548,1549,5,173,0,0,1549,1550,3,6,3,0,1550,1551,5,24,0,0,1551,1553,\r\n\t1,0,0,0,1552,1548,1,0,0,0,1552,1553,1,0,0,0,1553,1554,1,0,0,0,1554,1556,\r\n\t3,156,78,0,1555,1557,3,192,96,0,1556,1555,1,0,0,0,1556,1557,1,0,0,0,1557,\r\n\t1558,1,0,0,0,1558,1562,3,154,77,0,1559,1561,3,154,77,0,1560,1559,1,0,0,\r\n\t0,1561,1564,1,0,0,0,1562,1560,1,0,0,0,1562,1563,1,0,0,0,1563,153,1,0,0,\r\n\t0,1564,1562,1,0,0,0,1565,1567,7,25,0,0,1566,1565,1,0,0,0,1566,1567,1,0,\r\n\t0,0,1567,1568,1,0,0,0,1568,1573,3,156,78,0,1569,1570,5,3,0,0,1570,1571,\r\n\t3,6,3,0,1571,1572,5,4,0,0,1572,1574,1,0,0,0,1573,1569,1,0,0,0,1573,1574,\r\n\t1,0,0,0,1574,155,1,0,0,0,1575,1576,7,26,0,0,1576,157,1,0,0,0,1577,1578,\r\n\t5,3,0,0,1578,1579,3,6,3,0,1579,1580,5,4,0,0,1580,1593,1,0,0,0,1581,1582,\r\n\t5,5,0,0,1582,1587,3,208,104,0,1583,1584,5,17,0,0,1584,1586,3,208,104,0,\r\n\t1585,1583,1,0,0,0,1586,1589,1,0,0,0,1587,1585,1,0,0,0,1587,1588,1,0,0,0,\r\n\t1588,1590,1,0,0,0,1589,1587,1,0,0,0,1590,1591,5,6,0,0,1591,1593,1,0,0,0,\r\n\t1592,1577,1,0,0,0,1592,1581,1,0,0,0,1593,159,1,0,0,0,1594,1597,3,122,61,\r\n\t0,1595,1598,3,184,92,0,1596,1598,3,162,81,0,1597,1595,1,0,0,0,1597,1596,\r\n\t1,0,0,0,1598,161,1,0,0,0,1599,1601,5,103,0,0,1600,1602,7,27,0,0,1601,1600,\r\n\t1,0,0,0,1601,1602,1,0,0,0,1602,163,1,0,0,0,1603,1604,7,28,0,0,1604,165,\r\n\t1,0,0,0,1605,1606,7,29,0,0,1606,167,1,0,0,0,1607,1608,5,155,0,0,1608,1613,\r\n\t3,184,92,0,1609,1610,5,17,0,0,1610,1612,3,184,92,0,1611,1609,1,0,0,0,1612,\r\n\t1615,1,0,0,0,1613,1611,1,0,0,0,1613,1614,1,0,0,0,1614,169,1,0,0,0,1615,\r\n\t1613,1,0,0,0,1616,1617,7,30,0,0,1617,171,1,0,0,0,1618,1619,5,58,0,0,1619,\r\n\t1620,3,4,2,0,1620,173,1,0,0,0,1621,1622,7,31,0,0,1622,175,1,0,0,0,1623,\r\n\t1624,7,32,0,0,1624,177,1,0,0,0,1625,1626,5,234,0,0,1626,179,1,0,0,0,1627,\r\n\t1628,5,234,0,0,1628,181,1,0,0,0,1629,1630,5,234,0,0,1630,183,1,0,0,0,1631,\r\n\t1634,5,234,0,0,1632,1633,5,20,0,0,1633,1635,5,234,0,0,1634,1632,1,0,0,0,\r\n\t1634,1635,1,0,0,0,1635,185,1,0,0,0,1636,1637,5,5,0,0,1637,1642,3,208,104,\r\n\t0,1638,1639,5,17,0,0,1639,1641,3,208,104,0,1640,1638,1,0,0,0,1641,1644,\r\n\t1,0,0,0,1642,1640,1,0,0,0,1642,1643,1,0,0,0,1643,1645,1,0,0,0,1644,1642,\r\n\t1,0,0,0,1645,1646,5,6,0,0,1646,1649,1,0,0,0,1647,1649,3,202,101,0,1648,\r\n\t1636,1,0,0,0,1648,1647,1,0,0,0,1649,187,1,0,0,0,1650,1651,5,59,0,0,1651,\r\n\t1652,3,208,104,0,1652,189,1,0,0,0,1653,1654,5,62,0,0,1654,1655,3,208,104,\r\n\t0,1655,191,1,0,0,0,1656,1657,7,33,0,0,1657,193,1,0,0,0,1658,1661,3,4,2,\r\n\t0,1659,1661,5,103,0,0,1660,1658,1,0,0,0,1660,1659,1,0,0,0,1661,195,1,0,\r\n\t0,0,1662,1665,3,6,3,0,1663,1665,5,103,0,0,1664,1662,1,0,0,0,1664,1663,1,\r\n\t0,0,0,1665,197,1,0,0,0,1666,1672,5,92,0,0,1667,1672,5,222,0,0,1668,1672,\r\n\t5,91,0,0,1669,1672,5,93,0,0,1670,1672,3,200,100,0,1671,1666,1,0,0,0,1671,\r\n\t1667,1,0,0,0,1671,1668,1,0,0,0,1671,1669,1,0,0,0,1671,1670,1,0,0,0,1672,\r\n\t199,1,0,0,0,1673,1674,5,98,0,0,1674,1675,5,93,0,0,1675,201,1,0,0,0,1676,\r\n\t1677,5,234,0,0,1677,203,1,0,0,0,1678,1679,5,234,0,0,1679,205,1,0,0,0,1680,\r\n\t1681,5,234,0,0,1681,207,1,0,0,0,1682,1683,7,34,0,0,1683,209,1,0,0,0,1684,\r\n\t1685,7,35,0,0,1685,211,1,0,0,0,1686,1687,7,36,0,0,1687,213,1,0,0,0,190,\r\n\t219,233,252,281,283,303,324,326,337,351,360,368,375,377,388,397,411,426,\r\n\t437,440,445,478,487,490,500,505,509,515,519,529,533,537,546,549,559,563,\r\n\t573,578,582,588,592,596,601,606,622,626,637,648,652,656,672,676,687,698,\r\n\t702,706,718,729,741,752,782,786,809,814,822,843,847,851,857,862,870,891,\r\n\t895,899,905,914,925,936,944,948,951,954,957,972,975,978,988,992,995,998,\r\n\t1001,1009,1012,1015,1018,1022,1046,1053,1055,1065,1068,1071,1082,1084,1089,\r\n\t1105,1113,1116,1119,1130,1132,1137,1149,1165,1176,1180,1187,1202,1210,1219,\r\n\t1222,1227,1230,1235,1238,1241,1253,1263,1268,1273,1293,1302,1310,1313,1322,\r\n\t1324,1333,1338,1342,1349,1354,1358,1361,1364,1367,1374,1383,1388,1395,1405,\r\n\t1410,1419,1424,1426,1438,1443,1446,1457,1462,1466,1468,1480,1486,1493,1498,\r\n\t1504,1508,1511,1518,1523,1527,1530,1535,1545,1552,1556,1562,1566,1573,1587,\r\n\t1592,1597,1601,1613,1634,1642,1648,1660,1664,1671];\r\n\r\n\tprivate static __ATN: ATN;\r\n\tpublic static get _ATN(): ATN {\r\n\t\tif (!Vtl.__ATN) {\r\n\t\t\tVtl.__ATN = new ATNDeserializer().deserialize(Vtl._serializedATN);\r\n\t\t}\r\n\r\n\t\treturn Vtl.__ATN;\r\n\t}\r\n\r\n\r\n\tstatic DecisionsToDFA = Vtl._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );\r\n\r\n}\r\n\r\nexport class StartContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic EOF(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.EOF, 0);\r\n\t}\r\n\tpublic statement_list(): StatementContext[] {\r\n\t\treturn this.getTypedRuleContexts(StatementContext) as StatementContext[];\r\n\t}\r\n\tpublic statement(i: number): StatementContext {\r\n\t\treturn this.getTypedRuleContext(StatementContext, i) as StatementContext;\r\n\t}\r\n\tpublic EOL_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.EOL);\r\n\t}\r\n\tpublic EOL(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.EOL, i);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_start;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitStart) {\r\n\t\t\treturn visitor.visitStart(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class StatementContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_statement;\r\n\t}\r\n\tpublic copyFrom(ctx: StatementContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class DefineExpressionContext extends StatementContext {\r\n\tconstructor(parser: Vtl, ctx: StatementContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic defOperators(): DefOperatorsContext {\r\n\t\treturn this.getTypedRuleContext(DefOperatorsContext, 0) as DefOperatorsContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitDefineExpression) {\r\n\t\t\treturn visitor.visitDefineExpression(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class TemporaryAssignmentContext extends StatementContext {\r\n\tconstructor(parser: Vtl, ctx: StatementContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic varID(): VarIDContext {\r\n\t\treturn this.getTypedRuleContext(VarIDContext, 0) as VarIDContext;\r\n\t}\r\n\tpublic ASSIGN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ASSIGN, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitTemporaryAssignment) {\r\n\t\t\treturn visitor.visitTemporaryAssignment(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class PersistAssignmentContext extends StatementContext {\r\n\tconstructor(parser: Vtl, ctx: StatementContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic varID(): VarIDContext {\r\n\t\treturn this.getTypedRuleContext(VarIDContext, 0) as VarIDContext;\r\n\t}\r\n\tpublic PUT_SYMBOL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.PUT_SYMBOL, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitPersistAssignment) {\r\n\t\t\treturn visitor.visitPersistAssignment(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ExprContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_expr;\r\n\t}\r\n\tpublic copyFrom(ctx: ExprContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class VarIdExprContext extends ExprContext {\r\n\tconstructor(parser: Vtl, ctx: ExprContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic varID(): VarIDContext {\r\n\t\treturn this.getTypedRuleContext(VarIDContext, 0) as VarIDContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitVarIdExpr) {\r\n\t\t\treturn visitor.visitVarIdExpr(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class MembershipExprContext extends ExprContext {\r\n\tconstructor(parser: Vtl, ctx: ExprContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic MEMBERSHIP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MEMBERSHIP, 0);\r\n\t}\r\n\tpublic simpleComponentId(): SimpleComponentIdContext {\r\n\t\treturn this.getTypedRuleContext(SimpleComponentIdContext, 0) as SimpleComponentIdContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitMembershipExpr) {\r\n\t\t\treturn visitor.visitMembershipExpr(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class InNotInExprContext extends ExprContext {\r\n\tpublic _left!: ExprContext;\r\n\tpublic _op!: Token;\r\n\tpublic _right!: InexprContext;\r\n\tconstructor(parser: Vtl, ctx: ExprContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic inexpr(): InexprContext {\r\n\t\treturn this.getTypedRuleContext(InexprContext, 0) as InexprContext;\r\n\t}\r\n\tpublic IN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IN, 0);\r\n\t}\r\n\tpublic NOT_IN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.NOT_IN, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitInNotInExpr) {\r\n\t\t\treturn visitor.visitInNotInExpr(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class BooleanExprContext extends ExprContext {\r\n\tpublic _left!: ExprContext;\r\n\tpublic _op!: Token;\r\n\tpublic _right!: ExprContext;\r\n\tconstructor(parser: Vtl, ctx: ExprContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic expr_list(): ExprContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprContext) as ExprContext[];\r\n\t}\r\n\tpublic expr(i: number): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, i) as ExprContext;\r\n\t}\r\n\tpublic AND(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.AND, 0);\r\n\t}\r\n\tpublic OR(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.OR, 0);\r\n\t}\r\n\tpublic XOR(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.XOR, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitBooleanExpr) {\r\n\t\t\treturn visitor.visitBooleanExpr(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ComparisonExprContext extends ExprContext {\r\n\tpublic _left!: ExprContext;\r\n\tpublic _op!: ComparisonOperandContext;\r\n\tpublic _right!: ExprContext;\r\n\tconstructor(parser: Vtl, ctx: ExprContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic expr_list(): ExprContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprContext) as ExprContext[];\r\n\t}\r\n\tpublic expr(i: number): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, i) as ExprContext;\r\n\t}\r\n\tpublic comparisonOperand(): ComparisonOperandContext {\r\n\t\treturn this.getTypedRuleContext(ComparisonOperandContext, 0) as ComparisonOperandContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitComparisonExpr) {\r\n\t\t\treturn visitor.visitComparisonExpr(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class UnaryExprContext extends ExprContext {\r\n\tpublic _op!: Token;\r\n\tpublic _right!: ExprContext;\r\n\tconstructor(parser: Vtl, ctx: ExprContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic PLUS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.PLUS, 0);\r\n\t}\r\n\tpublic MINUS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MINUS, 0);\r\n\t}\r\n\tpublic NOT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.NOT, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitUnaryExpr) {\r\n\t\t\treturn visitor.visitUnaryExpr(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class FunctionsExpressionContext extends ExprContext {\r\n\tconstructor(parser: Vtl, ctx: ExprContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic functions(): FunctionsContext {\r\n\t\treturn this.getTypedRuleContext(FunctionsContext, 0) as FunctionsContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitFunctionsExpression) {\r\n\t\t\treturn visitor.visitFunctionsExpression(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class IfExprContext extends ExprContext {\r\n\tpublic _conditionalExpr!: ExprContext;\r\n\tpublic _thenExpr!: ExprContext;\r\n\tpublic _elseExpr!: ExprContext;\r\n\tconstructor(parser: Vtl, ctx: ExprContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic IF(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IF, 0);\r\n\t}\r\n\tpublic THEN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.THEN, 0);\r\n\t}\r\n\tpublic ELSE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ELSE, 0);\r\n\t}\r\n\tpublic expr_list(): ExprContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprContext) as ExprContext[];\r\n\t}\r\n\tpublic expr(i: number): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, i) as ExprContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitIfExpr) {\r\n\t\t\treturn visitor.visitIfExpr(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ClauseExprContext extends ExprContext {\r\n\tpublic _dataset!: ExprContext;\r\n\tpublic _clause!: DatasetClauseContext;\r\n\tconstructor(parser: Vtl, ctx: ExprContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic QLPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.QLPAREN, 0);\r\n\t}\r\n\tpublic QRPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.QRPAREN, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic datasetClause(): DatasetClauseContext {\r\n\t\treturn this.getTypedRuleContext(DatasetClauseContext, 0) as DatasetClauseContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitClauseExpr) {\r\n\t\t\treturn visitor.visitClauseExpr(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ArithmeticExprContext extends ExprContext {\r\n\tpublic _left!: ExprContext;\r\n\tpublic _op!: Token;\r\n\tpublic _right!: ExprContext;\r\n\tconstructor(parser: Vtl, ctx: ExprContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic expr_list(): ExprContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprContext) as ExprContext[];\r\n\t}\r\n\tpublic expr(i: number): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, i) as ExprContext;\r\n\t}\r\n\tpublic MUL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MUL, 0);\r\n\t}\r\n\tpublic DIV(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DIV, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitArithmeticExpr) {\r\n\t\t\treturn visitor.visitArithmeticExpr(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ParenthesisExprContext extends ExprContext {\r\n\tconstructor(parser: Vtl, ctx: ExprContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitParenthesisExpr) {\r\n\t\t\treturn visitor.visitParenthesisExpr(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ConstantExprContext extends ExprContext {\r\n\tconstructor(parser: Vtl, ctx: ExprContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic constant(): ConstantContext {\r\n\t\treturn this.getTypedRuleContext(ConstantContext, 0) as ConstantContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitConstantExpr) {\r\n\t\t\treturn visitor.visitConstantExpr(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ArithmeticExprOrConcatContext extends ExprContext {\r\n\tpublic _left!: ExprContext;\r\n\tpublic _op!: Token;\r\n\tpublic _right!: ExprContext;\r\n\tconstructor(parser: Vtl, ctx: ExprContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic expr_list(): ExprContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprContext) as ExprContext[];\r\n\t}\r\n\tpublic expr(i: number): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, i) as ExprContext;\r\n\t}\r\n\tpublic PLUS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.PLUS, 0);\r\n\t}\r\n\tpublic MINUS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MINUS, 0);\r\n\t}\r\n\tpublic CONCAT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.CONCAT, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitArithmeticExprOrConcat) {\r\n\t\t\treturn visitor.visitArithmeticExprOrConcat(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ExprComponentContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_exprComponent;\r\n\t}\r\n\tpublic copyFrom(ctx: ExprComponentContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class ArithmeticExprCompContext extends ExprComponentContext {\r\n\tpublic _left!: ExprComponentContext;\r\n\tpublic _op!: Token;\r\n\tpublic _right!: ExprComponentContext;\r\n\tconstructor(parser: Vtl, ctx: ExprComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic exprComponent_list(): ExprComponentContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprComponentContext) as ExprComponentContext[];\r\n\t}\r\n\tpublic exprComponent(i: number): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, i) as ExprComponentContext;\r\n\t}\r\n\tpublic MUL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MUL, 0);\r\n\t}\r\n\tpublic DIV(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DIV, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitArithmeticExprComp) {\r\n\t\t\treturn visitor.visitArithmeticExprComp(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class IfExprCompContext extends ExprComponentContext {\r\n\tpublic _conditionalExpr!: ExprComponentContext;\r\n\tpublic _thenExpr!: ExprComponentContext;\r\n\tpublic _elseExpr!: ExprComponentContext;\r\n\tconstructor(parser: Vtl, ctx: ExprComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic IF(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IF, 0);\r\n\t}\r\n\tpublic THEN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.THEN, 0);\r\n\t}\r\n\tpublic ELSE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ELSE, 0);\r\n\t}\r\n\tpublic exprComponent_list(): ExprComponentContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprComponentContext) as ExprComponentContext[];\r\n\t}\r\n\tpublic exprComponent(i: number): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, i) as ExprComponentContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitIfExprComp) {\r\n\t\t\treturn visitor.visitIfExprComp(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ComparisonExprCompContext extends ExprComponentContext {\r\n\tpublic _left!: ExprComponentContext;\r\n\tpublic _right!: ExprComponentContext;\r\n\tconstructor(parser: Vtl, ctx: ExprComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic comparisonOperand(): ComparisonOperandContext {\r\n\t\treturn this.getTypedRuleContext(ComparisonOperandContext, 0) as ComparisonOperandContext;\r\n\t}\r\n\tpublic exprComponent_list(): ExprComponentContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprComponentContext) as ExprComponentContext[];\r\n\t}\r\n\tpublic exprComponent(i: number): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, i) as ExprComponentContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitComparisonExprComp) {\r\n\t\t\treturn visitor.visitComparisonExprComp(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class FunctionsExpressionCompContext extends ExprComponentContext {\r\n\tconstructor(parser: Vtl, ctx: ExprComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic functionsComponents(): FunctionsComponentsContext {\r\n\t\treturn this.getTypedRuleContext(FunctionsComponentsContext, 0) as FunctionsComponentsContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitFunctionsExpressionComp) {\r\n\t\t\treturn visitor.visitFunctionsExpressionComp(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class CompIdContext extends ExprComponentContext {\r\n\tconstructor(parser: Vtl, ctx: ExprComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic componentID(): ComponentIDContext {\r\n\t\treturn this.getTypedRuleContext(ComponentIDContext, 0) as ComponentIDContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitCompId) {\r\n\t\t\treturn visitor.visitCompId(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ConstantExprCompContext extends ExprComponentContext {\r\n\tconstructor(parser: Vtl, ctx: ExprComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic constant(): ConstantContext {\r\n\t\treturn this.getTypedRuleContext(ConstantContext, 0) as ConstantContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitConstantExprComp) {\r\n\t\t\treturn visitor.visitConstantExprComp(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ArithmeticExprOrConcatCompContext extends ExprComponentContext {\r\n\tpublic _left!: ExprComponentContext;\r\n\tpublic _op!: Token;\r\n\tpublic _right!: ExprComponentContext;\r\n\tconstructor(parser: Vtl, ctx: ExprComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic exprComponent_list(): ExprComponentContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprComponentContext) as ExprComponentContext[];\r\n\t}\r\n\tpublic exprComponent(i: number): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, i) as ExprComponentContext;\r\n\t}\r\n\tpublic PLUS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.PLUS, 0);\r\n\t}\r\n\tpublic MINUS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MINUS, 0);\r\n\t}\r\n\tpublic CONCAT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.CONCAT, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitArithmeticExprOrConcatComp) {\r\n\t\t\treturn visitor.visitArithmeticExprOrConcatComp(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ParenthesisExprCompContext extends ExprComponentContext {\r\n\tconstructor(parser: Vtl, ctx: ExprComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitParenthesisExprComp) {\r\n\t\t\treturn visitor.visitParenthesisExprComp(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class InNotInExprCompContext extends ExprComponentContext {\r\n\tpublic _left!: ExprComponentContext;\r\n\tpublic _op!: Token;\r\n\tpublic _right!: InexprContext;\r\n\tconstructor(parser: Vtl, ctx: ExprComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic inexpr(): InexprContext {\r\n\t\treturn this.getTypedRuleContext(InexprContext, 0) as InexprContext;\r\n\t}\r\n\tpublic IN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IN, 0);\r\n\t}\r\n\tpublic NOT_IN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.NOT_IN, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitInNotInExprComp) {\r\n\t\t\treturn visitor.visitInNotInExprComp(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class UnaryExprCompContext extends ExprComponentContext {\r\n\tpublic _op!: Token;\r\n\tpublic _right!: ExprComponentContext;\r\n\tconstructor(parser: Vtl, ctx: ExprComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic PLUS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.PLUS, 0);\r\n\t}\r\n\tpublic MINUS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MINUS, 0);\r\n\t}\r\n\tpublic NOT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.NOT, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitUnaryExprComp) {\r\n\t\t\treturn visitor.visitUnaryExprComp(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class BooleanExprCompContext extends ExprComponentContext {\r\n\tpublic _left!: ExprComponentContext;\r\n\tpublic _op!: Token;\r\n\tpublic _right!: ExprComponentContext;\r\n\tconstructor(parser: Vtl, ctx: ExprComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic exprComponent_list(): ExprComponentContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprComponentContext) as ExprComponentContext[];\r\n\t}\r\n\tpublic exprComponent(i: number): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, i) as ExprComponentContext;\r\n\t}\r\n\tpublic AND(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.AND, 0);\r\n\t}\r\n\tpublic OR(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.OR, 0);\r\n\t}\r\n\tpublic XOR(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.XOR, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitBooleanExprComp) {\r\n\t\t\treturn visitor.visitBooleanExprComp(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class FunctionsComponentsContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_functionsComponents;\r\n\t}\r\n\tpublic copyFrom(ctx: FunctionsComponentsContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class NumericFunctionsComponentsContext extends FunctionsComponentsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsComponentsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic numericOperatorsComponent(): NumericOperatorsComponentContext {\r\n\t\treturn this.getTypedRuleContext(NumericOperatorsComponentContext, 0) as NumericOperatorsComponentContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitNumericFunctionsComponents) {\r\n\t\t\treturn visitor.visitNumericFunctionsComponents(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class StringFunctionsComponentsContext extends FunctionsComponentsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsComponentsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic stringOperatorsComponent(): StringOperatorsComponentContext {\r\n\t\treturn this.getTypedRuleContext(StringOperatorsComponentContext, 0) as StringOperatorsComponentContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitStringFunctionsComponents) {\r\n\t\t\treturn visitor.visitStringFunctionsComponents(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ComparisonFunctionsComponentsContext extends FunctionsComponentsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsComponentsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic comparisonOperatorsComponent(): ComparisonOperatorsComponentContext {\r\n\t\treturn this.getTypedRuleContext(ComparisonOperatorsComponentContext, 0) as ComparisonOperatorsComponentContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitComparisonFunctionsComponents) {\r\n\t\t\treturn visitor.visitComparisonFunctionsComponents(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class TimeFunctionsComponentsContext extends FunctionsComponentsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsComponentsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic timeOperatorsComponent(): TimeOperatorsComponentContext {\r\n\t\treturn this.getTypedRuleContext(TimeOperatorsComponentContext, 0) as TimeOperatorsComponentContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitTimeFunctionsComponents) {\r\n\t\t\treturn visitor.visitTimeFunctionsComponents(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class GenericFunctionsComponentsContext extends FunctionsComponentsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsComponentsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic genericOperatorsComponent(): GenericOperatorsComponentContext {\r\n\t\treturn this.getTypedRuleContext(GenericOperatorsComponentContext, 0) as GenericOperatorsComponentContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitGenericFunctionsComponents) {\r\n\t\t\treturn visitor.visitGenericFunctionsComponents(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class AnalyticFunctionsComponentsContext extends FunctionsComponentsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsComponentsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic anFunctionComponent(): AnFunctionComponentContext {\r\n\t\treturn this.getTypedRuleContext(AnFunctionComponentContext, 0) as AnFunctionComponentContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitAnalyticFunctionsComponents) {\r\n\t\t\treturn visitor.visitAnalyticFunctionsComponents(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ConditionalFunctionsComponentsContext extends FunctionsComponentsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsComponentsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic conditionalOperatorsComponent(): ConditionalOperatorsComponentContext {\r\n\t\treturn this.getTypedRuleContext(ConditionalOperatorsComponentContext, 0) as ConditionalOperatorsComponentContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitConditionalFunctionsComponents) {\r\n\t\t\treturn visitor.visitConditionalFunctionsComponents(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class AggregateFunctionsComponentsContext extends FunctionsComponentsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsComponentsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic aggrOperators(): AggrOperatorsContext {\r\n\t\treturn this.getTypedRuleContext(AggrOperatorsContext, 0) as AggrOperatorsContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitAggregateFunctionsComponents) {\r\n\t\t\treturn visitor.visitAggregateFunctionsComponents(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class FunctionsContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_functions;\r\n\t}\r\n\tpublic copyFrom(ctx: FunctionsContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class HierarchyFunctionsContext extends FunctionsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic hierarchyOperators(): HierarchyOperatorsContext {\r\n\t\treturn this.getTypedRuleContext(HierarchyOperatorsContext, 0) as HierarchyOperatorsContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitHierarchyFunctions) {\r\n\t\t\treturn visitor.visitHierarchyFunctions(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class StringFunctionsContext extends FunctionsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic stringOperators(): StringOperatorsContext {\r\n\t\treturn this.getTypedRuleContext(StringOperatorsContext, 0) as StringOperatorsContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitStringFunctions) {\r\n\t\t\treturn visitor.visitStringFunctions(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ValidationFunctionsContext extends FunctionsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic validationOperators(): ValidationOperatorsContext {\r\n\t\treturn this.getTypedRuleContext(ValidationOperatorsContext, 0) as ValidationOperatorsContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitValidationFunctions) {\r\n\t\t\treturn visitor.visitValidationFunctions(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class GenericFunctionsContext extends FunctionsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic genericOperators(): GenericOperatorsContext {\r\n\t\treturn this.getTypedRuleContext(GenericOperatorsContext, 0) as GenericOperatorsContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitGenericFunctions) {\r\n\t\t\treturn visitor.visitGenericFunctions(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ConditionalFunctionsContext extends FunctionsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic conditionalOperators(): ConditionalOperatorsContext {\r\n\t\treturn this.getTypedRuleContext(ConditionalOperatorsContext, 0) as ConditionalOperatorsContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitConditionalFunctions) {\r\n\t\t\treturn visitor.visitConditionalFunctions(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class AggregateFunctionsContext extends FunctionsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic aggrOperatorsGrouping(): AggrOperatorsGroupingContext {\r\n\t\treturn this.getTypedRuleContext(AggrOperatorsGroupingContext, 0) as AggrOperatorsGroupingContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitAggregateFunctions) {\r\n\t\t\treturn visitor.visitAggregateFunctions(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class JoinFunctionsContext extends FunctionsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic joinOperators(): JoinOperatorsContext {\r\n\t\treturn this.getTypedRuleContext(JoinOperatorsContext, 0) as JoinOperatorsContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitJoinFunctions) {\r\n\t\t\treturn visitor.visitJoinFunctions(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ComparisonFunctionsContext extends FunctionsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic comparisonOperators(): ComparisonOperatorsContext {\r\n\t\treturn this.getTypedRuleContext(ComparisonOperatorsContext, 0) as ComparisonOperatorsContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitComparisonFunctions) {\r\n\t\t\treturn visitor.visitComparisonFunctions(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class NumericFunctionsContext extends FunctionsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic numericOperators(): NumericOperatorsContext {\r\n\t\treturn this.getTypedRuleContext(NumericOperatorsContext, 0) as NumericOperatorsContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitNumericFunctions) {\r\n\t\t\treturn visitor.visitNumericFunctions(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class TimeFunctionsContext extends FunctionsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic timeOperators(): TimeOperatorsContext {\r\n\t\treturn this.getTypedRuleContext(TimeOperatorsContext, 0) as TimeOperatorsContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitTimeFunctions) {\r\n\t\t\treturn visitor.visitTimeFunctions(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class SetFunctionsContext extends FunctionsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic setOperators(): SetOperatorsContext {\r\n\t\treturn this.getTypedRuleContext(SetOperatorsContext, 0) as SetOperatorsContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitSetFunctions) {\r\n\t\t\treturn visitor.visitSetFunctions(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class AnalyticFunctionsContext extends FunctionsContext {\r\n\tconstructor(parser: Vtl, ctx: FunctionsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic anFunction(): AnFunctionContext {\r\n\t\treturn this.getTypedRuleContext(AnFunctionContext, 0) as AnFunctionContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitAnalyticFunctions) {\r\n\t\t\treturn visitor.visitAnalyticFunctions(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class DatasetClauseContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic renameClause(): RenameClauseContext {\r\n\t\treturn this.getTypedRuleContext(RenameClauseContext, 0) as RenameClauseContext;\r\n\t}\r\n\tpublic aggrClause(): AggrClauseContext {\r\n\t\treturn this.getTypedRuleContext(AggrClauseContext, 0) as AggrClauseContext;\r\n\t}\r\n\tpublic filterClause(): FilterClauseContext {\r\n\t\treturn this.getTypedRuleContext(FilterClauseContext, 0) as FilterClauseContext;\r\n\t}\r\n\tpublic calcClause(): CalcClauseContext {\r\n\t\treturn this.getTypedRuleContext(CalcClauseContext, 0) as CalcClauseContext;\r\n\t}\r\n\tpublic keepOrDropClause(): KeepOrDropClauseContext {\r\n\t\treturn this.getTypedRuleContext(KeepOrDropClauseContext, 0) as KeepOrDropClauseContext;\r\n\t}\r\n\tpublic pivotOrUnpivotClause(): PivotOrUnpivotClauseContext {\r\n\t\treturn this.getTypedRuleContext(PivotOrUnpivotClauseContext, 0) as PivotOrUnpivotClauseContext;\r\n\t}\r\n\tpublic subspaceClause(): SubspaceClauseContext {\r\n\t\treturn this.getTypedRuleContext(SubspaceClauseContext, 0) as SubspaceClauseContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_datasetClause;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitDatasetClause) {\r\n\t\t\treturn visitor.visitDatasetClause(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class RenameClauseContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic RENAME(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RENAME, 0);\r\n\t}\r\n\tpublic renameClauseItem_list(): RenameClauseItemContext[] {\r\n\t\treturn this.getTypedRuleContexts(RenameClauseItemContext) as RenameClauseItemContext[];\r\n\t}\r\n\tpublic renameClauseItem(i: number): RenameClauseItemContext {\r\n\t\treturn this.getTypedRuleContext(RenameClauseItemContext, i) as RenameClauseItemContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_renameClause;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitRenameClause) {\r\n\t\t\treturn visitor.visitRenameClause(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class AggrClauseContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic AGGREGATE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.AGGREGATE, 0);\r\n\t}\r\n\tpublic aggregateClause(): AggregateClauseContext {\r\n\t\treturn this.getTypedRuleContext(AggregateClauseContext, 0) as AggregateClauseContext;\r\n\t}\r\n\tpublic groupingClause(): GroupingClauseContext {\r\n\t\treturn this.getTypedRuleContext(GroupingClauseContext, 0) as GroupingClauseContext;\r\n\t}\r\n\tpublic havingClause(): HavingClauseContext {\r\n\t\treturn this.getTypedRuleContext(HavingClauseContext, 0) as HavingClauseContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_aggrClause;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitAggrClause) {\r\n\t\t\treturn visitor.visitAggrClause(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class FilterClauseContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic FILTER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.FILTER, 0);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_filterClause;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitFilterClause) {\r\n\t\t\treturn visitor.visitFilterClause(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class CalcClauseContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic CALC(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.CALC, 0);\r\n\t}\r\n\tpublic calcClauseItem_list(): CalcClauseItemContext[] {\r\n\t\treturn this.getTypedRuleContexts(CalcClauseItemContext) as CalcClauseItemContext[];\r\n\t}\r\n\tpublic calcClauseItem(i: number): CalcClauseItemContext {\r\n\t\treturn this.getTypedRuleContext(CalcClauseItemContext, i) as CalcClauseItemContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_calcClause;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitCalcClause) {\r\n\t\t\treturn visitor.visitCalcClause(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class KeepOrDropClauseContext extends ParserRuleContext {\r\n\tpublic _op!: Token;\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic componentID_list(): ComponentIDContext[] {\r\n\t\treturn this.getTypedRuleContexts(ComponentIDContext) as ComponentIDContext[];\r\n\t}\r\n\tpublic componentID(i: number): ComponentIDContext {\r\n\t\treturn this.getTypedRuleContext(ComponentIDContext, i) as ComponentIDContext;\r\n\t}\r\n\tpublic KEEP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.KEEP, 0);\r\n\t}\r\n\tpublic DROP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DROP, 0);\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_keepOrDropClause;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitKeepOrDropClause) {\r\n\t\t\treturn visitor.visitKeepOrDropClause(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class PivotOrUnpivotClauseContext extends ParserRuleContext {\r\n\tpublic _op!: Token;\r\n\tpublic _id_!: ComponentIDContext;\r\n\tpublic _mea!: ComponentIDContext;\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic COMMA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, 0);\r\n\t}\r\n\tpublic componentID_list(): ComponentIDContext[] {\r\n\t\treturn this.getTypedRuleContexts(ComponentIDContext) as ComponentIDContext[];\r\n\t}\r\n\tpublic componentID(i: number): ComponentIDContext {\r\n\t\treturn this.getTypedRuleContext(ComponentIDContext, i) as ComponentIDContext;\r\n\t}\r\n\tpublic PIVOT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.PIVOT, 0);\r\n\t}\r\n\tpublic UNPIVOT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.UNPIVOT, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_pivotOrUnpivotClause;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitPivotOrUnpivotClause) {\r\n\t\t\treturn visitor.visitPivotOrUnpivotClause(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class SubspaceClauseContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic SUBSPACE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.SUBSPACE, 0);\r\n\t}\r\n\tpublic subspaceClauseItem_list(): SubspaceClauseItemContext[] {\r\n\t\treturn this.getTypedRuleContexts(SubspaceClauseItemContext) as SubspaceClauseItemContext[];\r\n\t}\r\n\tpublic subspaceClauseItem(i: number): SubspaceClauseItemContext {\r\n\t\treturn this.getTypedRuleContext(SubspaceClauseItemContext, i) as SubspaceClauseItemContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_subspaceClause;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitSubspaceClause) {\r\n\t\t\treturn visitor.visitSubspaceClause(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class JoinOperatorsContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_joinOperators;\r\n\t}\r\n\tpublic copyFrom(ctx: JoinOperatorsContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class JoinExprContext extends JoinOperatorsContext {\r\n\tpublic _joinKeyword!: Token;\r\n\tconstructor(parser: Vtl, ctx: JoinOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic joinClause(): JoinClauseContext {\r\n\t\treturn this.getTypedRuleContext(JoinClauseContext, 0) as JoinClauseContext;\r\n\t}\r\n\tpublic joinBody(): JoinBodyContext {\r\n\t\treturn this.getTypedRuleContext(JoinBodyContext, 0) as JoinBodyContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic INNER_JOIN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.INNER_JOIN, 0);\r\n\t}\r\n\tpublic LEFT_JOIN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LEFT_JOIN, 0);\r\n\t}\r\n\tpublic joinClauseWithoutUsing(): JoinClauseWithoutUsingContext {\r\n\t\treturn this.getTypedRuleContext(JoinClauseWithoutUsingContext, 0) as JoinClauseWithoutUsingContext;\r\n\t}\r\n\tpublic FULL_JOIN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.FULL_JOIN, 0);\r\n\t}\r\n\tpublic CROSS_JOIN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.CROSS_JOIN, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitJoinExpr) {\r\n\t\t\treturn visitor.visitJoinExpr(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class DefOperatorsContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_defOperators;\r\n\t}\r\n\tpublic copyFrom(ctx: DefOperatorsContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class DefOperatorContext extends DefOperatorsContext {\r\n\tconstructor(parser: Vtl, ctx: DefOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic DEFINE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DEFINE, 0);\r\n\t}\r\n\tpublic OPERATOR_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.OPERATOR);\r\n\t}\r\n\tpublic OPERATOR(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.OPERATOR, i);\r\n\t}\r\n\tpublic operatorID(): OperatorIDContext {\r\n\t\treturn this.getTypedRuleContext(OperatorIDContext, 0) as OperatorIDContext;\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic IS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IS, 0);\r\n\t}\r\n\tpublic END(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.END, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic parameterItem_list(): ParameterItemContext[] {\r\n\t\treturn this.getTypedRuleContexts(ParameterItemContext) as ParameterItemContext[];\r\n\t}\r\n\tpublic parameterItem(i: number): ParameterItemContext {\r\n\t\treturn this.getTypedRuleContext(ParameterItemContext, i) as ParameterItemContext;\r\n\t}\r\n\tpublic RETURNS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RETURNS, 0);\r\n\t}\r\n\tpublic outputParameterType(): OutputParameterTypeContext {\r\n\t\treturn this.getTypedRuleContext(OutputParameterTypeContext, 0) as OutputParameterTypeContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitDefOperator) {\r\n\t\t\treturn visitor.visitDefOperator(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class DefHierarchicalContext extends DefOperatorsContext {\r\n\tconstructor(parser: Vtl, ctx: DefOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic DEFINE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DEFINE, 0);\r\n\t}\r\n\tpublic HIERARCHICAL_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.HIERARCHICAL);\r\n\t}\r\n\tpublic HIERARCHICAL(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.HIERARCHICAL, i);\r\n\t}\r\n\tpublic RULESET_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.RULESET);\r\n\t}\r\n\tpublic RULESET(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RULESET, i);\r\n\t}\r\n\tpublic rulesetID(): RulesetIDContext {\r\n\t\treturn this.getTypedRuleContext(RulesetIDContext, 0) as RulesetIDContext;\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic hierRuleSignature(): HierRuleSignatureContext {\r\n\t\treturn this.getTypedRuleContext(HierRuleSignatureContext, 0) as HierRuleSignatureContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic IS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IS, 0);\r\n\t}\r\n\tpublic ruleClauseHierarchical(): RuleClauseHierarchicalContext {\r\n\t\treturn this.getTypedRuleContext(RuleClauseHierarchicalContext, 0) as RuleClauseHierarchicalContext;\r\n\t}\r\n\tpublic END(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.END, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitDefHierarchical) {\r\n\t\t\treturn visitor.visitDefHierarchical(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class DefDatapointRulesetContext extends DefOperatorsContext {\r\n\tconstructor(parser: Vtl, ctx: DefOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic DEFINE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DEFINE, 0);\r\n\t}\r\n\tpublic DATAPOINT_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.DATAPOINT);\r\n\t}\r\n\tpublic DATAPOINT(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DATAPOINT, i);\r\n\t}\r\n\tpublic RULESET_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.RULESET);\r\n\t}\r\n\tpublic RULESET(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RULESET, i);\r\n\t}\r\n\tpublic rulesetID(): RulesetIDContext {\r\n\t\treturn this.getTypedRuleContext(RulesetIDContext, 0) as RulesetIDContext;\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic rulesetSignature(): RulesetSignatureContext {\r\n\t\treturn this.getTypedRuleContext(RulesetSignatureContext, 0) as RulesetSignatureContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic IS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IS, 0);\r\n\t}\r\n\tpublic ruleClauseDatapoint(): RuleClauseDatapointContext {\r\n\t\treturn this.getTypedRuleContext(RuleClauseDatapointContext, 0) as RuleClauseDatapointContext;\r\n\t}\r\n\tpublic END(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.END, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitDefDatapointRuleset) {\r\n\t\t\treturn visitor.visitDefDatapointRuleset(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class GenericOperatorsContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_genericOperators;\r\n\t}\r\n\tpublic copyFrom(ctx: GenericOperatorsContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class EvalAtomContext extends GenericOperatorsContext {\r\n\tconstructor(parser: Vtl, ctx: GenericOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic EVAL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.EVAL, 0);\r\n\t}\r\n\tpublic LPAREN_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.LPAREN);\r\n\t}\r\n\tpublic LPAREN(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, i);\r\n\t}\r\n\tpublic routineName(): RoutineNameContext {\r\n\t\treturn this.getTypedRuleContext(RoutineNameContext, 0) as RoutineNameContext;\r\n\t}\r\n\tpublic RPAREN_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.RPAREN);\r\n\t}\r\n\tpublic RPAREN(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, i);\r\n\t}\r\n\tpublic varID_list(): VarIDContext[] {\r\n\t\treturn this.getTypedRuleContexts(VarIDContext) as VarIDContext[];\r\n\t}\r\n\tpublic varID(i: number): VarIDContext {\r\n\t\treturn this.getTypedRuleContext(VarIDContext, i) as VarIDContext;\r\n\t}\r\n\tpublic constant_list(): ConstantContext[] {\r\n\t\treturn this.getTypedRuleContexts(ConstantContext) as ConstantContext[];\r\n\t}\r\n\tpublic constant(i: number): ConstantContext {\r\n\t\treturn this.getTypedRuleContext(ConstantContext, i) as ConstantContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\tpublic LANGUAGE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LANGUAGE, 0);\r\n\t}\r\n\tpublic STRING_CONSTANT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.STRING_CONSTANT, 0);\r\n\t}\r\n\tpublic RETURNS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RETURNS, 0);\r\n\t}\r\n\tpublic datasetType(): DatasetTypeContext {\r\n\t\treturn this.getTypedRuleContext(DatasetTypeContext, 0) as DatasetTypeContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitEvalAtom) {\r\n\t\t\treturn visitor.visitEvalAtom(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class CastExprDatasetContext extends GenericOperatorsContext {\r\n\tconstructor(parser: Vtl, ctx: GenericOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic CAST(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.CAST, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic basicScalarType(): BasicScalarTypeContext {\r\n\t\treturn this.getTypedRuleContext(BasicScalarTypeContext, 0) as BasicScalarTypeContext;\r\n\t}\r\n\tpublic valueDomainName(): ValueDomainNameContext {\r\n\t\treturn this.getTypedRuleContext(ValueDomainNameContext, 0) as ValueDomainNameContext;\r\n\t}\r\n\tpublic STRING_CONSTANT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.STRING_CONSTANT, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitCastExprDataset) {\r\n\t\t\treturn visitor.visitCastExprDataset(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class CallDatasetContext extends GenericOperatorsContext {\r\n\tconstructor(parser: Vtl, ctx: GenericOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic operatorID(): OperatorIDContext {\r\n\t\treturn this.getTypedRuleContext(OperatorIDContext, 0) as OperatorIDContext;\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic parameter_list(): ParameterContext[] {\r\n\t\treturn this.getTypedRuleContexts(ParameterContext) as ParameterContext[];\r\n\t}\r\n\tpublic parameter(i: number): ParameterContext {\r\n\t\treturn this.getTypedRuleContext(ParameterContext, i) as ParameterContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitCallDataset) {\r\n\t\t\treturn visitor.visitCallDataset(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class GenericOperatorsComponentContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_genericOperatorsComponent;\r\n\t}\r\n\tpublic copyFrom(ctx: GenericOperatorsComponentContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class EvalAtomComponentContext extends GenericOperatorsComponentContext {\r\n\tconstructor(parser: Vtl, ctx: GenericOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic EVAL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.EVAL, 0);\r\n\t}\r\n\tpublic LPAREN_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.LPAREN);\r\n\t}\r\n\tpublic LPAREN(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, i);\r\n\t}\r\n\tpublic routineName(): RoutineNameContext {\r\n\t\treturn this.getTypedRuleContext(RoutineNameContext, 0) as RoutineNameContext;\r\n\t}\r\n\tpublic RPAREN_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.RPAREN);\r\n\t}\r\n\tpublic RPAREN(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, i);\r\n\t}\r\n\tpublic componentID_list(): ComponentIDContext[] {\r\n\t\treturn this.getTypedRuleContexts(ComponentIDContext) as ComponentIDContext[];\r\n\t}\r\n\tpublic componentID(i: number): ComponentIDContext {\r\n\t\treturn this.getTypedRuleContext(ComponentIDContext, i) as ComponentIDContext;\r\n\t}\r\n\tpublic constant_list(): ConstantContext[] {\r\n\t\treturn this.getTypedRuleContexts(ConstantContext) as ConstantContext[];\r\n\t}\r\n\tpublic constant(i: number): ConstantContext {\r\n\t\treturn this.getTypedRuleContext(ConstantContext, i) as ConstantContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\tpublic LANGUAGE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LANGUAGE, 0);\r\n\t}\r\n\tpublic STRING_CONSTANT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.STRING_CONSTANT, 0);\r\n\t}\r\n\tpublic RETURNS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RETURNS, 0);\r\n\t}\r\n\tpublic outputParameterTypeComponent(): OutputParameterTypeComponentContext {\r\n\t\treturn this.getTypedRuleContext(OutputParameterTypeComponentContext, 0) as OutputParameterTypeComponentContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitEvalAtomComponent) {\r\n\t\t\treturn visitor.visitEvalAtomComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class CastExprComponentContext extends GenericOperatorsComponentContext {\r\n\tconstructor(parser: Vtl, ctx: GenericOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic CAST(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.CAST, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic basicScalarType(): BasicScalarTypeContext {\r\n\t\treturn this.getTypedRuleContext(BasicScalarTypeContext, 0) as BasicScalarTypeContext;\r\n\t}\r\n\tpublic valueDomainName(): ValueDomainNameContext {\r\n\t\treturn this.getTypedRuleContext(ValueDomainNameContext, 0) as ValueDomainNameContext;\r\n\t}\r\n\tpublic STRING_CONSTANT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.STRING_CONSTANT, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitCastExprComponent) {\r\n\t\t\treturn visitor.visitCastExprComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class CallComponentContext extends GenericOperatorsComponentContext {\r\n\tconstructor(parser: Vtl, ctx: GenericOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic operatorID(): OperatorIDContext {\r\n\t\treturn this.getTypedRuleContext(OperatorIDContext, 0) as OperatorIDContext;\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic parameterComponent_list(): ParameterComponentContext[] {\r\n\t\treturn this.getTypedRuleContexts(ParameterComponentContext) as ParameterComponentContext[];\r\n\t}\r\n\tpublic parameterComponent(i: number): ParameterComponentContext {\r\n\t\treturn this.getTypedRuleContext(ParameterComponentContext, i) as ParameterComponentContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitCallComponent) {\r\n\t\t\treturn visitor.visitCallComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ParameterComponentContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic componentID(): ComponentIDContext {\r\n\t\treturn this.getTypedRuleContext(ComponentIDContext, 0) as ComponentIDContext;\r\n\t}\r\n\tpublic constant(): ConstantContext {\r\n\t\treturn this.getTypedRuleContext(ConstantContext, 0) as ConstantContext;\r\n\t}\r\n\tpublic OPTIONAL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.OPTIONAL, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_parameterComponent;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitParameterComponent) {\r\n\t\t\treturn visitor.visitParameterComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ParameterContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic varID(): VarIDContext {\r\n\t\treturn this.getTypedRuleContext(VarIDContext, 0) as VarIDContext;\r\n\t}\r\n\tpublic constant(): ConstantContext {\r\n\t\treturn this.getTypedRuleContext(ConstantContext, 0) as ConstantContext;\r\n\t}\r\n\tpublic OPTIONAL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.OPTIONAL, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_parameter;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitParameter) {\r\n\t\t\treturn visitor.visitParameter(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class StringOperatorsContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_stringOperators;\r\n\t}\r\n\tpublic copyFrom(ctx: StringOperatorsContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class InstrAtomContext extends StringOperatorsContext {\r\n\tpublic _pattern!: ExprContext;\r\n\tpublic _startParameter!: OptionalExprContext;\r\n\tpublic _occurrenceParameter!: OptionalExprContext;\r\n\tconstructor(parser: Vtl, ctx: StringOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic INSTR(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.INSTR, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic expr_list(): ExprContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprContext) as ExprContext[];\r\n\t}\r\n\tpublic expr(i: number): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, i) as ExprContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic optionalExpr_list(): OptionalExprContext[] {\r\n\t\treturn this.getTypedRuleContexts(OptionalExprContext) as OptionalExprContext[];\r\n\t}\r\n\tpublic optionalExpr(i: number): OptionalExprContext {\r\n\t\treturn this.getTypedRuleContext(OptionalExprContext, i) as OptionalExprContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitInstrAtom) {\r\n\t\t\treturn visitor.visitInstrAtom(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class UnaryStringFunctionContext extends StringOperatorsContext {\r\n\tpublic _op!: Token;\r\n\tconstructor(parser: Vtl, ctx: StringOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic TRIM(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.TRIM, 0);\r\n\t}\r\n\tpublic LTRIM(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LTRIM, 0);\r\n\t}\r\n\tpublic RTRIM(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RTRIM, 0);\r\n\t}\r\n\tpublic UCASE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.UCASE, 0);\r\n\t}\r\n\tpublic LCASE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LCASE, 0);\r\n\t}\r\n\tpublic LEN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LEN, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitUnaryStringFunction) {\r\n\t\t\treturn visitor.visitUnaryStringFunction(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class SubstrAtomContext extends StringOperatorsContext {\r\n\tpublic _startParameter!: OptionalExprContext;\r\n\tpublic _endParameter!: OptionalExprContext;\r\n\tconstructor(parser: Vtl, ctx: StringOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic SUBSTR(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.SUBSTR, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\tpublic optionalExpr_list(): OptionalExprContext[] {\r\n\t\treturn this.getTypedRuleContexts(OptionalExprContext) as OptionalExprContext[];\r\n\t}\r\n\tpublic optionalExpr(i: number): OptionalExprContext {\r\n\t\treturn this.getTypedRuleContext(OptionalExprContext, i) as OptionalExprContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitSubstrAtom) {\r\n\t\t\treturn visitor.visitSubstrAtom(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ReplaceAtomContext extends StringOperatorsContext {\r\n\tpublic _param!: ExprContext;\r\n\tconstructor(parser: Vtl, ctx: StringOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic REPLACE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.REPLACE, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic expr_list(): ExprContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprContext) as ExprContext[];\r\n\t}\r\n\tpublic expr(i: number): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, i) as ExprContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic optionalExpr(): OptionalExprContext {\r\n\t\treturn this.getTypedRuleContext(OptionalExprContext, 0) as OptionalExprContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitReplaceAtom) {\r\n\t\t\treturn visitor.visitReplaceAtom(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class StringOperatorsComponentContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_stringOperatorsComponent;\r\n\t}\r\n\tpublic copyFrom(ctx: StringOperatorsComponentContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class ReplaceAtomComponentContext extends StringOperatorsComponentContext {\r\n\tpublic _param!: ExprComponentContext;\r\n\tconstructor(parser: Vtl, ctx: StringOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic REPLACE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.REPLACE, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic exprComponent_list(): ExprComponentContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprComponentContext) as ExprComponentContext[];\r\n\t}\r\n\tpublic exprComponent(i: number): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, i) as ExprComponentContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic optionalExprComponent(): OptionalExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(OptionalExprComponentContext, 0) as OptionalExprComponentContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitReplaceAtomComponent) {\r\n\t\t\treturn visitor.visitReplaceAtomComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class UnaryStringFunctionComponentContext extends StringOperatorsComponentContext {\r\n\tpublic _op!: Token;\r\n\tconstructor(parser: Vtl, ctx: StringOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic TRIM(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.TRIM, 0);\r\n\t}\r\n\tpublic LTRIM(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LTRIM, 0);\r\n\t}\r\n\tpublic RTRIM(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RTRIM, 0);\r\n\t}\r\n\tpublic UCASE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.UCASE, 0);\r\n\t}\r\n\tpublic LCASE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LCASE, 0);\r\n\t}\r\n\tpublic LEN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LEN, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitUnaryStringFunctionComponent) {\r\n\t\t\treturn visitor.visitUnaryStringFunctionComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class SubstrAtomComponentContext extends StringOperatorsComponentContext {\r\n\tpublic _startParameter!: OptionalExprComponentContext;\r\n\tpublic _endParameter!: OptionalExprComponentContext;\r\n\tconstructor(parser: Vtl, ctx: StringOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic SUBSTR(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.SUBSTR, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\tpublic optionalExprComponent_list(): OptionalExprComponentContext[] {\r\n\t\treturn this.getTypedRuleContexts(OptionalExprComponentContext) as OptionalExprComponentContext[];\r\n\t}\r\n\tpublic optionalExprComponent(i: number): OptionalExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(OptionalExprComponentContext, i) as OptionalExprComponentContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitSubstrAtomComponent) {\r\n\t\t\treturn visitor.visitSubstrAtomComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class InstrAtomComponentContext extends StringOperatorsComponentContext {\r\n\tpublic _pattern!: ExprComponentContext;\r\n\tpublic _startParameter!: OptionalExprComponentContext;\r\n\tpublic _occurrenceParameter!: OptionalExprComponentContext;\r\n\tconstructor(parser: Vtl, ctx: StringOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic INSTR(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.INSTR, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic exprComponent_list(): ExprComponentContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprComponentContext) as ExprComponentContext[];\r\n\t}\r\n\tpublic exprComponent(i: number): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, i) as ExprComponentContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic optionalExprComponent_list(): OptionalExprComponentContext[] {\r\n\t\treturn this.getTypedRuleContexts(OptionalExprComponentContext) as OptionalExprComponentContext[];\r\n\t}\r\n\tpublic optionalExprComponent(i: number): OptionalExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(OptionalExprComponentContext, i) as OptionalExprComponentContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitInstrAtomComponent) {\r\n\t\t\treturn visitor.visitInstrAtomComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class NumericOperatorsContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_numericOperators;\r\n\t}\r\n\tpublic copyFrom(ctx: NumericOperatorsContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class UnaryNumericContext extends NumericOperatorsContext {\r\n\tpublic _op!: Token;\r\n\tconstructor(parser: Vtl, ctx: NumericOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic CEIL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.CEIL, 0);\r\n\t}\r\n\tpublic FLOOR(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.FLOOR, 0);\r\n\t}\r\n\tpublic ABS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ABS, 0);\r\n\t}\r\n\tpublic EXP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.EXP, 0);\r\n\t}\r\n\tpublic LN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LN, 0);\r\n\t}\r\n\tpublic SQRT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.SQRT, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitUnaryNumeric) {\r\n\t\t\treturn visitor.visitUnaryNumeric(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class UnaryWithOptionalNumericContext extends NumericOperatorsContext {\r\n\tpublic _op!: Token;\r\n\tconstructor(parser: Vtl, ctx: NumericOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic ROUND(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ROUND, 0);\r\n\t}\r\n\tpublic TRUNC(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.TRUNC, 0);\r\n\t}\r\n\tpublic COMMA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, 0);\r\n\t}\r\n\tpublic optionalExpr(): OptionalExprContext {\r\n\t\treturn this.getTypedRuleContext(OptionalExprContext, 0) as OptionalExprContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitUnaryWithOptionalNumeric) {\r\n\t\t\treturn visitor.visitUnaryWithOptionalNumeric(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class BinaryNumericContext extends NumericOperatorsContext {\r\n\tpublic _op!: Token;\r\n\tpublic _left!: ExprContext;\r\n\tpublic _right!: ExprContext;\r\n\tconstructor(parser: Vtl, ctx: NumericOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic COMMA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic expr_list(): ExprContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprContext) as ExprContext[];\r\n\t}\r\n\tpublic expr(i: number): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, i) as ExprContext;\r\n\t}\r\n\tpublic MOD(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MOD, 0);\r\n\t}\r\n\tpublic POWER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.POWER, 0);\r\n\t}\r\n\tpublic LOG(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LOG, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitBinaryNumeric) {\r\n\t\t\treturn visitor.visitBinaryNumeric(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class NumericOperatorsComponentContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_numericOperatorsComponent;\r\n\t}\r\n\tpublic copyFrom(ctx: NumericOperatorsComponentContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class UnaryNumericComponentContext extends NumericOperatorsComponentContext {\r\n\tpublic _op!: Token;\r\n\tconstructor(parser: Vtl, ctx: NumericOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic CEIL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.CEIL, 0);\r\n\t}\r\n\tpublic FLOOR(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.FLOOR, 0);\r\n\t}\r\n\tpublic ABS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ABS, 0);\r\n\t}\r\n\tpublic EXP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.EXP, 0);\r\n\t}\r\n\tpublic LN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LN, 0);\r\n\t}\r\n\tpublic SQRT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.SQRT, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitUnaryNumericComponent) {\r\n\t\t\treturn visitor.visitUnaryNumericComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class BinaryNumericComponentContext extends NumericOperatorsComponentContext {\r\n\tpublic _op!: Token;\r\n\tpublic _left!: ExprComponentContext;\r\n\tpublic _right!: ExprComponentContext;\r\n\tconstructor(parser: Vtl, ctx: NumericOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic COMMA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic exprComponent_list(): ExprComponentContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprComponentContext) as ExprComponentContext[];\r\n\t}\r\n\tpublic exprComponent(i: number): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, i) as ExprComponentContext;\r\n\t}\r\n\tpublic MOD(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MOD, 0);\r\n\t}\r\n\tpublic POWER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.POWER, 0);\r\n\t}\r\n\tpublic LOG(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LOG, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitBinaryNumericComponent) {\r\n\t\t\treturn visitor.visitBinaryNumericComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class UnaryWithOptionalNumericComponentContext extends NumericOperatorsComponentContext {\r\n\tpublic _op!: Token;\r\n\tconstructor(parser: Vtl, ctx: NumericOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic ROUND(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ROUND, 0);\r\n\t}\r\n\tpublic TRUNC(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.TRUNC, 0);\r\n\t}\r\n\tpublic COMMA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, 0);\r\n\t}\r\n\tpublic optionalExprComponent(): OptionalExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(OptionalExprComponentContext, 0) as OptionalExprComponentContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitUnaryWithOptionalNumericComponent) {\r\n\t\t\treturn visitor.visitUnaryWithOptionalNumericComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ComparisonOperatorsContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_comparisonOperators;\r\n\t}\r\n\tpublic copyFrom(ctx: ComparisonOperatorsContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class BetweenAtomContext extends ComparisonOperatorsContext {\r\n\tpublic _op!: ExprContext;\r\n\tpublic _from_!: ExprContext;\r\n\tpublic _to_!: ExprContext;\r\n\tconstructor(parser: Vtl, ctx: ComparisonOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic BETWEEN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.BETWEEN, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic expr_list(): ExprContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprContext) as ExprContext[];\r\n\t}\r\n\tpublic expr(i: number): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, i) as ExprContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitBetweenAtom) {\r\n\t\t\treturn visitor.visitBetweenAtom(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class CharsetMatchAtomContext extends ComparisonOperatorsContext {\r\n\tpublic _op!: ExprContext;\r\n\tpublic _pattern!: ExprContext;\r\n\tconstructor(parser: Vtl, ctx: ComparisonOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic CHARSET_MATCH(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.CHARSET_MATCH, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic COMMA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic expr_list(): ExprContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprContext) as ExprContext[];\r\n\t}\r\n\tpublic expr(i: number): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, i) as ExprContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitCharsetMatchAtom) {\r\n\t\t\treturn visitor.visitCharsetMatchAtom(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class IsNullAtomContext extends ComparisonOperatorsContext {\r\n\tconstructor(parser: Vtl, ctx: ComparisonOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic ISNULL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ISNULL, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitIsNullAtom) {\r\n\t\t\treturn visitor.visitIsNullAtom(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ExistInAtomContext extends ComparisonOperatorsContext {\r\n\tpublic _left!: ExprContext;\r\n\tpublic _right!: ExprContext;\r\n\tconstructor(parser: Vtl, ctx: ComparisonOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic EXISTS_IN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.EXISTS_IN, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic expr_list(): ExprContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprContext) as ExprContext[];\r\n\t}\r\n\tpublic expr(i: number): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, i) as ExprContext;\r\n\t}\r\n\tpublic retainType(): RetainTypeContext {\r\n\t\treturn this.getTypedRuleContext(RetainTypeContext, 0) as RetainTypeContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitExistInAtom) {\r\n\t\t\treturn visitor.visitExistInAtom(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ComparisonOperatorsComponentContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_comparisonOperatorsComponent;\r\n\t}\r\n\tpublic copyFrom(ctx: ComparisonOperatorsComponentContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class IsNullAtomComponentContext extends ComparisonOperatorsComponentContext {\r\n\tconstructor(parser: Vtl, ctx: ComparisonOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic ISNULL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ISNULL, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitIsNullAtomComponent) {\r\n\t\t\treturn visitor.visitIsNullAtomComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class CharsetMatchAtomComponentContext extends ComparisonOperatorsComponentContext {\r\n\tpublic _op!: ExprComponentContext;\r\n\tpublic _pattern!: ExprComponentContext;\r\n\tconstructor(parser: Vtl, ctx: ComparisonOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic CHARSET_MATCH(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.CHARSET_MATCH, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic COMMA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic exprComponent_list(): ExprComponentContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprComponentContext) as ExprComponentContext[];\r\n\t}\r\n\tpublic exprComponent(i: number): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, i) as ExprComponentContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitCharsetMatchAtomComponent) {\r\n\t\t\treturn visitor.visitCharsetMatchAtomComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class BetweenAtomComponentContext extends ComparisonOperatorsComponentContext {\r\n\tpublic _op!: ExprComponentContext;\r\n\tpublic _from_!: ExprComponentContext;\r\n\tpublic _to_!: ExprComponentContext;\r\n\tconstructor(parser: Vtl, ctx: ComparisonOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic BETWEEN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.BETWEEN, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic exprComponent_list(): ExprComponentContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprComponentContext) as ExprComponentContext[];\r\n\t}\r\n\tpublic exprComponent(i: number): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, i) as ExprComponentContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitBetweenAtomComponent) {\r\n\t\t\treturn visitor.visitBetweenAtomComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class TimeOperatorsContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_timeOperators;\r\n\t}\r\n\tpublic copyFrom(ctx: TimeOperatorsContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class FlowAtomContext extends TimeOperatorsContext {\r\n\tpublic _op!: Token;\r\n\tconstructor(parser: Vtl, ctx: TimeOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic FLOW_TO_STOCK(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.FLOW_TO_STOCK, 0);\r\n\t}\r\n\tpublic STOCK_TO_FLOW(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.STOCK_TO_FLOW, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitFlowAtom) {\r\n\t\t\treturn visitor.visitFlowAtom(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class TimeShiftAtomContext extends TimeOperatorsContext {\r\n\tconstructor(parser: Vtl, ctx: TimeOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic TIMESHIFT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.TIMESHIFT, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic COMMA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, 0);\r\n\t}\r\n\tpublic signedInteger(): SignedIntegerContext {\r\n\t\treturn this.getTypedRuleContext(SignedIntegerContext, 0) as SignedIntegerContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitTimeShiftAtom) {\r\n\t\t\treturn visitor.visitTimeShiftAtom(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class TimeAggAtomContext extends TimeOperatorsContext {\r\n\tpublic _periodIndTo!: Token;\r\n\tpublic _periodIndFrom!: Token;\r\n\tpublic _op!: OptionalExprContext;\r\n\tpublic _delim!: Token;\r\n\tconstructor(parser: Vtl, ctx: TimeOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic TIME_AGG(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.TIME_AGG, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic TIME_UNIT_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.TIME_UNIT);\r\n\t}\r\n\tpublic TIME_UNIT(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.TIME_UNIT, i);\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\tpublic optionalExpr(): OptionalExprContext {\r\n\t\treturn this.getTypedRuleContext(OptionalExprContext, 0) as OptionalExprContext;\r\n\t}\r\n\tpublic OPTIONAL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.OPTIONAL, 0);\r\n\t}\r\n\tpublic FIRST(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.FIRST, 0);\r\n\t}\r\n\tpublic LAST(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LAST, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitTimeAggAtom) {\r\n\t\t\treturn visitor.visitTimeAggAtom(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class CurrentDateAtomContext extends TimeOperatorsContext {\r\n\tconstructor(parser: Vtl, ctx: TimeOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic CURRENT_DATE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.CURRENT_DATE, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitCurrentDateAtom) {\r\n\t\t\treturn visitor.visitCurrentDateAtom(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class PeriodAtomContext extends TimeOperatorsContext {\r\n\tconstructor(parser: Vtl, ctx: TimeOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic PERIOD_INDICATOR(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.PERIOD_INDICATOR, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitPeriodAtom) {\r\n\t\t\treturn visitor.visitPeriodAtom(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class FillTimeAtomContext extends TimeOperatorsContext {\r\n\tpublic _op!: Token;\r\n\tconstructor(parser: Vtl, ctx: TimeOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic FILL_TIME_SERIES(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.FILL_TIME_SERIES, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic COMMA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, 0);\r\n\t}\r\n\tpublic SINGLE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.SINGLE, 0);\r\n\t}\r\n\tpublic ALL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ALL, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitFillTimeAtom) {\r\n\t\t\treturn visitor.visitFillTimeAtom(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class TimeOperatorsComponentContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_timeOperatorsComponent;\r\n\t}\r\n\tpublic copyFrom(ctx: TimeOperatorsComponentContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class PeriodAtomComponentContext extends TimeOperatorsComponentContext {\r\n\tconstructor(parser: Vtl, ctx: TimeOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic PERIOD_INDICATOR(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.PERIOD_INDICATOR, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitPeriodAtomComponent) {\r\n\t\t\treturn visitor.visitPeriodAtomComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class TimeShiftAtomComponentContext extends TimeOperatorsComponentContext {\r\n\tconstructor(parser: Vtl, ctx: TimeOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic TIMESHIFT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.TIMESHIFT, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic COMMA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, 0);\r\n\t}\r\n\tpublic signedInteger(): SignedIntegerContext {\r\n\t\treturn this.getTypedRuleContext(SignedIntegerContext, 0) as SignedIntegerContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitTimeShiftAtomComponent) {\r\n\t\t\treturn visitor.visitTimeShiftAtomComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class TimeAggAtomComponentContext extends TimeOperatorsComponentContext {\r\n\tpublic _periodIndTo!: Token;\r\n\tpublic _periodIndFrom!: Token;\r\n\tpublic _op!: OptionalExprComponentContext;\r\n\tpublic _delim!: Token;\r\n\tconstructor(parser: Vtl, ctx: TimeOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic TIME_AGG(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.TIME_AGG, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic TIME_UNIT_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.TIME_UNIT);\r\n\t}\r\n\tpublic TIME_UNIT(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.TIME_UNIT, i);\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\tpublic optionalExprComponent(): OptionalExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(OptionalExprComponentContext, 0) as OptionalExprComponentContext;\r\n\t}\r\n\tpublic OPTIONAL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.OPTIONAL, 0);\r\n\t}\r\n\tpublic FIRST(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.FIRST, 0);\r\n\t}\r\n\tpublic LAST(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LAST, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitTimeAggAtomComponent) {\r\n\t\t\treturn visitor.visitTimeAggAtomComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class CurrentDateAtomComponentContext extends TimeOperatorsComponentContext {\r\n\tconstructor(parser: Vtl, ctx: TimeOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic CURRENT_DATE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.CURRENT_DATE, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitCurrentDateAtomComponent) {\r\n\t\t\treturn visitor.visitCurrentDateAtomComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class FlowAtomComponentContext extends TimeOperatorsComponentContext {\r\n\tpublic _op!: Token;\r\n\tconstructor(parser: Vtl, ctx: TimeOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic FLOW_TO_STOCK(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.FLOW_TO_STOCK, 0);\r\n\t}\r\n\tpublic STOCK_TO_FLOW(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.STOCK_TO_FLOW, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitFlowAtomComponent) {\r\n\t\t\treturn visitor.visitFlowAtomComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class FillTimeAtomComponentContext extends TimeOperatorsComponentContext {\r\n\tconstructor(parser: Vtl, ctx: TimeOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic FILL_TIME_SERIES(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.FILL_TIME_SERIES, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic COMMA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, 0);\r\n\t}\r\n\tpublic SINGLE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.SINGLE, 0);\r\n\t}\r\n\tpublic ALL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ALL, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitFillTimeAtomComponent) {\r\n\t\t\treturn visitor.visitFillTimeAtomComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class SetOperatorsContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_setOperators;\r\n\t}\r\n\tpublic copyFrom(ctx: SetOperatorsContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class SetOrSYmDiffAtomContext extends SetOperatorsContext {\r\n\tpublic _op!: Token;\r\n\tpublic _left!: ExprContext;\r\n\tpublic _right!: ExprContext;\r\n\tconstructor(parser: Vtl, ctx: SetOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic COMMA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic expr_list(): ExprContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprContext) as ExprContext[];\r\n\t}\r\n\tpublic expr(i: number): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, i) as ExprContext;\r\n\t}\r\n\tpublic SETDIFF(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.SETDIFF, 0);\r\n\t}\r\n\tpublic SYMDIFF(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.SYMDIFF, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitSetOrSYmDiffAtom) {\r\n\t\t\treturn visitor.visitSetOrSYmDiffAtom(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class IntersectAtomContext extends SetOperatorsContext {\r\n\tpublic _left!: ExprContext;\r\n\tconstructor(parser: Vtl, ctx: SetOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic INTERSECT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.INTERSECT, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic expr_list(): ExprContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprContext) as ExprContext[];\r\n\t}\r\n\tpublic expr(i: number): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, i) as ExprContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitIntersectAtom) {\r\n\t\t\treturn visitor.visitIntersectAtom(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class UnionAtomContext extends SetOperatorsContext {\r\n\tpublic _left!: ExprContext;\r\n\tconstructor(parser: Vtl, ctx: SetOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic UNION(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.UNION, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic expr_list(): ExprContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprContext) as ExprContext[];\r\n\t}\r\n\tpublic expr(i: number): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, i) as ExprContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitUnionAtom) {\r\n\t\t\treturn visitor.visitUnionAtom(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class HierarchyOperatorsContext extends ParserRuleContext {\r\n\tpublic _op!: ExprContext;\r\n\tpublic _hrName!: Token;\r\n\tpublic _ruleComponent!: ComponentIDContext;\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic HIERARCHY(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.HIERARCHY, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic COMMA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic IDENTIFIER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IDENTIFIER, 0);\r\n\t}\r\n\tpublic conditionClause(): ConditionClauseContext {\r\n\t\treturn this.getTypedRuleContext(ConditionClauseContext, 0) as ConditionClauseContext;\r\n\t}\r\n\tpublic RULE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RULE, 0);\r\n\t}\r\n\tpublic validationMode(): ValidationModeContext {\r\n\t\treturn this.getTypedRuleContext(ValidationModeContext, 0) as ValidationModeContext;\r\n\t}\r\n\tpublic inputModeHierarchy(): InputModeHierarchyContext {\r\n\t\treturn this.getTypedRuleContext(InputModeHierarchyContext, 0) as InputModeHierarchyContext;\r\n\t}\r\n\tpublic outputModeHierarchy(): OutputModeHierarchyContext {\r\n\t\treturn this.getTypedRuleContext(OutputModeHierarchyContext, 0) as OutputModeHierarchyContext;\r\n\t}\r\n\tpublic componentID(): ComponentIDContext {\r\n\t\treturn this.getTypedRuleContext(ComponentIDContext, 0) as ComponentIDContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_hierarchyOperators;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitHierarchyOperators) {\r\n\t\t\treturn visitor.visitHierarchyOperators(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ValidationOperatorsContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_validationOperators;\r\n\t}\r\n\tpublic copyFrom(ctx: ValidationOperatorsContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class ValidateHRrulesetContext extends ValidationOperatorsContext {\r\n\tpublic _op!: ExprContext;\r\n\tpublic _hrName!: Token;\r\n\tconstructor(parser: Vtl, ctx: ValidationOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic CHECK_HIERARCHY(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.CHECK_HIERARCHY, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic COMMA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic IDENTIFIER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IDENTIFIER, 0);\r\n\t}\r\n\tpublic conditionClause(): ConditionClauseContext {\r\n\t\treturn this.getTypedRuleContext(ConditionClauseContext, 0) as ConditionClauseContext;\r\n\t}\r\n\tpublic RULE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RULE, 0);\r\n\t}\r\n\tpublic componentID(): ComponentIDContext {\r\n\t\treturn this.getTypedRuleContext(ComponentIDContext, 0) as ComponentIDContext;\r\n\t}\r\n\tpublic validationMode(): ValidationModeContext {\r\n\t\treturn this.getTypedRuleContext(ValidationModeContext, 0) as ValidationModeContext;\r\n\t}\r\n\tpublic inputMode(): InputModeContext {\r\n\t\treturn this.getTypedRuleContext(InputModeContext, 0) as InputModeContext;\r\n\t}\r\n\tpublic validationOutput(): ValidationOutputContext {\r\n\t\treturn this.getTypedRuleContext(ValidationOutputContext, 0) as ValidationOutputContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitValidateHRruleset) {\r\n\t\t\treturn visitor.visitValidateHRruleset(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ValidateDPrulesetContext extends ValidationOperatorsContext {\r\n\tpublic _op!: ExprContext;\r\n\tpublic _dpName!: Token;\r\n\tconstructor(parser: Vtl, ctx: ValidationOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic CHECK_DATAPOINT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.CHECK_DATAPOINT, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic IDENTIFIER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IDENTIFIER, 0);\r\n\t}\r\n\tpublic COMPONENTS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMPONENTS, 0);\r\n\t}\r\n\tpublic componentID_list(): ComponentIDContext[] {\r\n\t\treturn this.getTypedRuleContexts(ComponentIDContext) as ComponentIDContext[];\r\n\t}\r\n\tpublic componentID(i: number): ComponentIDContext {\r\n\t\treturn this.getTypedRuleContext(ComponentIDContext, i) as ComponentIDContext;\r\n\t}\r\n\tpublic validationOutput(): ValidationOutputContext {\r\n\t\treturn this.getTypedRuleContext(ValidationOutputContext, 0) as ValidationOutputContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitValidateDPruleset) {\r\n\t\t\treturn visitor.visitValidateDPruleset(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ValidationSimpleContext extends ValidationOperatorsContext {\r\n\tpublic _op!: ExprContext;\r\n\tpublic _codeErr!: ErCodeContext;\r\n\tpublic _levelCode!: ErLevelContext;\r\n\tpublic _output!: Token;\r\n\tconstructor(parser: Vtl, ctx: ValidationOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic CHECK(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.CHECK, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic imbalanceExpr(): ImbalanceExprContext {\r\n\t\treturn this.getTypedRuleContext(ImbalanceExprContext, 0) as ImbalanceExprContext;\r\n\t}\r\n\tpublic erCode(): ErCodeContext {\r\n\t\treturn this.getTypedRuleContext(ErCodeContext, 0) as ErCodeContext;\r\n\t}\r\n\tpublic erLevel(): ErLevelContext {\r\n\t\treturn this.getTypedRuleContext(ErLevelContext, 0) as ErLevelContext;\r\n\t}\r\n\tpublic INVALID(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.INVALID, 0);\r\n\t}\r\n\tpublic ALL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ALL, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitValidationSimple) {\r\n\t\t\treturn visitor.visitValidationSimple(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ConditionalOperatorsContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_conditionalOperators;\r\n\t}\r\n\tpublic copyFrom(ctx: ConditionalOperatorsContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class NvlAtomContext extends ConditionalOperatorsContext {\r\n\tpublic _left!: ExprContext;\r\n\tpublic _right!: ExprContext;\r\n\tconstructor(parser: Vtl, ctx: ConditionalOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic NVL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.NVL, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic COMMA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic expr_list(): ExprContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprContext) as ExprContext[];\r\n\t}\r\n\tpublic expr(i: number): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, i) as ExprContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitNvlAtom) {\r\n\t\t\treturn visitor.visitNvlAtom(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ConditionalOperatorsComponentContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_conditionalOperatorsComponent;\r\n\t}\r\n\tpublic copyFrom(ctx: ConditionalOperatorsComponentContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class NvlAtomComponentContext extends ConditionalOperatorsComponentContext {\r\n\tpublic _left!: ExprComponentContext;\r\n\tpublic _right!: ExprComponentContext;\r\n\tconstructor(parser: Vtl, ctx: ConditionalOperatorsComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic NVL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.NVL, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic COMMA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic exprComponent_list(): ExprComponentContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprComponentContext) as ExprComponentContext[];\r\n\t}\r\n\tpublic exprComponent(i: number): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, i) as ExprComponentContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitNvlAtomComponent) {\r\n\t\t\treturn visitor.visitNvlAtomComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class AggrOperatorsContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_aggrOperators;\r\n\t}\r\n\tpublic copyFrom(ctx: AggrOperatorsContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class AggrCompContext extends AggrOperatorsContext {\r\n\tpublic _op!: Token;\r\n\tconstructor(parser: Vtl, ctx: AggrOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic SUM(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.SUM, 0);\r\n\t}\r\n\tpublic AVG(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.AVG, 0);\r\n\t}\r\n\tpublic COUNT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COUNT, 0);\r\n\t}\r\n\tpublic MEDIAN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MEDIAN, 0);\r\n\t}\r\n\tpublic MIN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MIN, 0);\r\n\t}\r\n\tpublic MAX(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MAX, 0);\r\n\t}\r\n\tpublic STDDEV_POP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.STDDEV_POP, 0);\r\n\t}\r\n\tpublic STDDEV_SAMP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.STDDEV_SAMP, 0);\r\n\t}\r\n\tpublic VAR_POP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.VAR_POP, 0);\r\n\t}\r\n\tpublic VAR_SAMP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.VAR_SAMP, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitAggrComp) {\r\n\t\t\treturn visitor.visitAggrComp(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class CountAggrCompContext extends AggrOperatorsContext {\r\n\tconstructor(parser: Vtl, ctx: AggrOperatorsContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic COUNT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COUNT, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitCountAggrComp) {\r\n\t\t\treturn visitor.visitCountAggrComp(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class AggrOperatorsGroupingContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_aggrOperatorsGrouping;\r\n\t}\r\n\tpublic copyFrom(ctx: AggrOperatorsGroupingContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class AggrDatasetContext extends AggrOperatorsGroupingContext {\r\n\tpublic _op!: Token;\r\n\tconstructor(parser: Vtl, ctx: AggrOperatorsGroupingContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic SUM(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.SUM, 0);\r\n\t}\r\n\tpublic AVG(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.AVG, 0);\r\n\t}\r\n\tpublic COUNT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COUNT, 0);\r\n\t}\r\n\tpublic MEDIAN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MEDIAN, 0);\r\n\t}\r\n\tpublic MIN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MIN, 0);\r\n\t}\r\n\tpublic MAX(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MAX, 0);\r\n\t}\r\n\tpublic STDDEV_POP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.STDDEV_POP, 0);\r\n\t}\r\n\tpublic STDDEV_SAMP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.STDDEV_SAMP, 0);\r\n\t}\r\n\tpublic VAR_POP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.VAR_POP, 0);\r\n\t}\r\n\tpublic VAR_SAMP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.VAR_SAMP, 0);\r\n\t}\r\n\tpublic groupingClause(): GroupingClauseContext {\r\n\t\treturn this.getTypedRuleContext(GroupingClauseContext, 0) as GroupingClauseContext;\r\n\t}\r\n\tpublic havingClause(): HavingClauseContext {\r\n\t\treturn this.getTypedRuleContext(HavingClauseContext, 0) as HavingClauseContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitAggrDataset) {\r\n\t\t\treturn visitor.visitAggrDataset(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class AnFunctionContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_anFunction;\r\n\t}\r\n\tpublic copyFrom(ctx: AnFunctionContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class LagOrLeadAnContext extends AnFunctionContext {\r\n\tpublic _op!: Token;\r\n\tpublic _offet!: SignedIntegerContext;\r\n\tpublic _defaultValue!: ConstantContext;\r\n\tpublic _partition!: PartitionByClauseContext;\r\n\tpublic _orderBy!: OrderByClauseContext;\r\n\tconstructor(parser: Vtl, ctx: AnFunctionContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.LPAREN);\r\n\t}\r\n\tpublic LPAREN(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, i);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic OVER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.OVER, 0);\r\n\t}\r\n\tpublic RPAREN_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.RPAREN);\r\n\t}\r\n\tpublic RPAREN(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, i);\r\n\t}\r\n\tpublic LAG(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LAG, 0);\r\n\t}\r\n\tpublic LEAD(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LEAD, 0);\r\n\t}\r\n\tpublic COMMA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, 0);\r\n\t}\r\n\tpublic orderByClause(): OrderByClauseContext {\r\n\t\treturn this.getTypedRuleContext(OrderByClauseContext, 0) as OrderByClauseContext;\r\n\t}\r\n\tpublic signedInteger(): SignedIntegerContext {\r\n\t\treturn this.getTypedRuleContext(SignedIntegerContext, 0) as SignedIntegerContext;\r\n\t}\r\n\tpublic partitionByClause(): PartitionByClauseContext {\r\n\t\treturn this.getTypedRuleContext(PartitionByClauseContext, 0) as PartitionByClauseContext;\r\n\t}\r\n\tpublic constant(): ConstantContext {\r\n\t\treturn this.getTypedRuleContext(ConstantContext, 0) as ConstantContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitLagOrLeadAn) {\r\n\t\t\treturn visitor.visitLagOrLeadAn(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class RatioToReportAnContext extends AnFunctionContext {\r\n\tpublic _op!: Token;\r\n\tpublic _partition!: PartitionByClauseContext;\r\n\tconstructor(parser: Vtl, ctx: AnFunctionContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.LPAREN);\r\n\t}\r\n\tpublic LPAREN(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, i);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic OVER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.OVER, 0);\r\n\t}\r\n\tpublic RPAREN_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.RPAREN);\r\n\t}\r\n\tpublic RPAREN(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, i);\r\n\t}\r\n\tpublic RATIO_TO_REPORT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RATIO_TO_REPORT, 0);\r\n\t}\r\n\tpublic partitionByClause(): PartitionByClauseContext {\r\n\t\treturn this.getTypedRuleContext(PartitionByClauseContext, 0) as PartitionByClauseContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitRatioToReportAn) {\r\n\t\t\treturn visitor.visitRatioToReportAn(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class AnSimpleFunctionContext extends AnFunctionContext {\r\n\tpublic _op!: Token;\r\n\tpublic _partition!: PartitionByClauseContext;\r\n\tpublic _orderBy!: OrderByClauseContext;\r\n\tpublic _windowing!: WindowingClauseContext;\r\n\tconstructor(parser: Vtl, ctx: AnFunctionContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.LPAREN);\r\n\t}\r\n\tpublic LPAREN(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, i);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic OVER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.OVER, 0);\r\n\t}\r\n\tpublic RPAREN_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.RPAREN);\r\n\t}\r\n\tpublic RPAREN(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, i);\r\n\t}\r\n\tpublic SUM(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.SUM, 0);\r\n\t}\r\n\tpublic AVG(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.AVG, 0);\r\n\t}\r\n\tpublic COUNT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COUNT, 0);\r\n\t}\r\n\tpublic MEDIAN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MEDIAN, 0);\r\n\t}\r\n\tpublic MIN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MIN, 0);\r\n\t}\r\n\tpublic MAX(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MAX, 0);\r\n\t}\r\n\tpublic STDDEV_POP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.STDDEV_POP, 0);\r\n\t}\r\n\tpublic STDDEV_SAMP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.STDDEV_SAMP, 0);\r\n\t}\r\n\tpublic VAR_POP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.VAR_POP, 0);\r\n\t}\r\n\tpublic VAR_SAMP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.VAR_SAMP, 0);\r\n\t}\r\n\tpublic FIRST_VALUE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.FIRST_VALUE, 0);\r\n\t}\r\n\tpublic LAST_VALUE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LAST_VALUE, 0);\r\n\t}\r\n\tpublic partitionByClause(): PartitionByClauseContext {\r\n\t\treturn this.getTypedRuleContext(PartitionByClauseContext, 0) as PartitionByClauseContext;\r\n\t}\r\n\tpublic orderByClause(): OrderByClauseContext {\r\n\t\treturn this.getTypedRuleContext(OrderByClauseContext, 0) as OrderByClauseContext;\r\n\t}\r\n\tpublic windowingClause(): WindowingClauseContext {\r\n\t\treturn this.getTypedRuleContext(WindowingClauseContext, 0) as WindowingClauseContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitAnSimpleFunction) {\r\n\t\t\treturn visitor.visitAnSimpleFunction(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class AnFunctionComponentContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_anFunctionComponent;\r\n\t}\r\n\tpublic copyFrom(ctx: AnFunctionComponentContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class AnSimpleFunctionComponentContext extends AnFunctionComponentContext {\r\n\tpublic _op!: Token;\r\n\tpublic _partition!: PartitionByClauseContext;\r\n\tpublic _orderBy!: OrderByClauseContext;\r\n\tpublic _windowing!: WindowingClauseContext;\r\n\tconstructor(parser: Vtl, ctx: AnFunctionComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.LPAREN);\r\n\t}\r\n\tpublic LPAREN(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, i);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic OVER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.OVER, 0);\r\n\t}\r\n\tpublic RPAREN_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.RPAREN);\r\n\t}\r\n\tpublic RPAREN(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, i);\r\n\t}\r\n\tpublic SUM(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.SUM, 0);\r\n\t}\r\n\tpublic AVG(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.AVG, 0);\r\n\t}\r\n\tpublic COUNT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COUNT, 0);\r\n\t}\r\n\tpublic MEDIAN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MEDIAN, 0);\r\n\t}\r\n\tpublic MIN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MIN, 0);\r\n\t}\r\n\tpublic MAX(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MAX, 0);\r\n\t}\r\n\tpublic STDDEV_POP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.STDDEV_POP, 0);\r\n\t}\r\n\tpublic STDDEV_SAMP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.STDDEV_SAMP, 0);\r\n\t}\r\n\tpublic VAR_POP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.VAR_POP, 0);\r\n\t}\r\n\tpublic VAR_SAMP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.VAR_SAMP, 0);\r\n\t}\r\n\tpublic FIRST_VALUE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.FIRST_VALUE, 0);\r\n\t}\r\n\tpublic LAST_VALUE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LAST_VALUE, 0);\r\n\t}\r\n\tpublic partitionByClause(): PartitionByClauseContext {\r\n\t\treturn this.getTypedRuleContext(PartitionByClauseContext, 0) as PartitionByClauseContext;\r\n\t}\r\n\tpublic orderByClause(): OrderByClauseContext {\r\n\t\treturn this.getTypedRuleContext(OrderByClauseContext, 0) as OrderByClauseContext;\r\n\t}\r\n\tpublic windowingClause(): WindowingClauseContext {\r\n\t\treturn this.getTypedRuleContext(WindowingClauseContext, 0) as WindowingClauseContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitAnSimpleFunctionComponent) {\r\n\t\t\treturn visitor.visitAnSimpleFunctionComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class LagOrLeadAnComponentContext extends AnFunctionComponentContext {\r\n\tpublic _op!: Token;\r\n\tpublic _offet!: SignedIntegerContext;\r\n\tpublic _defaultValue!: ConstantContext;\r\n\tpublic _partition!: PartitionByClauseContext;\r\n\tpublic _orderBy!: OrderByClauseContext;\r\n\tconstructor(parser: Vtl, ctx: AnFunctionComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.LPAREN);\r\n\t}\r\n\tpublic LPAREN(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, i);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic OVER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.OVER, 0);\r\n\t}\r\n\tpublic RPAREN_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.RPAREN);\r\n\t}\r\n\tpublic RPAREN(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, i);\r\n\t}\r\n\tpublic LAG(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LAG, 0);\r\n\t}\r\n\tpublic LEAD(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LEAD, 0);\r\n\t}\r\n\tpublic COMMA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, 0);\r\n\t}\r\n\tpublic orderByClause(): OrderByClauseContext {\r\n\t\treturn this.getTypedRuleContext(OrderByClauseContext, 0) as OrderByClauseContext;\r\n\t}\r\n\tpublic signedInteger(): SignedIntegerContext {\r\n\t\treturn this.getTypedRuleContext(SignedIntegerContext, 0) as SignedIntegerContext;\r\n\t}\r\n\tpublic partitionByClause(): PartitionByClauseContext {\r\n\t\treturn this.getTypedRuleContext(PartitionByClauseContext, 0) as PartitionByClauseContext;\r\n\t}\r\n\tpublic constant(): ConstantContext {\r\n\t\treturn this.getTypedRuleContext(ConstantContext, 0) as ConstantContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitLagOrLeadAnComponent) {\r\n\t\t\treturn visitor.visitLagOrLeadAnComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class RankAnComponentContext extends AnFunctionComponentContext {\r\n\tpublic _op!: Token;\r\n\tpublic _partition!: PartitionByClauseContext;\r\n\tpublic _orderBy!: OrderByClauseContext;\r\n\tconstructor(parser: Vtl, ctx: AnFunctionComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.LPAREN);\r\n\t}\r\n\tpublic LPAREN(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, i);\r\n\t}\r\n\tpublic OVER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.OVER, 0);\r\n\t}\r\n\tpublic RPAREN_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.RPAREN);\r\n\t}\r\n\tpublic RPAREN(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, i);\r\n\t}\r\n\tpublic RANK(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RANK, 0);\r\n\t}\r\n\tpublic orderByClause(): OrderByClauseContext {\r\n\t\treturn this.getTypedRuleContext(OrderByClauseContext, 0) as OrderByClauseContext;\r\n\t}\r\n\tpublic partitionByClause(): PartitionByClauseContext {\r\n\t\treturn this.getTypedRuleContext(PartitionByClauseContext, 0) as PartitionByClauseContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitRankAnComponent) {\r\n\t\t\treturn visitor.visitRankAnComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class RatioToReportAnComponentContext extends AnFunctionComponentContext {\r\n\tpublic _op!: Token;\r\n\tpublic _partition!: PartitionByClauseContext;\r\n\tconstructor(parser: Vtl, ctx: AnFunctionComponentContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic LPAREN_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.LPAREN);\r\n\t}\r\n\tpublic LPAREN(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, i);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic OVER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.OVER, 0);\r\n\t}\r\n\tpublic RPAREN_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.RPAREN);\r\n\t}\r\n\tpublic RPAREN(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, i);\r\n\t}\r\n\tpublic RATIO_TO_REPORT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RATIO_TO_REPORT, 0);\r\n\t}\r\n\tpublic partitionByClause(): PartitionByClauseContext {\r\n\t\treturn this.getTypedRuleContext(PartitionByClauseContext, 0) as PartitionByClauseContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitRatioToReportAnComponent) {\r\n\t\t\treturn visitor.visitRatioToReportAnComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class RenameClauseItemContext extends ParserRuleContext {\r\n\tpublic _fromName!: ComponentIDContext;\r\n\tpublic _toName!: ComponentIDContext;\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic TO(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.TO, 0);\r\n\t}\r\n\tpublic componentID_list(): ComponentIDContext[] {\r\n\t\treturn this.getTypedRuleContexts(ComponentIDContext) as ComponentIDContext[];\r\n\t}\r\n\tpublic componentID(i: number): ComponentIDContext {\r\n\t\treturn this.getTypedRuleContext(ComponentIDContext, i) as ComponentIDContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_renameClauseItem;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitRenameClauseItem) {\r\n\t\t\treturn visitor.visitRenameClauseItem(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class AggregateClauseContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic aggrFunctionClause_list(): AggrFunctionClauseContext[] {\r\n\t\treturn this.getTypedRuleContexts(AggrFunctionClauseContext) as AggrFunctionClauseContext[];\r\n\t}\r\n\tpublic aggrFunctionClause(i: number): AggrFunctionClauseContext {\r\n\t\treturn this.getTypedRuleContext(AggrFunctionClauseContext, i) as AggrFunctionClauseContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_aggregateClause;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitAggregateClause) {\r\n\t\t\treturn visitor.visitAggregateClause(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class AggrFunctionClauseContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic componentID(): ComponentIDContext {\r\n\t\treturn this.getTypedRuleContext(ComponentIDContext, 0) as ComponentIDContext;\r\n\t}\r\n\tpublic ASSIGN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ASSIGN, 0);\r\n\t}\r\n\tpublic aggrOperators(): AggrOperatorsContext {\r\n\t\treturn this.getTypedRuleContext(AggrOperatorsContext, 0) as AggrOperatorsContext;\r\n\t}\r\n\tpublic componentRole(): ComponentRoleContext {\r\n\t\treturn this.getTypedRuleContext(ComponentRoleContext, 0) as ComponentRoleContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_aggrFunctionClause;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitAggrFunctionClause) {\r\n\t\t\treturn visitor.visitAggrFunctionClause(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class CalcClauseItemContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic componentID(): ComponentIDContext {\r\n\t\treturn this.getTypedRuleContext(ComponentIDContext, 0) as ComponentIDContext;\r\n\t}\r\n\tpublic ASSIGN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ASSIGN, 0);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic componentRole(): ComponentRoleContext {\r\n\t\treturn this.getTypedRuleContext(ComponentRoleContext, 0) as ComponentRoleContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_calcClauseItem;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitCalcClauseItem) {\r\n\t\t\treturn visitor.visitCalcClauseItem(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class SubspaceClauseItemContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic componentID(): ComponentIDContext {\r\n\t\treturn this.getTypedRuleContext(ComponentIDContext, 0) as ComponentIDContext;\r\n\t}\r\n\tpublic EQ(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.EQ, 0);\r\n\t}\r\n\tpublic constant(): ConstantContext {\r\n\t\treturn this.getTypedRuleContext(ConstantContext, 0) as ConstantContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_subspaceClauseItem;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitSubspaceClauseItem) {\r\n\t\t\treturn visitor.visitSubspaceClauseItem(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class JoinClauseWithoutUsingContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic joinClauseItem_list(): JoinClauseItemContext[] {\r\n\t\treturn this.getTypedRuleContexts(JoinClauseItemContext) as JoinClauseItemContext[];\r\n\t}\r\n\tpublic joinClauseItem(i: number): JoinClauseItemContext {\r\n\t\treturn this.getTypedRuleContext(JoinClauseItemContext, i) as JoinClauseItemContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_joinClauseWithoutUsing;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitJoinClauseWithoutUsing) {\r\n\t\t\treturn visitor.visitJoinClauseWithoutUsing(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class JoinClauseContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic joinClauseItem_list(): JoinClauseItemContext[] {\r\n\t\treturn this.getTypedRuleContexts(JoinClauseItemContext) as JoinClauseItemContext[];\r\n\t}\r\n\tpublic joinClauseItem(i: number): JoinClauseItemContext {\r\n\t\treturn this.getTypedRuleContext(JoinClauseItemContext, i) as JoinClauseItemContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\tpublic USING(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.USING, 0);\r\n\t}\r\n\tpublic componentID_list(): ComponentIDContext[] {\r\n\t\treturn this.getTypedRuleContexts(ComponentIDContext) as ComponentIDContext[];\r\n\t}\r\n\tpublic componentID(i: number): ComponentIDContext {\r\n\t\treturn this.getTypedRuleContext(ComponentIDContext, i) as ComponentIDContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_joinClause;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitJoinClause) {\r\n\t\t\treturn visitor.visitJoinClause(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class JoinClauseItemContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic AS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.AS, 0);\r\n\t}\r\n\tpublic alias(): AliasContext {\r\n\t\treturn this.getTypedRuleContext(AliasContext, 0) as AliasContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_joinClauseItem;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitJoinClauseItem) {\r\n\t\t\treturn visitor.visitJoinClauseItem(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class JoinBodyContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic filterClause(): FilterClauseContext {\r\n\t\treturn this.getTypedRuleContext(FilterClauseContext, 0) as FilterClauseContext;\r\n\t}\r\n\tpublic calcClause(): CalcClauseContext {\r\n\t\treturn this.getTypedRuleContext(CalcClauseContext, 0) as CalcClauseContext;\r\n\t}\r\n\tpublic joinApplyClause(): JoinApplyClauseContext {\r\n\t\treturn this.getTypedRuleContext(JoinApplyClauseContext, 0) as JoinApplyClauseContext;\r\n\t}\r\n\tpublic aggrClause(): AggrClauseContext {\r\n\t\treturn this.getTypedRuleContext(AggrClauseContext, 0) as AggrClauseContext;\r\n\t}\r\n\tpublic keepOrDropClause(): KeepOrDropClauseContext {\r\n\t\treturn this.getTypedRuleContext(KeepOrDropClauseContext, 0) as KeepOrDropClauseContext;\r\n\t}\r\n\tpublic renameClause(): RenameClauseContext {\r\n\t\treturn this.getTypedRuleContext(RenameClauseContext, 0) as RenameClauseContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_joinBody;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitJoinBody) {\r\n\t\t\treturn visitor.visitJoinBody(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class JoinApplyClauseContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic APPLY(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.APPLY, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_joinApplyClause;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitJoinApplyClause) {\r\n\t\t\treturn visitor.visitJoinApplyClause(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class PartitionByClauseContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic PARTITION(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.PARTITION, 0);\r\n\t}\r\n\tpublic BY(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.BY, 0);\r\n\t}\r\n\tpublic componentID_list(): ComponentIDContext[] {\r\n\t\treturn this.getTypedRuleContexts(ComponentIDContext) as ComponentIDContext[];\r\n\t}\r\n\tpublic componentID(i: number): ComponentIDContext {\r\n\t\treturn this.getTypedRuleContext(ComponentIDContext, i) as ComponentIDContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_partitionByClause;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitPartitionByClause) {\r\n\t\t\treturn visitor.visitPartitionByClause(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class OrderByClauseContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic ORDER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ORDER, 0);\r\n\t}\r\n\tpublic BY(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.BY, 0);\r\n\t}\r\n\tpublic orderByItem_list(): OrderByItemContext[] {\r\n\t\treturn this.getTypedRuleContexts(OrderByItemContext) as OrderByItemContext[];\r\n\t}\r\n\tpublic orderByItem(i: number): OrderByItemContext {\r\n\t\treturn this.getTypedRuleContext(OrderByItemContext, i) as OrderByItemContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_orderByClause;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitOrderByClause) {\r\n\t\t\treturn visitor.visitOrderByClause(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class OrderByItemContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic componentID(): ComponentIDContext {\r\n\t\treturn this.getTypedRuleContext(ComponentIDContext, 0) as ComponentIDContext;\r\n\t}\r\n\tpublic ASC(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ASC, 0);\r\n\t}\r\n\tpublic DESC(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DESC, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_orderByItem;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitOrderByItem) {\r\n\t\t\treturn visitor.visitOrderByItem(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class WindowingClauseContext extends ParserRuleContext {\r\n\tpublic _from_!: LimitClauseItemContext;\r\n\tpublic _to_!: LimitClauseItemContext;\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic BETWEEN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.BETWEEN, 0);\r\n\t}\r\n\tpublic AND(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.AND, 0);\r\n\t}\r\n\tpublic limitClauseItem_list(): LimitClauseItemContext[] {\r\n\t\treturn this.getTypedRuleContexts(LimitClauseItemContext) as LimitClauseItemContext[];\r\n\t}\r\n\tpublic limitClauseItem(i: number): LimitClauseItemContext {\r\n\t\treturn this.getTypedRuleContext(LimitClauseItemContext, i) as LimitClauseItemContext;\r\n\t}\r\n\tpublic RANGE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RANGE, 0);\r\n\t}\r\n\tpublic DATA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DATA, 0);\r\n\t}\r\n\tpublic POINTS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.POINTS, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_windowingClause;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitWindowingClause) {\r\n\t\t\treturn visitor.visitWindowingClause(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class SignedIntegerContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic INTEGER_CONSTANT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.INTEGER_CONSTANT, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_signedInteger;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitSignedInteger) {\r\n\t\t\treturn visitor.visitSignedInteger(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class LimitClauseItemContext extends ParserRuleContext {\r\n\tpublic _dir!: Token;\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic INTEGER_CONSTANT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.INTEGER_CONSTANT, 0);\r\n\t}\r\n\tpublic PRECEDING(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.PRECEDING, 0);\r\n\t}\r\n\tpublic FOLLOWING(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.FOLLOWING, 0);\r\n\t}\r\n\tpublic CURRENT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.CURRENT, 0);\r\n\t}\r\n\tpublic DATA(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DATA, 0);\r\n\t}\r\n\tpublic POINT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.POINT, 0);\r\n\t}\r\n\tpublic UNBOUNDED(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.UNBOUNDED, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_limitClauseItem;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitLimitClauseItem) {\r\n\t\t\treturn visitor.visitLimitClauseItem(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class GroupingClauseContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_groupingClause;\r\n\t}\r\n\tpublic copyFrom(ctx: GroupingClauseContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class GroupAllContext extends GroupingClauseContext {\r\n\tconstructor(parser: Vtl, ctx: GroupingClauseContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic GROUP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.GROUP, 0);\r\n\t}\r\n\tpublic ALL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ALL, 0);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic TIME_AGG(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.TIME_AGG, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic TIME_UNIT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.TIME_UNIT, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitGroupAll) {\r\n\t\t\treturn visitor.visitGroupAll(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class GroupByOrExceptContext extends GroupingClauseContext {\r\n\tpublic _op!: Token;\r\n\tpublic _delim!: Token;\r\n\tconstructor(parser: Vtl, ctx: GroupingClauseContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic GROUP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.GROUP, 0);\r\n\t}\r\n\tpublic componentID_list(): ComponentIDContext[] {\r\n\t\treturn this.getTypedRuleContexts(ComponentIDContext) as ComponentIDContext[];\r\n\t}\r\n\tpublic componentID(i: number): ComponentIDContext {\r\n\t\treturn this.getTypedRuleContext(ComponentIDContext, i) as ComponentIDContext;\r\n\t}\r\n\tpublic BY(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.BY, 0);\r\n\t}\r\n\tpublic EXCEPT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.EXCEPT, 0);\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\tpublic TIME_AGG(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.TIME_AGG, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic TIME_UNIT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.TIME_UNIT, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic FIRST(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.FIRST, 0);\r\n\t}\r\n\tpublic LAST(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LAST, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitGroupByOrExcept) {\r\n\t\t\treturn visitor.visitGroupByOrExcept(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class HavingClauseContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic HAVING(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.HAVING, 0);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_havingClause;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitHavingClause) {\r\n\t\t\treturn visitor.visitHavingClause(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ParameterItemContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic varID(): VarIDContext {\r\n\t\treturn this.getTypedRuleContext(VarIDContext, 0) as VarIDContext;\r\n\t}\r\n\tpublic inputParameterType(): InputParameterTypeContext {\r\n\t\treturn this.getTypedRuleContext(InputParameterTypeContext, 0) as InputParameterTypeContext;\r\n\t}\r\n\tpublic DEFAULT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DEFAULT, 0);\r\n\t}\r\n\tpublic constant(): ConstantContext {\r\n\t\treturn this.getTypedRuleContext(ConstantContext, 0) as ConstantContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_parameterItem;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitParameterItem) {\r\n\t\t\treturn visitor.visitParameterItem(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class OutputParameterTypeContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic scalarType(): ScalarTypeContext {\r\n\t\treturn this.getTypedRuleContext(ScalarTypeContext, 0) as ScalarTypeContext;\r\n\t}\r\n\tpublic datasetType(): DatasetTypeContext {\r\n\t\treturn this.getTypedRuleContext(DatasetTypeContext, 0) as DatasetTypeContext;\r\n\t}\r\n\tpublic componentType(): ComponentTypeContext {\r\n\t\treturn this.getTypedRuleContext(ComponentTypeContext, 0) as ComponentTypeContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_outputParameterType;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitOutputParameterType) {\r\n\t\t\treturn visitor.visitOutputParameterType(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class OutputParameterTypeComponentContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic componentType(): ComponentTypeContext {\r\n\t\treturn this.getTypedRuleContext(ComponentTypeContext, 0) as ComponentTypeContext;\r\n\t}\r\n\tpublic scalarType(): ScalarTypeContext {\r\n\t\treturn this.getTypedRuleContext(ScalarTypeContext, 0) as ScalarTypeContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_outputParameterTypeComponent;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitOutputParameterTypeComponent) {\r\n\t\t\treturn visitor.visitOutputParameterTypeComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class InputParameterTypeContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic scalarType(): ScalarTypeContext {\r\n\t\treturn this.getTypedRuleContext(ScalarTypeContext, 0) as ScalarTypeContext;\r\n\t}\r\n\tpublic datasetType(): DatasetTypeContext {\r\n\t\treturn this.getTypedRuleContext(DatasetTypeContext, 0) as DatasetTypeContext;\r\n\t}\r\n\tpublic scalarSetType(): ScalarSetTypeContext {\r\n\t\treturn this.getTypedRuleContext(ScalarSetTypeContext, 0) as ScalarSetTypeContext;\r\n\t}\r\n\tpublic rulesetType(): RulesetTypeContext {\r\n\t\treturn this.getTypedRuleContext(RulesetTypeContext, 0) as RulesetTypeContext;\r\n\t}\r\n\tpublic componentType(): ComponentTypeContext {\r\n\t\treturn this.getTypedRuleContext(ComponentTypeContext, 0) as ComponentTypeContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_inputParameterType;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitInputParameterType) {\r\n\t\t\treturn visitor.visitInputParameterType(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class RulesetTypeContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic RULESET(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RULESET, 0);\r\n\t}\r\n\tpublic dpRuleset(): DpRulesetContext {\r\n\t\treturn this.getTypedRuleContext(DpRulesetContext, 0) as DpRulesetContext;\r\n\t}\r\n\tpublic hrRuleset(): HrRulesetContext {\r\n\t\treturn this.getTypedRuleContext(HrRulesetContext, 0) as HrRulesetContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_rulesetType;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitRulesetType) {\r\n\t\t\treturn visitor.visitRulesetType(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ScalarTypeContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic basicScalarType(): BasicScalarTypeContext {\r\n\t\treturn this.getTypedRuleContext(BasicScalarTypeContext, 0) as BasicScalarTypeContext;\r\n\t}\r\n\tpublic valueDomainName(): ValueDomainNameContext {\r\n\t\treturn this.getTypedRuleContext(ValueDomainNameContext, 0) as ValueDomainNameContext;\r\n\t}\r\n\tpublic scalarTypeConstraint(): ScalarTypeConstraintContext {\r\n\t\treturn this.getTypedRuleContext(ScalarTypeConstraintContext, 0) as ScalarTypeConstraintContext;\r\n\t}\r\n\tpublic NULL_CONSTANT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.NULL_CONSTANT, 0);\r\n\t}\r\n\tpublic NOT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.NOT, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_scalarType;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitScalarType) {\r\n\t\t\treturn visitor.visitScalarType(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ComponentTypeContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic componentRole(): ComponentRoleContext {\r\n\t\treturn this.getTypedRuleContext(ComponentRoleContext, 0) as ComponentRoleContext;\r\n\t}\r\n\tpublic LT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LT, 0);\r\n\t}\r\n\tpublic scalarType(): ScalarTypeContext {\r\n\t\treturn this.getTypedRuleContext(ScalarTypeContext, 0) as ScalarTypeContext;\r\n\t}\r\n\tpublic MT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MT, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_componentType;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitComponentType) {\r\n\t\t\treturn visitor.visitComponentType(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class DatasetTypeContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic DATASET(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DATASET, 0);\r\n\t}\r\n\tpublic GLPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.GLPAREN, 0);\r\n\t}\r\n\tpublic compConstraint_list(): CompConstraintContext[] {\r\n\t\treturn this.getTypedRuleContexts(CompConstraintContext) as CompConstraintContext[];\r\n\t}\r\n\tpublic compConstraint(i: number): CompConstraintContext {\r\n\t\treturn this.getTypedRuleContext(CompConstraintContext, i) as CompConstraintContext;\r\n\t}\r\n\tpublic GRPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.GRPAREN, 0);\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_datasetType;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitDatasetType) {\r\n\t\t\treturn visitor.visitDatasetType(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ScalarSetTypeContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic SET(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.SET, 0);\r\n\t}\r\n\tpublic LT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LT, 0);\r\n\t}\r\n\tpublic scalarType(): ScalarTypeContext {\r\n\t\treturn this.getTypedRuleContext(ScalarTypeContext, 0) as ScalarTypeContext;\r\n\t}\r\n\tpublic MT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MT, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_scalarSetType;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitScalarSetType) {\r\n\t\t\treturn visitor.visitScalarSetType(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class DpRulesetContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_dpRuleset;\r\n\t}\r\n\tpublic copyFrom(ctx: DpRulesetContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class DataPointVdContext extends DpRulesetContext {\r\n\tconstructor(parser: Vtl, ctx: DpRulesetContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic DATAPOINT_ON_VD(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DATAPOINT_ON_VD, 0);\r\n\t}\r\n\tpublic GLPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.GLPAREN, 0);\r\n\t}\r\n\tpublic valueDomainName_list(): ValueDomainNameContext[] {\r\n\t\treturn this.getTypedRuleContexts(ValueDomainNameContext) as ValueDomainNameContext[];\r\n\t}\r\n\tpublic valueDomainName(i: number): ValueDomainNameContext {\r\n\t\treturn this.getTypedRuleContext(ValueDomainNameContext, i) as ValueDomainNameContext;\r\n\t}\r\n\tpublic GRPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.GRPAREN, 0);\r\n\t}\r\n\tpublic MUL_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.MUL);\r\n\t}\r\n\tpublic MUL(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MUL, i);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitDataPointVd) {\r\n\t\t\treturn visitor.visitDataPointVd(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class DataPointVarContext extends DpRulesetContext {\r\n\tconstructor(parser: Vtl, ctx: DpRulesetContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic DATAPOINT_ON_VAR(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DATAPOINT_ON_VAR, 0);\r\n\t}\r\n\tpublic GLPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.GLPAREN, 0);\r\n\t}\r\n\tpublic varID_list(): VarIDContext[] {\r\n\t\treturn this.getTypedRuleContexts(VarIDContext) as VarIDContext[];\r\n\t}\r\n\tpublic varID(i: number): VarIDContext {\r\n\t\treturn this.getTypedRuleContext(VarIDContext, i) as VarIDContext;\r\n\t}\r\n\tpublic GRPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.GRPAREN, 0);\r\n\t}\r\n\tpublic MUL_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.MUL);\r\n\t}\r\n\tpublic MUL(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MUL, i);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitDataPointVar) {\r\n\t\t\treturn visitor.visitDataPointVar(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class DataPointContext extends DpRulesetContext {\r\n\tconstructor(parser: Vtl, ctx: DpRulesetContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic DATAPOINT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DATAPOINT, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitDataPoint) {\r\n\t\t\treturn visitor.visitDataPoint(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class HrRulesetContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_hrRuleset;\r\n\t}\r\n\tpublic copyFrom(ctx: HrRulesetContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class HrRulesetVdTypeContext extends HrRulesetContext {\r\n\tpublic _vdName!: Token;\r\n\tconstructor(parser: Vtl, ctx: HrRulesetContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic HIERARCHICAL_ON_VD(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.HIERARCHICAL_ON_VD, 0);\r\n\t}\r\n\tpublic GLPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.GLPAREN, 0);\r\n\t}\r\n\tpublic GRPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.GRPAREN, 0);\r\n\t}\r\n\tpublic IDENTIFIER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IDENTIFIER, 0);\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic valueDomainName_list(): ValueDomainNameContext[] {\r\n\t\treturn this.getTypedRuleContexts(ValueDomainNameContext) as ValueDomainNameContext[];\r\n\t}\r\n\tpublic valueDomainName(i: number): ValueDomainNameContext {\r\n\t\treturn this.getTypedRuleContext(ValueDomainNameContext, i) as ValueDomainNameContext;\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic MUL_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.MUL);\r\n\t}\r\n\tpublic MUL(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MUL, i);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitHrRulesetVdType) {\r\n\t\t\treturn visitor.visitHrRulesetVdType(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class HrRulesetVarTypeContext extends HrRulesetContext {\r\n\tpublic _varName!: VarIDContext;\r\n\tconstructor(parser: Vtl, ctx: HrRulesetContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic HIERARCHICAL_ON_VAR(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.HIERARCHICAL_ON_VAR, 0);\r\n\t}\r\n\tpublic GLPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.GLPAREN, 0);\r\n\t}\r\n\tpublic GRPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.GRPAREN, 0);\r\n\t}\r\n\tpublic varID_list(): VarIDContext[] {\r\n\t\treturn this.getTypedRuleContexts(VarIDContext) as VarIDContext[];\r\n\t}\r\n\tpublic varID(i: number): VarIDContext {\r\n\t\treturn this.getTypedRuleContext(VarIDContext, i) as VarIDContext;\r\n\t}\r\n\tpublic LPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LPAREN, 0);\r\n\t}\r\n\tpublic RPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RPAREN, 0);\r\n\t}\r\n\tpublic MUL_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.MUL);\r\n\t}\r\n\tpublic MUL(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MUL, i);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitHrRulesetVarType) {\r\n\t\t\treturn visitor.visitHrRulesetVarType(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class HrRulesetTypeContext extends HrRulesetContext {\r\n\tconstructor(parser: Vtl, ctx: HrRulesetContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic HIERARCHICAL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.HIERARCHICAL, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitHrRulesetType) {\r\n\t\t\treturn visitor.visitHrRulesetType(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ValueDomainNameContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic IDENTIFIER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IDENTIFIER, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_valueDomainName;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitValueDomainName) {\r\n\t\t\treturn visitor.visitValueDomainName(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class RulesetIDContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic IDENTIFIER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IDENTIFIER, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_rulesetID;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitRulesetID) {\r\n\t\t\treturn visitor.visitRulesetID(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class RulesetSignatureContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic signature_list(): SignatureContext[] {\r\n\t\treturn this.getTypedRuleContexts(SignatureContext) as SignatureContext[];\r\n\t}\r\n\tpublic signature(i: number): SignatureContext {\r\n\t\treturn this.getTypedRuleContext(SignatureContext, i) as SignatureContext;\r\n\t}\r\n\tpublic VALUE_DOMAIN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.VALUE_DOMAIN, 0);\r\n\t}\r\n\tpublic VARIABLE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.VARIABLE, 0);\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_rulesetSignature;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitRulesetSignature) {\r\n\t\t\treturn visitor.visitRulesetSignature(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class SignatureContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic varID(): VarIDContext {\r\n\t\treturn this.getTypedRuleContext(VarIDContext, 0) as VarIDContext;\r\n\t}\r\n\tpublic AS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.AS, 0);\r\n\t}\r\n\tpublic alias(): AliasContext {\r\n\t\treturn this.getTypedRuleContext(AliasContext, 0) as AliasContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_signature;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitSignature) {\r\n\t\t\treturn visitor.visitSignature(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class RuleClauseDatapointContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic ruleItemDatapoint_list(): RuleItemDatapointContext[] {\r\n\t\treturn this.getTypedRuleContexts(RuleItemDatapointContext) as RuleItemDatapointContext[];\r\n\t}\r\n\tpublic ruleItemDatapoint(i: number): RuleItemDatapointContext {\r\n\t\treturn this.getTypedRuleContext(RuleItemDatapointContext, i) as RuleItemDatapointContext;\r\n\t}\r\n\tpublic EOL_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.EOL);\r\n\t}\r\n\tpublic EOL(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.EOL, i);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_ruleClauseDatapoint;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitRuleClauseDatapoint) {\r\n\t\t\treturn visitor.visitRuleClauseDatapoint(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class RuleItemDatapointContext extends ParserRuleContext {\r\n\tpublic _ruleName!: Token;\r\n\tpublic _antecedentContiditon!: ExprComponentContext;\r\n\tpublic _consequentCondition!: ExprComponentContext;\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic exprComponent_list(): ExprComponentContext[] {\r\n\t\treturn this.getTypedRuleContexts(ExprComponentContext) as ExprComponentContext[];\r\n\t}\r\n\tpublic exprComponent(i: number): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, i) as ExprComponentContext;\r\n\t}\r\n\tpublic COLON(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COLON, 0);\r\n\t}\r\n\tpublic WHEN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.WHEN, 0);\r\n\t}\r\n\tpublic THEN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.THEN, 0);\r\n\t}\r\n\tpublic erCode(): ErCodeContext {\r\n\t\treturn this.getTypedRuleContext(ErCodeContext, 0) as ErCodeContext;\r\n\t}\r\n\tpublic erLevel(): ErLevelContext {\r\n\t\treturn this.getTypedRuleContext(ErLevelContext, 0) as ErLevelContext;\r\n\t}\r\n\tpublic IDENTIFIER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IDENTIFIER, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_ruleItemDatapoint;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitRuleItemDatapoint) {\r\n\t\t\treturn visitor.visitRuleItemDatapoint(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class RuleClauseHierarchicalContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic ruleItemHierarchical_list(): RuleItemHierarchicalContext[] {\r\n\t\treturn this.getTypedRuleContexts(RuleItemHierarchicalContext) as RuleItemHierarchicalContext[];\r\n\t}\r\n\tpublic ruleItemHierarchical(i: number): RuleItemHierarchicalContext {\r\n\t\treturn this.getTypedRuleContext(RuleItemHierarchicalContext, i) as RuleItemHierarchicalContext;\r\n\t}\r\n\tpublic EOL_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.EOL);\r\n\t}\r\n\tpublic EOL(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.EOL, i);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_ruleClauseHierarchical;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitRuleClauseHierarchical) {\r\n\t\t\treturn visitor.visitRuleClauseHierarchical(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class RuleItemHierarchicalContext extends ParserRuleContext {\r\n\tpublic _ruleName!: Token;\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic codeItemRelation(): CodeItemRelationContext {\r\n\t\treturn this.getTypedRuleContext(CodeItemRelationContext, 0) as CodeItemRelationContext;\r\n\t}\r\n\tpublic COLON(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COLON, 0);\r\n\t}\r\n\tpublic erCode(): ErCodeContext {\r\n\t\treturn this.getTypedRuleContext(ErCodeContext, 0) as ErCodeContext;\r\n\t}\r\n\tpublic erLevel(): ErLevelContext {\r\n\t\treturn this.getTypedRuleContext(ErLevelContext, 0) as ErLevelContext;\r\n\t}\r\n\tpublic IDENTIFIER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IDENTIFIER, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_ruleItemHierarchical;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitRuleItemHierarchical) {\r\n\t\t\treturn visitor.visitRuleItemHierarchical(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class HierRuleSignatureContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic RULE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RULE, 0);\r\n\t}\r\n\tpublic IDENTIFIER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IDENTIFIER, 0);\r\n\t}\r\n\tpublic VALUE_DOMAIN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.VALUE_DOMAIN, 0);\r\n\t}\r\n\tpublic VARIABLE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.VARIABLE, 0);\r\n\t}\r\n\tpublic CONDITION(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.CONDITION, 0);\r\n\t}\r\n\tpublic valueDomainSignature(): ValueDomainSignatureContext {\r\n\t\treturn this.getTypedRuleContext(ValueDomainSignatureContext, 0) as ValueDomainSignatureContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_hierRuleSignature;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitHierRuleSignature) {\r\n\t\t\treturn visitor.visitHierRuleSignature(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ValueDomainSignatureContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic signature_list(): SignatureContext[] {\r\n\t\treturn this.getTypedRuleContexts(SignatureContext) as SignatureContext[];\r\n\t}\r\n\tpublic signature(i: number): SignatureContext {\r\n\t\treturn this.getTypedRuleContext(SignatureContext, i) as SignatureContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_valueDomainSignature;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitValueDomainSignature) {\r\n\t\t\treturn visitor.visitValueDomainSignature(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class CodeItemRelationContext extends ParserRuleContext {\r\n\tpublic _codeItemRef!: ValueDomainValueContext;\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic codeItemRelationClause_list(): CodeItemRelationClauseContext[] {\r\n\t\treturn this.getTypedRuleContexts(CodeItemRelationClauseContext) as CodeItemRelationClauseContext[];\r\n\t}\r\n\tpublic codeItemRelationClause(i: number): CodeItemRelationClauseContext {\r\n\t\treturn this.getTypedRuleContext(CodeItemRelationClauseContext, i) as CodeItemRelationClauseContext;\r\n\t}\r\n\tpublic valueDomainValue(): ValueDomainValueContext {\r\n\t\treturn this.getTypedRuleContext(ValueDomainValueContext, 0) as ValueDomainValueContext;\r\n\t}\r\n\tpublic WHEN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.WHEN, 0);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic THEN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.THEN, 0);\r\n\t}\r\n\tpublic comparisonOperand(): ComparisonOperandContext {\r\n\t\treturn this.getTypedRuleContext(ComparisonOperandContext, 0) as ComparisonOperandContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_codeItemRelation;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitCodeItemRelation) {\r\n\t\t\treturn visitor.visitCodeItemRelation(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class CodeItemRelationClauseContext extends ParserRuleContext {\r\n\tpublic _opAdd!: Token;\r\n\tpublic _rightCodeItem!: ValueDomainValueContext;\r\n\tpublic _rightCondition!: ExprComponentContext;\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic valueDomainValue(): ValueDomainValueContext {\r\n\t\treturn this.getTypedRuleContext(ValueDomainValueContext, 0) as ValueDomainValueContext;\r\n\t}\r\n\tpublic QLPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.QLPAREN, 0);\r\n\t}\r\n\tpublic QRPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.QRPAREN, 0);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic PLUS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.PLUS, 0);\r\n\t}\r\n\tpublic MINUS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MINUS, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_codeItemRelationClause;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitCodeItemRelationClause) {\r\n\t\t\treturn visitor.visitCodeItemRelationClause(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ValueDomainValueContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic IDENTIFIER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IDENTIFIER, 0);\r\n\t}\r\n\tpublic INTEGER_CONSTANT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.INTEGER_CONSTANT, 0);\r\n\t}\r\n\tpublic NUMBER_CONSTANT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.NUMBER_CONSTANT, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_valueDomainValue;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitValueDomainValue) {\r\n\t\t\treturn visitor.visitValueDomainValue(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ScalarTypeConstraintContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_scalarTypeConstraint;\r\n\t}\r\n\tpublic copyFrom(ctx: ScalarTypeConstraintContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class RangeConstraintContext extends ScalarTypeConstraintContext {\r\n\tconstructor(parser: Vtl, ctx: ScalarTypeConstraintContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic GLPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.GLPAREN, 0);\r\n\t}\r\n\tpublic constant_list(): ConstantContext[] {\r\n\t\treturn this.getTypedRuleContexts(ConstantContext) as ConstantContext[];\r\n\t}\r\n\tpublic constant(i: number): ConstantContext {\r\n\t\treturn this.getTypedRuleContext(ConstantContext, i) as ConstantContext;\r\n\t}\r\n\tpublic GRPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.GRPAREN, 0);\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitRangeConstraint) {\r\n\t\t\treturn visitor.visitRangeConstraint(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ConditionConstraintContext extends ScalarTypeConstraintContext {\r\n\tconstructor(parser: Vtl, ctx: ScalarTypeConstraintContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic QLPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.QLPAREN, 0);\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic QRPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.QRPAREN, 0);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitConditionConstraint) {\r\n\t\t\treturn visitor.visitConditionConstraint(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class CompConstraintContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic componentType(): ComponentTypeContext {\r\n\t\treturn this.getTypedRuleContext(ComponentTypeContext, 0) as ComponentTypeContext;\r\n\t}\r\n\tpublic componentID(): ComponentIDContext {\r\n\t\treturn this.getTypedRuleContext(ComponentIDContext, 0) as ComponentIDContext;\r\n\t}\r\n\tpublic multModifier(): MultModifierContext {\r\n\t\treturn this.getTypedRuleContext(MultModifierContext, 0) as MultModifierContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_compConstraint;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitCompConstraint) {\r\n\t\t\treturn visitor.visitCompConstraint(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class MultModifierContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic OPTIONAL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.OPTIONAL, 0);\r\n\t}\r\n\tpublic PLUS(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.PLUS, 0);\r\n\t}\r\n\tpublic MUL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MUL, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_multModifier;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitMultModifier) {\r\n\t\t\treturn visitor.visitMultModifier(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ValidationOutputContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic INVALID(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.INVALID, 0);\r\n\t}\r\n\tpublic ALL_MEASURES(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ALL_MEASURES, 0);\r\n\t}\r\n\tpublic ALL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ALL, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_validationOutput;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitValidationOutput) {\r\n\t\t\treturn visitor.visitValidationOutput(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ValidationModeContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic NON_NULL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.NON_NULL, 0);\r\n\t}\r\n\tpublic NON_ZERO(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.NON_ZERO, 0);\r\n\t}\r\n\tpublic PARTIAL_NULL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.PARTIAL_NULL, 0);\r\n\t}\r\n\tpublic PARTIAL_ZERO(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.PARTIAL_ZERO, 0);\r\n\t}\r\n\tpublic ALWAYS_NULL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ALWAYS_NULL, 0);\r\n\t}\r\n\tpublic ALWAYS_ZERO(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ALWAYS_ZERO, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_validationMode;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitValidationMode) {\r\n\t\t\treturn visitor.visitValidationMode(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ConditionClauseContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic CONDITION(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.CONDITION, 0);\r\n\t}\r\n\tpublic componentID_list(): ComponentIDContext[] {\r\n\t\treturn this.getTypedRuleContexts(ComponentIDContext) as ComponentIDContext[];\r\n\t}\r\n\tpublic componentID(i: number): ComponentIDContext {\r\n\t\treturn this.getTypedRuleContext(ComponentIDContext, i) as ComponentIDContext;\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_conditionClause;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitConditionClause) {\r\n\t\t\treturn visitor.visitConditionClause(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class InputModeContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic DATASET(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DATASET, 0);\r\n\t}\r\n\tpublic DATASET_PRIORITY(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DATASET_PRIORITY, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_inputMode;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitInputMode) {\r\n\t\t\treturn visitor.visitInputMode(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ImbalanceExprContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic IMBALANCE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IMBALANCE, 0);\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_imbalanceExpr;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitImbalanceExpr) {\r\n\t\t\treturn visitor.visitImbalanceExpr(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class InputModeHierarchyContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic RULE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RULE, 0);\r\n\t}\r\n\tpublic DATASET(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DATASET, 0);\r\n\t}\r\n\tpublic RULE_PRIORITY(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.RULE_PRIORITY, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_inputModeHierarchy;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitInputModeHierarchy) {\r\n\t\t\treturn visitor.visitInputModeHierarchy(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class OutputModeHierarchyContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic COMPUTED(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMPUTED, 0);\r\n\t}\r\n\tpublic ALL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ALL, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_outputModeHierarchy;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitOutputModeHierarchy) {\r\n\t\t\treturn visitor.visitOutputModeHierarchy(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class AliasContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic IDENTIFIER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IDENTIFIER, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_alias;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitAlias) {\r\n\t\t\treturn visitor.visitAlias(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class VarIDContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic IDENTIFIER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IDENTIFIER, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_varID;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitVarID) {\r\n\t\t\treturn visitor.visitVarID(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class SimpleComponentIdContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic IDENTIFIER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IDENTIFIER, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_simpleComponentId;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitSimpleComponentId) {\r\n\t\t\treturn visitor.visitSimpleComponentId(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ComponentIDContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic IDENTIFIER_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.IDENTIFIER);\r\n\t}\r\n\tpublic IDENTIFIER(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IDENTIFIER, i);\r\n\t}\r\n\tpublic MEMBERSHIP(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MEMBERSHIP, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_componentID;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitComponentID) {\r\n\t\t\treturn visitor.visitComponentID(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class InexprContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_inexpr;\r\n\t}\r\n\tpublic copyFrom(ctx: InexprContext): void {\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n}\r\nexport class SetExprContext extends InexprContext {\r\n\tconstructor(parser: Vtl, ctx: InexprContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic GLPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.GLPAREN, 0);\r\n\t}\r\n\tpublic constant_list(): ConstantContext[] {\r\n\t\treturn this.getTypedRuleContexts(ConstantContext) as ConstantContext[];\r\n\t}\r\n\tpublic constant(i: number): ConstantContext {\r\n\t\treturn this.getTypedRuleContext(ConstantContext, i) as ConstantContext;\r\n\t}\r\n\tpublic GRPAREN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.GRPAREN, 0);\r\n\t}\r\n\tpublic COMMA_list(): TerminalNode[] {\r\n\t    \treturn this.getTokens(Vtl.COMMA);\r\n\t}\r\n\tpublic COMMA(i: number): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMMA, i);\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitSetExpr) {\r\n\t\t\treturn visitor.visitSetExpr(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\nexport class ValueDomainExprContext extends InexprContext {\r\n\tconstructor(parser: Vtl, ctx: InexprContext) {\r\n\t\tsuper(parser, ctx.parentCtx, ctx.invokingState);\r\n\t\tsuper.copyFrom(ctx);\r\n\t}\r\n\tpublic valueDomainID(): ValueDomainIDContext {\r\n\t\treturn this.getTypedRuleContext(ValueDomainIDContext, 0) as ValueDomainIDContext;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitValueDomainExpr) {\r\n\t\t\treturn visitor.visitValueDomainExpr(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ErCodeContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic ERRORCODE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ERRORCODE, 0);\r\n\t}\r\n\tpublic constant(): ConstantContext {\r\n\t\treturn this.getTypedRuleContext(ConstantContext, 0) as ConstantContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_erCode;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitErCode) {\r\n\t\t\treturn visitor.visitErCode(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ErLevelContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic ERRORLEVEL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ERRORLEVEL, 0);\r\n\t}\r\n\tpublic constant(): ConstantContext {\r\n\t\treturn this.getTypedRuleContext(ConstantContext, 0) as ConstantContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_erLevel;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitErLevel) {\r\n\t\t\treturn visitor.visitErLevel(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ComparisonOperandContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic MT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MT, 0);\r\n\t}\r\n\tpublic ME(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ME, 0);\r\n\t}\r\n\tpublic LE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LE, 0);\r\n\t}\r\n\tpublic LT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.LT, 0);\r\n\t}\r\n\tpublic EQ(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.EQ, 0);\r\n\t}\r\n\tpublic NEQ(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.NEQ, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_comparisonOperand;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitComparisonOperand) {\r\n\t\t\treturn visitor.visitComparisonOperand(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class OptionalExprContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic expr(): ExprContext {\r\n\t\treturn this.getTypedRuleContext(ExprContext, 0) as ExprContext;\r\n\t}\r\n\tpublic OPTIONAL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.OPTIONAL, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_optionalExpr;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitOptionalExpr) {\r\n\t\t\treturn visitor.visitOptionalExpr(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class OptionalExprComponentContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic exprComponent(): ExprComponentContext {\r\n\t\treturn this.getTypedRuleContext(ExprComponentContext, 0) as ExprComponentContext;\r\n\t}\r\n\tpublic OPTIONAL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.OPTIONAL, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_optionalExprComponent;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitOptionalExprComponent) {\r\n\t\t\treturn visitor.visitOptionalExprComponent(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ComponentRoleContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic MEASURE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.MEASURE, 0);\r\n\t}\r\n\tpublic COMPONENT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.COMPONENT, 0);\r\n\t}\r\n\tpublic DIMENSION(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DIMENSION, 0);\r\n\t}\r\n\tpublic ATTRIBUTE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ATTRIBUTE, 0);\r\n\t}\r\n\tpublic viralAttribute(): ViralAttributeContext {\r\n\t\treturn this.getTypedRuleContext(ViralAttributeContext, 0) as ViralAttributeContext;\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_componentRole;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitComponentRole) {\r\n\t\t\treturn visitor.visitComponentRole(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ViralAttributeContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic VIRAL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.VIRAL, 0);\r\n\t}\r\n\tpublic ATTRIBUTE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ATTRIBUTE, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_viralAttribute;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitViralAttribute) {\r\n\t\t\treturn visitor.visitViralAttribute(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ValueDomainIDContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic IDENTIFIER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IDENTIFIER, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_valueDomainID;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitValueDomainID) {\r\n\t\t\treturn visitor.visitValueDomainID(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class OperatorIDContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic IDENTIFIER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IDENTIFIER, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_operatorID;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitOperatorID) {\r\n\t\t\treturn visitor.visitOperatorID(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class RoutineNameContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic IDENTIFIER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.IDENTIFIER, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_routineName;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitRoutineName) {\r\n\t\t\treturn visitor.visitRoutineName(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ConstantContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic INTEGER_CONSTANT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.INTEGER_CONSTANT, 0);\r\n\t}\r\n\tpublic NUMBER_CONSTANT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.NUMBER_CONSTANT, 0);\r\n\t}\r\n\tpublic BOOLEAN_CONSTANT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.BOOLEAN_CONSTANT, 0);\r\n\t}\r\n\tpublic STRING_CONSTANT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.STRING_CONSTANT, 0);\r\n\t}\r\n\tpublic NULL_CONSTANT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.NULL_CONSTANT, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_constant;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitConstant) {\r\n\t\t\treturn visitor.visitConstant(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class BasicScalarTypeContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic STRING(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.STRING, 0);\r\n\t}\r\n\tpublic INTEGER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.INTEGER, 0);\r\n\t}\r\n\tpublic NUMBER(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.NUMBER, 0);\r\n\t}\r\n\tpublic BOOLEAN(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.BOOLEAN, 0);\r\n\t}\r\n\tpublic DATE(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DATE, 0);\r\n\t}\r\n\tpublic TIME(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.TIME, 0);\r\n\t}\r\n\tpublic TIME_PERIOD(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.TIME_PERIOD, 0);\r\n\t}\r\n\tpublic DURATION(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.DURATION, 0);\r\n\t}\r\n\tpublic SCALAR(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.SCALAR, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_basicScalarType;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitBasicScalarType) {\r\n\t\t\treturn visitor.visitBasicScalarType(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class RetainTypeContext extends ParserRuleContext {\r\n\tconstructor(parser?: Vtl, parent?: ParserRuleContext, invokingState?: number) {\r\n\t\tsuper(parent, invokingState);\r\n    \tthis.parser = parser;\r\n\t}\r\n\tpublic BOOLEAN_CONSTANT(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.BOOLEAN_CONSTANT, 0);\r\n\t}\r\n\tpublic ALL(): TerminalNode {\r\n\t\treturn this.getToken(Vtl.ALL, 0);\r\n\t}\r\n    public get ruleIndex(): number {\r\n    \treturn Vtl.RULE_retainType;\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: VtlVisitor<Result>): Result {\r\n\t\tif (visitor.visitRetainType) {\r\n\t\t\treturn visitor.visitRetainType(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n", "// Generated from it/bancaditalia/oss/vtl/grammar/VtlTokens.g4 by ANTLR 4.13.1\r\n// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols\r\nimport {\r\n\tATN,\r\n\tATNDeserializer,\r\n\tCharStream,\r\n\tDecisionState, DFA,\r\n\tLexer,\r\n\tLexerATNSimulator,\r\n\tRuleContext,\r\n\tPredictionContextCache,\r\n\tToken\r\n} from \"antlr4\";\r\nexport default class VtlTokens extends Lexer {\r\n\tpublic static readonly LPAREN = 1;\r\n\tpublic static readonly RPAREN = 2;\r\n\tpublic static readonly QLPAREN = 3;\r\n\tpublic static readonly QRPAREN = 4;\r\n\tpublic static readonly GLPAREN = 5;\r\n\tpublic static readonly GRPAREN = 6;\r\n\tpublic static readonly EQ = 7;\r\n\tpublic static readonly LT = 8;\r\n\tpublic static readonly MT = 9;\r\n\tpublic static readonly ME = 10;\r\n\tpublic static readonly NEQ = 11;\r\n\tpublic static readonly LE = 12;\r\n\tpublic static readonly PLUS = 13;\r\n\tpublic static readonly MINUS = 14;\r\n\tpublic static readonly MUL = 15;\r\n\tpublic static readonly DIV = 16;\r\n\tpublic static readonly COMMA = 17;\r\n\tpublic static readonly POINTER = 18;\r\n\tpublic static readonly ASSIGN = 19;\r\n\tpublic static readonly MEMBERSHIP = 20;\r\n\tpublic static readonly COLON = 21;\r\n\tpublic static readonly EVAL = 22;\r\n\tpublic static readonly IF = 23;\r\n\tpublic static readonly THEN = 24;\r\n\tpublic static readonly ELSE = 25;\r\n\tpublic static readonly USING = 26;\r\n\tpublic static readonly WITH = 27;\r\n\tpublic static readonly CURRENT_DATE = 28;\r\n\tpublic static readonly ON = 29;\r\n\tpublic static readonly DROP = 30;\r\n\tpublic static readonly KEEP = 31;\r\n\tpublic static readonly CALC = 32;\r\n\tpublic static readonly ATTRCALC = 33;\r\n\tpublic static readonly RENAME = 34;\r\n\tpublic static readonly AS = 35;\r\n\tpublic static readonly AND = 36;\r\n\tpublic static readonly OR = 37;\r\n\tpublic static readonly XOR = 38;\r\n\tpublic static readonly NOT = 39;\r\n\tpublic static readonly BETWEEN = 40;\r\n\tpublic static readonly IN = 41;\r\n\tpublic static readonly NOT_IN = 42;\r\n\tpublic static readonly NULL_CONSTANT = 43;\r\n\tpublic static readonly ISNULL = 44;\r\n\tpublic static readonly EX = 45;\r\n\tpublic static readonly UNION = 46;\r\n\tpublic static readonly DIFF = 47;\r\n\tpublic static readonly SYMDIFF = 48;\r\n\tpublic static readonly INTERSECT = 49;\r\n\tpublic static readonly KEYS = 50;\r\n\tpublic static readonly INTYEAR = 51;\r\n\tpublic static readonly INTMONTH = 52;\r\n\tpublic static readonly INTDAY = 53;\r\n\tpublic static readonly CHECK = 54;\r\n\tpublic static readonly EXISTS_IN = 55;\r\n\tpublic static readonly TO = 56;\r\n\tpublic static readonly RETURN = 57;\r\n\tpublic static readonly IMBALANCE = 58;\r\n\tpublic static readonly ERRORCODE = 59;\r\n\tpublic static readonly ALL = 60;\r\n\tpublic static readonly AGGREGATE = 61;\r\n\tpublic static readonly ERRORLEVEL = 62;\r\n\tpublic static readonly ORDER = 63;\r\n\tpublic static readonly BY = 64;\r\n\tpublic static readonly RANK = 65;\r\n\tpublic static readonly ASC = 66;\r\n\tpublic static readonly DESC = 67;\r\n\tpublic static readonly MIN = 68;\r\n\tpublic static readonly MAX = 69;\r\n\tpublic static readonly FIRST = 70;\r\n\tpublic static readonly LAST = 71;\r\n\tpublic static readonly INDEXOF = 72;\r\n\tpublic static readonly ABS = 73;\r\n\tpublic static readonly KEY = 74;\r\n\tpublic static readonly LN = 75;\r\n\tpublic static readonly LOG = 76;\r\n\tpublic static readonly TRUNC = 77;\r\n\tpublic static readonly ROUND = 78;\r\n\tpublic static readonly POWER = 79;\r\n\tpublic static readonly MOD = 80;\r\n\tpublic static readonly LEN = 81;\r\n\tpublic static readonly CONCAT = 82;\r\n\tpublic static readonly TRIM = 83;\r\n\tpublic static readonly UCASE = 84;\r\n\tpublic static readonly LCASE = 85;\r\n\tpublic static readonly SUBSTR = 86;\r\n\tpublic static readonly SUM = 87;\r\n\tpublic static readonly AVG = 88;\r\n\tpublic static readonly MEDIAN = 89;\r\n\tpublic static readonly COUNT = 90;\r\n\tpublic static readonly DIMENSION = 91;\r\n\tpublic static readonly MEASURE = 92;\r\n\tpublic static readonly ATTRIBUTE = 93;\r\n\tpublic static readonly FILTER = 94;\r\n\tpublic static readonly MERGE = 95;\r\n\tpublic static readonly EXP = 96;\r\n\tpublic static readonly ROLE = 97;\r\n\tpublic static readonly VIRAL = 98;\r\n\tpublic static readonly CHARSET_MATCH = 99;\r\n\tpublic static readonly TYPE = 100;\r\n\tpublic static readonly NVL = 101;\r\n\tpublic static readonly HIERARCHY = 102;\r\n\tpublic static readonly OPTIONAL = 103;\r\n\tpublic static readonly INVALID = 104;\r\n\tpublic static readonly VALUE_DOMAIN = 105;\r\n\tpublic static readonly VARIABLE = 106;\r\n\tpublic static readonly DATA = 107;\r\n\tpublic static readonly STRUCTURE = 108;\r\n\tpublic static readonly DATASET = 109;\r\n\tpublic static readonly OPERATOR = 110;\r\n\tpublic static readonly DEFINE = 111;\r\n\tpublic static readonly PUT_SYMBOL = 112;\r\n\tpublic static readonly DATAPOINT = 113;\r\n\tpublic static readonly HIERARCHICAL = 114;\r\n\tpublic static readonly RULESET = 115;\r\n\tpublic static readonly RULE = 116;\r\n\tpublic static readonly END = 117;\r\n\tpublic static readonly ALTER_DATASET = 118;\r\n\tpublic static readonly LTRIM = 119;\r\n\tpublic static readonly RTRIM = 120;\r\n\tpublic static readonly INSTR = 121;\r\n\tpublic static readonly REPLACE = 122;\r\n\tpublic static readonly CEIL = 123;\r\n\tpublic static readonly FLOOR = 124;\r\n\tpublic static readonly SQRT = 125;\r\n\tpublic static readonly ANY = 126;\r\n\tpublic static readonly SETDIFF = 127;\r\n\tpublic static readonly STDDEV_POP = 128;\r\n\tpublic static readonly STDDEV_SAMP = 129;\r\n\tpublic static readonly VAR_POP = 130;\r\n\tpublic static readonly VAR_SAMP = 131;\r\n\tpublic static readonly GROUP = 132;\r\n\tpublic static readonly EXCEPT = 133;\r\n\tpublic static readonly HAVING = 134;\r\n\tpublic static readonly FIRST_VALUE = 135;\r\n\tpublic static readonly LAST_VALUE = 136;\r\n\tpublic static readonly LAG = 137;\r\n\tpublic static readonly LEAD = 138;\r\n\tpublic static readonly RATIO_TO_REPORT = 139;\r\n\tpublic static readonly OVER = 140;\r\n\tpublic static readonly PRECEDING = 141;\r\n\tpublic static readonly FOLLOWING = 142;\r\n\tpublic static readonly UNBOUNDED = 143;\r\n\tpublic static readonly PARTITION = 144;\r\n\tpublic static readonly ROWS = 145;\r\n\tpublic static readonly RANGE = 146;\r\n\tpublic static readonly CURRENT = 147;\r\n\tpublic static readonly VALID = 148;\r\n\tpublic static readonly FILL_TIME_SERIES = 149;\r\n\tpublic static readonly FLOW_TO_STOCK = 150;\r\n\tpublic static readonly STOCK_TO_FLOW = 151;\r\n\tpublic static readonly TIMESHIFT = 152;\r\n\tpublic static readonly MEASURES = 153;\r\n\tpublic static readonly NO_MEASURES = 154;\r\n\tpublic static readonly CONDITION = 155;\r\n\tpublic static readonly BOOLEAN = 156;\r\n\tpublic static readonly DATE = 157;\r\n\tpublic static readonly TIME_PERIOD = 158;\r\n\tpublic static readonly NUMBER = 159;\r\n\tpublic static readonly STRING = 160;\r\n\tpublic static readonly TIME = 161;\r\n\tpublic static readonly INTEGER = 162;\r\n\tpublic static readonly FLOAT = 163;\r\n\tpublic static readonly LIST = 164;\r\n\tpublic static readonly RECORD = 165;\r\n\tpublic static readonly RESTRICT = 166;\r\n\tpublic static readonly YYYY = 167;\r\n\tpublic static readonly MM = 168;\r\n\tpublic static readonly DD = 169;\r\n\tpublic static readonly MAX_LENGTH = 170;\r\n\tpublic static readonly REGEXP = 171;\r\n\tpublic static readonly IS = 172;\r\n\tpublic static readonly WHEN = 173;\r\n\tpublic static readonly FROM = 174;\r\n\tpublic static readonly AGGREGATES = 175;\r\n\tpublic static readonly POINTS = 176;\r\n\tpublic static readonly POINT = 177;\r\n\tpublic static readonly TOTAL = 178;\r\n\tpublic static readonly PARTIAL = 179;\r\n\tpublic static readonly ALWAYS = 180;\r\n\tpublic static readonly INNER_JOIN = 181;\r\n\tpublic static readonly LEFT_JOIN = 182;\r\n\tpublic static readonly CROSS_JOIN = 183;\r\n\tpublic static readonly FULL_JOIN = 184;\r\n\tpublic static readonly MAPS_FROM = 185;\r\n\tpublic static readonly MAPS_TO = 186;\r\n\tpublic static readonly MAP_TO = 187;\r\n\tpublic static readonly MAP_FROM = 188;\r\n\tpublic static readonly RETURNS = 189;\r\n\tpublic static readonly PIVOT = 190;\r\n\tpublic static readonly CUSTOMPIVOT = 191;\r\n\tpublic static readonly UNPIVOT = 192;\r\n\tpublic static readonly SUBSPACE = 193;\r\n\tpublic static readonly APPLY = 194;\r\n\tpublic static readonly CONDITIONED = 195;\r\n\tpublic static readonly PERIOD_INDICATOR = 196;\r\n\tpublic static readonly SINGLE = 197;\r\n\tpublic static readonly DURATION = 198;\r\n\tpublic static readonly TIME_AGG = 199;\r\n\tpublic static readonly UNIT = 200;\r\n\tpublic static readonly VALUE = 201;\r\n\tpublic static readonly VALUEDOMAINS = 202;\r\n\tpublic static readonly VARIABLES = 203;\r\n\tpublic static readonly INPUT = 204;\r\n\tpublic static readonly OUTPUT = 205;\r\n\tpublic static readonly CAST = 206;\r\n\tpublic static readonly RULE_PRIORITY = 207;\r\n\tpublic static readonly DATASET_PRIORITY = 208;\r\n\tpublic static readonly DEFAULT = 209;\r\n\tpublic static readonly CHECK_DATAPOINT = 210;\r\n\tpublic static readonly CHECK_HIERARCHY = 211;\r\n\tpublic static readonly COMPUTED = 212;\r\n\tpublic static readonly NON_NULL = 213;\r\n\tpublic static readonly NON_ZERO = 214;\r\n\tpublic static readonly PARTIAL_NULL = 215;\r\n\tpublic static readonly PARTIAL_ZERO = 216;\r\n\tpublic static readonly ALWAYS_NULL = 217;\r\n\tpublic static readonly ALWAYS_ZERO = 218;\r\n\tpublic static readonly COMPONENTS = 219;\r\n\tpublic static readonly ALL_MEASURES = 220;\r\n\tpublic static readonly SCALAR = 221;\r\n\tpublic static readonly COMPONENT = 222;\r\n\tpublic static readonly DATAPOINT_ON_VD = 223;\r\n\tpublic static readonly DATAPOINT_ON_VAR = 224;\r\n\tpublic static readonly HIERARCHICAL_ON_VD = 225;\r\n\tpublic static readonly HIERARCHICAL_ON_VAR = 226;\r\n\tpublic static readonly SET = 227;\r\n\tpublic static readonly LANGUAGE = 228;\r\n\tpublic static readonly INTEGER_CONSTANT = 229;\r\n\tpublic static readonly NUMBER_CONSTANT = 230;\r\n\tpublic static readonly BOOLEAN_CONSTANT = 231;\r\n\tpublic static readonly STRING_CONSTANT = 232;\r\n\tpublic static readonly TIME_UNIT = 233;\r\n\tpublic static readonly IDENTIFIER = 234;\r\n\tpublic static readonly WS = 235;\r\n\tpublic static readonly EOL = 236;\r\n\tpublic static readonly ML_COMMENT = 237;\r\n\tpublic static readonly SL_COMMENT = 238;\r\n\tpublic static readonly EOF = Token.EOF;\r\n\r\n\tpublic static readonly channelNames: string[] = [ \"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\" ];\r\n\tpublic static readonly literalNames: (string | null)[] = [ null, \"'('\", \r\n                                                            \"')'\", \"'['\", \r\n                                                            \"']'\", \"'{'\", \r\n                                                            \"'}'\", \"'='\", \r\n                                                            \"'<'\", \"'>'\", \r\n                                                            \"'>='\", \"'<>'\", \r\n                                                            \"'<='\", \"'+'\", \r\n                                                            \"'-'\", \"'*'\", \r\n                                                            \"'/'\", \"','\", \r\n                                                            \"'->'\", \"':='\", \r\n                                                            \"'#'\", \"':'\", \r\n                                                            \"'eval'\", \"'if'\", \r\n                                                            \"'then'\", \"'else'\", \r\n                                                            \"'using'\", \"'with'\", \r\n                                                            \"'current_date'\", \r\n                                                            \"'on'\", \"'drop'\", \r\n                                                            \"'keep'\", \"'calc'\", \r\n                                                            \"'attrcalc'\", \r\n                                                            \"'rename'\", \r\n                                                            \"'as'\", \"'and'\", \r\n                                                            \"'or'\", \"'xor'\", \r\n                                                            \"'not'\", \"'between'\", \r\n                                                            \"'in'\", \"'not_in'\", \r\n                                                            \"'null'\", \"'isnull'\", \r\n                                                            \"'ex'\", \"'union'\", \r\n                                                            \"'diff'\", \"'symdiff'\", \r\n                                                            \"'intersect'\", \r\n                                                            \"'keys'\", \"'intyear'\", \r\n                                                            \"'intmonth'\", \r\n                                                            \"'intday'\", \r\n                                                            \"'check'\", \"'exists_in'\", \r\n                                                            \"'to'\", \"'return'\", \r\n                                                            \"'imbalance'\", \r\n                                                            \"'errorcode'\", \r\n                                                            \"'all'\", \"'aggr'\", \r\n                                                            \"'errorlevel'\", \r\n                                                            \"'order'\", \"'by'\", \r\n                                                            \"'rank'\", \"'asc'\", \r\n                                                            \"'desc'\", \"'min'\", \r\n                                                            \"'max'\", \"'first'\", \r\n                                                            \"'last'\", \"'indexof'\", \r\n                                                            \"'abs'\", \"'key'\", \r\n                                                            \"'ln'\", \"'log'\", \r\n                                                            \"'trunc'\", \"'round'\", \r\n                                                            \"'power'\", \"'mod'\", \r\n                                                            \"'length'\", \r\n                                                            \"'||'\", \"'trim'\", \r\n                                                            \"'upper'\", \"'lower'\", \r\n                                                            \"'substr'\", \r\n                                                            \"'sum'\", \"'avg'\", \r\n                                                            \"'median'\", \r\n                                                            \"'count'\", \"'identifier'\", \r\n                                                            \"'measure'\", \r\n                                                            \"'attribute'\", \r\n                                                            \"'filter'\", \r\n                                                            \"'merge'\", \"'exp'\", \r\n                                                            \"'componentRole'\", \r\n                                                            \"'viral'\", \"'match_characters'\", \r\n                                                            \"'type'\", \"'nvl'\", \r\n                                                            \"'hierarchy'\", \r\n                                                            \"'_'\", \"'invalid'\", \r\n                                                            \"'valuedomain'\", \r\n                                                            \"'variable'\", \r\n                                                            \"'data'\", \"'structure'\", \r\n                                                            \"'dataset'\", \r\n                                                            \"'operator'\", \r\n                                                            \"'define'\", \r\n                                                            \"'<-'\", \"'datapoint'\", \r\n                                                            \"'hierarchical'\", \r\n                                                            \"'ruleset'\", \r\n                                                            \"'rule'\", \"'end'\", \r\n                                                            \"'alterDataset'\", \r\n                                                            \"'ltrim'\", \"'rtrim'\", \r\n                                                            \"'instr'\", \"'replace'\", \r\n                                                            \"'ceil'\", \"'floor'\", \r\n                                                            \"'sqrt'\", \"'any'\", \r\n                                                            \"'setdiff'\", \r\n                                                            \"'stddev_pop'\", \r\n                                                            \"'stddev_samp'\", \r\n                                                            \"'var_pop'\", \r\n                                                            \"'var_samp'\", \r\n                                                            \"'group'\", \"'except'\", \r\n                                                            \"'having'\", \r\n                                                            \"'first_value'\", \r\n                                                            \"'last_value'\", \r\n                                                            \"'lag'\", \"'lead'\", \r\n                                                            \"'ratio_to_report'\", \r\n                                                            \"'over'\", \"'preceding'\", \r\n                                                            \"'following'\", \r\n                                                            \"'unbounded'\", \r\n                                                            \"'partition'\", \r\n                                                            \"'rows'\", \"'range'\", \r\n                                                            \"'current'\", \r\n                                                            \"'valid'\", \"'fill_time_series'\", \r\n                                                            \"'flow_to_stock'\", \r\n                                                            \"'stock_to_flow'\", \r\n                                                            \"'timeshift'\", \r\n                                                            \"'measures'\", \r\n                                                            \"'no_measures'\", \r\n                                                            \"'condition'\", \r\n                                                            \"'boolean'\", \r\n                                                            \"'date'\", \"'time_period'\", \r\n                                                            \"'number'\", \r\n                                                            \"'string'\", \r\n                                                            \"'time'\", \"'integer'\", \r\n                                                            \"'float'\", \"'list'\", \r\n                                                            \"'record'\", \r\n                                                            \"'restrict'\", \r\n                                                            \"'yyyy'\", \"'mm'\", \r\n                                                            \"'dd'\", \"'maxLength'\", \r\n                                                            \"'regexp'\", \r\n                                                            \"'is'\", \"'when'\", \r\n                                                            \"'from'\", \"'aggregates'\", \r\n                                                            \"'points'\", \r\n                                                            \"'point'\", \"'total'\", \r\n                                                            \"'partial'\", \r\n                                                            \"'always'\", \r\n                                                            \"'inner_join'\", \r\n                                                            \"'left_join'\", \r\n                                                            \"'cross_join'\", \r\n                                                            \"'full_join'\", \r\n                                                            \"'maps_from'\", \r\n                                                            \"'maps_to'\", \r\n                                                            \"'map_to'\", \r\n                                                            \"'map_from'\", \r\n                                                            \"'returns'\", \r\n                                                            \"'pivot'\", \"'customPivot'\", \r\n                                                            \"'unpivot'\", \r\n                                                            \"'sub'\", \"'apply'\", \r\n                                                            \"'conditioned'\", \r\n                                                            \"'period_indicator'\", \r\n                                                            \"'single'\", \r\n                                                            \"'duration'\", \r\n                                                            \"'time_agg'\", \r\n                                                            \"'unit'\", \"'Value'\", \r\n                                                            \"'valuedomains'\", \r\n                                                            \"'variables'\", \r\n                                                            \"'input'\", \"'output'\", \r\n                                                            \"'cast'\", \"'rule_priority'\", \r\n                                                            \"'dataset_priority'\", \r\n                                                            \"'default'\", \r\n                                                            \"'check_datapoint'\", \r\n                                                            \"'check_hierarchy'\", \r\n                                                            \"'computed'\", \r\n                                                            \"'non_null'\", \r\n                                                            \"'non_zero'\", \r\n                                                            \"'partial_null'\", \r\n                                                            \"'partial_zero'\", \r\n                                                            \"'always_null'\", \r\n                                                            \"'always_zero'\", \r\n                                                            \"'components'\", \r\n                                                            \"'all_measures'\", \r\n                                                            \"'scalar'\", \r\n                                                            \"'component'\", \r\n                                                            \"'datapoint_on_valuedomains'\", \r\n                                                            \"'datapoint_on_variables'\", \r\n                                                            \"'hierarchical_on_valuedomains'\", \r\n                                                            \"'hierarchical_on_variables'\", \r\n                                                            \"'set'\", \"'language'\", \r\n                                                            null, null, \r\n                                                            null, null, \r\n                                                            null, null, \r\n                                                            null, \"';'\" ];\r\n\tpublic static readonly symbolicNames: (string | null)[] = [ null, \"LPAREN\", \r\n                                                             \"RPAREN\", \"QLPAREN\", \r\n                                                             \"QRPAREN\", \r\n                                                             \"GLPAREN\", \r\n                                                             \"GRPAREN\", \r\n                                                             \"EQ\", \"LT\", \r\n                                                             \"MT\", \"ME\", \r\n                                                             \"NEQ\", \"LE\", \r\n                                                             \"PLUS\", \"MINUS\", \r\n                                                             \"MUL\", \"DIV\", \r\n                                                             \"COMMA\", \"POINTER\", \r\n                                                             \"ASSIGN\", \"MEMBERSHIP\", \r\n                                                             \"COLON\", \"EVAL\", \r\n                                                             \"IF\", \"THEN\", \r\n                                                             \"ELSE\", \"USING\", \r\n                                                             \"WITH\", \"CURRENT_DATE\", \r\n                                                             \"ON\", \"DROP\", \r\n                                                             \"KEEP\", \"CALC\", \r\n                                                             \"ATTRCALC\", \r\n                                                             \"RENAME\", \"AS\", \r\n                                                             \"AND\", \"OR\", \r\n                                                             \"XOR\", \"NOT\", \r\n                                                             \"BETWEEN\", \r\n                                                             \"IN\", \"NOT_IN\", \r\n                                                             \"NULL_CONSTANT\", \r\n                                                             \"ISNULL\", \"EX\", \r\n                                                             \"UNION\", \"DIFF\", \r\n                                                             \"SYMDIFF\", \r\n                                                             \"INTERSECT\", \r\n                                                             \"KEYS\", \"INTYEAR\", \r\n                                                             \"INTMONTH\", \r\n                                                             \"INTDAY\", \"CHECK\", \r\n                                                             \"EXISTS_IN\", \r\n                                                             \"TO\", \"RETURN\", \r\n                                                             \"IMBALANCE\", \r\n                                                             \"ERRORCODE\", \r\n                                                             \"ALL\", \"AGGREGATE\", \r\n                                                             \"ERRORLEVEL\", \r\n                                                             \"ORDER\", \"BY\", \r\n                                                             \"RANK\", \"ASC\", \r\n                                                             \"DESC\", \"MIN\", \r\n                                                             \"MAX\", \"FIRST\", \r\n                                                             \"LAST\", \"INDEXOF\", \r\n                                                             \"ABS\", \"KEY\", \r\n                                                             \"LN\", \"LOG\", \r\n                                                             \"TRUNC\", \"ROUND\", \r\n                                                             \"POWER\", \"MOD\", \r\n                                                             \"LEN\", \"CONCAT\", \r\n                                                             \"TRIM\", \"UCASE\", \r\n                                                             \"LCASE\", \"SUBSTR\", \r\n                                                             \"SUM\", \"AVG\", \r\n                                                             \"MEDIAN\", \"COUNT\", \r\n                                                             \"DIMENSION\", \r\n                                                             \"MEASURE\", \r\n                                                             \"ATTRIBUTE\", \r\n                                                             \"FILTER\", \"MERGE\", \r\n                                                             \"EXP\", \"ROLE\", \r\n                                                             \"VIRAL\", \"CHARSET_MATCH\", \r\n                                                             \"TYPE\", \"NVL\", \r\n                                                             \"HIERARCHY\", \r\n                                                             \"OPTIONAL\", \r\n                                                             \"INVALID\", \r\n                                                             \"VALUE_DOMAIN\", \r\n                                                             \"VARIABLE\", \r\n                                                             \"DATA\", \"STRUCTURE\", \r\n                                                             \"DATASET\", \r\n                                                             \"OPERATOR\", \r\n                                                             \"DEFINE\", \"PUT_SYMBOL\", \r\n                                                             \"DATAPOINT\", \r\n                                                             \"HIERARCHICAL\", \r\n                                                             \"RULESET\", \r\n                                                             \"RULE\", \"END\", \r\n                                                             \"ALTER_DATASET\", \r\n                                                             \"LTRIM\", \"RTRIM\", \r\n                                                             \"INSTR\", \"REPLACE\", \r\n                                                             \"CEIL\", \"FLOOR\", \r\n                                                             \"SQRT\", \"ANY\", \r\n                                                             \"SETDIFF\", \r\n                                                             \"STDDEV_POP\", \r\n                                                             \"STDDEV_SAMP\", \r\n                                                             \"VAR_POP\", \r\n                                                             \"VAR_SAMP\", \r\n                                                             \"GROUP\", \"EXCEPT\", \r\n                                                             \"HAVING\", \"FIRST_VALUE\", \r\n                                                             \"LAST_VALUE\", \r\n                                                             \"LAG\", \"LEAD\", \r\n                                                             \"RATIO_TO_REPORT\", \r\n                                                             \"OVER\", \"PRECEDING\", \r\n                                                             \"FOLLOWING\", \r\n                                                             \"UNBOUNDED\", \r\n                                                             \"PARTITION\", \r\n                                                             \"ROWS\", \"RANGE\", \r\n                                                             \"CURRENT\", \r\n                                                             \"VALID\", \"FILL_TIME_SERIES\", \r\n                                                             \"FLOW_TO_STOCK\", \r\n                                                             \"STOCK_TO_FLOW\", \r\n                                                             \"TIMESHIFT\", \r\n                                                             \"MEASURES\", \r\n                                                             \"NO_MEASURES\", \r\n                                                             \"CONDITION\", \r\n                                                             \"BOOLEAN\", \r\n                                                             \"DATE\", \"TIME_PERIOD\", \r\n                                                             \"NUMBER\", \"STRING\", \r\n                                                             \"TIME\", \"INTEGER\", \r\n                                                             \"FLOAT\", \"LIST\", \r\n                                                             \"RECORD\", \"RESTRICT\", \r\n                                                             \"YYYY\", \"MM\", \r\n                                                             \"DD\", \"MAX_LENGTH\", \r\n                                                             \"REGEXP\", \"IS\", \r\n                                                             \"WHEN\", \"FROM\", \r\n                                                             \"AGGREGATES\", \r\n                                                             \"POINTS\", \"POINT\", \r\n                                                             \"TOTAL\", \"PARTIAL\", \r\n                                                             \"ALWAYS\", \"INNER_JOIN\", \r\n                                                             \"LEFT_JOIN\", \r\n                                                             \"CROSS_JOIN\", \r\n                                                             \"FULL_JOIN\", \r\n                                                             \"MAPS_FROM\", \r\n                                                             \"MAPS_TO\", \r\n                                                             \"MAP_TO\", \"MAP_FROM\", \r\n                                                             \"RETURNS\", \r\n                                                             \"PIVOT\", \"CUSTOMPIVOT\", \r\n                                                             \"UNPIVOT\", \r\n                                                             \"SUBSPACE\", \r\n                                                             \"APPLY\", \"CONDITIONED\", \r\n                                                             \"PERIOD_INDICATOR\", \r\n                                                             \"SINGLE\", \"DURATION\", \r\n                                                             \"TIME_AGG\", \r\n                                                             \"UNIT\", \"VALUE\", \r\n                                                             \"VALUEDOMAINS\", \r\n                                                             \"VARIABLES\", \r\n                                                             \"INPUT\", \"OUTPUT\", \r\n                                                             \"CAST\", \"RULE_PRIORITY\", \r\n                                                             \"DATASET_PRIORITY\", \r\n                                                             \"DEFAULT\", \r\n                                                             \"CHECK_DATAPOINT\", \r\n                                                             \"CHECK_HIERARCHY\", \r\n                                                             \"COMPUTED\", \r\n                                                             \"NON_NULL\", \r\n                                                             \"NON_ZERO\", \r\n                                                             \"PARTIAL_NULL\", \r\n                                                             \"PARTIAL_ZERO\", \r\n                                                             \"ALWAYS_NULL\", \r\n                                                             \"ALWAYS_ZERO\", \r\n                                                             \"COMPONENTS\", \r\n                                                             \"ALL_MEASURES\", \r\n                                                             \"SCALAR\", \"COMPONENT\", \r\n                                                             \"DATAPOINT_ON_VD\", \r\n                                                             \"DATAPOINT_ON_VAR\", \r\n                                                             \"HIERARCHICAL_ON_VD\", \r\n                                                             \"HIERARCHICAL_ON_VAR\", \r\n                                                             \"SET\", \"LANGUAGE\", \r\n                                                             \"INTEGER_CONSTANT\", \r\n                                                             \"NUMBER_CONSTANT\", \r\n                                                             \"BOOLEAN_CONSTANT\", \r\n                                                             \"STRING_CONSTANT\", \r\n                                                             \"TIME_UNIT\", \r\n                                                             \"IDENTIFIER\", \r\n                                                             \"WS\", \"EOL\", \r\n                                                             \"ML_COMMENT\", \r\n                                                             \"SL_COMMENT\" ];\r\n\tpublic static readonly modeNames: string[] = [ \"DEFAULT_MODE\", ];\r\n\r\n\tpublic static readonly ruleNames: string[] = [\r\n\t\t\"LPAREN\", \"RPAREN\", \"QLPAREN\", \"QRPAREN\", \"GLPAREN\", \"GRPAREN\", \"EQ\", \r\n\t\t\"LT\", \"MT\", \"ME\", \"NEQ\", \"LE\", \"PLUS\", \"MINUS\", \"MUL\", \"DIV\", \"COMMA\", \r\n\t\t\"POINTER\", \"ASSIGN\", \"MEMBERSHIP\", \"COLON\", \"EVAL\", \"IF\", \"THEN\", \"ELSE\", \r\n\t\t\"USING\", \"WITH\", \"CURRENT_DATE\", \"ON\", \"DROP\", \"KEEP\", \"CALC\", \"ATTRCALC\", \r\n\t\t\"RENAME\", \"AS\", \"AND\", \"OR\", \"XOR\", \"NOT\", \"BETWEEN\", \"IN\", \"NOT_IN\", \r\n\t\t\"NULL_CONSTANT\", \"ISNULL\", \"EX\", \"UNION\", \"DIFF\", \"SYMDIFF\", \"INTERSECT\", \r\n\t\t\"KEYS\", \"INTYEAR\", \"INTMONTH\", \"INTDAY\", \"CHECK\", \"EXISTS_IN\", \"TO\", \"RETURN\", \r\n\t\t\"IMBALANCE\", \"ERRORCODE\", \"ALL\", \"AGGREGATE\", \"ERRORLEVEL\", \"ORDER\", \"BY\", \r\n\t\t\"RANK\", \"ASC\", \"DESC\", \"MIN\", \"MAX\", \"FIRST\", \"LAST\", \"INDEXOF\", \"ABS\", \r\n\t\t\"KEY\", \"LN\", \"LOG\", \"TRUNC\", \"ROUND\", \"POWER\", \"MOD\", \"LEN\", \"CONCAT\", \r\n\t\t\"TRIM\", \"UCASE\", \"LCASE\", \"SUBSTR\", \"SUM\", \"AVG\", \"MEDIAN\", \"COUNT\", \"DIMENSION\", \r\n\t\t\"MEASURE\", \"ATTRIBUTE\", \"FILTER\", \"MERGE\", \"EXP\", \"ROLE\", \"VIRAL\", \"CHARSET_MATCH\", \r\n\t\t\"TYPE\", \"NVL\", \"HIERARCHY\", \"OPTIONAL\", \"INVALID\", \"VALUE_DOMAIN\", \"VARIABLE\", \r\n\t\t\"DATA\", \"STRUCTURE\", \"DATASET\", \"OPERATOR\", \"DEFINE\", \"PUT_SYMBOL\", \"DATAPOINT\", \r\n\t\t\"HIERARCHICAL\", \"RULESET\", \"RULE\", \"END\", \"ALTER_DATASET\", \"LTRIM\", \"RTRIM\", \r\n\t\t\"INSTR\", \"REPLACE\", \"CEIL\", \"FLOOR\", \"SQRT\", \"ANY\", \"SETDIFF\", \"STDDEV_POP\", \r\n\t\t\"STDDEV_SAMP\", \"VAR_POP\", \"VAR_SAMP\", \"GROUP\", \"EXCEPT\", \"HAVING\", \"FIRST_VALUE\", \r\n\t\t\"LAST_VALUE\", \"LAG\", \"LEAD\", \"RATIO_TO_REPORT\", \"OVER\", \"PRECEDING\", \"FOLLOWING\", \r\n\t\t\"UNBOUNDED\", \"PARTITION\", \"ROWS\", \"RANGE\", \"CURRENT\", \"VALID\", \"FILL_TIME_SERIES\", \r\n\t\t\"FLOW_TO_STOCK\", \"STOCK_TO_FLOW\", \"TIMESHIFT\", \"MEASURES\", \"NO_MEASURES\", \r\n\t\t\"CONDITION\", \"BOOLEAN\", \"DATE\", \"TIME_PERIOD\", \"NUMBER\", \"STRING\", \"TIME\", \r\n\t\t\"INTEGER\", \"FLOAT\", \"LIST\", \"RECORD\", \"RESTRICT\", \"YYYY\", \"MM\", \"DD\", \r\n\t\t\"MAX_LENGTH\", \"REGEXP\", \"IS\", \"WHEN\", \"FROM\", \"AGGREGATES\", \"POINTS\", \r\n\t\t\"POINT\", \"TOTAL\", \"PARTIAL\", \"ALWAYS\", \"INNER_JOIN\", \"LEFT_JOIN\", \"CROSS_JOIN\", \r\n\t\t\"FULL_JOIN\", \"MAPS_FROM\", \"MAPS_TO\", \"MAP_TO\", \"MAP_FROM\", \"RETURNS\", \r\n\t\t\"PIVOT\", \"CUSTOMPIVOT\", \"UNPIVOT\", \"SUBSPACE\", \"APPLY\", \"CONDITIONED\", \r\n\t\t\"PERIOD_INDICATOR\", \"SINGLE\", \"DURATION\", \"TIME_AGG\", \"UNIT\", \"VALUE\", \r\n\t\t\"VALUEDOMAINS\", \"VARIABLES\", \"INPUT\", \"OUTPUT\", \"CAST\", \"RULE_PRIORITY\", \r\n\t\t\"DATASET_PRIORITY\", \"DEFAULT\", \"CHECK_DATAPOINT\", \"CHECK_HIERARCHY\", \"COMPUTED\", \r\n\t\t\"NON_NULL\", \"NON_ZERO\", \"PARTIAL_NULL\", \"PARTIAL_ZERO\", \"ALWAYS_NULL\", \r\n\t\t\"ALWAYS_ZERO\", \"COMPONENTS\", \"ALL_MEASURES\", \"SCALAR\", \"COMPONENT\", \"DATAPOINT_ON_VD\", \r\n\t\t\"DATAPOINT_ON_VAR\", \"HIERARCHICAL_ON_VD\", \"HIERARCHICAL_ON_VAR\", \"SET\", \r\n\t\t\"LANGUAGE\", \"LETTER\", \"DIGITS0_9\", \"INTEGER_CONSTANT\", \"NUMBER_CONSTANT\", \r\n\t\t\"BOOLEAN_CONSTANT\", \"STRING_CONSTANT\", \"TIME_UNIT\", \"IDENTIFIER\", \"WS\", \r\n\t\t\"EOL\", \"ML_COMMENT\", \"SL_COMMENT\",\r\n\t];\r\n\r\n\r\n\tconstructor(input: CharStream) {\r\n\t\tsuper(input);\r\n\t\tthis._interp = new LexerATNSimulator(this, VtlTokens._ATN, VtlTokens.DecisionsToDFA, new PredictionContextCache());\r\n\t}\r\n\r\n\tpublic get grammarFileName(): string { return \"VtlTokens.g4\"; }\r\n\r\n\tpublic get literalNames(): (string | null)[] { return VtlTokens.literalNames; }\r\n\tpublic get symbolicNames(): (string | null)[] { return VtlTokens.symbolicNames; }\r\n\tpublic get ruleNames(): string[] { return VtlTokens.ruleNames; }\r\n\r\n\tpublic get serializedATN(): number[] { return VtlTokens._serializedATN; }\r\n\r\n\tpublic get channelNames(): string[] { return VtlTokens.channelNames; }\r\n\r\n\tpublic get modeNames(): string[] { return VtlTokens.modeNames; }\r\n\r\n\tpublic static readonly _serializedATN: number[] = [4,0,238,2258,6,-1,2,\r\n\t0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,\r\n\t9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,\r\n\t7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,\r\n\t23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,\r\n\t2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,\r\n\t38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,\r\n\t7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,\r\n\t52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,\r\n\t2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,\r\n\t67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,\r\n\t7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,\r\n\t81,2,82,7,82,2,83,7,83,2,84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,\r\n\t2,89,7,89,2,90,7,90,2,91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,\r\n\t96,7,96,2,97,7,97,2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,\r\n\t2,103,7,103,2,104,7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,\r\n\t2,109,7,109,2,110,7,110,2,111,7,111,2,112,7,112,2,113,7,113,2,114,7,114,\r\n\t2,115,7,115,2,116,7,116,2,117,7,117,2,118,7,118,2,119,7,119,2,120,7,120,\r\n\t2,121,7,121,2,122,7,122,2,123,7,123,2,124,7,124,2,125,7,125,2,126,7,126,\r\n\t2,127,7,127,2,128,7,128,2,129,7,129,2,130,7,130,2,131,7,131,2,132,7,132,\r\n\t2,133,7,133,2,134,7,134,2,135,7,135,2,136,7,136,2,137,7,137,2,138,7,138,\r\n\t2,139,7,139,2,140,7,140,2,141,7,141,2,142,7,142,2,143,7,143,2,144,7,144,\r\n\t2,145,7,145,2,146,7,146,2,147,7,147,2,148,7,148,2,149,7,149,2,150,7,150,\r\n\t2,151,7,151,2,152,7,152,2,153,7,153,2,154,7,154,2,155,7,155,2,156,7,156,\r\n\t2,157,7,157,2,158,7,158,2,159,7,159,2,160,7,160,2,161,7,161,2,162,7,162,\r\n\t2,163,7,163,2,164,7,164,2,165,7,165,2,166,7,166,2,167,7,167,2,168,7,168,\r\n\t2,169,7,169,2,170,7,170,2,171,7,171,2,172,7,172,2,173,7,173,2,174,7,174,\r\n\t2,175,7,175,2,176,7,176,2,177,7,177,2,178,7,178,2,179,7,179,2,180,7,180,\r\n\t2,181,7,181,2,182,7,182,2,183,7,183,2,184,7,184,2,185,7,185,2,186,7,186,\r\n\t2,187,7,187,2,188,7,188,2,189,7,189,2,190,7,190,2,191,7,191,2,192,7,192,\r\n\t2,193,7,193,2,194,7,194,2,195,7,195,2,196,7,196,2,197,7,197,2,198,7,198,\r\n\t2,199,7,199,2,200,7,200,2,201,7,201,2,202,7,202,2,203,7,203,2,204,7,204,\r\n\t2,205,7,205,2,206,7,206,2,207,7,207,2,208,7,208,2,209,7,209,2,210,7,210,\r\n\t2,211,7,211,2,212,7,212,2,213,7,213,2,214,7,214,2,215,7,215,2,216,7,216,\r\n\t2,217,7,217,2,218,7,218,2,219,7,219,2,220,7,220,2,221,7,221,2,222,7,222,\r\n\t2,223,7,223,2,224,7,224,2,225,7,225,2,226,7,226,2,227,7,227,2,228,7,228,\r\n\t2,229,7,229,2,230,7,230,2,231,7,231,2,232,7,232,2,233,7,233,2,234,7,234,\r\n\t2,235,7,235,2,236,7,236,2,237,7,237,2,238,7,238,2,239,7,239,1,0,1,0,1,1,\r\n\t1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,\r\n\t1,10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,\r\n\t16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,21,\r\n\t1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,\r\n\t24,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,\r\n\t1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,29,1,\r\n\t29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,32,\r\n\t1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,\r\n\t33,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,37,1,37,\r\n\t1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,\r\n\t40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,43,1,43,\r\n\t1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,\r\n\t46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,\r\n\t1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,50,1,\r\n\t50,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,\r\n\t1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,\r\n\t54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,56,1,56,\r\n\t1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,\r\n\t57,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,\r\n\t1,60,1,60,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,\r\n\t61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,64,1,64,1,64,1,64,\r\n\t1,64,1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,\r\n\t68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,70,\r\n\t1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,73,1,73,1,\r\n\t73,1,73,1,74,1,74,1,74,1,75,1,75,1,75,1,75,1,76,1,76,1,76,1,76,1,76,1,76,\r\n\t1,77,1,77,1,77,1,77,1,77,1,77,1,78,1,78,1,78,1,78,1,78,1,78,1,79,1,79,1,\r\n\t79,1,79,1,80,1,80,1,80,1,80,1,80,1,80,1,80,1,81,1,81,1,81,1,82,1,82,1,82,\r\n\t1,82,1,82,1,83,1,83,1,83,1,83,1,83,1,83,1,84,1,84,1,84,1,84,1,84,1,84,1,\r\n\t85,1,85,1,85,1,85,1,85,1,85,1,85,1,86,1,86,1,86,1,86,1,87,1,87,1,87,1,87,\r\n\t1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,89,1,89,1,89,1,89,1,89,1,89,1,90,1,\r\n\t90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,91,1,91,1,91,1,91,1,91,\r\n\t1,91,1,91,1,91,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,93,1,\r\n\t93,1,93,1,93,1,93,1,93,1,93,1,94,1,94,1,94,1,94,1,94,1,94,1,95,1,95,1,95,\r\n\t1,95,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,\r\n\t96,1,97,1,97,1,97,1,97,1,97,1,97,1,98,1,98,1,98,1,98,1,98,1,98,1,98,1,98,\r\n\t1,98,1,98,1,98,1,98,1,98,1,98,1,98,1,98,1,98,1,99,1,99,1,99,1,99,1,99,1,\r\n\t100,1,100,1,100,1,100,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,\r\n\t101,1,101,1,102,1,102,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,\r\n\t104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,\r\n\t105,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,106,1,106,1,106,1,\r\n\t106,1,106,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,\r\n\t108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,109,1,109,1,109,1,109,1,\r\n\t109,1,109,1,109,1,109,1,109,1,110,1,110,1,110,1,110,1,110,1,110,1,110,1,\r\n\t111,1,111,1,111,1,112,1,112,1,112,1,112,1,112,1,112,1,112,1,112,1,112,1,\r\n\t112,1,113,1,113,1,113,1,113,1,113,1,113,1,113,1,113,1,113,1,113,1,113,1,\r\n\t113,1,113,1,114,1,114,1,114,1,114,1,114,1,114,1,114,1,114,1,115,1,115,1,\r\n\t115,1,115,1,115,1,116,1,116,1,116,1,116,1,117,1,117,1,117,1,117,1,117,1,\r\n\t117,1,117,1,117,1,117,1,117,1,117,1,117,1,117,1,118,1,118,1,118,1,118,1,\r\n\t118,1,118,1,119,1,119,1,119,1,119,1,119,1,119,1,120,1,120,1,120,1,120,1,\r\n\t120,1,120,1,121,1,121,1,121,1,121,1,121,1,121,1,121,1,121,1,122,1,122,1,\r\n\t122,1,122,1,122,1,123,1,123,1,123,1,123,1,123,1,123,1,124,1,124,1,124,1,\r\n\t124,1,124,1,125,1,125,1,125,1,125,1,126,1,126,1,126,1,126,1,126,1,126,1,\r\n\t126,1,126,1,127,1,127,1,127,1,127,1,127,1,127,1,127,1,127,1,127,1,127,1,\r\n\t127,1,128,1,128,1,128,1,128,1,128,1,128,1,128,1,128,1,128,1,128,1,128,1,\r\n\t128,1,129,1,129,1,129,1,129,1,129,1,129,1,129,1,129,1,130,1,130,1,130,1,\r\n\t130,1,130,1,130,1,130,1,130,1,130,1,131,1,131,1,131,1,131,1,131,1,131,1,\r\n\t132,1,132,1,132,1,132,1,132,1,132,1,132,1,133,1,133,1,133,1,133,1,133,1,\r\n\t133,1,133,1,134,1,134,1,134,1,134,1,134,1,134,1,134,1,134,1,134,1,134,1,\r\n\t134,1,134,1,135,1,135,1,135,1,135,1,135,1,135,1,135,1,135,1,135,1,135,1,\r\n\t135,1,136,1,136,1,136,1,136,1,137,1,137,1,137,1,137,1,137,1,138,1,138,1,\r\n\t138,1,138,1,138,1,138,1,138,1,138,1,138,1,138,1,138,1,138,1,138,1,138,1,\r\n\t138,1,138,1,139,1,139,1,139,1,139,1,139,1,140,1,140,1,140,1,140,1,140,1,\r\n\t140,1,140,1,140,1,140,1,140,1,141,1,141,1,141,1,141,1,141,1,141,1,141,1,\r\n\t141,1,141,1,141,1,142,1,142,1,142,1,142,1,142,1,142,1,142,1,142,1,142,1,\r\n\t142,1,143,1,143,1,143,1,143,1,143,1,143,1,143,1,143,1,143,1,143,1,144,1,\r\n\t144,1,144,1,144,1,144,1,145,1,145,1,145,1,145,1,145,1,145,1,146,1,146,1,\r\n\t146,1,146,1,146,1,146,1,146,1,146,1,147,1,147,1,147,1,147,1,147,1,147,1,\r\n\t148,1,148,1,148,1,148,1,148,1,148,1,148,1,148,1,148,1,148,1,148,1,148,1,\r\n\t148,1,148,1,148,1,148,1,148,1,149,1,149,1,149,1,149,1,149,1,149,1,149,1,\r\n\t149,1,149,1,149,1,149,1,149,1,149,1,149,1,150,1,150,1,150,1,150,1,150,1,\r\n\t150,1,150,1,150,1,150,1,150,1,150,1,150,1,150,1,150,1,151,1,151,1,151,1,\r\n\t151,1,151,1,151,1,151,1,151,1,151,1,151,1,152,1,152,1,152,1,152,1,152,1,\r\n\t152,1,152,1,152,1,152,1,153,1,153,1,153,1,153,1,153,1,153,1,153,1,153,1,\r\n\t153,1,153,1,153,1,153,1,154,1,154,1,154,1,154,1,154,1,154,1,154,1,154,1,\r\n\t154,1,154,1,155,1,155,1,155,1,155,1,155,1,155,1,155,1,155,1,156,1,156,1,\r\n\t156,1,156,1,156,1,157,1,157,1,157,1,157,1,157,1,157,1,157,1,157,1,157,1,\r\n\t157,1,157,1,157,1,158,1,158,1,158,1,158,1,158,1,158,1,158,1,159,1,159,1,\r\n\t159,1,159,1,159,1,159,1,159,1,160,1,160,1,160,1,160,1,160,1,161,1,161,1,\r\n\t161,1,161,1,161,1,161,1,161,1,161,1,162,1,162,1,162,1,162,1,162,1,162,1,\r\n\t163,1,163,1,163,1,163,1,163,1,164,1,164,1,164,1,164,1,164,1,164,1,164,1,\r\n\t165,1,165,1,165,1,165,1,165,1,165,1,165,1,165,1,165,1,166,1,166,1,166,1,\r\n\t166,1,166,1,167,1,167,1,167,1,168,1,168,1,168,1,169,1,169,1,169,1,169,1,\r\n\t169,1,169,1,169,1,169,1,169,1,169,1,170,1,170,1,170,1,170,1,170,1,170,1,\r\n\t170,1,171,1,171,1,171,1,172,1,172,1,172,1,172,1,172,1,173,1,173,1,173,1,\r\n\t173,1,173,1,174,1,174,1,174,1,174,1,174,1,174,1,174,1,174,1,174,1,174,1,\r\n\t174,1,175,1,175,1,175,1,175,1,175,1,175,1,175,1,176,1,176,1,176,1,176,1,\r\n\t176,1,176,1,177,1,177,1,177,1,177,1,177,1,177,1,178,1,178,1,178,1,178,1,\r\n\t178,1,178,1,178,1,178,1,179,1,179,1,179,1,179,1,179,1,179,1,179,1,180,1,\r\n\t180,1,180,1,180,1,180,1,180,1,180,1,180,1,180,1,180,1,180,1,181,1,181,1,\r\n\t181,1,181,1,181,1,181,1,181,1,181,1,181,1,181,1,182,1,182,1,182,1,182,1,\r\n\t182,1,182,1,182,1,182,1,182,1,182,1,182,1,183,1,183,1,183,1,183,1,183,1,\r\n\t183,1,183,1,183,1,183,1,183,1,184,1,184,1,184,1,184,1,184,1,184,1,184,1,\r\n\t184,1,184,1,184,1,185,1,185,1,185,1,185,1,185,1,185,1,185,1,185,1,186,1,\r\n\t186,1,186,1,186,1,186,1,186,1,186,1,187,1,187,1,187,1,187,1,187,1,187,1,\r\n\t187,1,187,1,187,1,188,1,188,1,188,1,188,1,188,1,188,1,188,1,188,1,189,1,\r\n\t189,1,189,1,189,1,189,1,189,1,190,1,190,1,190,1,190,1,190,1,190,1,190,1,\r\n\t190,1,190,1,190,1,190,1,190,1,191,1,191,1,191,1,191,1,191,1,191,1,191,1,\r\n\t191,1,192,1,192,1,192,1,192,1,193,1,193,1,193,1,193,1,193,1,193,1,194,1,\r\n\t194,1,194,1,194,1,194,1,194,1,194,1,194,1,194,1,194,1,194,1,194,1,195,1,\r\n\t195,1,195,1,195,1,195,1,195,1,195,1,195,1,195,1,195,1,195,1,195,1,195,1,\r\n\t195,1,195,1,195,1,195,1,196,1,196,1,196,1,196,1,196,1,196,1,196,1,197,1,\r\n\t197,1,197,1,197,1,197,1,197,1,197,1,197,1,197,1,198,1,198,1,198,1,198,1,\r\n\t198,1,198,1,198,1,198,1,198,1,199,1,199,1,199,1,199,1,199,1,200,1,200,1,\r\n\t200,1,200,1,200,1,200,1,201,1,201,1,201,1,201,1,201,1,201,1,201,1,201,1,\r\n\t201,1,201,1,201,1,201,1,201,1,202,1,202,1,202,1,202,1,202,1,202,1,202,1,\r\n\t202,1,202,1,202,1,203,1,203,1,203,1,203,1,203,1,203,1,204,1,204,1,204,1,\r\n\t204,1,204,1,204,1,204,1,205,1,205,1,205,1,205,1,205,1,206,1,206,1,206,1,\r\n\t206,1,206,1,206,1,206,1,206,1,206,1,206,1,206,1,206,1,206,1,206,1,207,1,\r\n\t207,1,207,1,207,1,207,1,207,1,207,1,207,1,207,1,207,1,207,1,207,1,207,1,\r\n\t207,1,207,1,207,1,207,1,208,1,208,1,208,1,208,1,208,1,208,1,208,1,208,1,\r\n\t209,1,209,1,209,1,209,1,209,1,209,1,209,1,209,1,209,1,209,1,209,1,209,1,\r\n\t209,1,209,1,209,1,209,1,210,1,210,1,210,1,210,1,210,1,210,1,210,1,210,1,\r\n\t210,1,210,1,210,1,210,1,210,1,210,1,210,1,210,1,211,1,211,1,211,1,211,1,\r\n\t211,1,211,1,211,1,211,1,211,1,212,1,212,1,212,1,212,1,212,1,212,1,212,1,\r\n\t212,1,212,1,213,1,213,1,213,1,213,1,213,1,213,1,213,1,213,1,213,1,214,1,\r\n\t214,1,214,1,214,1,214,1,214,1,214,1,214,1,214,1,214,1,214,1,214,1,214,1,\r\n\t215,1,215,1,215,1,215,1,215,1,215,1,215,1,215,1,215,1,215,1,215,1,215,1,\r\n\t215,1,216,1,216,1,216,1,216,1,216,1,216,1,216,1,216,1,216,1,216,1,216,1,\r\n\t216,1,217,1,217,1,217,1,217,1,217,1,217,1,217,1,217,1,217,1,217,1,217,1,\r\n\t217,1,218,1,218,1,218,1,218,1,218,1,218,1,218,1,218,1,218,1,218,1,218,1,\r\n\t219,1,219,1,219,1,219,1,219,1,219,1,219,1,219,1,219,1,219,1,219,1,219,1,\r\n\t219,1,220,1,220,1,220,1,220,1,220,1,220,1,220,1,221,1,221,1,221,1,221,1,\r\n\t221,1,221,1,221,1,221,1,221,1,221,1,222,1,222,1,222,1,222,1,222,1,222,1,\r\n\t222,1,222,1,222,1,222,1,222,1,222,1,222,1,222,1,222,1,222,1,222,1,222,1,\r\n\t222,1,222,1,222,1,222,1,222,1,222,1,222,1,222,1,223,1,223,1,223,1,223,1,\r\n\t223,1,223,1,223,1,223,1,223,1,223,1,223,1,223,1,223,1,223,1,223,1,223,1,\r\n\t223,1,223,1,223,1,223,1,223,1,223,1,223,1,224,1,224,1,224,1,224,1,224,1,\r\n\t224,1,224,1,224,1,224,1,224,1,224,1,224,1,224,1,224,1,224,1,224,1,224,1,\r\n\t224,1,224,1,224,1,224,1,224,1,224,1,224,1,224,1,224,1,224,1,224,1,224,1,\r\n\t225,1,225,1,225,1,225,1,225,1,225,1,225,1,225,1,225,1,225,1,225,1,225,1,\r\n\t225,1,225,1,225,1,225,1,225,1,225,1,225,1,225,1,225,1,225,1,225,1,225,1,\r\n\t225,1,225,1,226,1,226,1,226,1,226,1,227,1,227,1,227,1,227,1,227,1,227,1,\r\n\t227,1,227,1,227,1,228,1,228,1,229,1,229,1,230,3,230,2170,8,230,1,230,4,\r\n\t230,2173,8,230,11,230,12,230,2174,1,231,3,231,2178,8,231,1,231,1,231,1,\r\n\t231,1,231,1,232,1,232,1,232,1,232,1,232,1,232,1,232,1,232,1,232,3,232,2193,\r\n\t8,232,1,233,1,233,5,233,2197,8,233,10,233,12,233,2200,9,233,1,233,1,233,\r\n\t1,234,1,234,1,235,1,235,5,235,2208,8,235,10,235,12,235,2211,9,235,1,235,\r\n\t1,235,5,235,2215,8,235,10,235,12,235,2218,9,235,1,235,3,235,2221,8,235,\r\n\t1,236,4,236,2224,8,236,11,236,12,236,2225,1,236,1,236,1,237,1,237,1,238,\r\n\t1,238,1,238,1,238,5,238,2236,8,238,10,238,12,238,2239,9,238,1,238,1,238,\r\n\t1,238,1,238,1,238,1,239,1,239,1,239,1,239,5,239,2250,8,239,10,239,12,239,\r\n\t2253,9,239,1,239,1,239,1,239,1,239,3,2216,2237,2251,0,240,1,1,3,2,5,3,7,\r\n\t4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,\r\n\t17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,\r\n\t29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,\r\n\t41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,\r\n\t105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,\r\n\t63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,73,\r\n\t147,74,149,75,151,76,153,77,155,78,157,79,159,80,161,81,163,82,165,83,167,\r\n\t84,169,85,171,86,173,87,175,88,177,89,179,90,181,91,183,92,185,93,187,94,\r\n\t189,95,191,96,193,97,195,98,197,99,199,100,201,101,203,102,205,103,207,\r\n\t104,209,105,211,106,213,107,215,108,217,109,219,110,221,111,223,112,225,\r\n\t113,227,114,229,115,231,116,233,117,235,118,237,119,239,120,241,121,243,\r\n\t122,245,123,247,124,249,125,251,126,253,127,255,128,257,129,259,130,261,\r\n\t131,263,132,265,133,267,134,269,135,271,136,273,137,275,138,277,139,279,\r\n\t140,281,141,283,142,285,143,287,144,289,145,291,146,293,147,295,148,297,\r\n\t149,299,150,301,151,303,152,305,153,307,154,309,155,311,156,313,157,315,\r\n\t158,317,159,319,160,321,161,323,162,325,163,327,164,329,165,331,166,333,\r\n\t167,335,168,337,169,339,170,341,171,343,172,345,173,347,174,349,175,351,\r\n\t176,353,177,355,178,357,179,359,180,361,181,363,182,365,183,367,184,369,\r\n\t185,371,186,373,187,375,188,377,189,379,190,381,191,383,192,385,193,387,\r\n\t194,389,195,391,196,393,197,395,198,397,199,399,200,401,201,403,202,405,\r\n\t203,407,204,409,205,411,206,413,207,415,208,417,209,419,210,421,211,423,\r\n\t212,425,213,427,214,429,215,431,216,433,217,435,218,437,219,439,220,441,\r\n\t221,443,222,445,223,447,224,449,225,451,226,453,227,455,228,457,0,459,0,\r\n\t461,229,463,230,465,231,467,232,469,233,471,234,473,235,475,236,477,237,\r\n\t479,238,1,0,5,2,0,65,90,97,122,1,0,34,34,6,0,65,65,68,68,77,77,81,81,83,\r\n\t84,87,87,5,0,46,46,48,57,65,90,95,95,97,122,3,0,9,10,12,13,32,32,2266,0,\r\n\t1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,\r\n\t0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,\r\n\t0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,\r\n\t0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,\r\n\t0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,\r\n\t0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,\r\n\t0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,\r\n\t0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,\r\n\t0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,\r\n\t0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,\r\n\t111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,\r\n\t1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,\r\n\t0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,\r\n\t0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,\r\n\t0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,\r\n\t0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,\r\n\t173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,\r\n\t1,0,0,0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,\r\n\t0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,\r\n\t0,0,0,205,1,0,0,0,0,207,1,0,0,0,0,209,1,0,0,0,0,211,1,0,0,0,0,213,1,0,0,\r\n\t0,0,215,1,0,0,0,0,217,1,0,0,0,0,219,1,0,0,0,0,221,1,0,0,0,0,223,1,0,0,0,\r\n\t0,225,1,0,0,0,0,227,1,0,0,0,0,229,1,0,0,0,0,231,1,0,0,0,0,233,1,0,0,0,0,\r\n\t235,1,0,0,0,0,237,1,0,0,0,0,239,1,0,0,0,0,241,1,0,0,0,0,243,1,0,0,0,0,245,\r\n\t1,0,0,0,0,247,1,0,0,0,0,249,1,0,0,0,0,251,1,0,0,0,0,253,1,0,0,0,0,255,1,\r\n\t0,0,0,0,257,1,0,0,0,0,259,1,0,0,0,0,261,1,0,0,0,0,263,1,0,0,0,0,265,1,0,\r\n\t0,0,0,267,1,0,0,0,0,269,1,0,0,0,0,271,1,0,0,0,0,273,1,0,0,0,0,275,1,0,0,\r\n\t0,0,277,1,0,0,0,0,279,1,0,0,0,0,281,1,0,0,0,0,283,1,0,0,0,0,285,1,0,0,0,\r\n\t0,287,1,0,0,0,0,289,1,0,0,0,0,291,1,0,0,0,0,293,1,0,0,0,0,295,1,0,0,0,0,\r\n\t297,1,0,0,0,0,299,1,0,0,0,0,301,1,0,0,0,0,303,1,0,0,0,0,305,1,0,0,0,0,307,\r\n\t1,0,0,0,0,309,1,0,0,0,0,311,1,0,0,0,0,313,1,0,0,0,0,315,1,0,0,0,0,317,1,\r\n\t0,0,0,0,319,1,0,0,0,0,321,1,0,0,0,0,323,1,0,0,0,0,325,1,0,0,0,0,327,1,0,\r\n\t0,0,0,329,1,0,0,0,0,331,1,0,0,0,0,333,1,0,0,0,0,335,1,0,0,0,0,337,1,0,0,\r\n\t0,0,339,1,0,0,0,0,341,1,0,0,0,0,343,1,0,0,0,0,345,1,0,0,0,0,347,1,0,0,0,\r\n\t0,349,1,0,0,0,0,351,1,0,0,0,0,353,1,0,0,0,0,355,1,0,0,0,0,357,1,0,0,0,0,\r\n\t359,1,0,0,0,0,361,1,0,0,0,0,363,1,0,0,0,0,365,1,0,0,0,0,367,1,0,0,0,0,369,\r\n\t1,0,0,0,0,371,1,0,0,0,0,373,1,0,0,0,0,375,1,0,0,0,0,377,1,0,0,0,0,379,1,\r\n\t0,0,0,0,381,1,0,0,0,0,383,1,0,0,0,0,385,1,0,0,0,0,387,1,0,0,0,0,389,1,0,\r\n\t0,0,0,391,1,0,0,0,0,393,1,0,0,0,0,395,1,0,0,0,0,397,1,0,0,0,0,399,1,0,0,\r\n\t0,0,401,1,0,0,0,0,403,1,0,0,0,0,405,1,0,0,0,0,407,1,0,0,0,0,409,1,0,0,0,\r\n\t0,411,1,0,0,0,0,413,1,0,0,0,0,415,1,0,0,0,0,417,1,0,0,0,0,419,1,0,0,0,0,\r\n\t421,1,0,0,0,0,423,1,0,0,0,0,425,1,0,0,0,0,427,1,0,0,0,0,429,1,0,0,0,0,431,\r\n\t1,0,0,0,0,433,1,0,0,0,0,435,1,0,0,0,0,437,1,0,0,0,0,439,1,0,0,0,0,441,1,\r\n\t0,0,0,0,443,1,0,0,0,0,445,1,0,0,0,0,447,1,0,0,0,0,449,1,0,0,0,0,451,1,0,\r\n\t0,0,0,453,1,0,0,0,0,455,1,0,0,0,0,461,1,0,0,0,0,463,1,0,0,0,0,465,1,0,0,\r\n\t0,0,467,1,0,0,0,0,469,1,0,0,0,0,471,1,0,0,0,0,473,1,0,0,0,0,475,1,0,0,0,\r\n\t0,477,1,0,0,0,0,479,1,0,0,0,1,481,1,0,0,0,3,483,1,0,0,0,5,485,1,0,0,0,7,\r\n\t487,1,0,0,0,9,489,1,0,0,0,11,491,1,0,0,0,13,493,1,0,0,0,15,495,1,0,0,0,\r\n\t17,497,1,0,0,0,19,499,1,0,0,0,21,502,1,0,0,0,23,505,1,0,0,0,25,508,1,0,\r\n\t0,0,27,510,1,0,0,0,29,512,1,0,0,0,31,514,1,0,0,0,33,516,1,0,0,0,35,518,\r\n\t1,0,0,0,37,521,1,0,0,0,39,524,1,0,0,0,41,526,1,0,0,0,43,528,1,0,0,0,45,\r\n\t533,1,0,0,0,47,536,1,0,0,0,49,541,1,0,0,0,51,546,1,0,0,0,53,552,1,0,0,0,\r\n\t55,557,1,0,0,0,57,570,1,0,0,0,59,573,1,0,0,0,61,578,1,0,0,0,63,583,1,0,\r\n\t0,0,65,588,1,0,0,0,67,597,1,0,0,0,69,604,1,0,0,0,71,607,1,0,0,0,73,611,\r\n\t1,0,0,0,75,614,1,0,0,0,77,618,1,0,0,0,79,622,1,0,0,0,81,630,1,0,0,0,83,\r\n\t633,1,0,0,0,85,640,1,0,0,0,87,645,1,0,0,0,89,652,1,0,0,0,91,655,1,0,0,0,\r\n\t93,661,1,0,0,0,95,666,1,0,0,0,97,674,1,0,0,0,99,684,1,0,0,0,101,689,1,0,\r\n\t0,0,103,697,1,0,0,0,105,706,1,0,0,0,107,713,1,0,0,0,109,719,1,0,0,0,111,\r\n\t729,1,0,0,0,113,732,1,0,0,0,115,739,1,0,0,0,117,749,1,0,0,0,119,759,1,0,\r\n\t0,0,121,763,1,0,0,0,123,768,1,0,0,0,125,779,1,0,0,0,127,785,1,0,0,0,129,\r\n\t788,1,0,0,0,131,793,1,0,0,0,133,797,1,0,0,0,135,802,1,0,0,0,137,806,1,0,\r\n\t0,0,139,810,1,0,0,0,141,816,1,0,0,0,143,821,1,0,0,0,145,829,1,0,0,0,147,\r\n\t833,1,0,0,0,149,837,1,0,0,0,151,840,1,0,0,0,153,844,1,0,0,0,155,850,1,0,\r\n\t0,0,157,856,1,0,0,0,159,862,1,0,0,0,161,866,1,0,0,0,163,873,1,0,0,0,165,\r\n\t876,1,0,0,0,167,881,1,0,0,0,169,887,1,0,0,0,171,893,1,0,0,0,173,900,1,0,\r\n\t0,0,175,904,1,0,0,0,177,908,1,0,0,0,179,915,1,0,0,0,181,921,1,0,0,0,183,\r\n\t932,1,0,0,0,185,940,1,0,0,0,187,950,1,0,0,0,189,957,1,0,0,0,191,963,1,0,\r\n\t0,0,193,967,1,0,0,0,195,981,1,0,0,0,197,987,1,0,0,0,199,1004,1,0,0,0,201,\r\n\t1009,1,0,0,0,203,1013,1,0,0,0,205,1023,1,0,0,0,207,1025,1,0,0,0,209,1033,\r\n\t1,0,0,0,211,1045,1,0,0,0,213,1054,1,0,0,0,215,1059,1,0,0,0,217,1069,1,0,\r\n\t0,0,219,1077,1,0,0,0,221,1086,1,0,0,0,223,1093,1,0,0,0,225,1096,1,0,0,0,\r\n\t227,1106,1,0,0,0,229,1119,1,0,0,0,231,1127,1,0,0,0,233,1132,1,0,0,0,235,\r\n\t1136,1,0,0,0,237,1149,1,0,0,0,239,1155,1,0,0,0,241,1161,1,0,0,0,243,1167,\r\n\t1,0,0,0,245,1175,1,0,0,0,247,1180,1,0,0,0,249,1186,1,0,0,0,251,1191,1,0,\r\n\t0,0,253,1195,1,0,0,0,255,1203,1,0,0,0,257,1214,1,0,0,0,259,1226,1,0,0,0,\r\n\t261,1234,1,0,0,0,263,1243,1,0,0,0,265,1249,1,0,0,0,267,1256,1,0,0,0,269,\r\n\t1263,1,0,0,0,271,1275,1,0,0,0,273,1286,1,0,0,0,275,1290,1,0,0,0,277,1295,\r\n\t1,0,0,0,279,1311,1,0,0,0,281,1316,1,0,0,0,283,1326,1,0,0,0,285,1336,1,0,\r\n\t0,0,287,1346,1,0,0,0,289,1356,1,0,0,0,291,1361,1,0,0,0,293,1367,1,0,0,0,\r\n\t295,1375,1,0,0,0,297,1381,1,0,0,0,299,1398,1,0,0,0,301,1412,1,0,0,0,303,\r\n\t1426,1,0,0,0,305,1436,1,0,0,0,307,1445,1,0,0,0,309,1457,1,0,0,0,311,1467,\r\n\t1,0,0,0,313,1475,1,0,0,0,315,1480,1,0,0,0,317,1492,1,0,0,0,319,1499,1,0,\r\n\t0,0,321,1506,1,0,0,0,323,1511,1,0,0,0,325,1519,1,0,0,0,327,1525,1,0,0,0,\r\n\t329,1530,1,0,0,0,331,1537,1,0,0,0,333,1546,1,0,0,0,335,1551,1,0,0,0,337,\r\n\t1554,1,0,0,0,339,1557,1,0,0,0,341,1567,1,0,0,0,343,1574,1,0,0,0,345,1577,\r\n\t1,0,0,0,347,1582,1,0,0,0,349,1587,1,0,0,0,351,1598,1,0,0,0,353,1605,1,0,\r\n\t0,0,355,1611,1,0,0,0,357,1617,1,0,0,0,359,1625,1,0,0,0,361,1632,1,0,0,0,\r\n\t363,1643,1,0,0,0,365,1653,1,0,0,0,367,1664,1,0,0,0,369,1674,1,0,0,0,371,\r\n\t1684,1,0,0,0,373,1692,1,0,0,0,375,1699,1,0,0,0,377,1708,1,0,0,0,379,1716,\r\n\t1,0,0,0,381,1722,1,0,0,0,383,1734,1,0,0,0,385,1742,1,0,0,0,387,1746,1,0,\r\n\t0,0,389,1752,1,0,0,0,391,1764,1,0,0,0,393,1781,1,0,0,0,395,1788,1,0,0,0,\r\n\t397,1797,1,0,0,0,399,1806,1,0,0,0,401,1811,1,0,0,0,403,1817,1,0,0,0,405,\r\n\t1830,1,0,0,0,407,1840,1,0,0,0,409,1846,1,0,0,0,411,1853,1,0,0,0,413,1858,\r\n\t1,0,0,0,415,1872,1,0,0,0,417,1889,1,0,0,0,419,1897,1,0,0,0,421,1913,1,0,\r\n\t0,0,423,1929,1,0,0,0,425,1938,1,0,0,0,427,1947,1,0,0,0,429,1956,1,0,0,0,\r\n\t431,1969,1,0,0,0,433,1982,1,0,0,0,435,1994,1,0,0,0,437,2006,1,0,0,0,439,\r\n\t2017,1,0,0,0,441,2030,1,0,0,0,443,2037,1,0,0,0,445,2047,1,0,0,0,447,2073,\r\n\t1,0,0,0,449,2096,1,0,0,0,451,2125,1,0,0,0,453,2151,1,0,0,0,455,2155,1,0,\r\n\t0,0,457,2164,1,0,0,0,459,2166,1,0,0,0,461,2169,1,0,0,0,463,2177,1,0,0,0,\r\n\t465,2192,1,0,0,0,467,2194,1,0,0,0,469,2203,1,0,0,0,471,2220,1,0,0,0,473,\r\n\t2223,1,0,0,0,475,2229,1,0,0,0,477,2231,1,0,0,0,479,2245,1,0,0,0,481,482,\r\n\t5,40,0,0,482,2,1,0,0,0,483,484,5,41,0,0,484,4,1,0,0,0,485,486,5,91,0,0,\r\n\t486,6,1,0,0,0,487,488,5,93,0,0,488,8,1,0,0,0,489,490,5,123,0,0,490,10,1,\r\n\t0,0,0,491,492,5,125,0,0,492,12,1,0,0,0,493,494,5,61,0,0,494,14,1,0,0,0,\r\n\t495,496,5,60,0,0,496,16,1,0,0,0,497,498,5,62,0,0,498,18,1,0,0,0,499,500,\r\n\t5,62,0,0,500,501,5,61,0,0,501,20,1,0,0,0,502,503,5,60,0,0,503,504,5,62,\r\n\t0,0,504,22,1,0,0,0,505,506,5,60,0,0,506,507,5,61,0,0,507,24,1,0,0,0,508,\r\n\t509,5,43,0,0,509,26,1,0,0,0,510,511,5,45,0,0,511,28,1,0,0,0,512,513,5,42,\r\n\t0,0,513,30,1,0,0,0,514,515,5,47,0,0,515,32,1,0,0,0,516,517,5,44,0,0,517,\r\n\t34,1,0,0,0,518,519,5,45,0,0,519,520,5,62,0,0,520,36,1,0,0,0,521,522,5,58,\r\n\t0,0,522,523,5,61,0,0,523,38,1,0,0,0,524,525,5,35,0,0,525,40,1,0,0,0,526,\r\n\t527,5,58,0,0,527,42,1,0,0,0,528,529,5,101,0,0,529,530,5,118,0,0,530,531,\r\n\t5,97,0,0,531,532,5,108,0,0,532,44,1,0,0,0,533,534,5,105,0,0,534,535,5,102,\r\n\t0,0,535,46,1,0,0,0,536,537,5,116,0,0,537,538,5,104,0,0,538,539,5,101,0,\r\n\t0,539,540,5,110,0,0,540,48,1,0,0,0,541,542,5,101,0,0,542,543,5,108,0,0,\r\n\t543,544,5,115,0,0,544,545,5,101,0,0,545,50,1,0,0,0,546,547,5,117,0,0,547,\r\n\t548,5,115,0,0,548,549,5,105,0,0,549,550,5,110,0,0,550,551,5,103,0,0,551,\r\n\t52,1,0,0,0,552,553,5,119,0,0,553,554,5,105,0,0,554,555,5,116,0,0,555,556,\r\n\t5,104,0,0,556,54,1,0,0,0,557,558,5,99,0,0,558,559,5,117,0,0,559,560,5,114,\r\n\t0,0,560,561,5,114,0,0,561,562,5,101,0,0,562,563,5,110,0,0,563,564,5,116,\r\n\t0,0,564,565,5,95,0,0,565,566,5,100,0,0,566,567,5,97,0,0,567,568,5,116,0,\r\n\t0,568,569,5,101,0,0,569,56,1,0,0,0,570,571,5,111,0,0,571,572,5,110,0,0,\r\n\t572,58,1,0,0,0,573,574,5,100,0,0,574,575,5,114,0,0,575,576,5,111,0,0,576,\r\n\t577,5,112,0,0,577,60,1,0,0,0,578,579,5,107,0,0,579,580,5,101,0,0,580,581,\r\n\t5,101,0,0,581,582,5,112,0,0,582,62,1,0,0,0,583,584,5,99,0,0,584,585,5,97,\r\n\t0,0,585,586,5,108,0,0,586,587,5,99,0,0,587,64,1,0,0,0,588,589,5,97,0,0,\r\n\t589,590,5,116,0,0,590,591,5,116,0,0,591,592,5,114,0,0,592,593,5,99,0,0,\r\n\t593,594,5,97,0,0,594,595,5,108,0,0,595,596,5,99,0,0,596,66,1,0,0,0,597,\r\n\t598,5,114,0,0,598,599,5,101,0,0,599,600,5,110,0,0,600,601,5,97,0,0,601,\r\n\t602,5,109,0,0,602,603,5,101,0,0,603,68,1,0,0,0,604,605,5,97,0,0,605,606,\r\n\t5,115,0,0,606,70,1,0,0,0,607,608,5,97,0,0,608,609,5,110,0,0,609,610,5,100,\r\n\t0,0,610,72,1,0,0,0,611,612,5,111,0,0,612,613,5,114,0,0,613,74,1,0,0,0,614,\r\n\t615,5,120,0,0,615,616,5,111,0,0,616,617,5,114,0,0,617,76,1,0,0,0,618,619,\r\n\t5,110,0,0,619,620,5,111,0,0,620,621,5,116,0,0,621,78,1,0,0,0,622,623,5,\r\n\t98,0,0,623,624,5,101,0,0,624,625,5,116,0,0,625,626,5,119,0,0,626,627,5,\r\n\t101,0,0,627,628,5,101,0,0,628,629,5,110,0,0,629,80,1,0,0,0,630,631,5,105,\r\n\t0,0,631,632,5,110,0,0,632,82,1,0,0,0,633,634,5,110,0,0,634,635,5,111,0,\r\n\t0,635,636,5,116,0,0,636,637,5,95,0,0,637,638,5,105,0,0,638,639,5,110,0,\r\n\t0,639,84,1,0,0,0,640,641,5,110,0,0,641,642,5,117,0,0,642,643,5,108,0,0,\r\n\t643,644,5,108,0,0,644,86,1,0,0,0,645,646,5,105,0,0,646,647,5,115,0,0,647,\r\n\t648,5,110,0,0,648,649,5,117,0,0,649,650,5,108,0,0,650,651,5,108,0,0,651,\r\n\t88,1,0,0,0,652,653,5,101,0,0,653,654,5,120,0,0,654,90,1,0,0,0,655,656,5,\r\n\t117,0,0,656,657,5,110,0,0,657,658,5,105,0,0,658,659,5,111,0,0,659,660,5,\r\n\t110,0,0,660,92,1,0,0,0,661,662,5,100,0,0,662,663,5,105,0,0,663,664,5,102,\r\n\t0,0,664,665,5,102,0,0,665,94,1,0,0,0,666,667,5,115,0,0,667,668,5,121,0,\r\n\t0,668,669,5,109,0,0,669,670,5,100,0,0,670,671,5,105,0,0,671,672,5,102,0,\r\n\t0,672,673,5,102,0,0,673,96,1,0,0,0,674,675,5,105,0,0,675,676,5,110,0,0,\r\n\t676,677,5,116,0,0,677,678,5,101,0,0,678,679,5,114,0,0,679,680,5,115,0,0,\r\n\t680,681,5,101,0,0,681,682,5,99,0,0,682,683,5,116,0,0,683,98,1,0,0,0,684,\r\n\t685,5,107,0,0,685,686,5,101,0,0,686,687,5,121,0,0,687,688,5,115,0,0,688,\r\n\t100,1,0,0,0,689,690,5,105,0,0,690,691,5,110,0,0,691,692,5,116,0,0,692,693,\r\n\t5,121,0,0,693,694,5,101,0,0,694,695,5,97,0,0,695,696,5,114,0,0,696,102,\r\n\t1,0,0,0,697,698,5,105,0,0,698,699,5,110,0,0,699,700,5,116,0,0,700,701,5,\r\n\t109,0,0,701,702,5,111,0,0,702,703,5,110,0,0,703,704,5,116,0,0,704,705,5,\r\n\t104,0,0,705,104,1,0,0,0,706,707,5,105,0,0,707,708,5,110,0,0,708,709,5,116,\r\n\t0,0,709,710,5,100,0,0,710,711,5,97,0,0,711,712,5,121,0,0,712,106,1,0,0,\r\n\t0,713,714,5,99,0,0,714,715,5,104,0,0,715,716,5,101,0,0,716,717,5,99,0,0,\r\n\t717,718,5,107,0,0,718,108,1,0,0,0,719,720,5,101,0,0,720,721,5,120,0,0,721,\r\n\t722,5,105,0,0,722,723,5,115,0,0,723,724,5,116,0,0,724,725,5,115,0,0,725,\r\n\t726,5,95,0,0,726,727,5,105,0,0,727,728,5,110,0,0,728,110,1,0,0,0,729,730,\r\n\t5,116,0,0,730,731,5,111,0,0,731,112,1,0,0,0,732,733,5,114,0,0,733,734,5,\r\n\t101,0,0,734,735,5,116,0,0,735,736,5,117,0,0,736,737,5,114,0,0,737,738,5,\r\n\t110,0,0,738,114,1,0,0,0,739,740,5,105,0,0,740,741,5,109,0,0,741,742,5,98,\r\n\t0,0,742,743,5,97,0,0,743,744,5,108,0,0,744,745,5,97,0,0,745,746,5,110,0,\r\n\t0,746,747,5,99,0,0,747,748,5,101,0,0,748,116,1,0,0,0,749,750,5,101,0,0,\r\n\t750,751,5,114,0,0,751,752,5,114,0,0,752,753,5,111,0,0,753,754,5,114,0,0,\r\n\t754,755,5,99,0,0,755,756,5,111,0,0,756,757,5,100,0,0,757,758,5,101,0,0,\r\n\t758,118,1,0,0,0,759,760,5,97,0,0,760,761,5,108,0,0,761,762,5,108,0,0,762,\r\n\t120,1,0,0,0,763,764,5,97,0,0,764,765,5,103,0,0,765,766,5,103,0,0,766,767,\r\n\t5,114,0,0,767,122,1,0,0,0,768,769,5,101,0,0,769,770,5,114,0,0,770,771,5,\r\n\t114,0,0,771,772,5,111,0,0,772,773,5,114,0,0,773,774,5,108,0,0,774,775,5,\r\n\t101,0,0,775,776,5,118,0,0,776,777,5,101,0,0,777,778,5,108,0,0,778,124,1,\r\n\t0,0,0,779,780,5,111,0,0,780,781,5,114,0,0,781,782,5,100,0,0,782,783,5,101,\r\n\t0,0,783,784,5,114,0,0,784,126,1,0,0,0,785,786,5,98,0,0,786,787,5,121,0,\r\n\t0,787,128,1,0,0,0,788,789,5,114,0,0,789,790,5,97,0,0,790,791,5,110,0,0,\r\n\t791,792,5,107,0,0,792,130,1,0,0,0,793,794,5,97,0,0,794,795,5,115,0,0,795,\r\n\t796,5,99,0,0,796,132,1,0,0,0,797,798,5,100,0,0,798,799,5,101,0,0,799,800,\r\n\t5,115,0,0,800,801,5,99,0,0,801,134,1,0,0,0,802,803,5,109,0,0,803,804,5,\r\n\t105,0,0,804,805,5,110,0,0,805,136,1,0,0,0,806,807,5,109,0,0,807,808,5,97,\r\n\t0,0,808,809,5,120,0,0,809,138,1,0,0,0,810,811,5,102,0,0,811,812,5,105,0,\r\n\t0,812,813,5,114,0,0,813,814,5,115,0,0,814,815,5,116,0,0,815,140,1,0,0,0,\r\n\t816,817,5,108,0,0,817,818,5,97,0,0,818,819,5,115,0,0,819,820,5,116,0,0,\r\n\t820,142,1,0,0,0,821,822,5,105,0,0,822,823,5,110,0,0,823,824,5,100,0,0,824,\r\n\t825,5,101,0,0,825,826,5,120,0,0,826,827,5,111,0,0,827,828,5,102,0,0,828,\r\n\t144,1,0,0,0,829,830,5,97,0,0,830,831,5,98,0,0,831,832,5,115,0,0,832,146,\r\n\t1,0,0,0,833,834,5,107,0,0,834,835,5,101,0,0,835,836,5,121,0,0,836,148,1,\r\n\t0,0,0,837,838,5,108,0,0,838,839,5,110,0,0,839,150,1,0,0,0,840,841,5,108,\r\n\t0,0,841,842,5,111,0,0,842,843,5,103,0,0,843,152,1,0,0,0,844,845,5,116,0,\r\n\t0,845,846,5,114,0,0,846,847,5,117,0,0,847,848,5,110,0,0,848,849,5,99,0,\r\n\t0,849,154,1,0,0,0,850,851,5,114,0,0,851,852,5,111,0,0,852,853,5,117,0,0,\r\n\t853,854,5,110,0,0,854,855,5,100,0,0,855,156,1,0,0,0,856,857,5,112,0,0,857,\r\n\t858,5,111,0,0,858,859,5,119,0,0,859,860,5,101,0,0,860,861,5,114,0,0,861,\r\n\t158,1,0,0,0,862,863,5,109,0,0,863,864,5,111,0,0,864,865,5,100,0,0,865,160,\r\n\t1,0,0,0,866,867,5,108,0,0,867,868,5,101,0,0,868,869,5,110,0,0,869,870,5,\r\n\t103,0,0,870,871,5,116,0,0,871,872,5,104,0,0,872,162,1,0,0,0,873,874,5,124,\r\n\t0,0,874,875,5,124,0,0,875,164,1,0,0,0,876,877,5,116,0,0,877,878,5,114,0,\r\n\t0,878,879,5,105,0,0,879,880,5,109,0,0,880,166,1,0,0,0,881,882,5,117,0,0,\r\n\t882,883,5,112,0,0,883,884,5,112,0,0,884,885,5,101,0,0,885,886,5,114,0,0,\r\n\t886,168,1,0,0,0,887,888,5,108,0,0,888,889,5,111,0,0,889,890,5,119,0,0,890,\r\n\t891,5,101,0,0,891,892,5,114,0,0,892,170,1,0,0,0,893,894,5,115,0,0,894,895,\r\n\t5,117,0,0,895,896,5,98,0,0,896,897,5,115,0,0,897,898,5,116,0,0,898,899,\r\n\t5,114,0,0,899,172,1,0,0,0,900,901,5,115,0,0,901,902,5,117,0,0,902,903,5,\r\n\t109,0,0,903,174,1,0,0,0,904,905,5,97,0,0,905,906,5,118,0,0,906,907,5,103,\r\n\t0,0,907,176,1,0,0,0,908,909,5,109,0,0,909,910,5,101,0,0,910,911,5,100,0,\r\n\t0,911,912,5,105,0,0,912,913,5,97,0,0,913,914,5,110,0,0,914,178,1,0,0,0,\r\n\t915,916,5,99,0,0,916,917,5,111,0,0,917,918,5,117,0,0,918,919,5,110,0,0,\r\n\t919,920,5,116,0,0,920,180,1,0,0,0,921,922,5,105,0,0,922,923,5,100,0,0,923,\r\n\t924,5,101,0,0,924,925,5,110,0,0,925,926,5,116,0,0,926,927,5,105,0,0,927,\r\n\t928,5,102,0,0,928,929,5,105,0,0,929,930,5,101,0,0,930,931,5,114,0,0,931,\r\n\t182,1,0,0,0,932,933,5,109,0,0,933,934,5,101,0,0,934,935,5,97,0,0,935,936,\r\n\t5,115,0,0,936,937,5,117,0,0,937,938,5,114,0,0,938,939,5,101,0,0,939,184,\r\n\t1,0,0,0,940,941,5,97,0,0,941,942,5,116,0,0,942,943,5,116,0,0,943,944,5,\r\n\t114,0,0,944,945,5,105,0,0,945,946,5,98,0,0,946,947,5,117,0,0,947,948,5,\r\n\t116,0,0,948,949,5,101,0,0,949,186,1,0,0,0,950,951,5,102,0,0,951,952,5,105,\r\n\t0,0,952,953,5,108,0,0,953,954,5,116,0,0,954,955,5,101,0,0,955,956,5,114,\r\n\t0,0,956,188,1,0,0,0,957,958,5,109,0,0,958,959,5,101,0,0,959,960,5,114,0,\r\n\t0,960,961,5,103,0,0,961,962,5,101,0,0,962,190,1,0,0,0,963,964,5,101,0,0,\r\n\t964,965,5,120,0,0,965,966,5,112,0,0,966,192,1,0,0,0,967,968,5,99,0,0,968,\r\n\t969,5,111,0,0,969,970,5,109,0,0,970,971,5,112,0,0,971,972,5,111,0,0,972,\r\n\t973,5,110,0,0,973,974,5,101,0,0,974,975,5,110,0,0,975,976,5,116,0,0,976,\r\n\t977,5,82,0,0,977,978,5,111,0,0,978,979,5,108,0,0,979,980,5,101,0,0,980,\r\n\t194,1,0,0,0,981,982,5,118,0,0,982,983,5,105,0,0,983,984,5,114,0,0,984,985,\r\n\t5,97,0,0,985,986,5,108,0,0,986,196,1,0,0,0,987,988,5,109,0,0,988,989,5,\r\n\t97,0,0,989,990,5,116,0,0,990,991,5,99,0,0,991,992,5,104,0,0,992,993,5,95,\r\n\t0,0,993,994,5,99,0,0,994,995,5,104,0,0,995,996,5,97,0,0,996,997,5,114,0,\r\n\t0,997,998,5,97,0,0,998,999,5,99,0,0,999,1000,5,116,0,0,1000,1001,5,101,\r\n\t0,0,1001,1002,5,114,0,0,1002,1003,5,115,0,0,1003,198,1,0,0,0,1004,1005,\r\n\t5,116,0,0,1005,1006,5,121,0,0,1006,1007,5,112,0,0,1007,1008,5,101,0,0,1008,\r\n\t200,1,0,0,0,1009,1010,5,110,0,0,1010,1011,5,118,0,0,1011,1012,5,108,0,0,\r\n\t1012,202,1,0,0,0,1013,1014,5,104,0,0,1014,1015,5,105,0,0,1015,1016,5,101,\r\n\t0,0,1016,1017,5,114,0,0,1017,1018,5,97,0,0,1018,1019,5,114,0,0,1019,1020,\r\n\t5,99,0,0,1020,1021,5,104,0,0,1021,1022,5,121,0,0,1022,204,1,0,0,0,1023,\r\n\t1024,5,95,0,0,1024,206,1,0,0,0,1025,1026,5,105,0,0,1026,1027,5,110,0,0,\r\n\t1027,1028,5,118,0,0,1028,1029,5,97,0,0,1029,1030,5,108,0,0,1030,1031,5,\r\n\t105,0,0,1031,1032,5,100,0,0,1032,208,1,0,0,0,1033,1034,5,118,0,0,1034,1035,\r\n\t5,97,0,0,1035,1036,5,108,0,0,1036,1037,5,117,0,0,1037,1038,5,101,0,0,1038,\r\n\t1039,5,100,0,0,1039,1040,5,111,0,0,1040,1041,5,109,0,0,1041,1042,5,97,0,\r\n\t0,1042,1043,5,105,0,0,1043,1044,5,110,0,0,1044,210,1,0,0,0,1045,1046,5,\r\n\t118,0,0,1046,1047,5,97,0,0,1047,1048,5,114,0,0,1048,1049,5,105,0,0,1049,\r\n\t1050,5,97,0,0,1050,1051,5,98,0,0,1051,1052,5,108,0,0,1052,1053,5,101,0,\r\n\t0,1053,212,1,0,0,0,1054,1055,5,100,0,0,1055,1056,5,97,0,0,1056,1057,5,116,\r\n\t0,0,1057,1058,5,97,0,0,1058,214,1,0,0,0,1059,1060,5,115,0,0,1060,1061,5,\r\n\t116,0,0,1061,1062,5,114,0,0,1062,1063,5,117,0,0,1063,1064,5,99,0,0,1064,\r\n\t1065,5,116,0,0,1065,1066,5,117,0,0,1066,1067,5,114,0,0,1067,1068,5,101,\r\n\t0,0,1068,216,1,0,0,0,1069,1070,5,100,0,0,1070,1071,5,97,0,0,1071,1072,5,\r\n\t116,0,0,1072,1073,5,97,0,0,1073,1074,5,115,0,0,1074,1075,5,101,0,0,1075,\r\n\t1076,5,116,0,0,1076,218,1,0,0,0,1077,1078,5,111,0,0,1078,1079,5,112,0,0,\r\n\t1079,1080,5,101,0,0,1080,1081,5,114,0,0,1081,1082,5,97,0,0,1082,1083,5,\r\n\t116,0,0,1083,1084,5,111,0,0,1084,1085,5,114,0,0,1085,220,1,0,0,0,1086,1087,\r\n\t5,100,0,0,1087,1088,5,101,0,0,1088,1089,5,102,0,0,1089,1090,5,105,0,0,1090,\r\n\t1091,5,110,0,0,1091,1092,5,101,0,0,1092,222,1,0,0,0,1093,1094,5,60,0,0,\r\n\t1094,1095,5,45,0,0,1095,224,1,0,0,0,1096,1097,5,100,0,0,1097,1098,5,97,\r\n\t0,0,1098,1099,5,116,0,0,1099,1100,5,97,0,0,1100,1101,5,112,0,0,1101,1102,\r\n\t5,111,0,0,1102,1103,5,105,0,0,1103,1104,5,110,0,0,1104,1105,5,116,0,0,1105,\r\n\t226,1,0,0,0,1106,1107,5,104,0,0,1107,1108,5,105,0,0,1108,1109,5,101,0,0,\r\n\t1109,1110,5,114,0,0,1110,1111,5,97,0,0,1111,1112,5,114,0,0,1112,1113,5,\r\n\t99,0,0,1113,1114,5,104,0,0,1114,1115,5,105,0,0,1115,1116,5,99,0,0,1116,\r\n\t1117,5,97,0,0,1117,1118,5,108,0,0,1118,228,1,0,0,0,1119,1120,5,114,0,0,\r\n\t1120,1121,5,117,0,0,1121,1122,5,108,0,0,1122,1123,5,101,0,0,1123,1124,5,\r\n\t115,0,0,1124,1125,5,101,0,0,1125,1126,5,116,0,0,1126,230,1,0,0,0,1127,1128,\r\n\t5,114,0,0,1128,1129,5,117,0,0,1129,1130,5,108,0,0,1130,1131,5,101,0,0,1131,\r\n\t232,1,0,0,0,1132,1133,5,101,0,0,1133,1134,5,110,0,0,1134,1135,5,100,0,0,\r\n\t1135,234,1,0,0,0,1136,1137,5,97,0,0,1137,1138,5,108,0,0,1138,1139,5,116,\r\n\t0,0,1139,1140,5,101,0,0,1140,1141,5,114,0,0,1141,1142,5,68,0,0,1142,1143,\r\n\t5,97,0,0,1143,1144,5,116,0,0,1144,1145,5,97,0,0,1145,1146,5,115,0,0,1146,\r\n\t1147,5,101,0,0,1147,1148,5,116,0,0,1148,236,1,0,0,0,1149,1150,5,108,0,0,\r\n\t1150,1151,5,116,0,0,1151,1152,5,114,0,0,1152,1153,5,105,0,0,1153,1154,5,\r\n\t109,0,0,1154,238,1,0,0,0,1155,1156,5,114,0,0,1156,1157,5,116,0,0,1157,1158,\r\n\t5,114,0,0,1158,1159,5,105,0,0,1159,1160,5,109,0,0,1160,240,1,0,0,0,1161,\r\n\t1162,5,105,0,0,1162,1163,5,110,0,0,1163,1164,5,115,0,0,1164,1165,5,116,\r\n\t0,0,1165,1166,5,114,0,0,1166,242,1,0,0,0,1167,1168,5,114,0,0,1168,1169,\r\n\t5,101,0,0,1169,1170,5,112,0,0,1170,1171,5,108,0,0,1171,1172,5,97,0,0,1172,\r\n\t1173,5,99,0,0,1173,1174,5,101,0,0,1174,244,1,0,0,0,1175,1176,5,99,0,0,1176,\r\n\t1177,5,101,0,0,1177,1178,5,105,0,0,1178,1179,5,108,0,0,1179,246,1,0,0,0,\r\n\t1180,1181,5,102,0,0,1181,1182,5,108,0,0,1182,1183,5,111,0,0,1183,1184,5,\r\n\t111,0,0,1184,1185,5,114,0,0,1185,248,1,0,0,0,1186,1187,5,115,0,0,1187,1188,\r\n\t5,113,0,0,1188,1189,5,114,0,0,1189,1190,5,116,0,0,1190,250,1,0,0,0,1191,\r\n\t1192,5,97,0,0,1192,1193,5,110,0,0,1193,1194,5,121,0,0,1194,252,1,0,0,0,\r\n\t1195,1196,5,115,0,0,1196,1197,5,101,0,0,1197,1198,5,116,0,0,1198,1199,5,\r\n\t100,0,0,1199,1200,5,105,0,0,1200,1201,5,102,0,0,1201,1202,5,102,0,0,1202,\r\n\t254,1,0,0,0,1203,1204,5,115,0,0,1204,1205,5,116,0,0,1205,1206,5,100,0,0,\r\n\t1206,1207,5,100,0,0,1207,1208,5,101,0,0,1208,1209,5,118,0,0,1209,1210,5,\r\n\t95,0,0,1210,1211,5,112,0,0,1211,1212,5,111,0,0,1212,1213,5,112,0,0,1213,\r\n\t256,1,0,0,0,1214,1215,5,115,0,0,1215,1216,5,116,0,0,1216,1217,5,100,0,0,\r\n\t1217,1218,5,100,0,0,1218,1219,5,101,0,0,1219,1220,5,118,0,0,1220,1221,5,\r\n\t95,0,0,1221,1222,5,115,0,0,1222,1223,5,97,0,0,1223,1224,5,109,0,0,1224,\r\n\t1225,5,112,0,0,1225,258,1,0,0,0,1226,1227,5,118,0,0,1227,1228,5,97,0,0,\r\n\t1228,1229,5,114,0,0,1229,1230,5,95,0,0,1230,1231,5,112,0,0,1231,1232,5,\r\n\t111,0,0,1232,1233,5,112,0,0,1233,260,1,0,0,0,1234,1235,5,118,0,0,1235,1236,\r\n\t5,97,0,0,1236,1237,5,114,0,0,1237,1238,5,95,0,0,1238,1239,5,115,0,0,1239,\r\n\t1240,5,97,0,0,1240,1241,5,109,0,0,1241,1242,5,112,0,0,1242,262,1,0,0,0,\r\n\t1243,1244,5,103,0,0,1244,1245,5,114,0,0,1245,1246,5,111,0,0,1246,1247,5,\r\n\t117,0,0,1247,1248,5,112,0,0,1248,264,1,0,0,0,1249,1250,5,101,0,0,1250,1251,\r\n\t5,120,0,0,1251,1252,5,99,0,0,1252,1253,5,101,0,0,1253,1254,5,112,0,0,1254,\r\n\t1255,5,116,0,0,1255,266,1,0,0,0,1256,1257,5,104,0,0,1257,1258,5,97,0,0,\r\n\t1258,1259,5,118,0,0,1259,1260,5,105,0,0,1260,1261,5,110,0,0,1261,1262,5,\r\n\t103,0,0,1262,268,1,0,0,0,1263,1264,5,102,0,0,1264,1265,5,105,0,0,1265,1266,\r\n\t5,114,0,0,1266,1267,5,115,0,0,1267,1268,5,116,0,0,1268,1269,5,95,0,0,1269,\r\n\t1270,5,118,0,0,1270,1271,5,97,0,0,1271,1272,5,108,0,0,1272,1273,5,117,0,\r\n\t0,1273,1274,5,101,0,0,1274,270,1,0,0,0,1275,1276,5,108,0,0,1276,1277,5,\r\n\t97,0,0,1277,1278,5,115,0,0,1278,1279,5,116,0,0,1279,1280,5,95,0,0,1280,\r\n\t1281,5,118,0,0,1281,1282,5,97,0,0,1282,1283,5,108,0,0,1283,1284,5,117,0,\r\n\t0,1284,1285,5,101,0,0,1285,272,1,0,0,0,1286,1287,5,108,0,0,1287,1288,5,\r\n\t97,0,0,1288,1289,5,103,0,0,1289,274,1,0,0,0,1290,1291,5,108,0,0,1291,1292,\r\n\t5,101,0,0,1292,1293,5,97,0,0,1293,1294,5,100,0,0,1294,276,1,0,0,0,1295,\r\n\t1296,5,114,0,0,1296,1297,5,97,0,0,1297,1298,5,116,0,0,1298,1299,5,105,0,\r\n\t0,1299,1300,5,111,0,0,1300,1301,5,95,0,0,1301,1302,5,116,0,0,1302,1303,\r\n\t5,111,0,0,1303,1304,5,95,0,0,1304,1305,5,114,0,0,1305,1306,5,101,0,0,1306,\r\n\t1307,5,112,0,0,1307,1308,5,111,0,0,1308,1309,5,114,0,0,1309,1310,5,116,\r\n\t0,0,1310,278,1,0,0,0,1311,1312,5,111,0,0,1312,1313,5,118,0,0,1313,1314,\r\n\t5,101,0,0,1314,1315,5,114,0,0,1315,280,1,0,0,0,1316,1317,5,112,0,0,1317,\r\n\t1318,5,114,0,0,1318,1319,5,101,0,0,1319,1320,5,99,0,0,1320,1321,5,101,0,\r\n\t0,1321,1322,5,100,0,0,1322,1323,5,105,0,0,1323,1324,5,110,0,0,1324,1325,\r\n\t5,103,0,0,1325,282,1,0,0,0,1326,1327,5,102,0,0,1327,1328,5,111,0,0,1328,\r\n\t1329,5,108,0,0,1329,1330,5,108,0,0,1330,1331,5,111,0,0,1331,1332,5,119,\r\n\t0,0,1332,1333,5,105,0,0,1333,1334,5,110,0,0,1334,1335,5,103,0,0,1335,284,\r\n\t1,0,0,0,1336,1337,5,117,0,0,1337,1338,5,110,0,0,1338,1339,5,98,0,0,1339,\r\n\t1340,5,111,0,0,1340,1341,5,117,0,0,1341,1342,5,110,0,0,1342,1343,5,100,\r\n\t0,0,1343,1344,5,101,0,0,1344,1345,5,100,0,0,1345,286,1,0,0,0,1346,1347,\r\n\t5,112,0,0,1347,1348,5,97,0,0,1348,1349,5,114,0,0,1349,1350,5,116,0,0,1350,\r\n\t1351,5,105,0,0,1351,1352,5,116,0,0,1352,1353,5,105,0,0,1353,1354,5,111,\r\n\t0,0,1354,1355,5,110,0,0,1355,288,1,0,0,0,1356,1357,5,114,0,0,1357,1358,\r\n\t5,111,0,0,1358,1359,5,119,0,0,1359,1360,5,115,0,0,1360,290,1,0,0,0,1361,\r\n\t1362,5,114,0,0,1362,1363,5,97,0,0,1363,1364,5,110,0,0,1364,1365,5,103,0,\r\n\t0,1365,1366,5,101,0,0,1366,292,1,0,0,0,1367,1368,5,99,0,0,1368,1369,5,117,\r\n\t0,0,1369,1370,5,114,0,0,1370,1371,5,114,0,0,1371,1372,5,101,0,0,1372,1373,\r\n\t5,110,0,0,1373,1374,5,116,0,0,1374,294,1,0,0,0,1375,1376,5,118,0,0,1376,\r\n\t1377,5,97,0,0,1377,1378,5,108,0,0,1378,1379,5,105,0,0,1379,1380,5,100,0,\r\n\t0,1380,296,1,0,0,0,1381,1382,5,102,0,0,1382,1383,5,105,0,0,1383,1384,5,\r\n\t108,0,0,1384,1385,5,108,0,0,1385,1386,5,95,0,0,1386,1387,5,116,0,0,1387,\r\n\t1388,5,105,0,0,1388,1389,5,109,0,0,1389,1390,5,101,0,0,1390,1391,5,95,0,\r\n\t0,1391,1392,5,115,0,0,1392,1393,5,101,0,0,1393,1394,5,114,0,0,1394,1395,\r\n\t5,105,0,0,1395,1396,5,101,0,0,1396,1397,5,115,0,0,1397,298,1,0,0,0,1398,\r\n\t1399,5,102,0,0,1399,1400,5,108,0,0,1400,1401,5,111,0,0,1401,1402,5,119,\r\n\t0,0,1402,1403,5,95,0,0,1403,1404,5,116,0,0,1404,1405,5,111,0,0,1405,1406,\r\n\t5,95,0,0,1406,1407,5,115,0,0,1407,1408,5,116,0,0,1408,1409,5,111,0,0,1409,\r\n\t1410,5,99,0,0,1410,1411,5,107,0,0,1411,300,1,0,0,0,1412,1413,5,115,0,0,\r\n\t1413,1414,5,116,0,0,1414,1415,5,111,0,0,1415,1416,5,99,0,0,1416,1417,5,\r\n\t107,0,0,1417,1418,5,95,0,0,1418,1419,5,116,0,0,1419,1420,5,111,0,0,1420,\r\n\t1421,5,95,0,0,1421,1422,5,102,0,0,1422,1423,5,108,0,0,1423,1424,5,111,0,\r\n\t0,1424,1425,5,119,0,0,1425,302,1,0,0,0,1426,1427,5,116,0,0,1427,1428,5,\r\n\t105,0,0,1428,1429,5,109,0,0,1429,1430,5,101,0,0,1430,1431,5,115,0,0,1431,\r\n\t1432,5,104,0,0,1432,1433,5,105,0,0,1433,1434,5,102,0,0,1434,1435,5,116,\r\n\t0,0,1435,304,1,0,0,0,1436,1437,5,109,0,0,1437,1438,5,101,0,0,1438,1439,\r\n\t5,97,0,0,1439,1440,5,115,0,0,1440,1441,5,117,0,0,1441,1442,5,114,0,0,1442,\r\n\t1443,5,101,0,0,1443,1444,5,115,0,0,1444,306,1,0,0,0,1445,1446,5,110,0,0,\r\n\t1446,1447,5,111,0,0,1447,1448,5,95,0,0,1448,1449,5,109,0,0,1449,1450,5,\r\n\t101,0,0,1450,1451,5,97,0,0,1451,1452,5,115,0,0,1452,1453,5,117,0,0,1453,\r\n\t1454,5,114,0,0,1454,1455,5,101,0,0,1455,1456,5,115,0,0,1456,308,1,0,0,0,\r\n\t1457,1458,5,99,0,0,1458,1459,5,111,0,0,1459,1460,5,110,0,0,1460,1461,5,\r\n\t100,0,0,1461,1462,5,105,0,0,1462,1463,5,116,0,0,1463,1464,5,105,0,0,1464,\r\n\t1465,5,111,0,0,1465,1466,5,110,0,0,1466,310,1,0,0,0,1467,1468,5,98,0,0,\r\n\t1468,1469,5,111,0,0,1469,1470,5,111,0,0,1470,1471,5,108,0,0,1471,1472,5,\r\n\t101,0,0,1472,1473,5,97,0,0,1473,1474,5,110,0,0,1474,312,1,0,0,0,1475,1476,\r\n\t5,100,0,0,1476,1477,5,97,0,0,1477,1478,5,116,0,0,1478,1479,5,101,0,0,1479,\r\n\t314,1,0,0,0,1480,1481,5,116,0,0,1481,1482,5,105,0,0,1482,1483,5,109,0,0,\r\n\t1483,1484,5,101,0,0,1484,1485,5,95,0,0,1485,1486,5,112,0,0,1486,1487,5,\r\n\t101,0,0,1487,1488,5,114,0,0,1488,1489,5,105,0,0,1489,1490,5,111,0,0,1490,\r\n\t1491,5,100,0,0,1491,316,1,0,0,0,1492,1493,5,110,0,0,1493,1494,5,117,0,0,\r\n\t1494,1495,5,109,0,0,1495,1496,5,98,0,0,1496,1497,5,101,0,0,1497,1498,5,\r\n\t114,0,0,1498,318,1,0,0,0,1499,1500,5,115,0,0,1500,1501,5,116,0,0,1501,1502,\r\n\t5,114,0,0,1502,1503,5,105,0,0,1503,1504,5,110,0,0,1504,1505,5,103,0,0,1505,\r\n\t320,1,0,0,0,1506,1507,5,116,0,0,1507,1508,5,105,0,0,1508,1509,5,109,0,0,\r\n\t1509,1510,5,101,0,0,1510,322,1,0,0,0,1511,1512,5,105,0,0,1512,1513,5,110,\r\n\t0,0,1513,1514,5,116,0,0,1514,1515,5,101,0,0,1515,1516,5,103,0,0,1516,1517,\r\n\t5,101,0,0,1517,1518,5,114,0,0,1518,324,1,0,0,0,1519,1520,5,102,0,0,1520,\r\n\t1521,5,108,0,0,1521,1522,5,111,0,0,1522,1523,5,97,0,0,1523,1524,5,116,0,\r\n\t0,1524,326,1,0,0,0,1525,1526,5,108,0,0,1526,1527,5,105,0,0,1527,1528,5,\r\n\t115,0,0,1528,1529,5,116,0,0,1529,328,1,0,0,0,1530,1531,5,114,0,0,1531,1532,\r\n\t5,101,0,0,1532,1533,5,99,0,0,1533,1534,5,111,0,0,1534,1535,5,114,0,0,1535,\r\n\t1536,5,100,0,0,1536,330,1,0,0,0,1537,1538,5,114,0,0,1538,1539,5,101,0,0,\r\n\t1539,1540,5,115,0,0,1540,1541,5,116,0,0,1541,1542,5,114,0,0,1542,1543,5,\r\n\t105,0,0,1543,1544,5,99,0,0,1544,1545,5,116,0,0,1545,332,1,0,0,0,1546,1547,\r\n\t5,121,0,0,1547,1548,5,121,0,0,1548,1549,5,121,0,0,1549,1550,5,121,0,0,1550,\r\n\t334,1,0,0,0,1551,1552,5,109,0,0,1552,1553,5,109,0,0,1553,336,1,0,0,0,1554,\r\n\t1555,5,100,0,0,1555,1556,5,100,0,0,1556,338,1,0,0,0,1557,1558,5,109,0,0,\r\n\t1558,1559,5,97,0,0,1559,1560,5,120,0,0,1560,1561,5,76,0,0,1561,1562,5,101,\r\n\t0,0,1562,1563,5,110,0,0,1563,1564,5,103,0,0,1564,1565,5,116,0,0,1565,1566,\r\n\t5,104,0,0,1566,340,1,0,0,0,1567,1568,5,114,0,0,1568,1569,5,101,0,0,1569,\r\n\t1570,5,103,0,0,1570,1571,5,101,0,0,1571,1572,5,120,0,0,1572,1573,5,112,\r\n\t0,0,1573,342,1,0,0,0,1574,1575,5,105,0,0,1575,1576,5,115,0,0,1576,344,1,\r\n\t0,0,0,1577,1578,5,119,0,0,1578,1579,5,104,0,0,1579,1580,5,101,0,0,1580,\r\n\t1581,5,110,0,0,1581,346,1,0,0,0,1582,1583,5,102,0,0,1583,1584,5,114,0,0,\r\n\t1584,1585,5,111,0,0,1585,1586,5,109,0,0,1586,348,1,0,0,0,1587,1588,5,97,\r\n\t0,0,1588,1589,5,103,0,0,1589,1590,5,103,0,0,1590,1591,5,114,0,0,1591,1592,\r\n\t5,101,0,0,1592,1593,5,103,0,0,1593,1594,5,97,0,0,1594,1595,5,116,0,0,1595,\r\n\t1596,5,101,0,0,1596,1597,5,115,0,0,1597,350,1,0,0,0,1598,1599,5,112,0,0,\r\n\t1599,1600,5,111,0,0,1600,1601,5,105,0,0,1601,1602,5,110,0,0,1602,1603,5,\r\n\t116,0,0,1603,1604,5,115,0,0,1604,352,1,0,0,0,1605,1606,5,112,0,0,1606,1607,\r\n\t5,111,0,0,1607,1608,5,105,0,0,1608,1609,5,110,0,0,1609,1610,5,116,0,0,1610,\r\n\t354,1,0,0,0,1611,1612,5,116,0,0,1612,1613,5,111,0,0,1613,1614,5,116,0,0,\r\n\t1614,1615,5,97,0,0,1615,1616,5,108,0,0,1616,356,1,0,0,0,1617,1618,5,112,\r\n\t0,0,1618,1619,5,97,0,0,1619,1620,5,114,0,0,1620,1621,5,116,0,0,1621,1622,\r\n\t5,105,0,0,1622,1623,5,97,0,0,1623,1624,5,108,0,0,1624,358,1,0,0,0,1625,\r\n\t1626,5,97,0,0,1626,1627,5,108,0,0,1627,1628,5,119,0,0,1628,1629,5,97,0,\r\n\t0,1629,1630,5,121,0,0,1630,1631,5,115,0,0,1631,360,1,0,0,0,1632,1633,5,\r\n\t105,0,0,1633,1634,5,110,0,0,1634,1635,5,110,0,0,1635,1636,5,101,0,0,1636,\r\n\t1637,5,114,0,0,1637,1638,5,95,0,0,1638,1639,5,106,0,0,1639,1640,5,111,0,\r\n\t0,1640,1641,5,105,0,0,1641,1642,5,110,0,0,1642,362,1,0,0,0,1643,1644,5,\r\n\t108,0,0,1644,1645,5,101,0,0,1645,1646,5,102,0,0,1646,1647,5,116,0,0,1647,\r\n\t1648,5,95,0,0,1648,1649,5,106,0,0,1649,1650,5,111,0,0,1650,1651,5,105,0,\r\n\t0,1651,1652,5,110,0,0,1652,364,1,0,0,0,1653,1654,5,99,0,0,1654,1655,5,114,\r\n\t0,0,1655,1656,5,111,0,0,1656,1657,5,115,0,0,1657,1658,5,115,0,0,1658,1659,\r\n\t5,95,0,0,1659,1660,5,106,0,0,1660,1661,5,111,0,0,1661,1662,5,105,0,0,1662,\r\n\t1663,5,110,0,0,1663,366,1,0,0,0,1664,1665,5,102,0,0,1665,1666,5,117,0,0,\r\n\t1666,1667,5,108,0,0,1667,1668,5,108,0,0,1668,1669,5,95,0,0,1669,1670,5,\r\n\t106,0,0,1670,1671,5,111,0,0,1671,1672,5,105,0,0,1672,1673,5,110,0,0,1673,\r\n\t368,1,0,0,0,1674,1675,5,109,0,0,1675,1676,5,97,0,0,1676,1677,5,112,0,0,\r\n\t1677,1678,5,115,0,0,1678,1679,5,95,0,0,1679,1680,5,102,0,0,1680,1681,5,\r\n\t114,0,0,1681,1682,5,111,0,0,1682,1683,5,109,0,0,1683,370,1,0,0,0,1684,1685,\r\n\t5,109,0,0,1685,1686,5,97,0,0,1686,1687,5,112,0,0,1687,1688,5,115,0,0,1688,\r\n\t1689,5,95,0,0,1689,1690,5,116,0,0,1690,1691,5,111,0,0,1691,372,1,0,0,0,\r\n\t1692,1693,5,109,0,0,1693,1694,5,97,0,0,1694,1695,5,112,0,0,1695,1696,5,\r\n\t95,0,0,1696,1697,5,116,0,0,1697,1698,5,111,0,0,1698,374,1,0,0,0,1699,1700,\r\n\t5,109,0,0,1700,1701,5,97,0,0,1701,1702,5,112,0,0,1702,1703,5,95,0,0,1703,\r\n\t1704,5,102,0,0,1704,1705,5,114,0,0,1705,1706,5,111,0,0,1706,1707,5,109,\r\n\t0,0,1707,376,1,0,0,0,1708,1709,5,114,0,0,1709,1710,5,101,0,0,1710,1711,\r\n\t5,116,0,0,1711,1712,5,117,0,0,1712,1713,5,114,0,0,1713,1714,5,110,0,0,1714,\r\n\t1715,5,115,0,0,1715,378,1,0,0,0,1716,1717,5,112,0,0,1717,1718,5,105,0,0,\r\n\t1718,1719,5,118,0,0,1719,1720,5,111,0,0,1720,1721,5,116,0,0,1721,380,1,\r\n\t0,0,0,1722,1723,5,99,0,0,1723,1724,5,117,0,0,1724,1725,5,115,0,0,1725,1726,\r\n\t5,116,0,0,1726,1727,5,111,0,0,1727,1728,5,109,0,0,1728,1729,5,80,0,0,1729,\r\n\t1730,5,105,0,0,1730,1731,5,118,0,0,1731,1732,5,111,0,0,1732,1733,5,116,\r\n\t0,0,1733,382,1,0,0,0,1734,1735,5,117,0,0,1735,1736,5,110,0,0,1736,1737,\r\n\t5,112,0,0,1737,1738,5,105,0,0,1738,1739,5,118,0,0,1739,1740,5,111,0,0,1740,\r\n\t1741,5,116,0,0,1741,384,1,0,0,0,1742,1743,5,115,0,0,1743,1744,5,117,0,0,\r\n\t1744,1745,5,98,0,0,1745,386,1,0,0,0,1746,1747,5,97,0,0,1747,1748,5,112,\r\n\t0,0,1748,1749,5,112,0,0,1749,1750,5,108,0,0,1750,1751,5,121,0,0,1751,388,\r\n\t1,0,0,0,1752,1753,5,99,0,0,1753,1754,5,111,0,0,1754,1755,5,110,0,0,1755,\r\n\t1756,5,100,0,0,1756,1757,5,105,0,0,1757,1758,5,116,0,0,1758,1759,5,105,\r\n\t0,0,1759,1760,5,111,0,0,1760,1761,5,110,0,0,1761,1762,5,101,0,0,1762,1763,\r\n\t5,100,0,0,1763,390,1,0,0,0,1764,1765,5,112,0,0,1765,1766,5,101,0,0,1766,\r\n\t1767,5,114,0,0,1767,1768,5,105,0,0,1768,1769,5,111,0,0,1769,1770,5,100,\r\n\t0,0,1770,1771,5,95,0,0,1771,1772,5,105,0,0,1772,1773,5,110,0,0,1773,1774,\r\n\t5,100,0,0,1774,1775,5,105,0,0,1775,1776,5,99,0,0,1776,1777,5,97,0,0,1777,\r\n\t1778,5,116,0,0,1778,1779,5,111,0,0,1779,1780,5,114,0,0,1780,392,1,0,0,0,\r\n\t1781,1782,5,115,0,0,1782,1783,5,105,0,0,1783,1784,5,110,0,0,1784,1785,5,\r\n\t103,0,0,1785,1786,5,108,0,0,1786,1787,5,101,0,0,1787,394,1,0,0,0,1788,1789,\r\n\t5,100,0,0,1789,1790,5,117,0,0,1790,1791,5,114,0,0,1791,1792,5,97,0,0,1792,\r\n\t1793,5,116,0,0,1793,1794,5,105,0,0,1794,1795,5,111,0,0,1795,1796,5,110,\r\n\t0,0,1796,396,1,0,0,0,1797,1798,5,116,0,0,1798,1799,5,105,0,0,1799,1800,\r\n\t5,109,0,0,1800,1801,5,101,0,0,1801,1802,5,95,0,0,1802,1803,5,97,0,0,1803,\r\n\t1804,5,103,0,0,1804,1805,5,103,0,0,1805,398,1,0,0,0,1806,1807,5,117,0,0,\r\n\t1807,1808,5,110,0,0,1808,1809,5,105,0,0,1809,1810,5,116,0,0,1810,400,1,\r\n\t0,0,0,1811,1812,5,86,0,0,1812,1813,5,97,0,0,1813,1814,5,108,0,0,1814,1815,\r\n\t5,117,0,0,1815,1816,5,101,0,0,1816,402,1,0,0,0,1817,1818,5,118,0,0,1818,\r\n\t1819,5,97,0,0,1819,1820,5,108,0,0,1820,1821,5,117,0,0,1821,1822,5,101,0,\r\n\t0,1822,1823,5,100,0,0,1823,1824,5,111,0,0,1824,1825,5,109,0,0,1825,1826,\r\n\t5,97,0,0,1826,1827,5,105,0,0,1827,1828,5,110,0,0,1828,1829,5,115,0,0,1829,\r\n\t404,1,0,0,0,1830,1831,5,118,0,0,1831,1832,5,97,0,0,1832,1833,5,114,0,0,\r\n\t1833,1834,5,105,0,0,1834,1835,5,97,0,0,1835,1836,5,98,0,0,1836,1837,5,108,\r\n\t0,0,1837,1838,5,101,0,0,1838,1839,5,115,0,0,1839,406,1,0,0,0,1840,1841,\r\n\t5,105,0,0,1841,1842,5,110,0,0,1842,1843,5,112,0,0,1843,1844,5,117,0,0,1844,\r\n\t1845,5,116,0,0,1845,408,1,0,0,0,1846,1847,5,111,0,0,1847,1848,5,117,0,0,\r\n\t1848,1849,5,116,0,0,1849,1850,5,112,0,0,1850,1851,5,117,0,0,1851,1852,5,\r\n\t116,0,0,1852,410,1,0,0,0,1853,1854,5,99,0,0,1854,1855,5,97,0,0,1855,1856,\r\n\t5,115,0,0,1856,1857,5,116,0,0,1857,412,1,0,0,0,1858,1859,5,114,0,0,1859,\r\n\t1860,5,117,0,0,1860,1861,5,108,0,0,1861,1862,5,101,0,0,1862,1863,5,95,0,\r\n\t0,1863,1864,5,112,0,0,1864,1865,5,114,0,0,1865,1866,5,105,0,0,1866,1867,\r\n\t5,111,0,0,1867,1868,5,114,0,0,1868,1869,5,105,0,0,1869,1870,5,116,0,0,1870,\r\n\t1871,5,121,0,0,1871,414,1,0,0,0,1872,1873,5,100,0,0,1873,1874,5,97,0,0,\r\n\t1874,1875,5,116,0,0,1875,1876,5,97,0,0,1876,1877,5,115,0,0,1877,1878,5,\r\n\t101,0,0,1878,1879,5,116,0,0,1879,1880,5,95,0,0,1880,1881,5,112,0,0,1881,\r\n\t1882,5,114,0,0,1882,1883,5,105,0,0,1883,1884,5,111,0,0,1884,1885,5,114,\r\n\t0,0,1885,1886,5,105,0,0,1886,1887,5,116,0,0,1887,1888,5,121,0,0,1888,416,\r\n\t1,0,0,0,1889,1890,5,100,0,0,1890,1891,5,101,0,0,1891,1892,5,102,0,0,1892,\r\n\t1893,5,97,0,0,1893,1894,5,117,0,0,1894,1895,5,108,0,0,1895,1896,5,116,0,\r\n\t0,1896,418,1,0,0,0,1897,1898,5,99,0,0,1898,1899,5,104,0,0,1899,1900,5,101,\r\n\t0,0,1900,1901,5,99,0,0,1901,1902,5,107,0,0,1902,1903,5,95,0,0,1903,1904,\r\n\t5,100,0,0,1904,1905,5,97,0,0,1905,1906,5,116,0,0,1906,1907,5,97,0,0,1907,\r\n\t1908,5,112,0,0,1908,1909,5,111,0,0,1909,1910,5,105,0,0,1910,1911,5,110,\r\n\t0,0,1911,1912,5,116,0,0,1912,420,1,0,0,0,1913,1914,5,99,0,0,1914,1915,5,\r\n\t104,0,0,1915,1916,5,101,0,0,1916,1917,5,99,0,0,1917,1918,5,107,0,0,1918,\r\n\t1919,5,95,0,0,1919,1920,5,104,0,0,1920,1921,5,105,0,0,1921,1922,5,101,0,\r\n\t0,1922,1923,5,114,0,0,1923,1924,5,97,0,0,1924,1925,5,114,0,0,1925,1926,\r\n\t5,99,0,0,1926,1927,5,104,0,0,1927,1928,5,121,0,0,1928,422,1,0,0,0,1929,\r\n\t1930,5,99,0,0,1930,1931,5,111,0,0,1931,1932,5,109,0,0,1932,1933,5,112,0,\r\n\t0,1933,1934,5,117,0,0,1934,1935,5,116,0,0,1935,1936,5,101,0,0,1936,1937,\r\n\t5,100,0,0,1937,424,1,0,0,0,1938,1939,5,110,0,0,1939,1940,5,111,0,0,1940,\r\n\t1941,5,110,0,0,1941,1942,5,95,0,0,1942,1943,5,110,0,0,1943,1944,5,117,0,\r\n\t0,1944,1945,5,108,0,0,1945,1946,5,108,0,0,1946,426,1,0,0,0,1947,1948,5,\r\n\t110,0,0,1948,1949,5,111,0,0,1949,1950,5,110,0,0,1950,1951,5,95,0,0,1951,\r\n\t1952,5,122,0,0,1952,1953,5,101,0,0,1953,1954,5,114,0,0,1954,1955,5,111,\r\n\t0,0,1955,428,1,0,0,0,1956,1957,5,112,0,0,1957,1958,5,97,0,0,1958,1959,5,\r\n\t114,0,0,1959,1960,5,116,0,0,1960,1961,5,105,0,0,1961,1962,5,97,0,0,1962,\r\n\t1963,5,108,0,0,1963,1964,5,95,0,0,1964,1965,5,110,0,0,1965,1966,5,117,0,\r\n\t0,1966,1967,5,108,0,0,1967,1968,5,108,0,0,1968,430,1,0,0,0,1969,1970,5,\r\n\t112,0,0,1970,1971,5,97,0,0,1971,1972,5,114,0,0,1972,1973,5,116,0,0,1973,\r\n\t1974,5,105,0,0,1974,1975,5,97,0,0,1975,1976,5,108,0,0,1976,1977,5,95,0,\r\n\t0,1977,1978,5,122,0,0,1978,1979,5,101,0,0,1979,1980,5,114,0,0,1980,1981,\r\n\t5,111,0,0,1981,432,1,0,0,0,1982,1983,5,97,0,0,1983,1984,5,108,0,0,1984,\r\n\t1985,5,119,0,0,1985,1986,5,97,0,0,1986,1987,5,121,0,0,1987,1988,5,115,0,\r\n\t0,1988,1989,5,95,0,0,1989,1990,5,110,0,0,1990,1991,5,117,0,0,1991,1992,\r\n\t5,108,0,0,1992,1993,5,108,0,0,1993,434,1,0,0,0,1994,1995,5,97,0,0,1995,\r\n\t1996,5,108,0,0,1996,1997,5,119,0,0,1997,1998,5,97,0,0,1998,1999,5,121,0,\r\n\t0,1999,2000,5,115,0,0,2000,2001,5,95,0,0,2001,2002,5,122,0,0,2002,2003,\r\n\t5,101,0,0,2003,2004,5,114,0,0,2004,2005,5,111,0,0,2005,436,1,0,0,0,2006,\r\n\t2007,5,99,0,0,2007,2008,5,111,0,0,2008,2009,5,109,0,0,2009,2010,5,112,0,\r\n\t0,2010,2011,5,111,0,0,2011,2012,5,110,0,0,2012,2013,5,101,0,0,2013,2014,\r\n\t5,110,0,0,2014,2015,5,116,0,0,2015,2016,5,115,0,0,2016,438,1,0,0,0,2017,\r\n\t2018,5,97,0,0,2018,2019,5,108,0,0,2019,2020,5,108,0,0,2020,2021,5,95,0,\r\n\t0,2021,2022,5,109,0,0,2022,2023,5,101,0,0,2023,2024,5,97,0,0,2024,2025,\r\n\t5,115,0,0,2025,2026,5,117,0,0,2026,2027,5,114,0,0,2027,2028,5,101,0,0,2028,\r\n\t2029,5,115,0,0,2029,440,1,0,0,0,2030,2031,5,115,0,0,2031,2032,5,99,0,0,\r\n\t2032,2033,5,97,0,0,2033,2034,5,108,0,0,2034,2035,5,97,0,0,2035,2036,5,114,\r\n\t0,0,2036,442,1,0,0,0,2037,2038,5,99,0,0,2038,2039,5,111,0,0,2039,2040,5,\r\n\t109,0,0,2040,2041,5,112,0,0,2041,2042,5,111,0,0,2042,2043,5,110,0,0,2043,\r\n\t2044,5,101,0,0,2044,2045,5,110,0,0,2045,2046,5,116,0,0,2046,444,1,0,0,0,\r\n\t2047,2048,5,100,0,0,2048,2049,5,97,0,0,2049,2050,5,116,0,0,2050,2051,5,\r\n\t97,0,0,2051,2052,5,112,0,0,2052,2053,5,111,0,0,2053,2054,5,105,0,0,2054,\r\n\t2055,5,110,0,0,2055,2056,5,116,0,0,2056,2057,5,95,0,0,2057,2058,5,111,0,\r\n\t0,2058,2059,5,110,0,0,2059,2060,5,95,0,0,2060,2061,5,118,0,0,2061,2062,\r\n\t5,97,0,0,2062,2063,5,108,0,0,2063,2064,5,117,0,0,2064,2065,5,101,0,0,2065,\r\n\t2066,5,100,0,0,2066,2067,5,111,0,0,2067,2068,5,109,0,0,2068,2069,5,97,0,\r\n\t0,2069,2070,5,105,0,0,2070,2071,5,110,0,0,2071,2072,5,115,0,0,2072,446,\r\n\t1,0,0,0,2073,2074,5,100,0,0,2074,2075,5,97,0,0,2075,2076,5,116,0,0,2076,\r\n\t2077,5,97,0,0,2077,2078,5,112,0,0,2078,2079,5,111,0,0,2079,2080,5,105,0,\r\n\t0,2080,2081,5,110,0,0,2081,2082,5,116,0,0,2082,2083,5,95,0,0,2083,2084,\r\n\t5,111,0,0,2084,2085,5,110,0,0,2085,2086,5,95,0,0,2086,2087,5,118,0,0,2087,\r\n\t2088,5,97,0,0,2088,2089,5,114,0,0,2089,2090,5,105,0,0,2090,2091,5,97,0,\r\n\t0,2091,2092,5,98,0,0,2092,2093,5,108,0,0,2093,2094,5,101,0,0,2094,2095,\r\n\t5,115,0,0,2095,448,1,0,0,0,2096,2097,5,104,0,0,2097,2098,5,105,0,0,2098,\r\n\t2099,5,101,0,0,2099,2100,5,114,0,0,2100,2101,5,97,0,0,2101,2102,5,114,0,\r\n\t0,2102,2103,5,99,0,0,2103,2104,5,104,0,0,2104,2105,5,105,0,0,2105,2106,\r\n\t5,99,0,0,2106,2107,5,97,0,0,2107,2108,5,108,0,0,2108,2109,5,95,0,0,2109,\r\n\t2110,5,111,0,0,2110,2111,5,110,0,0,2111,2112,5,95,0,0,2112,2113,5,118,0,\r\n\t0,2113,2114,5,97,0,0,2114,2115,5,108,0,0,2115,2116,5,117,0,0,2116,2117,\r\n\t5,101,0,0,2117,2118,5,100,0,0,2118,2119,5,111,0,0,2119,2120,5,109,0,0,2120,\r\n\t2121,5,97,0,0,2121,2122,5,105,0,0,2122,2123,5,110,0,0,2123,2124,5,115,0,\r\n\t0,2124,450,1,0,0,0,2125,2126,5,104,0,0,2126,2127,5,105,0,0,2127,2128,5,\r\n\t101,0,0,2128,2129,5,114,0,0,2129,2130,5,97,0,0,2130,2131,5,114,0,0,2131,\r\n\t2132,5,99,0,0,2132,2133,5,104,0,0,2133,2134,5,105,0,0,2134,2135,5,99,0,\r\n\t0,2135,2136,5,97,0,0,2136,2137,5,108,0,0,2137,2138,5,95,0,0,2138,2139,5,\r\n\t111,0,0,2139,2140,5,110,0,0,2140,2141,5,95,0,0,2141,2142,5,118,0,0,2142,\r\n\t2143,5,97,0,0,2143,2144,5,114,0,0,2144,2145,5,105,0,0,2145,2146,5,97,0,\r\n\t0,2146,2147,5,98,0,0,2147,2148,5,108,0,0,2148,2149,5,101,0,0,2149,2150,\r\n\t5,115,0,0,2150,452,1,0,0,0,2151,2152,5,115,0,0,2152,2153,5,101,0,0,2153,\r\n\t2154,5,116,0,0,2154,454,1,0,0,0,2155,2156,5,108,0,0,2156,2157,5,97,0,0,\r\n\t2157,2158,5,110,0,0,2158,2159,5,103,0,0,2159,2160,5,117,0,0,2160,2161,5,\r\n\t97,0,0,2161,2162,5,103,0,0,2162,2163,5,101,0,0,2163,456,1,0,0,0,2164,2165,\r\n\t7,0,0,0,2165,458,1,0,0,0,2166,2167,2,48,57,0,2167,460,1,0,0,0,2168,2170,\r\n\t3,27,13,0,2169,2168,1,0,0,0,2169,2170,1,0,0,0,2170,2172,1,0,0,0,2171,2173,\r\n\t3,459,229,0,2172,2171,1,0,0,0,2173,2174,1,0,0,0,2174,2172,1,0,0,0,2174,\r\n\t2175,1,0,0,0,2175,462,1,0,0,0,2176,2178,3,27,13,0,2177,2176,1,0,0,0,2177,\r\n\t2178,1,0,0,0,2178,2179,1,0,0,0,2179,2180,3,461,230,0,2180,2181,5,46,0,0,\r\n\t2181,2182,3,461,230,0,2182,464,1,0,0,0,2183,2184,5,116,0,0,2184,2185,5,\r\n\t114,0,0,2185,2186,5,117,0,0,2186,2193,5,101,0,0,2187,2188,5,102,0,0,2188,\r\n\t2189,5,97,0,0,2189,2190,5,108,0,0,2190,2191,5,115,0,0,2191,2193,5,101,0,\r\n\t0,2192,2183,1,0,0,0,2192,2187,1,0,0,0,2193,466,1,0,0,0,2194,2198,5,34,0,\r\n\t0,2195,2197,8,1,0,0,2196,2195,1,0,0,0,2197,2200,1,0,0,0,2198,2196,1,0,0,\r\n\t0,2198,2199,1,0,0,0,2199,2201,1,0,0,0,2200,2198,1,0,0,0,2201,2202,5,34,\r\n\t0,0,2202,468,1,0,0,0,2203,2204,7,2,0,0,2204,470,1,0,0,0,2205,2209,3,457,\r\n\t228,0,2206,2208,7,3,0,0,2207,2206,1,0,0,0,2208,2211,1,0,0,0,2209,2207,1,\r\n\t0,0,0,2209,2210,1,0,0,0,2210,2221,1,0,0,0,2211,2209,1,0,0,0,2212,2216,5,\r\n\t39,0,0,2213,2215,9,0,0,0,2214,2213,1,0,0,0,2215,2218,1,0,0,0,2216,2217,\r\n\t1,0,0,0,2216,2214,1,0,0,0,2217,2219,1,0,0,0,2218,2216,1,0,0,0,2219,2221,\r\n\t5,39,0,0,2220,2205,1,0,0,0,2220,2212,1,0,0,0,2221,472,1,0,0,0,2222,2224,\r\n\t7,4,0,0,2223,2222,1,0,0,0,2224,2225,1,0,0,0,2225,2223,1,0,0,0,2225,2226,\r\n\t1,0,0,0,2226,2227,1,0,0,0,2227,2228,6,236,0,0,2228,474,1,0,0,0,2229,2230,\r\n\t5,59,0,0,2230,476,1,0,0,0,2231,2232,5,47,0,0,2232,2233,5,42,0,0,2233,2237,\r\n\t1,0,0,0,2234,2236,9,0,0,0,2235,2234,1,0,0,0,2236,2239,1,0,0,0,2237,2238,\r\n\t1,0,0,0,2237,2235,1,0,0,0,2238,2240,1,0,0,0,2239,2237,1,0,0,0,2240,2241,\r\n\t5,42,0,0,2241,2242,5,47,0,0,2242,2243,1,0,0,0,2243,2244,6,238,1,0,2244,\r\n\t478,1,0,0,0,2245,2246,5,47,0,0,2246,2247,5,47,0,0,2247,2251,1,0,0,0,2248,\r\n\t2250,9,0,0,0,2249,2248,1,0,0,0,2250,2253,1,0,0,0,2251,2252,1,0,0,0,2251,\r\n\t2249,1,0,0,0,2252,2254,1,0,0,0,2253,2251,1,0,0,0,2254,2255,5,10,0,0,2255,\r\n\t2256,1,0,0,0,2256,2257,6,239,1,0,2257,480,1,0,0,0,12,0,2169,2174,2177,2192,\r\n\t2198,2209,2216,2220,2225,2237,2251,2,0,1,0,0,2,0];\r\n\r\n\tprivate static __ATN: ATN;\r\n\tpublic static get _ATN(): ATN {\r\n\t\tif (!VtlTokens.__ATN) {\r\n\t\t\tVtlTokens.__ATN = new ATNDeserializer().deserialize(VtlTokens._serializedATN);\r\n\t\t}\r\n\r\n\t\treturn VtlTokens.__ATN;\r\n\t}\r\n\r\n\r\n\tstatic DecisionsToDFA = VtlTokens._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );\r\n}", "export * from '@uiw/codemirror-theme-abcdef';\nexport * from '@uiw/codemirror-theme-abyss';\nexport * from '@uiw/codemirror-theme-androidstudio';\nexport * from '@uiw/codemirror-theme-andromeda';\nexport * from '@uiw/codemirror-theme-atomone';\nexport * from '@uiw/codemirror-theme-aura';\nexport * from '@uiw/codemirror-theme-basic';\nexport * from '@uiw/codemirror-theme-bbedit';\nexport * from '@uiw/codemirror-theme-bespin';\nexport * from '@uiw/codemirror-theme-console';\nexport * from '@uiw/codemirror-theme-copilot';\nexport * from '@uiw/codemirror-theme-darcula';\nexport * from '@uiw/codemirror-theme-dracula';\nexport * from '@uiw/codemirror-theme-duotone';\nexport * from '@uiw/codemirror-theme-eclipse';\nexport * from '@uiw/codemirror-theme-github';\nexport * from '@uiw/codemirror-theme-gruvbox-dark';\nexport * from '@uiw/codemirror-theme-kimbie';\nexport * from '@uiw/codemirror-theme-material';\nexport * from '@uiw/codemirror-theme-monokai';\nexport * from '@uiw/codemirror-theme-monokai-dimmed';\nexport * from '@uiw/codemirror-theme-noctis-lilac';\nexport * from '@uiw/codemirror-theme-nord';\nexport * from '@uiw/codemirror-theme-okaidia';\nexport * from '@uiw/codemirror-theme-quietlight';\nexport * from '@uiw/codemirror-theme-red';\nexport * from '@uiw/codemirror-theme-solarized';\nexport * from '@uiw/codemirror-theme-sublime';\nexport * from '@uiw/codemirror-theme-tokyo-night';\nexport * from '@uiw/codemirror-theme-tokyo-night-storm';\nexport * from '@uiw/codemirror-theme-tokyo-night-day';\nexport * from '@uiw/codemirror-theme-tomorrow-night-blue';\nexport * from '@uiw/codemirror-theme-vscode';\nexport * from '@uiw/codemirror-theme-white';\nexport * from '@uiw/codemirror-theme-xcode';", "function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };", "import { EditorView } from '@codemirror/view';\nimport { HighlightStyle, syntaxHighlighting } from '@codemirror/language';\nexport var createTheme = _ref => {\n  var {\n    theme,\n    settings = {},\n    styles = []\n  } = _ref;\n  var themeOptions = {\n    '.cm-gutters': {}\n  };\n  var baseStyle = {};\n  if (settings.background) {\n    baseStyle.backgroundColor = settings.background;\n  }\n  if (settings.backgroundImage) {\n    baseStyle.backgroundImage = settings.backgroundImage;\n  }\n  if (settings.foreground) {\n    baseStyle.color = settings.foreground;\n  }\n  if (settings.fontSize) {\n    baseStyle.fontSize = settings.fontSize;\n  }\n  if (settings.background || settings.foreground) {\n    themeOptions['&'] = baseStyle;\n  }\n  if (settings.fontFamily) {\n    themeOptions['&.cm-editor .cm-scroller'] = {\n      fontFamily: settings.fontFamily\n    };\n  }\n  if (settings.gutterBackground) {\n    themeOptions['.cm-gutters'].backgroundColor = settings.gutterBackground;\n  }\n  if (settings.gutterForeground) {\n    themeOptions['.cm-gutters'].color = settings.gutterForeground;\n  }\n  if (settings.gutterBorder) {\n    themeOptions['.cm-gutters'].borderRightColor = settings.gutterBorder;\n  }\n  if (settings.caret) {\n    themeOptions['.cm-content'] = {\n      caretColor: settings.caret\n    };\n    themeOptions['.cm-cursor, .cm-dropCursor'] = {\n      borderLeftColor: settings.caret\n    };\n  }\n  var activeLineGutterStyle = {};\n  if (settings.gutterActiveForeground) {\n    activeLineGutterStyle.color = settings.gutterActiveForeground;\n  }\n  if (settings.lineHighlight) {\n    themeOptions['.cm-activeLine'] = {\n      backgroundColor: settings.lineHighlight\n    };\n    activeLineGutterStyle.backgroundColor = settings.lineHighlight;\n  }\n  themeOptions['.cm-activeLineGutter'] = activeLineGutterStyle;\n  if (settings.selection) {\n    themeOptions['&.cm-focused .cm-selectionBackground, & .cm-line::selection, & .cm-selectionLayer .cm-selectionBackground, .cm-content ::selection'] = {\n      background: settings.selection + ' !important'\n    };\n  }\n  if (settings.selectionMatch) {\n    themeOptions['& .cm-selectionMatch'] = {\n      backgroundColor: settings.selectionMatch\n    };\n  }\n  var themeExtension = EditorView.theme(themeOptions, {\n    dark: theme === 'dark'\n  });\n  var highlightStyle = HighlightStyle.define(styles);\n  var extension = [themeExtension, syntaxHighlighting(highlightStyle)];\n  return extension;\n};\nexport default createTheme;", "import _extends from \"@babel/runtime/helpers/extends\";\n/**\n * @name abcdef\n * @author codemirror.net\n * https://codemirror.net/5/theme/abcdef.css\n */\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsAbcdef = {\n  background: '#0f0f0f',\n  foreground: '#defdef',\n  caret: '#00FF00',\n  selection: '#515151',\n  selectionMatch: '#515151',\n  gutterBackground: '#555',\n  gutterForeground: '#FFFFFF',\n  lineHighlight: '#0a6bcb3d'\n};\nexport var abcdefDarkStyle = [{\n  tag: t.keyword,\n  color: 'darkgoldenrod',\n  fontWeight: 'bold'\n}, {\n  tag: t.atom,\n  color: '#77F'\n}, {\n  tag: t.comment,\n  color: '#7a7b7c',\n  fontStyle: 'italic'\n}, {\n  tag: t.number,\n  color: 'violet'\n}, {\n  tag: t.definition(t.variableName),\n  color: '#fffabc'\n}, {\n  tag: t.variableName,\n  color: '#abcdef'\n}, {\n  tag: t.function(t.variableName),\n  color: '#fffabc'\n}, {\n  tag: t.typeName,\n  color: '#FFDD44'\n}, {\n  tag: t.tagName,\n  color: '#def'\n}, {\n  tag: t.string,\n  color: '#2b4'\n}, {\n  tag: t.meta,\n  color: '#C9F'\n},\n// { tag: t.qualifier, color: '#FFF700' },\n// { tag: t.builtin, color: '#30aabc' },\n{\n  tag: t.bracket,\n  color: '#8a8a8a'\n}, {\n  tag: t.attributeName,\n  color: '#DDFF00'\n}, {\n  tag: t.heading,\n  color: 'aquamarine',\n  fontWeight: 'bold'\n}, {\n  tag: t.link,\n  color: 'blueviolet',\n  fontWeight: 'bold'\n}];\nexport var abcdefInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsAbcdef, settings),\n    styles: [...abcdefDarkStyle, ...styles]\n  });\n};\nexport var abcdef = abcdefInit();", "export var config = {\n  background: '#000c18',\n  foreground: '#6688cc',\n  selection: '#770811',\n  selectionMatch: '#770811',\n  cursor: '#ddbb88',\n  dropdownBackground: '#181f2f',\n  activeLine: '#0055ff30',\n  matchingBracket: '#082050',\n  keyword: '#225588',\n  storage: '#225588',\n  variable: '#2277ff',\n  parameter: '#2277ff',\n  function: '#9966b8',\n  string: '#22aa44',\n  constant: '#f280d0',\n  type: '#9966b8',\n  class: '#ddbb88',\n  number: '#f280d0',\n  comment: '#384887',\n  heading: '#6688cc',\n  invalid: '#A22D44',\n  regexp: '#22aa44',\n  tag: '#225588'\n};", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nimport { config as c } from './color';\nexport var defaultSettingsAbyss = {\n  background: c.background,\n  foreground: c.foreground,\n  caret: c.cursor,\n  selection: c.selection,\n  selectionMatch: c.selectionMatch,\n  gutterBackground: c.background,\n  gutterForeground: c.foreground,\n  lineHighlight: c.activeLine\n};\nexport var abyssDarkStyle = [{\n  tag: t.keyword,\n  color: c.keyword\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName],\n  color: c.variable\n}, {\n  tag: [t.propertyName],\n  color: c.function\n}, {\n  tag: [t.processingInstruction, t.string, t.inserted, t.special(t.string)],\n  color: c.string\n}, {\n  tag: [t.function(t.variableName), t.labelName],\n  color: c.function\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: c.constant\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: c.variable\n}, {\n  tag: [t.className],\n  color: c.class\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: c.number\n}, {\n  tag: [t.typeName],\n  color: c.type,\n  fontStyle: c.type\n}, {\n  tag: [t.operator, t.operatorKeyword],\n  color: c.keyword\n}, {\n  tag: [t.url, t.escape, t.regexp, t.link],\n  color: c.regexp\n}, {\n  tag: [t.meta, t.comment],\n  color: c.comment\n}, {\n  tag: t.tagName,\n  color: c.tag\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: c.heading\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: c.variable\n}, {\n  tag: t.invalid,\n  color: c.invalid\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}];\nexport var abyssInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsAbyss, settings),\n    styles: [...abyssDarkStyle, ...styles]\n  });\n};\nexport var abyss = abyssInit();", "import _extends from \"@babel/runtime/helpers/extends\";\n/**\n * @name androidstudio\n */\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsAndroidstudio = {\n  background: '#282b2e',\n  foreground: '#a9b7c6',\n  caret: '#00FF00',\n  selection: '#4e5254',\n  selectionMatch: '#4e5254',\n  lineHighlight: '#7f85891f'\n};\nexport var androidstudioDarkStyle = [{\n  tag: [t.keyword, t.deleted, t.className],\n  color: '#cc7832'\n}, {\n  tag: [t.number, t.literal, t.derefOperator],\n  color: '#6897bb'\n}, {\n  tag: [t.link, t.variableName],\n  color: '#629755'\n}, {\n  tag: [t.comment, t.quote],\n  color: 'grey'\n}, {\n  tag: [t.meta, t.documentMeta],\n  color: '#bbb529'\n}, {\n  tag: [t.string, t.propertyName, t.attributeValue],\n  color: '#6a8759'\n}, {\n  tag: [t.heading, t.typeName],\n  color: '#ffc66d'\n}, {\n  tag: [t.attributeName],\n  color: '#a9b7c6'\n}, {\n  tag: [t.emphasis],\n  fontStyle: 'italic'\n}];\nexport var androidstudioInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsAndroidstudio, settings),\n    styles: [...androidstudioDarkStyle, ...styles]\n  });\n};\nexport var androidstudio = androidstudioInit();", "export var config = {\n  background: '#23262E',\n  foreground: '#D5CED9',\n  selection: '#db45a280',\n  selectionMatch: '#db45a280',\n  cursor: '#FFF',\n  dropdownBackground: '#2b303b',\n  dropdownBorder: '#363c49',\n  activeLine: '#596a992e',\n  matchingBracket: '#746f77',\n  keyword: '#c74ded',\n  storage: '#c74ded',\n  variable: '#00e8c6',\n  parameter: '#00e8c6',\n  function: '#FFE66D',\n  string: '#96E072',\n  constant: '#ee5d43',\n  type: '#FFE66D',\n  class: '#FFE66D',\n  number: '#ee5d43',\n  comment: '#A0A1A7cc',\n  heading: '#ff00aa',\n  invalid: null,\n  regexp: '#96E072',\n  tag: '#f92672'\n};", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nimport { config as c } from './color';\nexport var defaultSettingsAndromeda = {\n  background: c.background,\n  foreground: c.foreground,\n  caret: c.cursor,\n  selection: c.selection,\n  selectionMatch: c.selectionMatch,\n  gutterBackground: c.background,\n  gutterForeground: c.foreground,\n  lineHighlight: c.activeLine\n};\nexport var andromedaDarkStyle = [{\n  tag: t.keyword,\n  color: c.keyword\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName],\n  color: c.variable\n}, {\n  tag: [t.propertyName],\n  color: c.function\n}, {\n  tag: [t.processingInstruction, t.string, t.inserted, t.special(t.string)],\n  color: c.string\n}, {\n  tag: [t.function(t.variableName), t.labelName],\n  color: c.function\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: c.constant\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: c.variable\n}, {\n  tag: [t.className],\n  color: c.class\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: c.number\n}, {\n  tag: [t.typeName],\n  color: c.type,\n  fontStyle: c.type\n}, {\n  tag: [t.operator],\n  color: c.keyword\n}, {\n  tag: [t.url, t.escape, t.regexp, t.link],\n  color: c.regexp\n}, {\n  tag: [t.meta, t.comment],\n  color: c.comment\n}, {\n  tag: t.tagName,\n  color: c.tag\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: c.heading\n}, {\n  tag: [t.atom, t.special(t.variableName)],\n  color: c.variable\n}, {\n  tag: t.invalid,\n  color: c.invalid\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}, {\n  tag: [t.operatorKeyword, t.bool, t.null, t.variableName],\n  color: c.constant\n}];\nexport var andromedaInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsAndromeda, settings),\n    styles: [...andromedaDarkStyle, ...styles]\n  });\n};\nexport var andromeda = andromedaInit();", "import _extends from \"@babel/runtime/helpers/extends\";\n/**\n * @name Atom One\n * Atom One dark syntax theme\n *\n * https://github.com/atom/one-dark-syntax\n */\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsAtomone = {\n  background: '#272C35',\n  foreground: '#9d9b97',\n  caret: '#797977',\n  selection: '#3d4c64',\n  selectionMatch: '#3d4c64',\n  gutterBackground: '#272C35',\n  gutterForeground: '#465063',\n  gutterBorder: 'transparent',\n  lineHighlight: '#2e3f5940'\n};\nexport var atomoneDarkStyle = [{\n  tag: [t.function(t.variableName), t.function(t.propertyName), t.url, t.processingInstruction],\n  color: 'hsl(207, 82%, 66%)'\n}, {\n  tag: [t.tagName, t.heading],\n  color: '#e06c75'\n}, {\n  tag: t.comment,\n  color: '#54636D'\n}, {\n  tag: [t.propertyName],\n  color: 'hsl(220, 14%, 71%)'\n}, {\n  tag: [t.attributeName, t.number],\n  color: 'hsl( 29, 54%, 61%)'\n}, {\n  tag: t.className,\n  color: 'hsl( 39, 67%, 69%)'\n}, {\n  tag: t.keyword,\n  color: 'hsl(286, 60%, 67%)'\n}, {\n  tag: [t.string, t.regexp, t.special(t.propertyName)],\n  color: '#98c379'\n}];\nexport var atomoneInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsAtomone, settings),\n    styles: [...atomoneDarkStyle, ...styles]\n  });\n};\nexport var atomone = atomoneInit();", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsAura = {\n  background: '#21202e',\n  foreground: '#edecee',\n  caret: '#a277ff',\n  selection: '#5a51898f',\n  selectionMatch: '#5a51898f',\n  gutterBackground: '#21202e',\n  gutterForeground: '#edecee',\n  gutterBorder: 'transparent',\n  lineHighlight: '#a394f033'\n};\nexport var auraDarkStyle = [{\n  tag: t.keyword,\n  color: '#a277ff'\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName],\n  color: '#edecee'\n}, {\n  tag: [t.propertyName],\n  color: '#ffca85'\n}, {\n  tag: [t.processingInstruction, t.string, t.inserted, t.special(t.string)],\n  color: '#61ffca'\n}, {\n  tag: [t.function(t.variableName), t.labelName],\n  color: '#ffca85'\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: '#61ffca'\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: '#edecee'\n}, {\n  tag: [t.className],\n  color: '#82e2ff'\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: '#61ffca'\n}, {\n  tag: [t.typeName],\n  color: '#82e2ff'\n}, {\n  tag: [t.operator, t.operatorKeyword],\n  color: '#a277ff'\n}, {\n  tag: [t.url, t.escape, t.regexp, t.link],\n  color: '#61ffca'\n}, {\n  tag: [t.meta, t.comment],\n  color: '#6d6d6d'\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: '#a277ff'\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: '#edecee'\n}, {\n  tag: t.invalid,\n  color: '#ff6767'\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}];\nexport var auraInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsAura, settings),\n    styles: [...auraDarkStyle, ...styles]\n  });\n};\nexport var aura = auraInit();", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsBasicDark = {\n  background: '#2E3235',\n  foreground: '#DDDDDD',\n  caret: '#DDDDDD',\n  selection: '#202325',\n  selectionMatch: '#202325',\n  gutterBackground: '#292d30',\n  gutterForeground: '#808080',\n  gutterBorder: '1px solid #ffffff10',\n  lineHighlight: '#B9D2FF30'\n};\nexport var basicDarkStyle = [{\n  tag: t.keyword,\n  color: '#fda331'\n}, {\n  tag: [t.name, t.deleted, t.character, t.propertyName, t.macroName],\n  color: '#b5bd68'\n}, {\n  tag: [t.variableName],\n  color: '#6fb3d2'\n}, {\n  tag: [t.function(t.variableName)],\n  color: '#fda331'\n}, {\n  tag: [t.labelName],\n  color: '#fc6d24'\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: '#fda331'\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: '#cc99cc'\n}, {\n  tag: [t.brace],\n  color: '#cc99cc'\n}, {\n  tag: [t.annotation],\n  color: '#fc6d24'\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: '#fda331'\n}, {\n  tag: [t.typeName, t.className],\n  color: '#6fb3d2'\n}, {\n  tag: [t.operator, t.operatorKeyword],\n  color: '#cc99cc'\n}, {\n  tag: [t.tagName],\n  color: '#fda331'\n}, {\n  tag: [t.squareBracket],\n  color: '#cc99cc'\n}, {\n  tag: [t.angleBracket],\n  color: '#cc99cc'\n}, {\n  tag: [t.attributeName],\n  color: '#6fb3d2'\n}, {\n  tag: [t.regexp],\n  color: '#fda331'\n}, {\n  tag: [t.quote],\n  color: '#DDDDDD'\n}, {\n  tag: [t.string],\n  color: '#b5bd68'\n}, {\n  tag: t.link,\n  color: '#6987AF',\n  textDecoration: 'underline',\n  textUnderlinePosition: 'under'\n}, {\n  tag: [t.url, t.escape, t.special(t.string)],\n  color: '#8abeb7'\n}, {\n  tag: [t.meta],\n  color: '#A54543'\n}, {\n  tag: [t.comment],\n  color: '#808080',\n  fontStyle: 'italic'\n}, {\n  tag: t.monospace,\n  color: '#DDDDDD'\n}, {\n  tag: t.strong,\n  fontWeight: 'bold',\n  color: '#fda331'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic',\n  color: '#6fb3d2'\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: '#DDDDDD'\n}, {\n  tag: t.special(t.heading1),\n  fontWeight: 'bold',\n  color: '#DDDDDD'\n}, {\n  tag: t.heading1,\n  fontWeight: 'bold',\n  color: '#DDDDDD'\n}, {\n  tag: [t.heading2, t.heading3, t.heading4],\n  fontWeight: 'bold',\n  color: '#DDDDDD'\n}, {\n  tag: [t.heading5, t.heading6],\n  color: '#DDDDDD'\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: '#8abeb7'\n}, {\n  tag: [t.processingInstruction, t.inserted],\n  color: '#8abeb7'\n}, {\n  tag: [t.contentSeparator],\n  color: '#6fb3d2'\n}, {\n  tag: t.invalid,\n  color: '#B9D2FF',\n  borderBottom: \"1px dotted \" + '#fc6d24'\n}];\nexport var basicDarkInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsBasicDark, settings),\n    styles: [...basicDarkStyle, ...styles]\n  });\n};\nexport var basicDark = basicDarkInit();", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsBasicLight = {\n  background: '#ffffff',\n  foreground: '#2e3440',\n  caret: '#3b4252',\n  selection: '#eceff4',\n  selectionMatch: '#e5e9f0',\n  gutterBackground: '#eceff4',\n  gutterForeground: '#2e3440',\n  gutterBorder: 'none',\n  lineHighlight: '#02255f11'\n};\nexport var basicLightStyle = [{\n  tag: t.keyword,\n  color: '#5e81ac'\n}, {\n  tag: [t.name, t.deleted, t.character, t.propertyName, t.macroName],\n  color: '#d08770'\n}, {\n  tag: [t.variableName],\n  color: '#d08770'\n}, {\n  tag: [t.function(t.variableName)],\n  color: '#5e81ac'\n}, {\n  tag: [t.labelName],\n  color: '#81a1c1'\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: '#5e81ac'\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: '#a3be8c'\n}, {\n  tag: [t.brace],\n  color: '#8fbcbb'\n}, {\n  tag: [t.annotation],\n  color: '#d30102'\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: '#88c0d0'\n}, {\n  tag: [t.typeName, t.className],\n  color: '#ebcb8b'\n}, {\n  tag: [t.operator, t.operatorKeyword],\n  color: '#a3be8c'\n}, {\n  tag: [t.tagName],\n  color: '#b48ead'\n}, {\n  tag: [t.squareBracket],\n  color: '#bf616a'\n}, {\n  tag: [t.angleBracket],\n  color: '#d08770'\n}, {\n  tag: [t.attributeName],\n  color: '#ebcb8b'\n}, {\n  tag: [t.regexp],\n  color: '#5e81ac'\n}, {\n  tag: [t.quote],\n  color: '#3b4252'\n}, {\n  tag: [t.string],\n  color: '#d08770'\n}, {\n  tag: t.link,\n  color: '#8fbcbb',\n  textDecoration: 'underline',\n  textUnderlinePosition: 'under'\n}, {\n  tag: [t.url, t.escape, t.special(t.string)],\n  color: '#d08770'\n}, {\n  tag: [t.meta],\n  color: '#88c0d0'\n}, {\n  tag: [t.comment],\n  color: '#434c5e',\n  fontStyle: 'italic'\n}, {\n  tag: t.strong,\n  fontWeight: 'bold',\n  color: '#5e81ac'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic',\n  color: '#5e81ac'\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: '#5e81ac'\n}, {\n  tag: t.special(t.heading1),\n  fontWeight: 'bold',\n  color: '#5e81ac'\n}, {\n  tag: t.heading1,\n  fontWeight: 'bold',\n  color: '#5e81ac'\n}, {\n  tag: [t.heading2, t.heading3, t.heading4],\n  fontWeight: 'bold',\n  color: '#5e81ac'\n}, {\n  tag: [t.heading5, t.heading6],\n  color: '#5e81ac'\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: '#d08770'\n}, {\n  tag: [t.processingInstruction, t.inserted],\n  color: '#8fbcbb'\n}, {\n  tag: [t.contentSeparator],\n  color: '#ebcb8b'\n}, {\n  tag: t.invalid,\n  color: '#434c5e',\n  borderBottom: '1px dotted #d30102'\n}];\nexport var basicLightInit = options => {\n  var {\n    theme = 'light',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsBasicLight, settings),\n    styles: [...styles]\n  });\n};\nexport var basicLight = basicLightInit();", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsBbedit = {\n  background: '#FFFFFF',\n  foreground: '#000000',\n  caret: '#FBAC52',\n  selection: '#FFD420',\n  selectionMatch: '#FFD420',\n  gutterBackground: '#f5f5f5',\n  gutterForeground: '#4D4D4C',\n  gutterBorder: 'transparent',\n  lineHighlight: '#00000012'\n};\nexport var bbeditLightStyle = [{\n  tag: [t.meta, t.comment],\n  color: '#804000'\n}, {\n  tag: [t.keyword, t.strong],\n  color: '#0000FF'\n}, {\n  tag: [t.number],\n  color: '#FF0080'\n}, {\n  tag: [t.string],\n  color: '#FF0080'\n}, {\n  tag: [t.variableName],\n  color: '#006600'\n}, {\n  tag: [t.escape],\n  color: '#33CC33'\n}, {\n  tag: [t.tagName],\n  color: '#1C02FF'\n}, {\n  tag: [t.heading],\n  color: '#0C07FF'\n}, {\n  tag: [t.quote],\n  color: '#000000'\n}, {\n  tag: [t.list],\n  color: '#B90690'\n}, {\n  tag: [t.documentMeta],\n  color: '#888888'\n}, {\n  tag: [t.function(t.variableName)],\n  color: '#0000A2'\n}, {\n  tag: [t.definition(t.typeName), t.typeName],\n  color: '#6D79DE'\n}];\nexport var bbeditInit = options => {\n  var {\n    theme = 'light',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsBbedit, settings),\n    styles: [...bbeditLightStyle, ...styles]\n  });\n};\nexport var bbedit = bbeditInit();", "import _extends from \"@babel/runtime/helpers/extends\";\n/**\n * @name Bespin\n * @author Mozilla / Jan T. Sott\n *\n * CodeMirror template by Jan T. Sott (https://github.com/idleberg/base16-codemirror)\n * Original Base16 color scheme by Chris Kempson (https://github.com/chriskempson/base16)\n */\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsBespin = {\n  background: '#28211c',\n  foreground: '#9d9b97',\n  caret: '#797977',\n  selection: '#4f382b',\n  selectionMatch: '#4f382b',\n  gutterBackground: '#28211c',\n  gutterForeground: '#666666',\n  lineHighlight: '#ffffff1a'\n};\nexport var bespinDarkStyle = [{\n  tag: [t.atom, t.number, t.link, t.bool],\n  color: '#9b859d'\n}, {\n  tag: t.comment,\n  color: '#937121'\n}, {\n  tag: [t.keyword, t.tagName],\n  color: '#cf6a4c'\n}, {\n  tag: t.string,\n  color: '#f9ee98'\n}, {\n  tag: t.bracket,\n  color: '#9d9b97'\n}, {\n  tag: [t.variableName],\n  color: '#5ea6ea'\n}, {\n  tag: t.definition(t.variableName),\n  color: '#cf7d34'\n}, {\n  tag: [t.function(t.variableName), t.className],\n  color: '#cf7d34'\n}, {\n  tag: [t.propertyName, t.attributeName],\n  color: '#54be0d'\n}];\nexport var bespinInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsBespin, settings),\n    styles: [...bespinDarkStyle, ...styles]\n  });\n};\nexport var bespin = bespinInit();", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsConsoleDark = {\n  background: '#000',\n  foreground: '#fff',\n  caret: '#fff',\n  selection: '#5c6c9b',\n  selectionMatch: '#2a3967',\n  gutterBackground: '#000',\n  gutterForeground: '#ada9a9',\n  gutterActiveForeground: '#fff',\n  lineHighlight: '#82828275'\n};\nexport var consoleDarkInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsConsoleDark, settings),\n    styles: [...styles]\n  });\n};\nexport var consoleDark = consoleDarkInit();", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsConsoleLight = {\n  background: '#fff',\n  foreground: '#000',\n  caret: '#000',\n  selection: '#c2d2ff',\n  selectionMatch: '#b1c1ef',\n  gutterBackground: '#fff',\n  gutterForeground: '#ada9a9',\n  gutterActiveForeground: '#000',\n  lineHighlight: '#c7c5c575'\n};\nexport var consoleLightInit = options => {\n  var {\n    theme = 'light',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsConsoleLight, settings),\n    styles: [...styles]\n  });\n};\nexport var consoleLight = consoleLightInit();", "export var config = {\n  background: '#232a2f',\n  foreground: '#939da5',\n  selection: '#204062',\n  selectionMatch: '#204062',\n  cursor: '#939da5',\n  dropdownBackground: '#1a2023',\n  activeLine: '#4469832b',\n  matchingBracket: '#204062',\n  keyword: '#ba8ef7',\n  storage: '#ba8ef7',\n  variable: '#939da5',\n  parameter: '#939da5',\n  function: '#ffea6b',\n  string: '#5bec95',\n  constant: '#939da5',\n  type: '#89ddff',\n  class: '#ffea6b',\n  number: '#89ddff',\n  comment: '#707a84',\n  heading: '#5bec95',\n  invalid: '#ff6a80',\n  regexp: '#56adb7',\n  tag: '#ff6a80'\n};", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nimport { config as c } from './color';\nexport var defaultSettingsCopilot = {\n  background: c.background,\n  foreground: c.foreground,\n  caret: c.cursor,\n  selection: c.selection,\n  selectionMatch: c.selectionMatch,\n  gutterBackground: c.background,\n  gutterForeground: c.foreground,\n  lineHighlight: c.activeLine\n};\nexport var copilotDarkStyle = [{\n  tag: t.keyword,\n  color: c.keyword\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName],\n  color: c.variable\n}, {\n  tag: [t.propertyName],\n  color: c.function\n}, {\n  tag: [t.processingInstruction, t.string, t.inserted, t.special(t.string)],\n  color: c.string\n}, {\n  tag: [t.function(t.variableName), t.labelName],\n  color: c.function\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: c.constant\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: c.variable\n}, {\n  tag: [t.className],\n  color: c.class\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: c.number\n}, {\n  tag: [t.typeName],\n  color: c.type,\n  fontStyle: c.type\n}, {\n  tag: [t.operator],\n  color: c.keyword\n}, {\n  tag: [t.url, t.escape, t.regexp, t.link],\n  color: c.regexp\n}, {\n  tag: [t.meta, t.comment],\n  color: c.comment\n}, {\n  tag: t.tagName,\n  color: c.tag\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: c.heading\n}, {\n  tag: [t.atom, t.special(t.variableName)],\n  color: c.variable\n}, {\n  tag: t.invalid,\n  color: c.invalid\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}, {\n  tag: [t.operatorKeyword, t.bool, t.null, t.variableName],\n  color: c.constant\n}];\nexport var copilotInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsCopilot, settings),\n    styles: [...copilotDarkStyle, ...styles]\n  });\n};\nexport var copilot = copilotInit();", "import _extends from \"@babel/runtime/helpers/extends\";\n/**\n * @name darcula\n * @author darcula\n * Name: IntelliJ IDEA darcula theme\n * From IntelliJ IDEA by JetBrains\n */\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsDarcula = {\n  background: '#2B2B2B',\n  foreground: '#f8f8f2',\n  caret: '#FFFFFF',\n  selection: 'rgba(255, 255, 255, 0.1)',\n  selectionMatch: 'rgba(255, 255, 255, 0.2)',\n  gutterBackground: 'rgba(255, 255, 255, 0.1)',\n  gutterForeground: '#999',\n  gutterBorder: 'transparent',\n  lineHighlight: 'rgba(255, 255, 255, 0.1)'\n};\nexport var darculaDarkStyle = [{\n  tag: [t.atom, t.number],\n  color: '#bd93f9'\n}, {\n  tag: [t.comment],\n  color: '#61A151'\n}, {\n  tag: [t.string],\n  color: '#6A8759'\n}, {\n  tag: [t.variableName, t.operator],\n  color: '#A9B7C6'\n}, {\n  tag: [t.meta, t.className],\n  color: '#A9B7C6'\n}, {\n  tag: [t.propertyName],\n  color: '#FFC66D'\n}, {\n  tag: [t.keyword],\n  color: '#CC7832'\n}, {\n  tag: [t.tagName],\n  color: '#ff79c6'\n}, {\n  tag: [t.typeName],\n  color: '#ffb86c'\n}];\nexport var darculaInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsDarcula, settings),\n    styles: [...darculaDarkStyle, ...styles]\n  });\n};\nexport var darcula = darculaInit();", "import _extends from \"@babel/runtime/helpers/extends\";\n/**\n * @name dracula\n * @author dracula\n * Michael Kaminsky (http://github.com/mkaminsky11)\n * Original dracula color scheme by Zeno Rocha (https://github.com/zenorocha/dracula-theme)\n */\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsDracula = {\n  background: '#282a36',\n  foreground: '#f8f8f2',\n  caret: '#f8f8f0',\n  selection: 'rgba(255, 255, 255, 0.1)',\n  selectionMatch: 'rgba(255, 255, 255, 0.2)',\n  gutterBackground: '#282a36',\n  gutterForeground: '#6D8A88',\n  gutterBorder: 'transparent',\n  lineHighlight: 'rgba(255, 255, 255, 0.1)'\n};\nexport var draculaDarkStyle = [{\n  tag: t.comment,\n  color: '#6272a4'\n}, {\n  tag: t.string,\n  color: '#f1fa8c'\n}, {\n  tag: t.atom,\n  color: '#bd93f9'\n}, {\n  tag: t.meta,\n  color: '#f8f8f2'\n}, {\n  tag: [t.keyword, t.operator, t.tagName],\n  color: '#ff79c6'\n}, {\n  tag: [t.function(t.propertyName), t.propertyName],\n  color: '#66d9ef'\n}, {\n  tag: [t.definition(t.variableName), t.function(t.variableName), t.className, t.attributeName],\n  color: '#50fa7b'\n}, {\n  tag: t.atom,\n  color: '#bd93f9'\n}];\nexport var draculaInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsDracula, settings),\n    styles: [...draculaDarkStyle, ...styles]\n  });\n};\nexport var dracula = draculaInit();", "import _extends from \"@babel/runtime/helpers/extends\";\n/**\n * @name duotone\n * @author Bram de Haan\n * by Bram de Haan, adapted from DuoTone themes by Simurai (http://simurai.com/projects/2016/01/01/duotone-themes)\n */\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsDuotoneLight = {\n  background: '#faf8f5',\n  foreground: '#b29762',\n  caret: '#93abdc',\n  selection: '#e3dcce',\n  selectionMatch: '#e3dcce',\n  gutterBackground: '#faf8f5',\n  gutterForeground: '#cdc4b1',\n  gutterBorder: 'transparent',\n  lineHighlight: '#ddceb154'\n};\nexport var douToneLightStyle = [{\n  tag: [t.comment, t.bracket],\n  color: '#b6ad9a'\n}, {\n  tag: [t.atom, t.number, t.keyword, t.link, t.attributeName, t.quote],\n  color: '#063289'\n}, {\n  tag: [t.emphasis, t.heading, t.tagName, t.propertyName, t.variableName],\n  color: '#2d2006'\n}, {\n  tag: [t.typeName, t.url, t.string],\n  color: '#896724'\n}, {\n  tag: [t.operator, t.string],\n  color: '#1659df'\n}, {\n  tag: [t.propertyName],\n  color: '#b29762'\n}, {\n  tag: [t.unit, t.punctuation],\n  color: '#063289'\n}];\nexport var duotoneLightInit = options => {\n  var {\n    theme = 'light',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsDuotoneLight, settings),\n    styles: [...douToneLightStyle, ...styles]\n  });\n};\nexport var duotoneLight = duotoneLightInit();\nexport var defaultSettingsDuotoneDark = {\n  background: '#2a2734',\n  foreground: '#6c6783',\n  caret: '#ffad5c',\n  selection: '#91ff6c26',\n  selectionMatch: '#91ff6c26',\n  gutterBackground: '#2a2734',\n  gutterForeground: '#545167',\n  lineHighlight: '#36334280'\n};\nexport var duotoneDarkStyle = [{\n  tag: [t.comment, t.bracket],\n  color: '#6c6783'\n}, {\n  tag: [t.atom, t.number, t.keyword, t.link, t.attributeName, t.quote],\n  color: '#ffcc99'\n}, {\n  tag: [t.emphasis, t.heading, t.tagName, t.propertyName, t.className, t.variableName],\n  color: '#eeebff'\n}, {\n  tag: [t.typeName, t.url],\n  color: '#7a63ee'\n}, {\n  tag: t.operator,\n  color: '#ffad5c'\n}, {\n  tag: t.string,\n  color: '#ffb870'\n}, {\n  tag: [t.propertyName],\n  color: '#9a86fd'\n}, {\n  tag: [t.unit, t.punctuation],\n  color: '#e09142'\n}];\nexport var duotoneDarkInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsDuotoneDark, settings),\n    styles: [...duotoneDarkStyle, ...styles]\n  });\n};\nexport var duotoneDark = duotoneDarkInit();", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsEclipse = {\n  background: '#fff',\n  foreground: '#000',\n  caret: '#FFFFFF',\n  selection: '#d7d4f0',\n  selectionMatch: '#d7d4f0',\n  gutterBackground: '#f7f7f7',\n  gutterForeground: '#999',\n  lineHighlight: '#006fff1c',\n  gutterBorder: 'transparent'\n};\nexport var eclipseLightStyle = [{\n  tag: [t.comment],\n  color: '#3F7F5F'\n}, {\n  tag: [t.documentMeta],\n  color: '#FF1717'\n}, {\n  tag: t.keyword,\n  color: '#7F0055',\n  fontWeight: 'bold'\n}, {\n  tag: t.atom,\n  color: '#00f'\n}, {\n  tag: t.number,\n  color: '#164'\n}, {\n  tag: t.propertyName,\n  color: '#164'\n}, {\n  tag: [t.variableName, t.definition(t.variableName)],\n  color: '#0000C0'\n}, {\n  tag: t.function(t.variableName),\n  color: '#0000C0'\n}, {\n  tag: t.string,\n  color: '#2A00FF'\n}, {\n  tag: t.operator,\n  color: 'black'\n}, {\n  tag: t.tagName,\n  color: '#170'\n}, {\n  tag: t.attributeName,\n  color: '#00c'\n}, {\n  tag: t.link,\n  color: '#219'\n}];\nexport var eclipseInit = options => {\n  var {\n    theme = 'light',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsEclipse, settings),\n    styles: [...eclipseLightStyle, ...styles]\n  });\n};\nexport var eclipse = eclipseInit();", "import _extends from \"@babel/runtime/helpers/extends\";\n/**\n * @name github\n */\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsGithubLight = {\n  background: '#fff',\n  foreground: '#24292e',\n  selection: '#BBDFFF',\n  selectionMatch: '#BBDFFF',\n  gutterBackground: '#fff',\n  gutterForeground: '#6e7781'\n};\nexport var githubLightStyle = [{\n  tag: [t.standard(t.tagName), t.tagName],\n  color: '#116329'\n}, {\n  tag: [t.comment, t.bracket],\n  color: '#6a737d'\n}, {\n  tag: [t.className, t.propertyName],\n  color: '#6f42c1'\n}, {\n  tag: [t.variableName, t.attributeName, t.number, t.operator],\n  color: '#005cc5'\n}, {\n  tag: [t.keyword, t.typeName, t.typeOperator, t.typeName],\n  color: '#d73a49'\n}, {\n  tag: [t.string, t.meta, t.regexp],\n  color: '#032f62'\n}, {\n  tag: [t.name, t.quote],\n  color: '#22863a'\n}, {\n  tag: [t.heading, t.strong],\n  color: '#24292e',\n  fontWeight: 'bold'\n}, {\n  tag: [t.emphasis],\n  color: '#24292e',\n  fontStyle: 'italic'\n}, {\n  tag: [t.deleted],\n  color: '#b31d28',\n  backgroundColor: 'ffeef0'\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: '#e36209'\n}, {\n  tag: [t.url, t.escape, t.regexp, t.link],\n  color: '#032f62'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}, {\n  tag: t.invalid,\n  color: '#cb2431'\n}];\nexport var githubLightInit = options => {\n  var {\n    theme = 'light',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsGithubLight, settings),\n    styles: [...githubLightStyle, ...styles]\n  });\n};\nexport var githubLight = githubLightInit();\nexport var defaultSettingsGithubDark = {\n  background: '#0d1117',\n  foreground: '#c9d1d9',\n  caret: '#c9d1d9',\n  selection: '#003d73',\n  selectionMatch: '#003d73',\n  lineHighlight: '#36334280'\n};\nexport var githubDarkStyle = [{\n  tag: [t.standard(t.tagName), t.tagName],\n  color: '#7ee787'\n}, {\n  tag: [t.comment, t.bracket],\n  color: '#8b949e'\n}, {\n  tag: [t.className, t.propertyName],\n  color: '#d2a8ff'\n}, {\n  tag: [t.variableName, t.attributeName, t.number, t.operator],\n  color: '#79c0ff'\n}, {\n  tag: [t.keyword, t.typeName, t.typeOperator, t.typeName],\n  color: '#ff7b72'\n}, {\n  tag: [t.string, t.meta, t.regexp],\n  color: '#a5d6ff'\n}, {\n  tag: [t.name, t.quote],\n  color: '#7ee787'\n}, {\n  tag: [t.heading, t.strong],\n  color: '#d2a8ff',\n  fontWeight: 'bold'\n}, {\n  tag: [t.emphasis],\n  color: '#d2a8ff',\n  fontStyle: 'italic'\n}, {\n  tag: [t.deleted],\n  color: '#ffdcd7',\n  backgroundColor: 'ffeef0'\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: '#ffab70'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}, {\n  tag: t.invalid,\n  color: '#f97583'\n}];\nexport var githubDarkInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsGithubDark, settings),\n    styles: [...githubDarkStyle, ...styles]\n  });\n};\nexport var githubDark = githubDarkInit();", "import _extends from \"@babel/runtime/helpers/extends\";\n/**\n * @name gruvbox-dark\n * @author morhetz\n * Name: Gruvbox\n * From github.com/codemirror/codemirror5/blob/master/theme/gruvbox-dark.css\n */\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsGruvboxDark = {\n  background: '#282828',\n  foreground: '#ebdbb2',\n  caret: '#ebdbb2',\n  selection: '#b99d555c',\n  selectionMatch: '#b99d555c',\n  lineHighlight: '#baa1602b',\n  gutterBackground: '#282828',\n  gutterForeground: '#7c6f64'\n};\nexport var gruvboxDarkStyle = [{\n  tag: t.keyword,\n  color: '#fb4934'\n}, {\n  tag: [t.name, t.deleted, t.character, t.propertyName, t.macroName],\n  color: '#8ec07c'\n}, {\n  tag: [t.variableName],\n  color: '#83a598'\n}, {\n  tag: [t.function(t.variableName)],\n  color: '#b8bb26',\n  fontStyle: 'bold'\n}, {\n  tag: [t.labelName],\n  color: '#ebdbb2'\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: '#d3869b'\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: '#ebdbb2'\n}, {\n  tag: [t.brace],\n  color: '#ebdbb2'\n}, {\n  tag: [t.annotation],\n  color: '#fb4934d'\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: '#d3869b'\n}, {\n  tag: [t.typeName, t.className],\n  color: '#fabd2f'\n}, {\n  tag: [t.operator, t.operatorKeyword],\n  color: '#fb4934'\n}, {\n  tag: [t.tagName],\n  color: '#8ec07c',\n  fontStyle: 'bold'\n}, {\n  tag: [t.squareBracket],\n  color: '#fe8019'\n}, {\n  tag: [t.angleBracket],\n  color: '#83a598'\n}, {\n  tag: [t.attributeName],\n  color: '#8ec07c'\n}, {\n  tag: [t.regexp],\n  color: '#8ec07c'\n}, {\n  tag: [t.quote],\n  color: '#928374'\n}, {\n  tag: [t.string],\n  color: '#ebdbb2'\n}, {\n  tag: t.link,\n  color: '#a89984',\n  textDecoration: 'underline',\n  textUnderlinePosition: 'under'\n}, {\n  tag: [t.url, t.escape, t.special(t.string)],\n  color: '#d3869b'\n}, {\n  tag: [t.meta],\n  color: '#fabd2f'\n}, {\n  tag: [t.comment],\n  color: '#928374',\n  fontStyle: 'italic'\n}, {\n  tag: t.strong,\n  fontWeight: 'bold',\n  color: '#fe8019'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic',\n  color: '#b8bb26'\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: '#b8bb26'\n}, {\n  tag: [t.heading1, t.heading2],\n  fontWeight: 'bold',\n  color: '#b8bb26'\n}, {\n  tag: [t.heading3, t.heading4],\n  fontWeight: 'bold',\n  color: '#fabd2f'\n}, {\n  tag: [t.heading5, t.heading6],\n  color: '#fabd2f'\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: '#d3869b'\n}, {\n  tag: [t.processingInstruction, t.inserted],\n  color: '#83a598'\n}, {\n  tag: [t.contentSeparator],\n  color: '#fb4934'\n}, {\n  tag: t.invalid,\n  color: '#fe8019',\n  borderBottom: \"1px dotted #fb4934d\"\n}];\nexport var gruvboxDarkInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsGruvboxDark, settings),\n    styles: [...gruvboxDarkStyle, ...styles]\n  });\n};\nexport var gruvboxDark = gruvboxDarkInit();\nexport var defaultSettingsGruvboxLight = {\n  background: '#fbf1c7',\n  foreground: '#3c3836',\n  caret: '#af3a03',\n  selection: '#bdae9391',\n  selectionMatch: '#bdae9391',\n  lineHighlight: '#a37f2238',\n  gutterBackground: '#ebdbb2',\n  gutterForeground: '#665c54',\n  gutterBorder: 'transparent'\n};\nexport var gruvboxLightInit = options => {\n  var {\n    theme = 'light',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsGruvboxLight, settings),\n    styles: [{\n      tag: t.keyword,\n      color: '#9d0006'\n    }, {\n      tag: [t.name, t.deleted, t.character, t.propertyName, t.macroName],\n      color: '#427b58'\n    }, {\n      tag: [t.variableName],\n      color: '#076678'\n    }, {\n      tag: [t.function(t.variableName)],\n      color: '#79740e',\n      fontStyle: 'bold'\n    }, {\n      tag: [t.labelName],\n      color: '#3c3836'\n    }, {\n      tag: [t.color, t.constant(t.name), t.standard(t.name)],\n      color: '#8f3f71'\n    }, {\n      tag: [t.definition(t.name), t.separator],\n      color: '#3c3836'\n    }, {\n      tag: [t.brace],\n      color: '#3c3836'\n    }, {\n      tag: [t.annotation],\n      color: '#9d0006'\n    }, {\n      tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n      color: '#8f3f71'\n    }, {\n      tag: [t.typeName, t.className],\n      color: '#b57614'\n    }, {\n      tag: [t.operator, t.operatorKeyword],\n      color: '#9d0006'\n    }, {\n      tag: [t.tagName],\n      color: '#427b58',\n      fontStyle: 'bold'\n    }, {\n      tag: [t.squareBracket],\n      color: '#af3a03'\n    }, {\n      tag: [t.angleBracket],\n      color: '#076678'\n    }, {\n      tag: [t.attributeName],\n      color: '#427b58'\n    }, {\n      tag: [t.regexp],\n      color: '#427b58'\n    }, {\n      tag: [t.quote],\n      color: '#928374'\n    }, {\n      tag: [t.string],\n      color: '#3c3836'\n    }, {\n      tag: t.link,\n      color: '#7c6f64',\n      textDecoration: 'underline',\n      textUnderlinePosition: 'under'\n    }, {\n      tag: [t.url, t.escape, t.special(t.string)],\n      color: '#8f3f71'\n    }, {\n      tag: [t.meta],\n      color: '#b57614'\n    }, {\n      tag: [t.comment],\n      color: '#928374',\n      fontStyle: 'italic'\n    }, {\n      tag: t.strong,\n      fontWeight: 'bold',\n      color: '#af3a03'\n    }, {\n      tag: t.emphasis,\n      fontStyle: 'italic',\n      color: '#79740e'\n    }, {\n      tag: t.strikethrough,\n      textDecoration: 'line-through'\n    }, {\n      tag: t.heading,\n      fontWeight: 'bold',\n      color: '#79740e'\n    }, {\n      tag: [t.heading1, t.heading2],\n      fontWeight: 'bold',\n      color: '#79740e'\n    }, {\n      tag: [t.heading3, t.heading4],\n      fontWeight: 'bold',\n      color: '#b57614'\n    }, {\n      tag: [t.heading5, t.heading6],\n      color: '#b57614'\n    }, {\n      tag: [t.atom, t.bool, t.special(t.variableName)],\n      color: '#8f3f71'\n    }, {\n      tag: [t.processingInstruction, t.inserted],\n      color: '#076678'\n    }, {\n      tag: [t.contentSeparator],\n      color: '#9d0006'\n    }, {\n      tag: t.invalid,\n      color: '#af3a03',\n      borderBottom: \"1px dotted #9d0006\"\n    }, ...styles]\n  });\n};\nexport var gruvboxLight = gruvboxLightInit();", "export var config = {\n  background: '#221a0f',\n  foreground: '#d3af86',\n  selection: '#84613daa',\n  selectionMatch: '#84613daa',\n  cursor: '#d3af86',\n  dropdownBackground: '#51412c',\n  activeLine: '#5e452b52',\n  matchingBracket: '#5e452b',\n  keyword: '#98676a',\n  storage: '#98676a',\n  variable: '#dc3958',\n  parameter: '#dc3958',\n  function: '#7e602c',\n  string: '#889b4a',\n  constant: '#f79a32',\n  type: '#f06431',\n  class: '#f06431',\n  number: '#f79a32',\n  comment: '#a57a4c',\n  heading: '#8ab1b0',\n  invalid: '#dc3958',\n  regexp: '#7e602c',\n  tag: '#dc3958'\n};", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nimport { config as c } from './color';\nexport var defaultSettingsKimbie = {\n  background: c.background,\n  foreground: c.foreground,\n  caret: c.cursor,\n  selection: c.selection,\n  selectionMatch: c.selection,\n  gutterBackground: c.background,\n  gutterForeground: c.foreground,\n  lineHighlight: c.activeLine\n};\nexport var kimbieDarkStyle = [{\n  tag: t.keyword,\n  color: c.keyword\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName],\n  color: c.variable\n}, {\n  tag: [t.propertyName],\n  color: c.function\n}, {\n  tag: [t.processingInstruction, t.string, t.inserted, t.special(t.string)],\n  color: c.string\n}, {\n  tag: [t.function(t.variableName), t.labelName],\n  color: c.function\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: c.constant\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: c.variable\n}, {\n  tag: [t.className],\n  color: c.class\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: c.number\n}, {\n  tag: [t.typeName],\n  color: c.type,\n  fontStyle: c.type\n}, {\n  tag: [t.operator, t.operatorKeyword],\n  color: c.keyword\n}, {\n  tag: [t.url, t.escape, t.regexp, t.link],\n  color: c.regexp\n}, {\n  tag: [t.meta, t.comment],\n  color: c.comment\n}, {\n  tag: t.tagName,\n  color: c.tag\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: c.heading\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: c.variable\n}, {\n  tag: t.invalid,\n  color: c.invalid\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}];\nexport var kimbieInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsKimbie, settings),\n    styles: [...kimbieDarkStyle, ...styles]\n  });\n};\nexport var kimbie = kimbieInit();", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsMaterial = {\n  background: '#2e3235',\n  foreground: '#bdbdbd',\n  caret: '#a0a4ae',\n  selection: '#d7d4f063',\n  selectionMatch: '#d7d4f063',\n  gutterBackground: '#2e3235',\n  gutterForeground: '#999',\n  gutterActiveForeground: '#4f5b66',\n  lineHighlight: '#545b6130'\n};\nexport var defaultSettingsMaterialDark = defaultSettingsMaterial;\nexport var materialDarkStyle = [{\n  tag: t.keyword,\n  color: '#cf6edf'\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName],\n  color: '#56c8d8'\n}, {\n  tag: [t.propertyName],\n  color: '#facf4e'\n}, {\n  tag: [t.variableName],\n  color: '#bdbdbd'\n}, {\n  tag: [t.function(t.variableName)],\n  color: '#56c8d8'\n}, {\n  tag: [t.labelName],\n  color: '#cf6edf'\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: '#facf4e'\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: '#fa5788'\n}, {\n  tag: [t.brace],\n  color: '#cf6edf'\n}, {\n  tag: [t.annotation],\n  color: '#ff5f52'\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: '#ffad42'\n}, {\n  tag: [t.typeName, t.className],\n  color: '#ffad42'\n}, {\n  tag: [t.operator, t.operatorKeyword],\n  color: '#7186f0'\n}, {\n  tag: [t.tagName],\n  color: '#99d066'\n}, {\n  tag: [t.squareBracket],\n  color: '#ff5f52'\n}, {\n  tag: [t.angleBracket],\n  color: '#606f7a'\n}, {\n  tag: [t.attributeName],\n  color: '#bdbdbd'\n}, {\n  tag: [t.regexp],\n  color: '#ff5f52'\n}, {\n  tag: [t.quote],\n  color: '#6abf69'\n}, {\n  tag: [t.string],\n  color: '#99d066'\n}, {\n  tag: t.link,\n  color: '#56c8d8',\n  textDecoration: 'underline',\n  textUnderlinePosition: 'under'\n}, {\n  tag: [t.url, t.escape, t.special(t.string)],\n  color: '#facf4e'\n}, {\n  tag: [t.meta],\n  color: '#707d8b'\n}, {\n  tag: [t.comment],\n  color: '#707d8b',\n  fontStyle: 'italic'\n}, {\n  tag: t.monospace,\n  color: '#bdbdbd'\n}, {\n  tag: t.strong,\n  fontWeight: 'bold',\n  color: '#ff5f52'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic',\n  color: '#99d066'\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: '#facf4e'\n}, {\n  tag: t.heading1,\n  fontWeight: 'bold',\n  color: '#facf4e'\n}, {\n  tag: [t.heading2, t.heading3, t.heading4],\n  fontWeight: 'bold',\n  color: '#facf4e'\n}, {\n  tag: [t.heading5, t.heading6],\n  color: '#facf4e'\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: '#56c8d8'\n}, {\n  tag: [t.processingInstruction, t.inserted],\n  color: '#ff5f52'\n}, {\n  tag: [t.contentSeparator],\n  color: '#56c8d8'\n}, {\n  tag: t.invalid,\n  color: '#606f7a',\n  borderBottom: \"1px dotted #ff5f52\"\n}];\nexport var materialInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsMaterial, settings),\n    styles: [...materialDarkStyle, ...styles]\n  });\n};\nexport var materialDarkInit = materialInit;\nexport var materialDark = materialInit();\nexport var material = materialInit();\nexport var defaultSettingsMaterialLight = {\n  background: '#FAFAFA',\n  foreground: '#90A4AE',\n  caret: '#272727',\n  selection: '#80CBC440',\n  selectionMatch: '#80CBC440',\n  gutterBackground: '#FAFAFA',\n  gutterForeground: '#90A4AE',\n  gutterBorder: 'transparent',\n  lineHighlight: '#CCD7DA50'\n};\nexport var materialLightStyle = [{\n  tag: t.keyword,\n  color: '#39ADB5'\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName],\n  color: '#90A4AE'\n}, {\n  tag: [t.propertyName],\n  color: '#6182B8'\n}, {\n  tag: [t.processingInstruction, t.string, t.inserted, t.special(t.string)],\n  color: '#91B859'\n}, {\n  tag: [t.function(t.variableName), t.labelName],\n  color: '#6182B8'\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: '#39ADB5'\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: '#90A4AE'\n}, {\n  tag: [t.className],\n  color: '#E2931D'\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: '#F76D47'\n}, {\n  tag: [t.typeName],\n  color: '#E2931D',\n  fontStyle: '#E2931D'\n}, {\n  tag: [t.operator, t.operatorKeyword],\n  color: '#39ADB5'\n}, {\n  tag: [t.url, t.escape, t.regexp, t.link],\n  color: '#91B859'\n}, {\n  tag: [t.meta, t.comment],\n  color: '#90A4AE'\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: '#39ADB5'\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: '#90A4AE'\n}, {\n  tag: t.invalid,\n  color: '#E5393570'\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}];\nexport var materialLightInit = options => {\n  var {\n    theme = 'light',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsMaterialLight, settings),\n    styles: [...materialLightStyle, ...styles]\n  });\n};\nexport var materialLight = materialLightInit();", "export var config = {\n  background: '#272822',\n  foreground: '#f8f8f2',\n  selection: '#4a4a76',\n  selectionMatch: '#4a4a76',\n  cursor: '#f8f8f0',\n  dropdownBackground: '#414339',\n  activeLine: '#3e3d3257',\n  matchingBracket: '#3e3d32',\n  keyword: '#F92672',\n  storage: '#F92672',\n  variable: '#FD971F',\n  parameter: '#FD971F',\n  function: '#66D9EF',\n  string: '#E6DB74',\n  constant: '#AE81FF',\n  type: '#66D9EF',\n  class: '#A6E22E',\n  number: '#AE81FF',\n  comment: '#88846f',\n  heading: '#A6E22E',\n  invalid: '#F44747',\n  regexp: '#E6DB74',\n  tag: '#F92672'\n};", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nimport { config as c } from './color';\nexport var defaultSettingsMonokai = {\n  background: c.background,\n  foreground: c.foreground,\n  caret: c.cursor,\n  selection: c.selection,\n  selectionMatch: c.selection,\n  gutterBackground: c.background,\n  gutterForeground: c.foreground,\n  lineHighlight: c.activeLine\n};\nexport var monokaiDarkStyle = [{\n  tag: t.keyword,\n  color: c.keyword\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName],\n  color: c.variable\n}, {\n  tag: [t.propertyName],\n  color: c.function\n}, {\n  tag: [t.processingInstruction, t.string, t.inserted, t.special(t.string)],\n  color: c.string\n}, {\n  tag: [t.function(t.variableName), t.labelName],\n  color: c.function\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: c.constant\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: c.variable\n}, {\n  tag: [t.className],\n  color: c.class\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: c.number\n}, {\n  tag: [t.typeName],\n  color: c.type,\n  fontStyle: c.type\n}, {\n  tag: [t.operator, t.operatorKeyword],\n  color: c.keyword\n}, {\n  tag: [t.url, t.escape, t.regexp, t.link],\n  color: c.regexp\n}, {\n  tag: [t.meta, t.comment],\n  color: c.comment\n}, {\n  tag: t.tagName,\n  color: c.tag\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: c.heading\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: c.variable\n}, {\n  tag: t.invalid,\n  color: c.invalid\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}];\nexport var monokaiInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsMonokai, settings),\n    styles: [...monokaiDarkStyle, ...styles]\n  });\n};\nexport var monokai = monokaiInit();", "export var config = {\n  background: '#1e1e1e',\n  foreground: '#c5c8c6',\n  selection: '#4747a1',\n  selectionMatch: '#4747a1',\n  cursor: '#c07020',\n  dropdownBackground: '#525252',\n  activeLine: '#30303078',\n  matchingBracket: '#303030',\n  keyword: '#676867',\n  storage: '#676867',\n  variable: '#c7444a',\n  parameter: '#6089B4',\n  function: '#9872A2',\n  string: '#D08442',\n  constant: '#8080FF',\n  type: '#9B0000',\n  class: '#CE6700',\n  number: '#6089B4',\n  comment: '#9A9B99',\n  heading: '#D0B344',\n  invalid: '#FF0B00',\n  regexp: '#D08442',\n  tag: '#6089B4'\n};", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nimport { config as c } from './color';\nexport var defaultSettingsMonokaiDimmed = {\n  background: c.background,\n  foreground: c.foreground,\n  caret: c.cursor,\n  selection: c.selection,\n  selectionMatch: c.selection,\n  gutterBackground: c.background,\n  gutterForeground: c.foreground,\n  lineHighlight: c.activeLine\n};\nexport var monokaiDimmedDarkStyle = [{\n  tag: t.keyword,\n  color: c.keyword\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName],\n  color: c.variable\n}, {\n  tag: [t.propertyName],\n  color: c.function\n}, {\n  tag: [t.processingInstruction, t.string, t.inserted, t.special(t.string)],\n  color: c.string\n}, {\n  tag: [t.function(t.variableName), t.labelName],\n  color: c.function\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: c.constant\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: c.variable\n}, {\n  tag: [t.className],\n  color: c.class\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: c.number\n}, {\n  tag: [t.typeName],\n  color: c.type,\n  fontStyle: c.type\n}, {\n  tag: [t.operator, t.operatorKeyword],\n  color: c.keyword\n}, {\n  tag: [t.url, t.escape, t.regexp, t.link],\n  color: c.regexp\n}, {\n  tag: [t.meta, t.comment],\n  color: c.comment\n}, {\n  tag: t.tagName,\n  color: c.tag\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: c.heading\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: c.variable\n}, {\n  tag: t.invalid,\n  color: c.invalid\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}];\nexport var monokaiDimmedInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsMonokaiDimmed, settings),\n    styles: [...monokaiDimmedDarkStyle, ...styles]\n  });\n};\nexport var monokaiDimmed = monokaiDimmedInit();", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsNoctisLilac = {\n  background: '#f2f1f8',\n  foreground: '#0c006b',\n  caret: '#5c49e9',\n  selection: '#d5d1f2',\n  selectionMatch: '#d5d1f2',\n  gutterBackground: '#f2f1f8',\n  gutterForeground: '#0c006b70',\n  lineHighlight: '#16067911'\n};\nexport var noctisLilacLightStyle = [{\n  tag: t.comment,\n  color: '#9995b7'\n}, {\n  tag: t.keyword,\n  color: '#ff5792',\n  fontWeight: 'bold'\n}, {\n  tag: [t.definitionKeyword, t.modifier],\n  color: '#ff5792'\n}, {\n  tag: [t.className, t.tagName, t.definition(t.typeName)],\n  color: '#0094f0'\n}, {\n  tag: [t.number, t.bool, t.null, t.special(t.brace)],\n  color: '#5842ff'\n}, {\n  tag: [t.definition(t.propertyName), t.function(t.variableName)],\n  color: '#0095a8'\n}, {\n  tag: t.typeName,\n  color: '#b3694d'\n}, {\n  tag: [t.propertyName, t.variableName],\n  color: '#fa8900'\n}, {\n  tag: t.operator,\n  color: '#ff5792'\n}, {\n  tag: t.self,\n  color: '#e64100'\n}, {\n  tag: [t.string, t.regexp],\n  color: '#00b368'\n}, {\n  tag: [t.paren, t.bracket],\n  color: '#0431fa'\n}, {\n  tag: t.labelName,\n  color: '#00bdd6'\n}, {\n  tag: t.attributeName,\n  color: '#e64100'\n}, {\n  tag: t.angleBracket,\n  color: '#9995b7'\n}];\nexport var noctisLilacInit = options => {\n  var {\n    theme = 'light',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsNoctisLilac, settings),\n    styles: [...noctisLilacLightStyle, ...styles]\n  });\n};\nexport var noctisLilac = noctisLilacInit();", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsNord = {\n  background: '#2e3440',\n  foreground: '#FFFFFF',\n  caret: '#FFFFFF',\n  selection: '#00000073',\n  selectionMatch: '#00000073',\n  gutterBackground: '#2e3440',\n  gutterForeground: '#4c566a',\n  gutterActiveForeground: '#d8dee9',\n  lineHighlight: '#4c566a29'\n};\nexport var nordDarkStyle = [{\n  tag: t.keyword,\n  color: '#5e81ac'\n}, {\n  tag: [t.name, t.deleted, t.character, t.propertyName, t.macroName],\n  color: '#88c0d0'\n}, {\n  tag: [t.variableName],\n  color: '#8fbcbb'\n}, {\n  tag: [t.function(t.variableName)],\n  color: '#8fbcbb'\n}, {\n  tag: [t.labelName],\n  color: '#81a1c1'\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: '#5e81ac'\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: '#a3be8c'\n}, {\n  tag: [t.brace],\n  color: '#8fbcbb'\n}, {\n  tag: [t.annotation],\n  color: '#d30102'\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: '#b48ead'\n}, {\n  tag: [t.typeName, t.className],\n  color: '#ebcb8b'\n}, {\n  tag: [t.operator, t.operatorKeyword],\n  color: '#a3be8c'\n}, {\n  tag: [t.tagName],\n  color: '#b48ead'\n}, {\n  tag: [t.squareBracket],\n  color: '#bf616a'\n}, {\n  tag: [t.angleBracket],\n  color: '#d08770'\n}, {\n  tag: [t.attributeName],\n  color: '#ebcb8b'\n}, {\n  tag: [t.regexp],\n  color: '#5e81ac'\n}, {\n  tag: [t.quote],\n  color: '#b48ead'\n}, {\n  tag: [t.string],\n  color: '#a3be8c'\n}, {\n  tag: t.link,\n  color: '#a3be8c',\n  textDecoration: 'underline',\n  textUnderlinePosition: 'under'\n}, {\n  tag: [t.url, t.escape, t.special(t.string)],\n  color: '#8fbcbb'\n}, {\n  tag: [t.meta],\n  color: '#88c0d0'\n}, {\n  tag: [t.monospace],\n  color: '#d8dee9',\n  fontStyle: 'italic'\n}, {\n  tag: [t.comment],\n  color: '#4c566a',\n  fontStyle: 'italic'\n}, {\n  tag: t.strong,\n  fontWeight: 'bold',\n  color: '#5e81ac'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic',\n  color: '#5e81ac'\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: '#5e81ac'\n}, {\n  tag: t.special(t.heading1),\n  fontWeight: 'bold',\n  color: '#5e81ac'\n}, {\n  tag: t.heading1,\n  fontWeight: 'bold',\n  color: '#5e81ac'\n}, {\n  tag: [t.heading2, t.heading3, t.heading4],\n  fontWeight: 'bold',\n  color: '#5e81ac'\n}, {\n  tag: [t.heading5, t.heading6],\n  color: '#5e81ac'\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: '#d08770'\n}, {\n  tag: [t.processingInstruction, t.inserted],\n  color: '#8fbcbb'\n}, {\n  tag: [t.contentSeparator],\n  color: '#ebcb8b'\n}, {\n  tag: t.invalid,\n  color: '#434c5e',\n  borderBottom: \"1px dotted #d30102\"\n}];\n\n// Colors from https://www.nordtheme.com/docs/colors-and-palettes\nexport var nordInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsNord, settings),\n    styles: [...nordDarkStyle, ...styles]\n  });\n};\nexport var nord = nordInit();", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsOkaidia = {\n  background: '#272822',\n  foreground: '#FFFFFF',\n  caret: '#FFFFFF',\n  selection: '#49483E',\n  selectionMatch: '#49483E',\n  gutterBackground: '#272822',\n  gutterForeground: '#FFFFFF70',\n  lineHighlight: '#0000003b'\n};\nexport var okaidiaDarkStyle = [{\n  tag: [t.comment, t.documentMeta],\n  color: '#8292a2'\n}, {\n  tag: [t.number, t.bool, t.null, t.atom],\n  color: '#ae81ff'\n}, {\n  tag: [t.attributeValue, t.className, t.name],\n  color: '#e6db74'\n}, {\n  tag: [t.propertyName, t.attributeName],\n  color: '#a6e22e'\n}, {\n  tag: [t.variableName],\n  color: '#9effff'\n}, {\n  tag: [t.squareBracket],\n  color: '#bababa'\n}, {\n  tag: [t.string, t.special(t.brace)],\n  color: '#e6db74'\n}, {\n  tag: [t.regexp, t.className, t.typeName, t.definition(t.typeName)],\n  color: '#66d9ef'\n}, {\n  tag: [t.definition(t.variableName), t.definition(t.propertyName), t.function(t.variableName)],\n  color: '#fd971f'\n},\n// { tag: t.keyword, color: '#f92672' },\n{\n  tag: [t.keyword, t.definitionKeyword, t.modifier, t.tagName, t.angleBracket],\n  color: '#f92672'\n}];\nexport var okaidiaInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsOkaidia, settings),\n    styles: [...okaidiaDarkStyle, ...styles]\n  });\n};\nexport var okaidia = okaidiaInit();", "export var config = {\n  background: '#F5F5F5',\n  foreground: '#333333',\n  selection: '#C9D0D9',\n  selectionMatch: '#C9D0D9',\n  cursor: '#54494B',\n  dropdownBackground: '#F5F5F5',\n  activeLine: '#79ff002b',\n  matchingBracket: '#E4F6D4',\n  keyword: '#4B69C6',\n  storage: '#4B69C6',\n  variable: '#7A3E9D',\n  parameter: '#7A3E9D',\n  function: '#AA3731',\n  string: '#448C27',\n  constant: '#9C5D27',\n  type: '#7A3E9D',\n  class: '#AA3731',\n  number: '#9C5D27',\n  comment: '#AAAAAA',\n  heading: '#AA3731',\n  invalid: '#cd3131',\n  regexp: '#4B69C6',\n  tag: '#4B69C6'\n};", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nimport { config as c } from './color';\nexport var defaultSettingsQuietlight = {\n  background: c.background,\n  foreground: c.foreground,\n  caret: c.cursor,\n  selection: c.selection,\n  selectionMatch: c.selection,\n  gutterBackground: c.background,\n  gutterForeground: c.foreground,\n  gutterBorder: 'transparent',\n  lineHighlight: c.activeLine\n};\nexport var quietlightStyle = [{\n  tag: t.keyword,\n  color: c.keyword\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName],\n  color: c.variable\n}, {\n  tag: [t.propertyName],\n  color: c.function\n}, {\n  tag: [t.processingInstruction, t.string, t.inserted, t.special(t.string)],\n  color: c.string\n}, {\n  tag: [t.function(t.variableName), t.labelName],\n  color: c.function\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: c.constant\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: c.variable\n}, {\n  tag: [t.className],\n  color: c.class\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: c.number\n}, {\n  tag: [t.typeName],\n  color: c.type,\n  fontStyle: c.type\n}, {\n  tag: [t.operator, t.operatorKeyword],\n  color: c.keyword\n}, {\n  tag: [t.url, t.escape, t.regexp, t.link],\n  color: c.regexp\n}, {\n  tag: [t.meta, t.comment],\n  color: c.comment\n}, {\n  tag: t.tagName,\n  color: c.tag\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: c.heading\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: c.variable\n}, {\n  tag: t.invalid,\n  color: c.invalid\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}];\nexport var quietlightInit = options => {\n  var {\n    theme = 'light',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsQuietlight, settings),\n    styles: [...quietlightStyle, ...styles]\n  });\n};\nexport var quietlight = quietlightInit();", "export var config = {\n  background: '#390000',\n  foreground: '#F8F8F8',\n  selection: '#750000',\n  selectionMatch: '#750000',\n  cursor: '#970000',\n  dropdownBackground: '#580000',\n  activeLine: '#ff000033',\n  matchingBracket: '#ff000033',\n  keyword: '#f12727ff',\n  storage: '#ff6262ff',\n  variable: '#edef7dff',\n  parameter: '#edef7dff',\n  function: '#ffb454ff',\n  string: '#edef7dff',\n  constant: '#ec0d1e',\n  type: '#9df39fff',\n  class: '#fec758ff',\n  number: '#994646ff',\n  comment: '#e7c0c0ff',\n  heading: '#fec758ff',\n  invalid: '#ffffffff',\n  regexp: '#edef7dff',\n  tag: '#aa5507ff'\n};", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nimport { config as c } from './color';\nexport var defaultSettingsRed = {\n  background: c.background,\n  foreground: c.foreground,\n  caret: c.cursor,\n  selection: c.selection,\n  selectionMatch: c.selection,\n  gutterBackground: c.background,\n  gutterForeground: c.foreground,\n  lineHighlight: c.activeLine\n};\nexport var redDarkStyle = [{\n  tag: t.keyword,\n  color: c.keyword\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName],\n  color: c.variable\n}, {\n  tag: [t.propertyName],\n  color: c.function\n}, {\n  tag: [t.processingInstruction, t.string, t.inserted, t.special(t.string)],\n  color: c.string\n}, {\n  tag: [t.function(t.variableName), t.labelName],\n  color: c.function\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: c.constant\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: c.variable\n}, {\n  tag: [t.className],\n  color: c.class\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: c.number\n}, {\n  tag: [t.typeName],\n  color: c.type,\n  fontStyle: c.type\n}, {\n  tag: [t.operator, t.operatorKeyword],\n  color: c.keyword\n}, {\n  tag: [t.url, t.escape, t.regexp, t.link],\n  color: c.regexp\n}, {\n  tag: [t.meta, t.comment],\n  color: c.comment\n}, {\n  tag: t.tagName,\n  color: c.tag\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: c.heading\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: c.variable\n}, {\n  tag: t.invalid,\n  color: c.invalid\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}];\nexport var redInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsRed, settings),\n    styles: [...redDarkStyle, ...styles]\n  });\n};\nexport var red = redInit();", "export var config = {\n  background: '#002B36',\n  foreground: '#839496',\n  selection: '#004454AA',\n  selectionMatch: '#005A6FAA',\n  cursor: '#D30102',\n  dropdownBackground: '#00212B',\n  dropdownBorder: '#2AA19899',\n  activeLine: '#00cafe11',\n  matchingBracket: '#073642',\n  keyword: '#859900',\n  storage: '#93A1A1',\n  variable: '#268BD2',\n  parameter: '#268BD2',\n  function: '#268BD2',\n  string: '#2AA198',\n  constant: '#CB4B16',\n  type: '#859900',\n  class: '#268BD2',\n  number: '#D33682',\n  comment: '#586E75',\n  heading: '#268BD2',\n  invalid: '#DC322F',\n  regexp: '#DC322F',\n  tag: '#268BD2'\n};", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nimport { config as c } from './dark-color';\nexport var defaultSettingsSolarizedDark = {\n  background: c.background,\n  foreground: c.foreground,\n  caret: c.cursor,\n  selection: c.selection,\n  selectionMatch: c.selection,\n  gutterBackground: c.background,\n  gutterForeground: c.foreground,\n  gutterBorder: 'transparent',\n  lineHighlight: c.activeLine\n};\nexport var solarizedDarkStyle = [{\n  tag: t.keyword,\n  color: c.keyword\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName],\n  color: c.variable\n}, {\n  tag: [t.propertyName],\n  color: c.function\n}, {\n  tag: [t.processingInstruction, t.string, t.inserted, t.special(t.string)],\n  color: c.string\n}, {\n  tag: [t.function(t.variableName), t.labelName],\n  color: c.function\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: c.constant\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: c.variable\n}, {\n  tag: [t.className],\n  color: c.class\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: c.number\n}, {\n  tag: [t.typeName],\n  color: c.type,\n  fontStyle: c.type\n}, {\n  tag: [t.operator, t.operatorKeyword],\n  color: c.keyword\n}, {\n  tag: [t.url, t.escape, t.regexp, t.link],\n  color: c.regexp\n}, {\n  tag: [t.meta, t.comment],\n  color: c.comment\n}, {\n  tag: t.tagName,\n  color: c.tag\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: c.heading\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: c.variable\n}, {\n  tag: t.invalid,\n  color: c.invalid\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}];\nexport var solarizedDarkInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsSolarizedDark, settings),\n    styles: [...solarizedDarkStyle, ...styles]\n  });\n};\nexport var solarizedDark = solarizedDarkInit();", "export var config = {\n  background: '#FDF6E3',\n  foreground: '#657B83',\n  selection: '#EEE8D5',\n  selectionMatch: '#EEE8D5',\n  cursor: '#657B83',\n  dropdownBackground: '#EEE8D5',\n  dropdownBorder: '#D3AF86',\n  activeLine: '#3d392d11',\n  matchingBracket: '#EEE8D5',\n  keyword: '#859900',\n  storage: '#586E75',\n  variable: '#268BD2',\n  parameter: '#268BD2',\n  function: '#268BD2',\n  string: '#2AA198',\n  constant: '#CB4B16',\n  type: '#859900',\n  class: '#268BD2',\n  number: '#D33682',\n  comment: '#93A1A1',\n  heading: '#268BD2',\n  invalid: '#DC322F',\n  regexp: '#DC322F',\n  tag: '#268BD2'\n};", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nimport { config as c } from './light-color';\nexport var defaultSettingsSolarizedLight = {\n  background: c.background,\n  foreground: c.foreground,\n  caret: c.cursor,\n  selection: c.selection,\n  selectionMatch: c.selectionMatch,\n  gutterBackground: c.background,\n  gutterForeground: c.foreground,\n  gutterBorder: 'transparent',\n  lineHighlight: c.activeLine\n};\nexport var solarizedLightStyle = [{\n  tag: t.keyword,\n  color: c.keyword\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName],\n  color: c.variable\n}, {\n  tag: [t.propertyName],\n  color: c.function\n}, {\n  tag: [t.processingInstruction, t.string, t.inserted, t.special(t.string)],\n  color: c.string\n}, {\n  tag: [t.function(t.variableName), t.labelName],\n  color: c.function\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: c.constant\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: c.variable\n}, {\n  tag: [t.className],\n  color: c.class\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: c.number\n}, {\n  tag: [t.typeName],\n  color: c.type,\n  fontStyle: c.type\n}, {\n  tag: [t.operator, t.operatorKeyword],\n  color: c.keyword\n}, {\n  tag: [t.url, t.escape, t.regexp, t.link],\n  color: c.regexp\n}, {\n  tag: [t.meta, t.comment],\n  color: c.comment\n}, {\n  tag: t.tagName,\n  color: c.tag\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: c.heading\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: c.variable\n}, {\n  tag: t.invalid,\n  color: c.invalid\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}];\nexport var solarizedLightInit = options => {\n  var {\n    theme = 'light',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsSolarizedLight, settings),\n    styles: [...solarizedLightStyle, ...styles]\n  });\n};\nexport var solarizedLight = solarizedLightInit();", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsSublime = {\n  background: '#303841',\n  foreground: '#FFFFFF',\n  caret: '#FBAC52',\n  selection: '#4C5964',\n  selectionMatch: '#3A546E',\n  gutterBackground: '#303841',\n  gutterForeground: '#FFFFFF70',\n  lineHighlight: '#00000059'\n};\nexport var sublimeDarkStyle = [{\n  tag: [t.meta, t.comment],\n  color: '#A2A9B5'\n}, {\n  tag: [t.attributeName, t.keyword],\n  color: '#B78FBA'\n}, {\n  tag: t.function(t.variableName),\n  color: '#5AB0B0'\n}, {\n  tag: [t.string, t.regexp, t.attributeValue],\n  color: '#99C592'\n}, {\n  tag: t.operator,\n  color: '#f47954'\n},\n// { tag: t.moduleKeyword, color: 'red' },\n{\n  tag: [t.tagName, t.modifier],\n  color: '#E35F63'\n}, {\n  tag: [t.number, t.definition(t.tagName), t.className, t.definition(t.variableName)],\n  color: '#fbac52'\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: '#E35F63'\n}, {\n  tag: t.variableName,\n  color: '#539ac4'\n}, {\n  tag: [t.propertyName, t.typeName],\n  color: '#629ccd'\n}, {\n  tag: t.propertyName,\n  color: '#36b7b5'\n}];\nexport function sublimeInit(options) {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsSublime, settings),\n    styles: [...sublimeDarkStyle, ...styles]\n  });\n}\nexport var sublime = sublimeInit();", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsTokyoNight = {\n  background: '#1a1b26',\n  foreground: '#787c99',\n  caret: '#c0caf5',\n  selection: '#515c7e40',\n  selectionMatch: '#16161e',\n  gutterBackground: '#1a1b26',\n  gutterForeground: '#787c99',\n  gutterBorder: 'transparent',\n  lineHighlight: '#474b6611'\n};\nexport var tokyoNightStyle = [{\n  tag: t.keyword,\n  color: '#bb9af7'\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName],\n  color: '#c0caf5'\n}, {\n  tag: [t.propertyName],\n  color: '#7aa2f7'\n}, {\n  tag: [t.processingInstruction, t.string, t.inserted, t.special(t.string)],\n  color: '#9ece6a'\n}, {\n  tag: [t.function(t.variableName), t.labelName],\n  color: '#7aa2f7'\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: '#bb9af7'\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: '#c0caf5'\n}, {\n  tag: [t.className],\n  color: '#c0caf5'\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: '#ff9e64'\n}, {\n  tag: [t.typeName],\n  color: '#0db9d7'\n}, {\n  tag: [t.operator, t.operatorKeyword],\n  color: '#bb9af7'\n}, {\n  tag: [t.url, t.escape, t.regexp, t.link],\n  color: '#b4f9f8'\n}, {\n  tag: [t.meta, t.comment],\n  color: '#444b6a'\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: '#89ddff'\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: '#c0caf5'\n}, {\n  tag: t.invalid,\n  color: '#ff5370'\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}];\nexport var tokyoNightInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsTokyoNight, settings),\n    styles: [...tokyoNightStyle, ...styles]\n  });\n};\nexport var tokyoNight = tokyoNightInit();", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsTokyoNightStorm = {\n  background: '#24283b',\n  foreground: '#7982a9',\n  caret: '#c0caf5',\n  selection: '#6f7bb630',\n  selectionMatch: '#343b5f',\n  gutterBackground: '#24283b',\n  gutterForeground: '#7982a9',\n  gutterBorder: 'transparent',\n  lineHighlight: '#292e427a'\n};\nexport var tokyoNightStormStyle = [{\n  tag: t.keyword,\n  color: '#bb9af7'\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName],\n  color: '#c0caf5'\n}, {\n  tag: [t.propertyName],\n  color: '#7aa2f7'\n}, {\n  tag: [t.processingInstruction, t.string, t.inserted, t.special(t.string)],\n  color: '#9ece6a'\n}, {\n  tag: [t.function(t.variableName), t.labelName],\n  color: '#7aa2f7'\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: '#bb9af7'\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: '#c0caf5'\n}, {\n  tag: [t.className],\n  color: '#c0caf5'\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: '#ff9e64'\n}, {\n  tag: [t.typeName],\n  color: '#2ac3de',\n  fontStyle: '#2ac3de'\n}, {\n  tag: [t.operator, t.operatorKeyword],\n  color: '#bb9af7'\n}, {\n  tag: [t.url, t.escape, t.regexp, t.link],\n  color: '#b4f9f8'\n}, {\n  tag: [t.meta, t.comment],\n  color: '#565f89'\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: '#89ddff'\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: '#c0caf5'\n}, {\n  tag: t.invalid,\n  color: '#ff5370'\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}];\nexport var tokyoNightStormInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsTokyoNightStorm, settings),\n    styles: [...tokyoNightStormStyle, ...styles]\n  });\n};\nexport var tokyoNightStorm = tokyoNightStormInit();", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsTokyoNightDay = {\n  background: '#e1e2e7',\n  foreground: '#3760bf',\n  caret: '#3760bf',\n  selection: '#99a7df',\n  selectionMatch: '#99a7df',\n  gutterBackground: '#e1e2e7',\n  gutterForeground: '#3760bf',\n  gutterBorder: 'transparent',\n  lineHighlight: '#5f5faf11'\n};\nexport var tokyoNightDayStyle = [{\n  tag: t.keyword,\n  color: '#007197'\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName],\n  color: '#3760bf'\n}, {\n  tag: [t.propertyName],\n  color: '#3760bf'\n}, {\n  tag: [t.processingInstruction, t.string, t.inserted, t.special(t.string)],\n  color: '#587539'\n}, {\n  tag: [t.function(t.variableName), t.labelName],\n  color: '#3760bf'\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: '#3760bf'\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: '#3760bf'\n}, {\n  tag: [t.className],\n  color: '#3760bf'\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: '#b15c00'\n}, {\n  tag: [t.typeName],\n  color: '#007197',\n  fontStyle: '#007197'\n}, {\n  tag: [t.operator, t.operatorKeyword],\n  color: '#007197'\n}, {\n  tag: [t.url, t.escape, t.regexp, t.link],\n  color: '#587539'\n}, {\n  tag: [t.meta, t.comment],\n  color: '#848cb5'\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: '#b15c00'\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: '#3760bf'\n}, {\n  tag: t.invalid,\n  color: '#f52a65'\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}];\nexport var tokyoNightDayInit = options => {\n  var {\n    theme = 'light',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsTokyoNightDay, settings),\n    styles: [...tokyoNightDayStyle, ...styles]\n  });\n};\nexport var tokyoNightDay = tokyoNightDayInit();", "export var config = {\n  background: '#002451',\n  foreground: '#ffffff',\n  selection: '#003f8e',\n  selectionMatch: '#003f8e',\n  cursor: '#ffffff',\n  dropdownBackground: '#001733',\n  activeLine: '#00346e7a',\n  matchingBracket: '#00346e',\n  keyword: '#EBBBFF',\n  storage: '#EBBBFF',\n  variable: '#FFC58F',\n  parameter: '#FFC58F',\n  function: '#BBDAFF',\n  string: '#D1F1A9',\n  constant: '#FFC58F',\n  type: '#FFEEAD',\n  class: '#BBDAFF',\n  number: '#FFC58F',\n  comment: '#7285B7',\n  heading: '#D1F1A9',\n  invalid: '#a92049',\n  regexp: '#D1F1A9',\n  tag: '#FF9DA4'\n};", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nimport { config as c } from './color';\nexport var defaultSettingsTomorrowNightBlue = {\n  background: c.background,\n  foreground: c.foreground,\n  caret: c.cursor,\n  selection: c.selection,\n  selectionMatch: c.selection,\n  gutterBackground: c.background,\n  gutterForeground: c.foreground,\n  lineHighlight: c.activeLine\n};\nexport var tomorrowNightBlueStyle = [{\n  tag: t.keyword,\n  color: c.keyword\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName],\n  color: c.variable\n}, {\n  tag: [t.propertyName],\n  color: c.function\n}, {\n  tag: [t.processingInstruction, t.string, t.inserted, t.special(t.string)],\n  color: c.string\n}, {\n  tag: [t.function(t.variableName), t.labelName],\n  color: c.function\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: c.constant\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: c.variable\n}, {\n  tag: [t.className],\n  color: c.class\n}, {\n  tag: [t.number, t.changed, t.annotation, t.modifier, t.self, t.namespace],\n  color: c.number\n}, {\n  tag: [t.typeName],\n  color: c.type,\n  fontStyle: c.type\n}, {\n  tag: [t.operator, t.operatorKeyword],\n  color: c.keyword\n}, {\n  tag: [t.url, t.escape, t.regexp, t.link],\n  color: c.regexp\n}, {\n  tag: [t.meta, t.comment],\n  color: c.comment\n}, {\n  tag: t.tagName,\n  color: c.tag\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: c.heading\n}, {\n  tag: [t.atom, t.bool, t.special(t.variableName)],\n  color: c.variable\n}, {\n  tag: t.invalid,\n  color: c.invalid\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}];\nexport var tomorrowNightBlueInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsTomorrowNightBlue, settings),\n    styles: [...tomorrowNightBlueStyle, ...styles]\n  });\n};\nexport var tomorrowNightBlue = tomorrowNightBlueInit();", "import _extends from \"@babel/runtime/helpers/extends\";\n/**\n * https://github.com/uiwjs/react-codemirror/issues/409\n */\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsVscodeLight = {\n  background: '#ffffff',\n  foreground: '#383a42',\n  caret: '#000',\n  selection: '#add6ff',\n  selectionMatch: '#a8ac94',\n  lineHighlight: '#99999926',\n  gutterBackground: '#fff',\n  gutterForeground: '#237893',\n  gutterActiveForeground: '#0b216f',\n  fontFamily: 'Menlo, Monaco, Consolas, \"Andale Mono\", \"Ubuntu Mono\", \"Courier New\", monospace'\n};\nexport var vscodeLightStyle = [{\n  tag: [t.keyword, t.operatorKeyword, t.modifier, t.color, t.constant(t.name), t.standard(t.name), t.standard(t.tagName), t.special(t.brace), t.atom, t.bool, t.special(t.variableName)],\n  color: '#0000ff'\n}, {\n  tag: [t.moduleKeyword, t.controlKeyword],\n  color: '#af00db'\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName, t.propertyName, t.variableName, t.labelName, t.definition(t.name)],\n  color: '#0070c1'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: '#0070c1'\n}, {\n  tag: [t.typeName, t.className, t.tagName, t.number, t.changed, t.annotation, t.self, t.namespace],\n  color: '#267f99'\n}, {\n  tag: [t.function(t.variableName), t.function(t.propertyName)],\n  color: '#795e26'\n}, {\n  tag: [t.number],\n  color: '#098658'\n}, {\n  tag: [t.operator, t.punctuation, t.separator, t.url, t.escape, t.regexp],\n  color: '#383a42'\n}, {\n  tag: [t.regexp],\n  color: '#af00db'\n}, {\n  tag: [t.special(t.string), t.processingInstruction, t.string, t.inserted],\n  color: '#a31515'\n}, {\n  tag: [t.angleBracket],\n  color: '#383a42'\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}, {\n  tag: [t.meta, t.comment],\n  color: '#008000'\n}, {\n  tag: t.link,\n  color: '#4078f2',\n  textDecoration: 'underline'\n}, {\n  tag: t.invalid,\n  color: '#e45649'\n}];\nexport function vscodeLightInit(options) {\n  var {\n    theme = 'light',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsVscodeLight, settings),\n    styles: [...vscodeLightStyle, ...styles]\n  });\n}\nexport var vscodeLight = vscodeLightInit();", "import _extends from \"@babel/runtime/helpers/extends\";\n/**\n * https://github.com/uiwjs/react-codemirror/issues/409\n */\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsVscodeDark = {\n  background: '#1e1e1e',\n  foreground: '#9cdcfe',\n  caret: '#c6c6c6',\n  selection: '#6199ff2f',\n  selectionMatch: '#72a1ff59',\n  lineHighlight: '#ffffff0f',\n  gutterBackground: '#1e1e1e',\n  gutterForeground: '#838383',\n  gutterActiveForeground: '#fff',\n  fontFamily: 'Menlo, Monaco, Consolas, \"Andale Mono\", \"Ubuntu Mono\", \"Courier New\", monospace'\n};\nexport var vscodeDarkStyle = [{\n  tag: [t.keyword, t.operatorKeyword, t.modifier, t.color, t.constant(t.name), t.standard(t.name), t.standard(t.tagName), t.special(t.brace), t.atom, t.bool, t.special(t.variableName)],\n  color: '#569cd6'\n}, {\n  tag: [t.controlKeyword, t.moduleKeyword],\n  color: '#c586c0'\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName, t.propertyName, t.variableName, t.labelName, t.definition(t.name)],\n  color: '#9cdcfe'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: '#9cdcfe'\n}, {\n  tag: [t.typeName, t.className, t.tagName, t.number, t.changed, t.annotation, t.self, t.namespace],\n  color: '#4ec9b0'\n}, {\n  tag: [t.function(t.variableName), t.function(t.propertyName)],\n  color: '#dcdcaa'\n}, {\n  tag: [t.number],\n  color: '#b5cea8'\n}, {\n  tag: [t.operator, t.punctuation, t.separator, t.url, t.escape, t.regexp],\n  color: '#d4d4d4'\n}, {\n  tag: [t.regexp],\n  color: '#d16969'\n}, {\n  tag: [t.special(t.string), t.processingInstruction, t.string, t.inserted],\n  color: '#ce9178'\n}, {\n  tag: [t.angleBracket],\n  color: '#808080'\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}, {\n  tag: [t.meta, t.comment],\n  color: '#6a9955'\n}, {\n  tag: t.link,\n  color: '#6a9955',\n  textDecoration: 'underline'\n}, {\n  tag: t.invalid,\n  color: '#ff0000'\n}];\nexport function vscodeDarkInit(options) {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsVscodeDark, settings),\n    styles: [...vscodeDarkStyle, ...styles]\n  });\n}\nexport var vscodeDark = vscodeDarkInit();", "export var config = {\n  background: '#000',\n  foreground: '#fff',\n  selection: '#7d46fc3f',\n  selectionMatch: '#7d46fc7f',\n  cursor: '#7d46fc',\n  dropdownBackground: '#0a0b0f',\n  dropdownBorder: '#1e1d27',\n  activeLine: '#00346eb0',\n  matchingBracket: '#7d46fc7f',\n  keyword: null,\n  storage: null,\n  variable: null,\n  parameter: null,\n  function: null,\n  string: '#a8a8b1',\n  constant: null,\n  type: null,\n  class: null,\n  number: null,\n  comment: '#2e2e37',\n  heading: null,\n  invalid: null,\n  regexp: '#a8a8b1',\n  tag: null\n};", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nimport { config as c } from './dark-color';\nexport var defaultSettingsWhiteDark = {\n  background: c.background,\n  foreground: c.foreground,\n  caret: c.cursor,\n  selection: c.selection,\n  selectionMatch: c.selectionMatch,\n  gutterBackground: c.background,\n  gutterForeground: c.foreground,\n  lineHighlight: c.activeLine\n};\nexport var whiteDarkStyle = [{\n  tag: t.keyword,\n  color: c.keyword,\n  fontWeight: 'bold'\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName],\n  color: c.variable\n}, {\n  tag: [t.propertyName],\n  color: c.function\n}, {\n  tag: [t.processingInstruction, t.string, t.inserted, t.special(t.string)],\n  color: c.string\n}, {\n  tag: [t.function(t.variableName), t.labelName],\n  color: c.function\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: c.constant\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: c.variable\n}, {\n  tag: [t.className],\n  color: c.class\n}, {\n  tag: [t.typeName],\n  color: c.type,\n  fontStyle: c.type\n}, {\n  tag: [t.url, t.escape, t.regexp, t.link],\n  color: c.regexp\n}, {\n  tag: [t.meta, t.comment],\n  color: c.comment\n}, {\n  tag: t.tagName,\n  color: c.tag\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: c.heading\n}, {\n  tag: [t.atom, t.special(t.variableName)],\n  color: c.variable\n}, {\n  tag: t.invalid,\n  color: c.invalid\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}, {\n  tag: [t.operatorKeyword, t.bool, t.null, t.variableName],\n  color: c.constant\n}, {\n  tag: [t.operator],\n  color: '#bb9af7'\n}, {\n  tag: [t.number],\n  color: '#a8a8b1'\n}, {\n  tag: [t.bracket],\n  color: '#bb9af7'\n}];\nexport var whiteDarkInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsWhiteDark, settings),\n    styles: [...whiteDarkStyle, ...styles]\n  });\n};\nexport var whiteDark = whiteDarkInit();", "export var config = {\n  background: '#fff',\n  foreground: '#000',\n  selection: '#0064ff26',\n  selectionMatch: '#0064ff4c',\n  cursor: '#004bff',\n  dropdownBackground: '#f4f6fc',\n  dropdownBorder: '#e7ecf2',\n  activeLine: '#0064ff0c',\n  matchingBracket: '#0064ff4c',\n  keyword: null,\n  storage: null,\n  variable: null,\n  parameter: null,\n  function: null,\n  string: '#6b7a88',\n  constant: null,\n  type: null,\n  class: null,\n  number: null,\n  comment: '#bec9d3',\n  heading: null,\n  invalid: null,\n  regexp: '#6b7a88',\n  tag: null\n};", "import _extends from \"@babel/runtime/helpers/extends\";\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nimport { config as c } from './light-color';\nexport var defaultSettingsWhiteLight = {\n  background: c.background,\n  foreground: c.foreground,\n  caret: c.cursor,\n  selection: c.selection,\n  selectionMatch: c.selectionMatch,\n  gutterBackground: c.background,\n  gutterForeground: c.foreground,\n  lineHighlight: c.activeLine\n};\nexport var whiteLightStyle = [{\n  tag: t.keyword,\n  color: c.keyword,\n  fontWeight: 'bold'\n}, {\n  tag: [t.name, t.deleted, t.character, t.macroName],\n  color: c.variable\n}, {\n  tag: [t.propertyName],\n  color: c.function\n}, {\n  tag: [t.processingInstruction, t.string, t.inserted, t.special(t.string)],\n  color: c.string\n}, {\n  tag: [t.function(t.variableName), t.labelName],\n  color: c.function\n}, {\n  tag: [t.color, t.constant(t.name), t.standard(t.name)],\n  color: c.constant\n}, {\n  tag: [t.definition(t.name), t.separator],\n  color: c.variable\n}, {\n  tag: [t.className],\n  color: c.class\n}, {\n  tag: [t.typeName],\n  color: c.type,\n  fontStyle: c.type\n}, {\n  tag: [t.url, t.escape, t.regexp, t.link],\n  color: c.regexp\n}, {\n  tag: [t.meta, t.comment],\n  color: c.comment\n}, {\n  tag: t.tagName,\n  color: c.tag\n}, {\n  tag: t.strong,\n  fontWeight: 'bold'\n}, {\n  tag: t.emphasis,\n  fontStyle: 'italic'\n}, {\n  tag: t.link,\n  textDecoration: 'underline'\n}, {\n  tag: t.heading,\n  fontWeight: 'bold',\n  color: c.heading\n}, {\n  tag: [t.atom, t.special(t.variableName)],\n  color: c.variable\n}, {\n  tag: t.invalid,\n  color: c.invalid\n}, {\n  tag: t.strikethrough,\n  textDecoration: 'line-through'\n}, {\n  tag: [t.operatorKeyword, t.bool, t.null, t.variableName],\n  color: c.constant\n}, {\n  tag: [t.operator],\n  color: '#0431fa'\n}, {\n  tag: [t.number],\n  color: '#a8a8b1'\n}, {\n  tag: [t.bracket],\n  color: '#0431fa'\n}];\nexport var whiteLightInit = options => {\n  var {\n    theme = 'light',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsWhiteLight, settings),\n    styles: [...whiteLightStyle, ...styles]\n  });\n};\nexport var whiteLight = whiteLightInit();", "import _extends from \"@babel/runtime/helpers/extends\";\n/**\n * @name Xcode\n */\nimport { tags as t } from '@lezer/highlight';\nimport { createTheme } from '@uiw/codemirror-themes';\nexport var defaultSettingsXcodeLight = {\n  background: '#fff',\n  foreground: '#3D3D3D',\n  selection: '#BBDFFF',\n  selectionMatch: '#BBDFFF',\n  gutterBackground: '#fff',\n  gutterForeground: '#AFAFAF',\n  lineHighlight: '#d5e6ff69'\n};\nexport var xcodeLightStyle = [{\n  tag: [t.comment, t.quote],\n  color: '#707F8D'\n}, {\n  tag: [t.typeName, t.typeOperator],\n  color: '#aa0d91'\n}, {\n  tag: [t.keyword],\n  color: '#aa0d91',\n  fontWeight: 'bold'\n}, {\n  tag: [t.string, t.meta],\n  color: '#D23423'\n}, {\n  tag: [t.name],\n  color: '#032f62'\n}, {\n  tag: [t.typeName],\n  color: '#522BB2'\n}, {\n  tag: [t.variableName],\n  color: '#23575C'\n}, {\n  tag: [t.definition(t.variableName)],\n  color: '#327A9E'\n}, {\n  tag: [t.regexp, t.link],\n  color: '#0e0eff'\n}];\nexport function xcodeLightInit(options) {\n  var {\n    theme = 'light',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsXcodeLight, settings),\n    styles: [...xcodeLightStyle, ...styles]\n  });\n}\nexport var xcodeLight = xcodeLightInit();\nexport var defaultSettingsXcodeDark = {\n  background: '#292A30',\n  foreground: '#CECFD0',\n  caret: '#fff',\n  selection: '#727377',\n  selectionMatch: '#727377',\n  lineHighlight: '#ffffff0f'\n};\nexport var xcodeDarkStyle = [{\n  tag: [t.comment, t.quote],\n  color: '#7F8C98'\n}, {\n  tag: [t.keyword],\n  color: '#FF7AB2',\n  fontWeight: 'bold'\n}, {\n  tag: [t.string, t.meta],\n  color: '#FF8170'\n}, {\n  tag: [t.typeName],\n  color: '#DABAFF'\n}, {\n  tag: [t.definition(t.variableName)],\n  color: '#6BDFFF'\n}, {\n  tag: [t.name],\n  color: '#6BAA9F'\n}, {\n  tag: [t.variableName],\n  color: '#ACF2E4'\n}, {\n  tag: [t.regexp, t.link],\n  color: '#FF8170'\n}];\nexport var xcodeDarkInit = options => {\n  var {\n    theme = 'dark',\n    settings = {},\n    styles = []\n  } = options || {};\n  return createTheme({\n    theme: theme,\n    settings: _extends({}, defaultSettingsXcodeDark, settings),\n    styles: [...xcodeDarkStyle, ...styles]\n  });\n};\nexport var xcodeDark = xcodeDarkInit();"],
  "mappings": "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AAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACpE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACpE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QACrE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACpE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACnE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACpE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QACnE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QACrE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QACpE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACpE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QACpE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QACrE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QACnE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACnE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACnE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACnE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACnE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACnE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACnE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACnE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACpE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAClE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAK;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACpE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAA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AG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QACpE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QACrE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QACrE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QACtE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACnE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QACpE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QACrE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACnE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACpE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACpE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACpE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACpE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QACrE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACnE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACrE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAG;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QACtE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACrE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QACpE;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QACtE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACpE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QACpE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QACtE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAClE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACpE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACrE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QACnE;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAClE;AAAA,QAAI;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AAAA,QAAK;AAAA,QAAE;AAAA,QAAG;AAAA,QAAE;AAAA,QAAE;AAAA,QAAK;AA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",
  "names": ["s", "i", "n", "i", "n", "a", "b", "i", "string", "l", "add", "top", "number", "findClusterBreak", "surrogateLow", "surrogateHigh", "codePointAt", "codePointSize", "MapMode", "f", "doc", "process", "insert", "e", "r", "compare", "config", "x", "facet", "_a", "p", "prec", "content", "base", "v", "scrollIntoView", "s", "CharCategory", "_", "require", "j", "phrase", "m", "name", "at", "k", "defaults", "cur", "layer", "spec", "a", "b", "l", "doc", "j", "i", "k", "i", "name", "_", "x", "y", "doc", "cur", "top", "rect", "i", "name", "view", "v", "insert", "ie", "flatten", "r", "j", "pos", "a", "b", "BlockType", "_a", "at", "dist", "decorations", "Direction", "p", "l", "replace", "type", "findClusterBreak", "t", "e", "add", "m", "me", "content", "cView", "c", "d", "marks", "inside", "f", "re", "scrollIntoView", "h", "base", "handlers", "facet", "event", "s", "QueryType", "DecorationComparator", "gap", "from", "to", "n", "g", "key", "config", "observers", "shift", "meta", "command", "k", "codePointAt", "codePointSize", "cmd", "pieces", "layer", "view", "r", "a", "b", "pos", "e", "_a", "doc", "re", "f", "m", "config", "add", "from", "_t", "to", "deco", "codePointAt", "v", "view", "r", "v", "e", "view", "_a", "facet", "t", "x", "i", "view", "_a", "config", "t", "p", "i", "top", "r", "a", "name", "s", "e", "x", "y", "v", "f", "c", "view", "s", "p", "x", "top", "config", "gutter", "b", "cur", "gutters", "g", "asArray", "marker", "y", "c", "i", "a", "add", "event", "number", "m", "marks", "Range", "config", "name", "i", "types", "add", "IterMode", "c", "b", "j", "_a", "r", "e", "cur", "p", "n", "d", "children", "positions", "node", "buffer", "data", "contextHash", "length", "lookAhead", "base", "nodeSize", "nodeStart", "from", "to", "f", "Range", "r", "string", "name", "base", "t", "a", "b", "sameArray", "m", "config", "x", "i", "j", "e", "tags", "at", "h", "hasChild", "i", "rangeFrom", "rangeTo", "name", "name", "top", "data", "base", "r", "i", "doc", "_a", "f", "r", "i", "e", "view", "language", "e", "i", "add", "cur", "i", "base", "closing", "doc", "r", "head", "line", "cur", "cur", "view", "l", "e", "a", "b", "f", "i", "_a", "from", "to", "a", "b", "view", "config", "baseTheme$1", "view", "_a", "view", "from", "to", "v", "baseTheme", "decorations", "config", "f", "cur", "bracket", "pos", "name", "name", "t", "config", "f", "o", "s", "r", "c", "i", "comment", "empty", "l", "_t", "isAdjacent", "a", "b", "config", "e", "view", "command", "_a", "s", "none", "a", "b", "isAdjacent", "f", "t", "_t", "i", "r", "config", "view", "view", "at", "bracket", "view", "view", "view", "view", "cur", "f", "i", "findClusterBreak", "view", "findClusterBreak", "nextChar", "view", "findClusterBreak", "r", "view", "dist", "insert", "f", "changes", "cur", "view", "b", "i", "name", "a", "b", "i", "p", "d", "next", "c", "e", "f", "s", "view", "d", "view", "s", "a", "b", "config", "p", "i", "x", "u", "name", "i", "c", "view", "_a", "keys", "e", "j", "rm", "content", "baseTheme", "d", "w", "baseTheme", "x", "codePointAt", "codePointSize", "i", "doc", "_a", "view", "ln", "line", "e", "f", "baseTheme$1", "a", "b", "v", "r", "word", "config", "_", "st", "QueryType", "add", "findClusterBreak", "m", "l", "n", "togglePanel", "view", "i", "l", "from", "to", "r", "v", "f", "config", "cur", "_a", "_e", "togglePanel", "name", "content", "e", "phrase", "baseTheme", "view", "types", "i", "o", "score", "_a", "p", "codePointAt", "codePointSize", "i", "e", "a", "b", "c", "view", "config", "content", "j", "off", "applyCompletion", "options", "scrollIntoView", "name", "s", "compare", "cur", "none", "noAttrs", "f", "q", "r", "baseTheme", "defaults", "inputHandler", "i", "view", "insert", "codePointSize", "codePointAt", "bracket", "doc", "config", "content", "m", "p", "baseTheme", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "exports", "module", "__webpack_modules__", "d", "definition", "key", "o", "Object", "defineProperty", "enumerable", "get", "obj", "prop", "prototype", "hasOwnProperty", "call", "Token", "constructor", "this", "source", "type", "channel", "start", "stop", "tokenIndex", "line", "column", "_text", "getTokenSource", "getInputStream", "text", "equalArrays", "a", "b", "Array", "isArray", "length", "i", "equals", "INVALID_TYPE", "EPSILON", "MIN_USER_TOKEN_TYPE", "EOF", "DEFAULT_CHANNEL", "HIDDEN_CHANNEL", "StringSeedHashCode", "Math", "round", "random", "pow", "stringHashCode", "value", "toString", "h1b", "k1", "remainder", "bytes", "h1", "c1", "c2", "charCodeAt", "HashCode", "count", "hash", "update", "arguments", "apply", "k", "updateHashCode", "console", "log", "finish", "hashStuff", "standardHashCodeFunction", "hashCode", "standardEqualsFunction", "valueToString", "v", "arrayToString", "map", "join", "HashSet", "hashFunction", "equalsFunction", "buckets", "threshold", "floor", "INITIAL_CAPACITY", "itemCount", "bucket", "_getBucket", "e", "add", "getOrAdd", "_expand", "slot", "_getSlot", "existing", "push", "has", "values", "filter", "flat", "old_buckets", "newCapacity", "newBucket", "SemanticContext", "evaluate", "parser", "outerContext", "evalPrecedence", "NONE", "result", "AND", "opnds", "OR", "super", "operands", "precedencePredicates", "filterPrecedencePredicates", "reduced", "p", "precedence", "from", "other", "differs", "context", "evaluated", "andContext", "s", "slice", "sort", "compareTo", "set", "PrecedencePredicate", "checkParams", "params", "isCfg", "state", "alt", "semanticContext", "reachesIntoOuterContext", "props", "precedenceFilterSuppressed", "ATNConfig", "config", "checkContext", "stateNumber", "hashCodeForConfigSet", "equalsForConfigSet", "Interval", "clone", "contains", "item", "INVALID_INTERVAL", "IntervalSet", "intervals", "readOnly", "first", "addOne", "addInterval", "addRange", "l", "h", "toAdd", "pos", "splice", "min", "max", "reduce", "addSet", "forEach", "current", "next", "complement", "toRemove", "removeRange", "removeOne", "n", "x", "replace", "literalNames", "symbolicNames", "elemsAreChar", "toTokenString", "toCharString", "toIndexString", "names", "String", "fromCharCode", "j", "elementName", "token", "interval", "acc", "val", "ATNState", "atn", "INVALID_STATE_NUMBER", "stateType", "ruleIndex", "epsilonOnlyTransitions", "transitions", "nextTokenWithinRule", "isNonGreedyExitState", "addTransition", "trans", "index", "isEpsilon", "BASIC", "RULE_START", "BLOCK_START", "PLUS_BLOCK_START", "STAR_BLOCK_START", "TOKEN_START", "RULE_STOP", "BLOCK_END", "STAR_LOOP_BACK", "STAR_LOOP_ENTRY", "PLUS_LOOP_BACK", "LOOP_END", "serializationNames", "RuleStopState", "Transition", "target", "label", "RANGE", "RULE", "PREDICATE", "ATOM", "ACTION", "SET", "NOT_SET", "WILDCARD", "PRECEDENCE", "serializationTypes", "EpsilonTransition", "RangeTransition", "RuleTransition", "PredicateTransition", "AtomTransition", "ActionTransition", "SetTransition", "NotSetTransition", "WildcardTransition", "PrecedencePredicateTransition", "ruleStart", "followState", "serializationType", "matches", "symbol", "minVocabSymbol", "maxVocabSymbol", "AbstractPredicateTransition", "Tree", "SyntaxTree", "ParseTree", "RuleNode", "ruleContext", "Error", "TerminalNode", "ErrorNode", "Trees", "toStringTree", "tree", "ruleNames", "recog", "getNodeText", "c", "getChildCount", "res", "getChild", "concat", "t", "altNumber", "getAltNumber", "payload", "getPayload", "getChildren", "list", "getAncestors", "ancestors", "getParent", "findAllTokenNodes", "ttype", "findAllNodes", "findAllRuleNodes", "findTokens", "nodes", "_findAllNodes", "descendants", "RuleContext", "parent", "invokingState", "parentCtx", "depth", "isEmpty", "getSourceInterval", "getText", "children", "child", "setAltNumber", "accept", "visitor", "visitChildren", "ri", "PredictionContext", "cachedHashCode", "EMPTY", "hasEmptyPath", "getReturnState", "EMPTY_RETURN_STATE", "globalNodeCount", "id", "trace_atn_sim", "ArrayPredictionContext", "parents", "returnStates", "SingletonPredictionContext", "returnState", "up", "EmptyPredictionContext", "HashMap", "find", "pair", "containsKey", "entries", "getKeys", "getValues", "predictionContextFromRuleContext", "transition", "states", "create", "getCachedPredictionContext", "contextCache", "visited", "changed", "updated", "merge", "rootIsWildcard", "mergeCache", "previous", "rootMerge", "payloads", "spc", "singleParent", "apc", "a_", "mergedReturnStates", "fill", "mergedParents", "a_parent", "b_parent", "M", "uniqueParents", "q", "BitSet", "data", "Uint32Array", "_checkIndex", "_resize", "clear", "or", "minCount", "_bitCount", "minValue", "RangeError", "LL1Analyzer", "getDecisionLookahead", "look", "lookBusy", "seeThruPreds", "_LOOK", "HIT_PRED", "LOOK", "stopState", "ctx", "r", "lookContext", "calledRuleStack", "addEOF", "removed", "newContext", "maxTokenType", "ATN", "grammarType", "decisionToState", "ruleToStartState", "ruleToStopState", "modeNameToStartState", "ruleToTokenType", "lexerActions", "modeToStartState", "nextTokensInContext", "nextTokensNoContext", "nextTokens", "addState", "removeState", "defineDecisionState", "decision", "getDecisionState", "getExpectedTokens", "following", "expected", "rt", "INVALID_ALT_NUMBER", "BasicState", "DecisionState", "nonGreedy", "BlockStartState", "endState", "BlockEndState", "startState", "LoopEndState", "loopBackState", "RuleStartState", "isPrecedenceRule", "TokensStartState", "PlusLoopbackState", "StarLoopbackState", "StarLoopEntryState", "isPrecedenceDecision", "PlusBlockStartState", "StarBlockStartState", "BasicBlockStartState", "label_", "makeLabel", "actionIndex", "isCtxDependent", "outermostPrecedenceReturn", "Predicate", "predIndex", "localctx", "sempred", "getPredicate", "precpred", "ATNDeserializationOptions", "copyFrom", "verifyATN", "generateRuleBypassTransitions", "defaultOptions", "LexerAction", "action", "actionType", "isPositionDependent", "LexerSkipAction", "execute", "lexer", "skip", "INSTANCE", "LexerChannelAction", "_channel", "LexerCustomAction", "LexerMoreAction", "more", "LexerTypeAction", "LexerPushModeAction", "mode", "pushMode", "LexerPopModeAction", "popMode", "LexerModeAction", "setMode", "initArray", "tmp", "ATNDeserializer", "options", "deserializationOptions", "stateFactories", "actionFactories", "deserialize", "legacy", "reset", "checkVersion", "skipUUID", "readATN", "readStates", "readRules", "readModes", "sets", "readSets", "readInt", "bind", "readInt32", "readEdges", "readDecisions", "readLexerActions", "markPrecedenceDecisions", "SERIALIZED_VERSION", "adjust", "temp", "split", "version", "loopBackStateNumbers", "endStateNumbers", "nstates", "stype", "stateFactory", "loopBackStateNumber", "endStateNumber", "numNonGreedyStates", "numPrecedenceStates", "nrules", "tokenType", "nmodes", "reader", "m", "iset", "i1", "i2", "nedges", "src", "trg", "arg1", "arg2", "arg3", "edgeFactory", "ndecisions", "decState", "data1", "data2", "lexerActionFactory", "generateRuleBypassTransition", "idx", "bypassStart", "bypassStop", "excludeTransition", "stateIsEndStateFor", "matchState", "maybeLoopEndState", "checkCondition", "condition", "message", "sf", "af", "ErrorListener", "syntaxError", "recognizer", "offendingSymbol", "msg", "reportAmbiguity", "dfa", "startIndex", "stopIndex", "exact", "ambigAlts", "configs", "reportAttemptingFullContext", "conflictingAlts", "reportContextSensitivity", "prediction", "ConsoleErrorListener", "error", "ProxyErrorListener", "delegates", "Recognizer", "_listeners", "_interp", "_stateNumber", "toolVersion", "runtimeVersion", "addErrorListener", "listener", "removeErrorListeners", "getLiteralNames", "getPrototypeOf", "getSymbolicNames", "getTokenNames", "tokenNames", "getTokenTypeMap", "tokenTypeMapCache", "getRuleIndexMap", "ruleIndexMapCache", "getTokenType", "tokenName", "getErrorHeader", "getOffendingToken", "getTokenErrorDisplay", "getErrorListenerDispatch", "warn", "getErrorListener", "CommonToken", "EMPTY_SOURCE", "cloneWithType", "txt", "input", "size", "TokenFactory", "CommonTokenFactory", "copyText", "createThin", "DEFAULT", "RecognitionException", "captureStackTrace", "offendingToken", "offendingState", "LexerNoViableAltException", "deadEndConfigs", "Lexer", "_input", "_factory", "_tokenFactorySourcePair", "_token", "_tokenStartCharIndex", "_tokenStartLine", "_tokenStartColumn", "_hitEOF", "_type", "_modeStack", "_mode", "DEFAULT_MODE", "seek", "nextToken", "tokenStartMarker", "mark", "emitEOF", "continueOuter", "SKIP", "match", "stack", "notifyListeners", "recover", "LA", "MORE", "emit", "release", "getMode", "getModeStack", "debug", "pop", "emitToken", "getCharIndex", "cpos", "lpos", "eof", "getAllTokens", "tokens", "getErrorDisplay", "getErrorDisplayForChar", "getCharErrorDisplay", "re", "consume", "inputStream", "sourceName", "hashATNConfig", "equalATNConfigs", "DEFAULT_TOKEN_CHANNEL", "HIDDEN", "MIN_CHAR_VALUE", "MAX_CHAR_VALUE", "ATNConfigSet", "fullCtx", "configLookup", "uniqueAlt", "hasSemanticContext", "dipsIntoOuterContext", "merged", "getStates", "getPredicates", "preds", "optimizeConfigs", "interpreter", "getCachedContext", "addAll", "coll", "containsFast", "setReadonly", "items", "DFAState", "edges", "isAcceptState", "lexerActionExecutor", "requiresFullContext", "predicates", "getAltSet", "alts", "ATNSimulator", "sharedContextCache", "ERROR", "OrderedATNConfigSet", "LexerATNConfig", "passedThroughNonGreedyDecision", "checkNonGreedyDecision", "LexerIndexedCustomAction", "offset", "LexerActionExecutor", "fixOffsetBeforeMatch", "updatedLexerActions", "requiresSeek", "lexerAction", "numActions", "resetSimState", "sim", "dfaState", "SimState", "LexerATNSimulator", "decisionToDFA", "prevAccept", "copyState", "simulator", "s0", "matchATN", "execATN", "old_mode", "s0_closure", "computeStartState", "suppressEdge", "addDFAState", "predict", "toLexerString", "ds0", "captureSimState", "getExistingTargetState", "computeTargetState", "failOrAccept", "MIN_DFA_EDGE", "MAX_DFA_EDGE", "reach", "getReachableConfigSet", "addDFAEdge", "closure", "skipAlt", "cfg", "currentAltReachedAcceptState", "getTokenName", "getReachableTarget", "treatEofAsEpsilon", "charPos", "initialContext", "speculative", "getEpsilonTarget", "evaluatePredicate", "append", "savedcolumn", "savedLine", "marker", "settings", "from_", "tk", "to", "cfgs", "proposed", "firstConfigWithRuleStopState", "newState", "getDFA", "tt", "dfa_debug", "PredPrediction", "pred", "AltDict", "keys", "startsWith", "PredictionMode", "SLL", "LL", "LL_EXACT_AMBIG_DETECTION", "hasSLLConflictTerminatingPrediction", "allConfigsInRuleStopStates", "dup", "altsets", "getConflictingAltSubsets", "hasConflictingAltSet", "hasStateAssociatedWithOneAlt", "hasConfigInRuleStopState", "resolvesToJustOneViableAlt", "getSingleViableAlt", "allSubsetsConflict", "hasNonConflictingAltSet", "allSubsetsEqual", "getUniqueAlt", "all", "getAlts", "configToAlts", "getStateToAltMap", "minAlt", "NoViableAltException", "startToken", "_ctx", "getCurrentToken", "DoubleDict", "defaultMapCtor", "cacheMap", "ParserATNSimulator", "predictionMode", "_startIndex", "_outerContext", "_dfa", "debug_closure", "debug_add", "retry_debug", "adaptivePredict", "getLookaheadName", "LT", "precedenceDfa", "getPrecedenceStartState", "getPrecedence", "atnStartState", "applyPrecedenceFilter", "setPrecedenceStartState", "previousD", "D", "noViableAlt", "getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule", "conflictIndex", "evalSemanticContext", "execATNWithFullContext", "computeReachSet", "predictedAlt", "altSubSets", "getConflictingAlts", "predicateDFAState", "decisionState", "nalts", "altsToCollectPredsFrom", "getConflictingAltsOrUniqueAlt", "altToPred", "getPredsForAmbigAlts", "getPredicatePredictions", "foundExactAmbig", "intermediate", "skippedStopStates", "closureBusy", "removeAllConfigsNotInRuleStopState", "lookToEndOfRule", "endOfRuleState", "statesFromAlt1", "configSet", "updatedContext", "orContext", "nPredAlts", "pairs", "containsPredicate", "splitAccordingToSemanticValidity", "semValidConfigs", "semInvalidConfigs", "getAltThatFinishedDecisionEntryRule", "indexOf", "succeeded", "failed", "predPredictions", "complete", "predictions", "predicateEvaluationResult", "collectPredicates", "closureCheckingStopState", "getRuleName", "closure_", "parms", "canDropLoopEntryEdgeInLeftRecursiveRule", "continueCollecting", "newDepth", "numCtxs", "blockEndStateNum", "blockEndState", "returnStateNumber", "returnStateTarget", "inContext", "ruleTransition", "precedenceTransition", "predTransition", "actionTransition", "pt", "getRuleInvocationStack", "currentPosition", "predSucceeds", "newSemCtx", "getTokens", "dumpDeadEndConfigs", "nvae", "decs", "getDeadEndConfigs", "getTokenStream", "PredictionContextCache", "cache", "DFASerializer", "buf", "sortedStates", "getStateString", "getEdgeLabel", "baseStateStr", "LexerDFASerializer", "DFA", "_states", "precedenceState", "setPrecedenceDfa", "ParseTreeListener", "visitTerminal", "node", "visitErrorNode", "enterEveryRule", "exitEveryRule", "ParseTreeVisitor", "visit", "ParseTreeWalker", "walk", "isErrorNode", "enterRule", "exitRule", "InputMismatchException", "FailedPredicateException", "predicate", "formatMessage", "predicateIndex", "DiagnosticErrorListener", "exactOnly", "getDecisionDescription", "notifyErrorListeners", "ruleName", "reportedAlts", "ParseCancellationException", "ErrorStrategy", "recoverInline", "sync", "inErrorRecoveryMode", "reportError", "DefaultErrorStrategy", "errorRecoveryMode", "lastErrorIndex", "lastErrorStates", "nextTokensContext", "nextTokenState", "endErrorCondition", "beginErrorCondition", "reportMatch", "reportNoViableAlternative", "reportInputMismatch", "reportFailedPredicate", "name", "getMessage", "followSet", "getErrorRecoverySet", "consumeUntil", "la", "nextTokensState", "singleTokenDeletion", "reportUnwantedToken", "expecting", "whatFollowsLoopIterationOrRule", "escapeWSAndQuote", "reportMissingToken", "matchedSymbol", "singleTokenInsertion", "getMissingSymbol", "currentSymbolType", "nextTokenType", "currentSymbol", "expectedTokenType", "tokenText", "lookback", "getTokenFactory", "recoverSet", "follow", "BailErrorStrategy", "exception", "CharStream", "decodeToUnicodeCodePoints", "strdata", "_index", "codePoint", "codePointAt", "_size", "fromCodePoint", "InputStream", "isNode", "process", "versions", "FileStream", "path", "encoding", "callback", "fs", "err", "is", "fileName", "fromString", "str", "fromBlob", "blob", "onLoad", "onError", "window", "FileReader", "onload", "onerror", "readAsText", "fromBuffer", "buffer", "fromPath", "fromPathSync", "stringToCharArray", "Uint16Array", "TokenStream", "BufferedTokenStream", "tokenSource", "fetchedEOF", "lazyInit", "adjustSeekIndex", "skipEofCheck", "fetch", "types", "subset", "LB", "setup", "setTokenSource", "nextTokenOnChannel", "previousTokenOnChannel", "getHiddenTokensToRight", "nextOnChannel", "filterForChannel", "getHiddenTokensToLeft", "prevOnChannel", "left", "right", "hidden", "getSourceName", "CommonTokenStream", "getNumberOfOnChannelTokens", "TraceListener", "Parser", "_errHandler", "_precedenceStack", "buildParseTrees", "_tracer", "_parseListeners", "_syntaxErrors", "setInputStream", "setTrace", "addErrorNode", "matchWildcard", "getParseListeners", "addParseListener", "removeParseListener", "removeParseListeners", "triggerEnterRuleEvent", "triggerExitRuleEvent", "reverse", "setTokenFactory", "factory", "getATNWithBypassAlts", "serializedAtn", "getSerializedATN", "bypassAltsAtnCache", "setTokenStream", "syntaxErrorsCount", "hasListener", "addTokenNode", "addContextToParseTree", "addChild", "enterOuterAlt", "altNum", "removeLastChild", "enterRecursionRule", "pushNewRecursionContext", "unrollRecursionContexts", "retCtx", "parseListeners", "getInvokingContext", "isExpectedToken", "getExpectedTokensWithinCurrentRule", "getRuleIndex", "getDFAStrings", "dumpDFA", "seenOne", "printer", "println", "print", "trace", "TerminalNodeImpl", "getSymbol", "ErrorNodeImpl", "ParserRuleContext", "invokingStateNumber", "badToken", "getToken", "getTypedRuleContext", "ctxType", "getTypedRuleContexts", "contexts", "TokenStreamRewriter", "static", "programs", "Map", "insertAfter", "tokenOrIndex", "programName", "DEFAULT_PROGRAM_NAME", "rewrites", "getProgram", "op", "InsertAfterOp", "insertBefore", "InsertBeforeOp", "replaceSingle", "ReplaceOp", "delete", "initializeProgram", "intervalOrProgram", "indexToOp", "reduceToSingleOperationPerIndex", "rop", "inserts", "getKindOfOps", "iop", "instructionIndex", "lastIndex", "prevReplaces", "prevRop", "disjoint", "prevInserts", "prevIop", "catOpText", "y", "kind", "before", "RewriteOperation", "opName", "$index", "substring", "misc", "CharStreams", "Utils", "re", "i", "n", "e", "t", "r", "theme", "theme", "config", "config", "theme", "theme", "config", "config", "theme", "theme", "theme", "theme", "theme", "theme", "theme", "theme", "theme", "config", "config", "theme", "theme", "theme", "theme", "theme", "theme", "theme", "config", "config", "theme", "theme", "config", "config", "theme", "config", "config", "theme", "theme", "theme", "theme", "config", "config", "theme", "config", "config", "theme", "config", "config", "theme", "config", "config", "theme", "theme", "theme", "theme", "theme", "config", "config", "theme", "theme", "theme", "config", "config", "theme", "config", "config", "theme", "theme", "p", "n", "c", "i", "e", "r", "doc", "view", "s", "command"]
}
